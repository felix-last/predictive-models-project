*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                21.10 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                21.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2_MVMAW
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2_MVMAW new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[88787] MAX=1 EXCEEDMAXVALUE='' )[88791] )[88785]
VALIDCHOICES=(CHOICE1='Y' )[88789] )[89073] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")'
DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[88795]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[88799] )[88797] )[88793] TARGET=(WHERE='ROLE =
"TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[88803]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[88809] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[88807] )[88805] )[88801] )[88783]
98576      proc freq data=EMWS8.Ensmbl59_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl59_VariableSet noprint;
98577      table ROLE*LEVEL/out=WORK.Ensmbl59META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl59META;
98578      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 76 observations read from the data set EMWS8.ENSMBL59_VARIABLESET.
NOTE: The data set WORK.ENSMBL59META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
98579      proc print data=WORK.Ensmbl59META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl59META label noobs;
98580      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
98581      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
98581    ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
98581    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
98582      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
98583      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
98584      run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL59META.
NOTE: The PROCEDURE PRINT printed page 19.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98585      title10;
MPRINT(EM_DIAGRAM):   title10;
98586      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN EMWS8 AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN EMWS8 AutoNeural43_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural43_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
98615      data WORK.Ensmbl59_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl59_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
98616      length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
98617      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
98617    ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
98617    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
98618         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
98618    ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
98618    ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
98619      set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
98620      NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
98621      select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
98622      when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
98623      when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
98624      when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
98625      when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
98626      otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
98627      end;
MPRINT(EM_DIAGRAM):   end;
98628      output;
MPRINT(EM_DIAGRAM):   output;
98629      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL59_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98630      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
98631      proc print data=WORK.Ensmbl59_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl59_EVENT noobs label;
98632      var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
98633      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
98634      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
98635      run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL59_EVENT.
NOTE: The PROCEDURE PRINT printed page 20.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
98636      title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
98637      proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
98638      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
98639      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
98640      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
98640    ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
98640    ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
98641      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
98642      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
98643      run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 21.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
98644      title10;
MPRINT(EM_DIAGRAM):   title10;
98645      %let groupid =;
98646      %let endGroupid =;
98647      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
98648      set EMWS8.AutoNeural44_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_EMINFO;
98649      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
98649    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
98650      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
98651      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
98652      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98653      %let groupid =;
98654      %let endGroupid =;
98655      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
98656      set EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural45_EMINFO;
98657      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
98657    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
98658      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
98659      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
98660      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98661      %let groupid =;
98662      %let endGroupid =;
98663      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
98664      set EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural47_EMINFO;
98665      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
98665    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
98666      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
98667      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
98668      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98669      %let groupid =;
98670      %let endGroupid =;
98671      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
98672      set EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural41_EMINFO;
98673      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
98673    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
98674      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
98675      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
98676      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98677      %let groupid =;
98678      %let endGroupid =;
98679      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
98680      set EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO;
98681      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
98681    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
98682      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
98683      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
98684      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98685      %let groupid =;
98686      %let endGroupid =;
98687      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
98688      set EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMINFO;
98689      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
98689    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
98690      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
98691      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
98692      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98693      %let groupid =;
98694      %let endGroupid =;
98695      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
98696      set EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO;
98697      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
98697    ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
98698      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
98699      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
98700      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98701      data WORK.Ensmbl59;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl59;
98702      length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
98703      label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
98703    ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
98704      nodeid="AUTONEURAL44";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL44";
98705      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
98706      output;
MPRINT(EM_DIAGRAM):   output;
98707      nodeid="AUTONEURAL45";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL45";
98708      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
98709      output;
MPRINT(EM_DIAGRAM):   output;
98710      nodeid="AUTONEURAL47";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL47";
98711      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
98712      output;
MPRINT(EM_DIAGRAM):   output;
98713      nodeid="AUTONEURAL41";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL41";
98714      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
98715      output;
MPRINT(EM_DIAGRAM):   output;
98716      nodeid="AUTONEURAL42";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL42";
98717      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
98718      output;
MPRINT(EM_DIAGRAM):   output;
98719      nodeid="AUTONEURAL43";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL43";
98720      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
98721      output;
MPRINT(EM_DIAGRAM):   output;
98722      nodeid="AUTONEURAL46";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL46";
98723      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
98724      output;
MPRINT(EM_DIAGRAM):   output;
98725      ;
MPRINT(EM_DIAGRAM):   ;
98726      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL59 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
98727      title;
MPRINT(EM_DIAGRAM):   title;
98728      proc print data=WORK.Ensmbl59 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl59 label noobs;
98729      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
98730      title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   run;
98731      run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL59.
NOTE: The PROCEDURE PRINT printed page 22.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98732      title9;
MPRINT(EM_DIAGRAM):   title9;
98733      title10;
MPRINT(EM_DIAGRAM):   title10;
98734      data WORK.M3RV2UKE;
MPRINT(EM_DIAGRAM):    data WORK.M3RV2UKE;
98735      set WORK.M3RV2UKE;
MPRINT(EM_DIAGRAM):   set WORK.M3RV2UKE;
98736      where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
98737      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3RV2UKE.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M3RV2UKE has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98738      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
98739      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
98740      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
98741      %macro DMDBClass;
98742          DepVar(DESC)
98743      %mend DMDBClass;
98744      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
98745      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
98746      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
98747      %macro DMDBVar;
98748
98749      %mend DMDBVar;
98750      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98751      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
98752      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98753      proc dmdb batch data=EMWS8.AutoNeural44_TRAIN
98754      dmdbcat=WORK.EM_DMDB
98755      maxlevel = 513
98756      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural44_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
98757      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
98758      target
98759      DepVar
98760      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
98761      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL44_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL44_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
98762      quit;
98763      *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                21.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O15HUPN1
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O15HUPN1 new;
MPRINT(EM_DIAGRAM):   run;
98865      filename emflow
98865    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring AUTONEURAL44_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98866      *------------------------------------------------------------*;
98867      * Ensmbl59: Scoring AUTONEURAL44_TRAIN data;
98868      *------------------------------------------------------------*;
98869      data EMWS8.Ensmbl59_TRAIN
98870      / view=EMWS8.Ensmbl59_TRAIN
98871      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_TRAIN / view=EMWS8.Ensmbl59_TRAIN ;
98872      set EMWS8.AutoNeural44_TRAIN
98873      ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_TRAIN ;
98874      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas.
98875     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98876     +* Ensmbl59: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Combine model for DepVar;
98877     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98878     +* Ensmbl59: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 1 of 7;
98879     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98880     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98881     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
98882     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
98883     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
98884     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98885     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98886     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
98887     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
98888     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
98889     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98890     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98891     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
98892     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
98893     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
98894     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98895     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98896     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
98897     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
98898     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
98899     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98900     +
98901     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
98902     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
98902    !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
98903     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
98904     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
98905     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
98906     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
98907     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
98908     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98909     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
98910     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
98911     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
98912     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98913     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98914     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
98915     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98916     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
98917     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
98918     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
98919     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98920     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
98921     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
98922     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
98923     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98924     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98925     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
98926     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
98927     +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
98928     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98929     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98930     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
98931     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
98932     +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
98933     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98934     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
98935     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
98936     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
98937     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
98938     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
98939     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
98940     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
98941     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
98942     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
98943     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
98944     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
98945     +LENGTH _WARN_ $4
98946     +      F_DepVar  $ 12
98947     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
98948     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
98949     +
98950     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
98951     +
98952     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
98953     +
98954     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
98955     +
98956     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
98957     +
98958     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
98959     +
98960     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
98961     +
98962     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
98963     +
98964     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
98965     +
98966     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
98967     +
98968     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
98969     +
98970     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
98971     +
98972     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
98973     +
98974     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
98975     +
98976     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
98977     +
98978     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
98979     +
98980     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
98981     +
98982     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
98983     +
98984     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
98985     +
98986     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
98987     +
98988     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
98989     +
98990     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
98991     +
98992     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
98993     +
98994     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
98995     +
98996     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
98997     +
98998     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
98999     +
99000     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
99001     +
99002     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
99003     +
99004     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
99005     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
99006     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
99007     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
99008     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
99009     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
99010     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
99011     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
99012     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
99013     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99014     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99015     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99016     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99017     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99018     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99019     +end;
MPRINT(EM_DIAGRAM):   end;
99020     +else do;
MPRINT(EM_DIAGRAM):   else do;
99021     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
99022     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
99023     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99024     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
99025     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
99026     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
99027     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
99028     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
99029     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99030     +         end;
MPRINT(EM_DIAGRAM):   end;
99031     +         else do;
MPRINT(EM_DIAGRAM):   else do;
99032     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
99033     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
99034     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99035     +            end;
MPRINT(EM_DIAGRAM):   end;
99036     +         end;
MPRINT(EM_DIAGRAM):   end;
99037     +      end;
MPRINT(EM_DIAGRAM):   end;
99038     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99039     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
99040     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
99041     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99042     +         end;
MPRINT(EM_DIAGRAM):   end;
99043     +      end;
MPRINT(EM_DIAGRAM):   end;
99044     +   end;
MPRINT(EM_DIAGRAM):   end;
99045     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99046     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
99047     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
99048     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99049     +      end;
MPRINT(EM_DIAGRAM):   end;
99050     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99051     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
99052     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
99053     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
99054     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
99055     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
99056     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99057     +         end;
MPRINT(EM_DIAGRAM):   end;
99058     +      end;
MPRINT(EM_DIAGRAM):   end;
99059     +   end;
MPRINT(EM_DIAGRAM):   end;
99060     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
99061     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99062     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99063     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99064     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99065     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99066     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99067     +   end;
MPRINT(EM_DIAGRAM):   end;
99068     +end;
MPRINT(EM_DIAGRAM):   end;
99069     +
99070     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99071     +*** Checking missing input Interval
99072     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
99073     +
99074     +IF NMISS(
99075     +   AcceptedCmpTotal ,
99076     +   Frq ,
99077     +   Income ,
99078     +   Mnt ,
99079     +   MntGoldProds ,
99080     +   MntMeatProducts ,
99081     +   NumCatalogPurchases ,
99082     +   NumDealsPurchases ,
99083     +   NumWebVisitsMonth ,
99084     +   RFMstat ,
99085     +   Recency ,
99086     +   Teenhome ,
99087     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
99088     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
99089     +
99090     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99091     +END;
MPRINT(EM_DIAGRAM):   END;
99092     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99093     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
99094     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99095     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99096     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99097     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
99098     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99099     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99100     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
99101     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99102     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
99103     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
99104     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
99105     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
99106     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
99107     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99108     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
99109     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99110     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
99111     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99112     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99113     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99114     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
99115     +END;
MPRINT(EM_DIAGRAM):   END;
99116     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99117     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
99118     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99119     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
99120     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
99121     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99122     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
99123     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99124     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
99125     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
99126     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
99127     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99128     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
99129     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
99130     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
99131     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
99132     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
99133     +   ELSE S_NumCatalogPurchases
99134     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
99135     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
99136     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
99137     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99138     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
99139     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
99140     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99141     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
99142     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
99143     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99144     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
99145     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99146     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
99147     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99148     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
99149     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
99150     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
99151     +END;
MPRINT(EM_DIAGRAM):   END;
99152     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99153     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
99154     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99155     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99156     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
99157     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99158     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99159     +   H1x1_1  =    -0.12469827057082 * S_AcceptedCmpTotal
99160     +          +      3.1876739677725 * S_Frq  +     0.13471808395353 * S_Income
99161     +          +    -0.55590218871332 * S_Mnt  +     0.49013595544334 *
99162     +        S_MntGoldProds  +    -8.24401774301659 * S_MntMeatProducts
99163     +          +    -1.41682724778123 * S_NumCatalogPurchases
99164     +          +    -0.81806751697478 * S_NumDealsPurchases
99165     +          +     0.13721060582485 * S_NumWebVisitsMonth
99166     +          +     -0.8599103465088 * S_RFMstat  +    -0.11788382213726 *
99167     +        S_Recency  +    -0.11154618858027 * S_Teenhome
99168     +          +    -0.09280870729016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.12469827057082 * S_AcceptedCmpTotal + 3.1876739677725 *
S_Frq + 0.13471808395353 * S_Income + -0.55590218871332 * S_Mnt + 0.49013595544334 *
S_MntGoldProds + -8.24401774301659 * S_MntMeatProducts + -1.41682724778123 *
S_NumCatalogPurchases + -0.81806751697478 * S_NumDealsPurchases + 0.13721060582485 *
S_NumWebVisitsMonth + -0.8599103465088 * S_RFMstat + -0.11788382213726 * S_Recency +
-0.11154618858027 * S_Teenhome + -0.09280870729016 * S_Year_Birth ;
99169     +   H1x1_1  = H1x1_1  +     0.34960218424017 * Marital_StatusDivorced
99170     +          +    -0.42475372885131 * Marital_StatusMarried
99171     +          +     0.12884500504295 * Marital_StatusSingle
99172     +          +    -0.15810267147538 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.34960218424017 * Marital_StatusDivorced +
-0.42475372885131 * Marital_StatusMarried + 0.12884500504295 * Marital_StatusSingle +
-0.15810267147538 * Marital_StatusTogether ;
99173     +   H1x1_1  =    -5.00010358329252 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -5.00010358329252 + H1x1_1 ;
99174     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
99175     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
99176     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
99177     +END;
MPRINT(EM_DIAGRAM):   END;
99178     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99179     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
99180     +END;
MPRINT(EM_DIAGRAM):   END;
99181     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99182     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
99183     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99184     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99185     +   H1x2_1  =    -0.55977918187183 * S_AcceptedCmpTotal
99186     +          +     3.80877597264064 * S_Frq  +       0.740665099365 * S_Income
99187     +          +      1.2189502767856 * S_Mnt  +    -0.64069435073077 *
99188     +        S_MntGoldProds  +    -1.20953450523092 * S_MntMeatProducts
99189     +          +    -1.27566927607767 * S_NumCatalogPurchases
99190     +          +    -0.30700705450077 * S_NumDealsPurchases
99191     +          +    -1.10002183072059 * S_NumWebVisitsMonth
99192     +          +    -0.17115220906364 * S_RFMstat  +     0.98456522108133 *
99193     +        S_Recency  +    -0.46996209026516 * S_Teenhome
99194     +          +     0.11522881334392 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.55977918187183 * S_AcceptedCmpTotal + 3.80877597264064 *
S_Frq + 0.740665099365 * S_Income + 1.2189502767856 * S_Mnt + -0.64069435073077 *
S_MntGoldProds + -1.20953450523092 * S_MntMeatProducts + -1.27566927607767 *
S_NumCatalogPurchases + -0.30700705450077 * S_NumDealsPurchases + -1.10002183072059 *
S_NumWebVisitsMonth + -0.17115220906364 * S_RFMstat + 0.98456522108133 * S_Recency +
-0.46996209026516 * S_Teenhome + 0.11522881334392 * S_Year_Birth ;
99195     +   H1x2_1  = H1x2_1  +    -0.23272680240317 * Marital_StatusDivorced
99196     +          +    -0.32389187879499 * Marital_StatusMarried
99197     +          +     0.77856411154011 * Marital_StatusSingle
99198     +          +    -0.63289071596123 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.23272680240317 * Marital_StatusDivorced +
-0.32389187879499 * Marital_StatusMarried + 0.77856411154011 * Marital_StatusSingle +
-0.63289071596123 * Marital_StatusTogether ;
99199     +   H1x2_1  =     3.21350083886443 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 3.21350083886443 + H1x2_1 ;
99200     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
99201     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
99202     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
99203     +END;
MPRINT(EM_DIAGRAM):   END;
99204     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99205     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
99206     +END;
MPRINT(EM_DIAGRAM):   END;
99207     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99208     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
99209     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99210     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99211     +   H2x1_1  =    -7.90353913070205 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -7.90353913070205 * H1x1_1 ;
99212     +   H2x1_1  = H2x1_1  +     -3.6151322253591 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.6151322253591 * H1x2_1 ;
99213     +   H2x1_1  =     2.06123756742001 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 2.06123756742001 + H2x1_1 ;
99214     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
99215     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
99216     +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
99217     +END;
MPRINT(EM_DIAGRAM):   END;
99218     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99219     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
99220     +END;
MPRINT(EM_DIAGRAM):   END;
99221     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99222     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
99223     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99224     +
99225     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
99226     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
99227     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
99228     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
99229     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
99230     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99231     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
99232     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
99233     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
99234     +end;
MPRINT(EM_DIAGRAM):   end;
99235     +else do;
MPRINT(EM_DIAGRAM):   else do;
99236     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
99237     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
99238     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
99239     +   end;
MPRINT(EM_DIAGRAM):   end;
99240     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
99241     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
99242     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
99243     +   end;
MPRINT(EM_DIAGRAM):   end;
99244     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99245     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
99246     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
99247     +   end;
MPRINT(EM_DIAGRAM):   end;
99248     +end;
MPRINT(EM_DIAGRAM):   end;
99249     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99250     +   P_DepVar1  =     23.6383607789635 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 23.6383607789635 * H2x1_1 ;
99251     +   P_DepVar1  =    -12.8845549880418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.8845549880418 + P_DepVar1 ;
99252     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
99253     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
99254     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
99255     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
99256     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
99257     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
99258     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
99259     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
99260     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
99261     +END;
MPRINT(EM_DIAGRAM):   END;
99262     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99263     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
99264     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
99265     +END;
MPRINT(EM_DIAGRAM):   END;
99266     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
99267     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
99268     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
99269     +END;
MPRINT(EM_DIAGRAM):   END;
99270     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
99271     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
99272     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
99273     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
99274     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
99275     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
99276     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
99277     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99278     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
99279     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99280     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
99281     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
99282     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
99283     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
99284     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
99285     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
99286     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
99287     +END;
MPRINT(EM_DIAGRAM):   END;
99288     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
99289     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
99290     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
99291     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
99292     +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
99293     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99294     +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
99295     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99296     +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
99297     +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
99298     +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
99299     +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
99300     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99301     +* Renaming Into variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural44;
99302     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99303     +length AutoNeural44_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural44_I_DepVar $32;
99304     +drop AutoNeural44_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_I_DepVar;
99305     +AutoNeural44_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural44_I_DepVar = I_DepVar;
99306     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99307     +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
99308     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99309     +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
99310     +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
99311     +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
99312     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99313     +* Ensmbl59: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 2 of 7;
99314     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99315     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99316     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
99317     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
99318     +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
99319     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99320     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
99321     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
99322     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
99323     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
99324     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
99325     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
99326     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
99327     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
99328     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
99329     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
99330     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
99331     +LENGTH _WARN_ $4
99332     +      F_DepVar  $ 12
99333     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
99334     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
99335     +
99336     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
99337     +
99338     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
99339     +
99340     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
99341     +
99342     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
99343     +
99344     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
99345     +
99346     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
99347     +
99348     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
99349     +
99350     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
99351     +
99352     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
99353     +
99354     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
99355     +
99356     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
99357     +
99358     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
99359     +
99360     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
99361     +
99362     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
99363     +
99364     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
99365     +
99366     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
99367     +
99368     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
99369     +
99370     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
99371     +
99372     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
99373     +
99374     +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
99375     +
99376     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
99377     +
99378     +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
99379     +
99380     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
99381     +
99382     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
99383     +
99384     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
99385     +
99386     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
99387     +
99388     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
99389     +
99390     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
99391     +
99392     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
99393     +
99394     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
99395     +
99396     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
99397     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
99398     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
99399     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
99400     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
99401     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
99402     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
99403     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
99404     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
99405     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99406     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99407     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99408     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99409     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99410     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99411     +end;
MPRINT(EM_DIAGRAM):   end;
99412     +else do;
MPRINT(EM_DIAGRAM):   else do;
99413     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
99414     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
99415     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99416     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
99417     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
99418     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
99419     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
99420     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
99421     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99422     +         end;
MPRINT(EM_DIAGRAM):   end;
99423     +         else do;
MPRINT(EM_DIAGRAM):   else do;
99424     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
99425     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
99426     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99427     +            end;
MPRINT(EM_DIAGRAM):   end;
99428     +         end;
MPRINT(EM_DIAGRAM):   end;
99429     +      end;
MPRINT(EM_DIAGRAM):   end;
99430     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99431     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
99432     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
99433     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99434     +         end;
MPRINT(EM_DIAGRAM):   end;
99435     +      end;
MPRINT(EM_DIAGRAM):   end;
99436     +   end;
MPRINT(EM_DIAGRAM):   end;
99437     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99438     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
99439     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
99440     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99441     +      end;
MPRINT(EM_DIAGRAM):   end;
99442     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99443     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
99444     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
99445     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
99446     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
99447     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
99448     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99449     +         end;
MPRINT(EM_DIAGRAM):   end;
99450     +      end;
MPRINT(EM_DIAGRAM):   end;
99451     +   end;
MPRINT(EM_DIAGRAM):   end;
99452     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
99453     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99454     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99455     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99456     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99457     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99458     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99459     +   end;
MPRINT(EM_DIAGRAM):   end;
99460     +end;
MPRINT(EM_DIAGRAM):   end;
99461     +
99462     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99463     +*** Checking missing input Interval
99464     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
99465     +
99466     +IF NMISS(
99467     +   AcceptedCmpTotal ,
99468     +   Frq ,
99469     +   Income ,
99470     +   Mnt ,
99471     +   MntGoldProds ,
99472     +   MntMeatProducts ,
99473     +   NumCatalogPurchases ,
99474     +   NumDealsPurchases ,
99475     +   NumWebVisitsMonth ,
99476     +   RFMstat ,
99477     +   Recency ,
99478     +   Teenhome ,
99479     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
99480     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
99481     +
99482     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99483     +END;
MPRINT(EM_DIAGRAM):   END;
99484     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99485     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
99486     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99487     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99488     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99489     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
99490     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99491     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99492     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
99493     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99494     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
99495     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
99496     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
99497     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
99498     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
99499     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99500     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
99501     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99502     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
99503     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99504     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99505     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99506     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
99507     +END;
MPRINT(EM_DIAGRAM):   END;
99508     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99509     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
99510     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99511     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
99512     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
99513     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99514     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
99515     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99516     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
99517     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
99518     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
99519     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99520     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
99521     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
99522     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
99523     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
99524     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
99525     +   ELSE S_NumCatalogPurchases
99526     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
99527     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
99528     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
99529     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99530     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
99531     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
99532     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99533     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
99534     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
99535     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99536     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
99537     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99538     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
99539     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99540     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
99541     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
99542     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
99543     +END;
MPRINT(EM_DIAGRAM):   END;
99544     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99545     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
99546     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99547     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99548     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
99549     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99550     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99551     +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
99552     +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
99553     +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
99554     +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
99555     +          +    -0.17075976331442 * S_NumCatalogPurchases
99556     +          +     0.11936859656737 * S_NumDealsPurchases
99557     +          +    -0.02241344557322 * S_NumWebVisitsMonth
99558     +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
99559     +        S_Recency  +     0.15041197329983 * S_Teenhome
99560     +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 *
S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 *
S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 *
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 *
S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency +
0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
99561     +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
99562     +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
99563     +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
99564     +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
99565     +          +     -0.1082096588215 * S_NumCatalogPurchases
99566     +          +    -0.35286072202398 * S_NumDealsPurchases
99567     +          +     0.41909763538671 * S_NumWebVisitsMonth
99568     +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
99569     +        S_Recency  +     0.03657184300378 * S_Teenhome
99570     +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 *
S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 *
S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 *
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 *
S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency +
0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
99571     +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
99572     +          +     0.35890266446407 * Marital_StatusMarried
99573     +          +    -0.32958224268654 * Marital_StatusSingle
99574     +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced +
0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle +
0.26093411772209 * Marital_StatusTogether ;
99575     +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
99576     +          +    -0.02828904025667 * Marital_StatusMarried
99577     +          +      0.2062300465945 * Marital_StatusSingle
99578     +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced +
-0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle +
-0.11283173230117 * Marital_StatusTogether ;
99579     +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
99580     +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
99581     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
99582     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
99583     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
99584     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
99585     +END;
MPRINT(EM_DIAGRAM):   END;
99586     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99587     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
99588     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
99589     +END;
MPRINT(EM_DIAGRAM):   END;
99590     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99591     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
99592     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99593     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99594     +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
99595     +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
99596     +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
99597     +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
99598     +          +    -0.01120232190428 * S_NumCatalogPurchases
99599     +          +     0.08335061407191 * S_NumDealsPurchases
99600     +          +     0.19045617784308 * S_NumWebVisitsMonth
99601     +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
99602     +        S_Recency  +    -0.01223664611486 * S_Teenhome
99603     +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 *
S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 *
S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 *
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 *
S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency +
-0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
99604     +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
99605     +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
99606     +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
99607     +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
99608     +          +     0.05405710367459 * S_NumCatalogPurchases
99609     +          +     0.05779108423435 * S_NumDealsPurchases
99610     +          +     0.06578830114376 * S_NumWebVisitsMonth
99611     +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
99612     +        S_Recency  +     0.07188455936346 * S_Teenhome
99613     +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 *
S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 *
S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 *
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 *
S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency +
0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
99614     +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
99615     +          +     -0.0971208757038 * Marital_StatusMarried
99616     +          +    -0.07250288479873 * Marital_StatusSingle
99617     +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced +
-0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle +
-0.09370040203357 * Marital_StatusTogether ;
99618     +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
99619     +          +     0.21091057941446 * Marital_StatusMarried
99620     +          +    -0.10578923343752 * Marital_StatusSingle
99621     +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced +
0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle +
0.14340624257864 * Marital_StatusTogether ;
99622     +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
99623     +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
99624     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
99625     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
99626     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
99627     +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
99628     +END;
MPRINT(EM_DIAGRAM):   END;
99629     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99630     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
99631     +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
99632     +END;
MPRINT(EM_DIAGRAM):   END;
99633     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99634     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
99635     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99636     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99637     +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
99638     +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
99639     +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 *
H1x2_2 ;
99640     +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
99641     +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
99642     +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
99643     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
99644     +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
99645     +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
99646     +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
99647     +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
99648     +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
99649     +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
99650     +END;
MPRINT(EM_DIAGRAM):   END;
99651     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99652     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
99653     +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
99654     +END;
MPRINT(EM_DIAGRAM):   END;
99655     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99656     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
99657     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99658     +
99659     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
99660     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
99661     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
99662     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
99663     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
99664     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99665     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
99666     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
99667     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
99668     +end;
MPRINT(EM_DIAGRAM):   end;
99669     +else do;
MPRINT(EM_DIAGRAM):   else do;
99670     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
99671     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
99672     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
99673     +   end;
MPRINT(EM_DIAGRAM):   end;
99674     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
99675     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
99676     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
99677     +   end;
MPRINT(EM_DIAGRAM):   end;
99678     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99679     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
99680     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
99681     +   end;
MPRINT(EM_DIAGRAM):   end;
99682     +end;
MPRINT(EM_DIAGRAM):   end;
99683     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99684     +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
99685     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
99686     +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
99687     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
99688     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
99689     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
99690     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
99691     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
99692     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
99693     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
99694     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
99695     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
99696     +END;
MPRINT(EM_DIAGRAM):   END;
99697     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99698     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
99699     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
99700     +END;
MPRINT(EM_DIAGRAM):   END;
99701     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
99702     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
99703     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
99704     +END;
MPRINT(EM_DIAGRAM):   END;
99705     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
99706     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
99707     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
99708     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
99709     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
99710     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
99711     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
99712     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99713     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
99714     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99715     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
99716     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
99717     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
99718     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
99719     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
99720     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
99721     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
99722     +END;
MPRINT(EM_DIAGRAM):   END;
99723     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
99724     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
99725     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
99726     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
99727     +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
99728     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99729     +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
99730     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99731     +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
99732     +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
99733     +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
99734     +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
99735     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99736     +* Renaming Into variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural45;
99737     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99738     +length AutoNeural45_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural45_I_DepVar $32;
99739     +drop AutoNeural45_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_I_DepVar;
99740     +AutoNeural45_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural45_I_DepVar = I_DepVar;
99741     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99742     +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
99743     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99744     +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
99745     +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
99746     +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
99747     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99748     +* Ensmbl59: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 3 of 7;
99749     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99750     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99751     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
99752     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
99753     +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
99754     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
99755     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
99756     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
99757     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
99758     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
99759     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
99760     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
99761     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
99762     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
99763     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
99764     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
99765     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
99766     +LENGTH _WARN_ $4
99767     +      F_DepVar  $ 12
99768     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
99769     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
99770     +
99771     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
99772     +
99773     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
99774     +
99775     +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
99776     +
99777     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
99778     +
99779     +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
99780     +
99781     +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
99782     +
99783     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
99784     +
99785     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
99786     +
99787     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
99788     +
99789     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
99790     +
99791     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
99792     +
99793     +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
99794     +
99795     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
99796     +
99797     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
99798     +
99799     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
99800     +
99801     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
99802     +
99803     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
99804     +
99805     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
99806     +
99807     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
99808     +
99809     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
99810     +
99811     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
99812     +
99813     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
99814     +
99815     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
99816     +
99817     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
99818     +
99819     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
99820     +
99821     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
99822     +
99823     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
99824     +
99825     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
99826     +
99827     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
99828     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
99829     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
99830     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
99831     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
99832     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
99833     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
99834     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
99835     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
99836     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99837     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99838     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99839     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99840     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
99841     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99842     +end;
MPRINT(EM_DIAGRAM):   end;
99843     +else do;
MPRINT(EM_DIAGRAM):   else do;
99844     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
99845     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
99846     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
99847     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
99848     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
99849     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
99850     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
99851     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
99852     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99853     +         end;
MPRINT(EM_DIAGRAM):   end;
99854     +         else do;
MPRINT(EM_DIAGRAM):   else do;
99855     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
99856     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
99857     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99858     +            end;
MPRINT(EM_DIAGRAM):   end;
99859     +         end;
MPRINT(EM_DIAGRAM):   end;
99860     +      end;
MPRINT(EM_DIAGRAM):   end;
99861     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99862     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
99863     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
99864     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99865     +         end;
MPRINT(EM_DIAGRAM):   end;
99866     +      end;
MPRINT(EM_DIAGRAM):   end;
99867     +   end;
MPRINT(EM_DIAGRAM):   end;
99868     +   else do;
MPRINT(EM_DIAGRAM):   else do;
99869     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
99870     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
99871     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99872     +      end;
MPRINT(EM_DIAGRAM):   end;
99873     +      else do;
MPRINT(EM_DIAGRAM):   else do;
99874     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
99875     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
99876     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
99877     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
99878     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
99879     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
99880     +         end;
MPRINT(EM_DIAGRAM):   end;
99881     +      end;
MPRINT(EM_DIAGRAM):   end;
99882     +   end;
MPRINT(EM_DIAGRAM):   end;
99883     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
99884     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
99885     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
99886     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
99887     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
99888     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
99889     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99890     +   end;
MPRINT(EM_DIAGRAM):   end;
99891     +end;
MPRINT(EM_DIAGRAM):   end;
99892     +
99893     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99894     +*** Checking missing input Interval
99895     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
99896     +
99897     +IF NMISS(
99898     +   AcceptedCmpTotal ,
99899     +   Frq ,
99900     +   Income ,
99901     +   Mnt ,
99902     +   MntGoldProds ,
99903     +   MntMeatProducts ,
99904     +   NumCatalogPurchases ,
99905     +   NumDealsPurchases ,
99906     +   NumWebVisitsMonth ,
99907     +   RFMstat ,
99908     +   Recency ,
99909     +   Teenhome ,
99910     +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
99911     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
99912     +
99913     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
99914     +END;
MPRINT(EM_DIAGRAM):   END;
99915     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99916     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
99917     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99918     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99919     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99920     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
99921     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99922     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99923     +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
99924     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99925     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
99926     +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
99927     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
99928     +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
99929     +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
99930     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99931     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
99932     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99933     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
99934     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99935     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99936     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99937     +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
99938     +END;
MPRINT(EM_DIAGRAM):   END;
99939     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
99940     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
99941     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
99942     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
99943     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
99944     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
99945     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
99946     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
99947     +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
99948     +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
99949     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
99950     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
99951     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
99952     +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
99953     +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
99954     +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
99955     +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
99956     +   ELSE S_NumCatalogPurchases
99957     +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
99958     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
99959     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
99960     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
99961     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
99962     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
99963     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
99964     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
99965     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
99966     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
99967     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
99968     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
99969     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
99970     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
99971     +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
99972     +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
99973     +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
99974     +END;
MPRINT(EM_DIAGRAM):   END;
99975     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99976     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
99977     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99978     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99979     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
99980     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
99981     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
99982     +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
99983     +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
99984     +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
99985     +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
99986     +          +     0.96941096546276 * S_NumCatalogPurchases
99987     +          +    -0.78169009272221 * S_NumDealsPurchases
99988     +          +     2.46694552614806 * S_NumWebVisitsMonth
99989     +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
99990     +        S_Recency  +    -1.09760548427625 * S_Teenhome
99991     +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 *
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 *
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 *
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 *
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency +
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
99992     +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
99993     +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
99994     +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
99995     +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
99996     +          +    -2.01779739147185 * S_NumCatalogPurchases
99997     +          +     -2.6507470301089 * S_NumDealsPurchases
99998     +          +     0.43757499676531 * S_NumWebVisitsMonth
99999     +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
100000    +        S_Recency  +    -0.45321912120397 * S_Teenhome
100001    +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 *
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 *
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 *
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 *
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency +
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
100002    +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
100003    +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
100004    +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
100005    +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
100006    +          +      3.9474982958259 * S_NumCatalogPurchases
100007    +          +       0.376468804707 * S_NumDealsPurchases
100008    +          +     3.31501013882439 * S_NumWebVisitsMonth
100009    +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
100010    +        S_Recency  +    -1.57729700618019 * S_Teenhome
100011    +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 *
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 *
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 *
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 *
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency +
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
100012    +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
100013    +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
100014    +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
100015    +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
100016    +          +    -1.47064436222345 * S_NumCatalogPurchases
100017    +          +    -0.47773085529503 * S_NumDealsPurchases
100018    +          +     0.20028656323595 * S_NumWebVisitsMonth
100019    +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
100020    +        S_Recency  +    -0.11530372179295 * S_Teenhome
100021    +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 *
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 *
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 *
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 *
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency +
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
100022    +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
100023    +          +    -1.68634246986018 * Marital_StatusMarried
100024    +          +     0.61674763327859 * Marital_StatusSingle
100025    +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced +
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle +
-1.26649958570453 * Marital_StatusTogether ;
100026    +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
100027    +          +    -0.63821523628652 * Marital_StatusMarried
100028    +          +    -1.40431603473643 * Marital_StatusSingle
100029    +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced +
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle +
-0.20849152262706 * Marital_StatusTogether ;
100030    +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
100031    +          +    -2.86773035723606 * Marital_StatusMarried
100032    +          +     2.52900517550184 * Marital_StatusSingle
100033    +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced +
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle +
-3.34343954102751 * Marital_StatusTogether ;
100034    +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
100035    +          +    -0.89880425714459 * Marital_StatusMarried
100036    +          +     0.97652284934456 * Marital_StatusSingle
100037    +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced +
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle +
-0.83414241747679 * Marital_StatusTogether ;
100038    +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
100039    +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
100040    +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
100041    +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
100042    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
100043    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
100044    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
100045    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
100046    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
100047    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
100048    +END;
MPRINT(EM_DIAGRAM):   END;
100049    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100050    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
100051    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
100052    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
100053    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
100054    +END;
MPRINT(EM_DIAGRAM):   END;
100055    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100056    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
100057    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100058    +
100059    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
100060    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
100061    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
100062    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
100063    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
100064    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100065    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
100066    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
100067    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
100068    +end;
MPRINT(EM_DIAGRAM):   end;
100069    +else do;
MPRINT(EM_DIAGRAM):   else do;
100070    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
100071    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
100072    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
100073    +   end;
MPRINT(EM_DIAGRAM):   end;
100074    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
100075    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
100076    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
100077    +   end;
MPRINT(EM_DIAGRAM):   end;
100078    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100079    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
100080    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
100081    +   end;
MPRINT(EM_DIAGRAM):   end;
100082    +end;
MPRINT(EM_DIAGRAM):   end;
100083    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100084    +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
100085    +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 +
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
100086    +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
100087    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
100088    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
100089    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
100090    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
100091    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
100092    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
100093    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
100094    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
100095    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
100096    +END;
MPRINT(EM_DIAGRAM):   END;
100097    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100098    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
100099    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
100100    +END;
MPRINT(EM_DIAGRAM):   END;
100101    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
100102    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
100103    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
100104    +END;
MPRINT(EM_DIAGRAM):   END;
100105    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
100106    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
100107    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
100108    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
100109    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
100110    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
100111    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
100112    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100113    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
100114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100115    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
100116    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
100117    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
100118    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
100119    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
100120    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
100121    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
100122    +END;
MPRINT(EM_DIAGRAM):   END;
100123    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100124    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
100125    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100126    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
100127    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
100128    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100129    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
100130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100131    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
100132    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
100133    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
100134    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
100135    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100136    +* Renaming Into variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural47;
100137    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100138    +length AutoNeural47_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural47_I_DepVar $32;
100139    +drop AutoNeural47_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_I_DepVar;
100140    +AutoNeural47_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural47_I_DepVar = I_DepVar;
100141    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100142    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
100143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100144    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
100145    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
100146    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
100147    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100148    +* Ensmbl59: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 4 of 7;
100149    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100150    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100151    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
100152    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
100153    +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
100154    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100155    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
100156    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
100157    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
100158    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
100159    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
100160    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
100161    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
100162    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
100163    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
100164    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
100165    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
100166    +LENGTH _WARN_ $4
100167    +      F_DepVar  $ 12
100168    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
100169    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
100170    +
100171    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
100172    +
100173    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
100174    +
100175    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
100176    +
100177    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
100178    +
100179    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
100180    +
100181    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
100182    +
100183    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
100184    +
100185    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
100186    +
100187    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
100188    +
100189    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
100190    +
100191    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
100192    +
100193    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
100194    +
100195    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
100196    +
100197    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
100198    +
100199    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
100200    +
100201    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
100202    +
100203    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
100204    +
100205    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
100206    +
100207    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
100208    +
100209    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
100210    +
100211    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
100212    +
100213    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
100214    +
100215    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
100216    +
100217    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
100218    +
100219    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
100220    +
100221    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
100222    +
100223    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
100224    +
100225    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
100226    +
100227    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
100228    +
100229    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
100230    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
100231    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
100232    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
100233    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
100234    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
100235    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
100236    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
100237    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
100238    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
100239    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
100240    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
100241    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
100242    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100243    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100244    +end;
MPRINT(EM_DIAGRAM):   end;
100245    +else do;
MPRINT(EM_DIAGRAM):   else do;
100246    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
100247    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
100248    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100249    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
100250    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
100251    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
100252    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
100253    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
100254    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100255    +         end;
MPRINT(EM_DIAGRAM):   end;
100256    +         else do;
MPRINT(EM_DIAGRAM):   else do;
100257    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
100258    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
100259    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100260    +            end;
MPRINT(EM_DIAGRAM):   end;
100261    +         end;
MPRINT(EM_DIAGRAM):   end;
100262    +      end;
MPRINT(EM_DIAGRAM):   end;
100263    +      else do;
MPRINT(EM_DIAGRAM):   else do;
100264    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
100265    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
100266    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100267    +         end;
MPRINT(EM_DIAGRAM):   end;
100268    +      end;
MPRINT(EM_DIAGRAM):   end;
100269    +   end;
MPRINT(EM_DIAGRAM):   end;
100270    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100271    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
100272    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
100273    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100274    +      end;
MPRINT(EM_DIAGRAM):   end;
100275    +      else do;
MPRINT(EM_DIAGRAM):   else do;
100276    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
100277    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
100278    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
100279    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
100280    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
100281    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100282    +         end;
MPRINT(EM_DIAGRAM):   end;
100283    +      end;
MPRINT(EM_DIAGRAM):   end;
100284    +   end;
MPRINT(EM_DIAGRAM):   end;
100285    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
100286    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
100287    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
100288    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
100289    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
100290    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100291    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100292    +   end;
MPRINT(EM_DIAGRAM):   end;
100293    +end;
MPRINT(EM_DIAGRAM):   end;
100294    +
100295    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100296    +*** Checking missing input Interval
100297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
100298    +
100299    +IF NMISS(
100300    +   AcceptedCmpTotal ,
100301    +   Frq ,
100302    +   Income ,
100303    +   Mnt ,
100304    +   MntGoldProds ,
100305    +   MntMeatProducts ,
100306    +   NumCatalogPurchases ,
100307    +   NumDealsPurchases ,
100308    +   NumWebVisitsMonth ,
100309    +   RFMstat ,
100310    +   Recency ,
100311    +   Teenhome ,
100312    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
100313    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
100314    +
100315    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100316    +END;
MPRINT(EM_DIAGRAM):   END;
100317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100318    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
100319    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100320    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100321    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
100322    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
100323    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
100324    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
100325    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
100326    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
100327    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
100328    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
100329    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
100330    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
100331    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
100332    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
100333    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
100334    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
100335    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
100336    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
100337    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
100338    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
100339    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
100340    +END;
MPRINT(EM_DIAGRAM):   END;
100341    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100342    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
100343    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
100344    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
100345    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
100346    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
100347    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
100348    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
100349    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
100350    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
100351    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
100352    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
100353    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
100354    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
100355    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
100356    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
100357    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
100358    +   ELSE S_NumCatalogPurchases
100359    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
100360    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
100361    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
100362    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
100363    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
100364    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
100365    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
100366    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
100367    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
100368    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
100369    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
100370    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
100371    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
100372    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
100373    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
100374    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
100375    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
100376    +END;
MPRINT(EM_DIAGRAM):   END;
100377    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100378    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
100379    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100381    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
100382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100383    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100384    +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
100385    +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
100386    +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
100387    +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
100388    +          +     0.18813452089487 * S_NumCatalogPurchases
100389    +          +     0.07572009513796 * S_NumDealsPurchases
100390    +          +     0.26290613719398 * S_NumWebVisitsMonth
100391    +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
100392    +        S_Recency  +    -0.08184869022013 * S_Teenhome
100393    +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 *
S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 *
S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 *
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 *
S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency +
-0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
100394    +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
100395    +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
100396    +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
100397    +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
100398    +          +      0.3860900431806 * S_NumCatalogPurchases
100399    +          +    -0.05602869666287 * S_NumDealsPurchases
100400    +          +     0.25751125196672 * S_NumWebVisitsMonth
100401    +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
100402    +        S_Recency  +     0.00740928227007 * S_Teenhome
100403    +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 *
S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 *
S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 *
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 *
S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency +
0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
100404    +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
100405    +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
100406    +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
100407    +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
100408    +          +     0.20017136343834 * S_NumCatalogPurchases
100409    +          +      0.4177949842415 * S_NumDealsPurchases
100410    +          +     0.12267139708832 * S_NumWebVisitsMonth
100411    +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
100412    +        S_Recency  +    -0.04165775695782 * S_Teenhome
100413    +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 *
S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 *
S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 *
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 *
S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency +
-0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
100414    +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
100415    +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
100416    +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
100417    +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
100418    +          +    -0.41475045310519 * S_NumCatalogPurchases
100419    +          +     0.05270183882345 * S_NumDealsPurchases
100420    +          +     -0.3411138782759 * S_NumWebVisitsMonth
100421    +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
100422    +        S_Recency  +     0.09131411279492 * S_Teenhome
100423    +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 *
S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 *
S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 *
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 *
S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency +
0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
100424    +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
100425    +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
100426    +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
100427    +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
100428    +          +     0.28201604995327 * S_NumCatalogPurchases
100429    +          +     -0.0106712941301 * S_NumDealsPurchases
100430    +          +     0.44937825968958 * S_NumWebVisitsMonth
100431    +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
100432    +        S_Recency  +    -0.07776231003236 * S_Teenhome
100433    +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 *
S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 *
S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 *
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 *
S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency +
-0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
100434    +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
100435    +          +     -0.2248578245828 * Marital_StatusMarried
100436    +          +     0.07509958702397 * Marital_StatusSingle
100437    +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced +
-0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle +
-0.12991422082545 * Marital_StatusTogether ;
100438    +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
100439    +          +     0.45662921783631 * Marital_StatusMarried
100440    +          +     -0.7587900494362 * Marital_StatusSingle
100441    +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced +
0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle +
0.91918379082777 * Marital_StatusTogether ;
100442    +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
100443    +          +     0.48232640763102 * Marital_StatusMarried
100444    +          +    -0.26767355443511 * Marital_StatusSingle
100445    +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced +
0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle +
0.26207298280723 * Marital_StatusTogether ;
100446    +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
100447    +          +       0.692510056964 * Marital_StatusMarried
100448    +          +    -0.62467969689335 * Marital_StatusSingle
100449    +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced +
0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle +
0.57377256791387 * Marital_StatusTogether ;
100450    +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
100451    +          +    -0.12414433690654 * Marital_StatusMarried
100452    +          +     0.01287765001755 * Marital_StatusSingle
100453    +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced +
-0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle +
-0.08087882377532 * Marital_StatusTogether ;
100454    +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
100455    +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
100456    +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
100457    +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
100458    +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
100459    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
100460    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
100461    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
100462    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
100463    +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
100464    +END;
MPRINT(EM_DIAGRAM):   END;
100465    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100466    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
100467    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
100468    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
100469    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
100470    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
100471    +END;
MPRINT(EM_DIAGRAM):   END;
100472    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100473    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
100474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100475    +
100476    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
100477    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
100478    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
100479    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
100480    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
100481    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100482    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
100483    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
100484    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
100485    +end;
MPRINT(EM_DIAGRAM):   end;
100486    +else do;
MPRINT(EM_DIAGRAM):   else do;
100487    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
100488    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
100489    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
100490    +   end;
MPRINT(EM_DIAGRAM):   end;
100491    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
100492    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
100493    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
100494    +   end;
MPRINT(EM_DIAGRAM):   end;
100495    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100496    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
100497    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
100498    +   end;
MPRINT(EM_DIAGRAM):   end;
100499    +end;
MPRINT(EM_DIAGRAM):   end;
100500    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100501    +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
100502    +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
100503    +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 +
63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
100504    +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
100505    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
100506    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
100507    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
100508    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
100509    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
100510    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
100511    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
100512    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
100513    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
100514    +END;
MPRINT(EM_DIAGRAM):   END;
100515    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100516    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
100517    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
100518    +END;
MPRINT(EM_DIAGRAM):   END;
100519    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
100520    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
100521    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
100522    +END;
MPRINT(EM_DIAGRAM):   END;
100523    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
100524    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
100525    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
100526    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
100527    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
100528    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
100529    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
100530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100531    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
100532    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100533    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
100534    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
100535    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
100536    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
100537    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
100538    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
100539    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
100540    +END;
MPRINT(EM_DIAGRAM):   END;
100541    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100542    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
100543    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
100544    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
100545    +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
100546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100547    +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
100548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100549    +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
100550    +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
100551    +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
100552    +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
100553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100554    +* Renaming Into variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural41;
100555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100556    +length AutoNeural41_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural41_I_DepVar $32;
100557    +drop AutoNeural41_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_I_DepVar;
100558    +AutoNeural41_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural41_I_DepVar = I_DepVar;
100559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100560    +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
100561    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100562    +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
100563    +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
100564    +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
100565    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100566    +* Ensmbl59: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 5 of 7;
100567    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100568    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100569    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
100570    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
100571    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
100572    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
100573    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
100574    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
100575    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
100576    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
100577    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
100578    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
100579    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
100580    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
100581    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
100582    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
100583    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
100584    +LENGTH _WARN_ $4
100585    +      F_DepVar  $ 12
100586    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
100587    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
100588    +
100589    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
100590    +
100591    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
100592    +
100593    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
100594    +
100595    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
100596    +
100597    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
100598    +
100599    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
100600    +
100601    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
100602    +
100603    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
100604    +
100605    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
100606    +
100607    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
100608    +
100609    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
100610    +
100611    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
100612    +
100613    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
100614    +
100615    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
100616    +
100617    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
100618    +
100619    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
100620    +
100621    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
100622    +
100623    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
100624    +
100625    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
100626    +
100627    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
100628    +
100629    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
100630    +
100631    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
100632    +
100633    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
100634    +
100635    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
100636    +
100637    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
100638    +
100639    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
100640    +
100641    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
100642    +
100643    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
100644    +
100645    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
100646    +
100647    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
100648    +
100649    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
100650    +
100651    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
100652    +
100653    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
100654    +
100655    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
100656    +
100657    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
100658    +
100659    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
100660    +
100661    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
100662    +
100663    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
100664    +
100665    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
100666    +
100667    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
100668    +
100669    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
100670    +
100671    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
100672    +
100673    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
100674    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
100675    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
100676    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
100677    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
100678    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
100679    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
100680    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
100681    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
100682    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
100683    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
100684    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
100685    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
100686    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
100687    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100688    +end;
MPRINT(EM_DIAGRAM):   end;
100689    +else do;
MPRINT(EM_DIAGRAM):   else do;
100690    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
100691    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
100692    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
100693    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
100694    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
100695    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
100696    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
100697    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
100698    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100699    +         end;
MPRINT(EM_DIAGRAM):   end;
100700    +         else do;
MPRINT(EM_DIAGRAM):   else do;
100701    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
100702    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
100703    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100704    +            end;
MPRINT(EM_DIAGRAM):   end;
100705    +         end;
MPRINT(EM_DIAGRAM):   end;
100706    +      end;
MPRINT(EM_DIAGRAM):   end;
100707    +      else do;
MPRINT(EM_DIAGRAM):   else do;
100708    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
100709    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
100710    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100711    +         end;
MPRINT(EM_DIAGRAM):   end;
100712    +      end;
MPRINT(EM_DIAGRAM):   end;
100713    +   end;
MPRINT(EM_DIAGRAM):   end;
100714    +   else do;
MPRINT(EM_DIAGRAM):   else do;
100715    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
100716    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
100717    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100718    +      end;
MPRINT(EM_DIAGRAM):   end;
100719    +      else do;
MPRINT(EM_DIAGRAM):   else do;
100720    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
100721    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
100722    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
100723    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
100724    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
100725    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
100726    +         end;
MPRINT(EM_DIAGRAM):   end;
100727    +      end;
MPRINT(EM_DIAGRAM):   end;
100728    +   end;
MPRINT(EM_DIAGRAM):   end;
100729    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
100730    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
100731    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
100732    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
100733    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
100734    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
100735    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100736    +   end;
MPRINT(EM_DIAGRAM):   end;
100737    +end;
MPRINT(EM_DIAGRAM):   end;
100738    +
100739    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100740    +*** Checking missing input Interval
100741    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
100742    +
100743    +IF NMISS(
100744    +   AcceptedCmpTotal ,
100745    +   Frq ,
100746    +   Income ,
100747    +   Mnt ,
100748    +   MntGoldProds ,
100749    +   MntMeatProducts ,
100750    +   NumCatalogPurchases ,
100751    +   NumDealsPurchases ,
100752    +   NumWebVisitsMonth ,
100753    +   RFMstat ,
100754    +   Recency ,
100755    +   Teenhome ,
100756    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
100757    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
100758    +
100759    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
100760    +END;
MPRINT(EM_DIAGRAM):   END;
100761    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100762    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
100763    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100764    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100765    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
100766    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
100767    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
100768    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
100769    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
100770    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
100771    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
100772    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
100773    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
100774    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
100775    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
100776    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
100777    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
100778    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
100779    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
100780    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
100781    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
100782    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
100783    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
100784    +END;
MPRINT(EM_DIAGRAM):   END;
100785    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100786    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
100787    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
100788    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
100789    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
100790    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
100791    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
100792    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
100793    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
100794    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
100795    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
100796    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
100797    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
100798    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
100799    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
100800    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
100801    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
100802    +   ELSE S_NumCatalogPurchases
100803    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
100804    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
100805    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
100806    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
100807    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
100808    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
100809    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
100810    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
100811    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
100812    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
100813    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
100814    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
100815    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
100816    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
100817    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
100818    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
100819    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
100820    +END;
MPRINT(EM_DIAGRAM):   END;
100821    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100822    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
100823    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100824    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100825    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
100826    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100827    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100828    +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
100829    +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
100830    +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
100831    +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
100832    +          +    -12.1201262560598 * S_NumCatalogPurchases
100833    +          +    -7.64265449386917 * S_NumDealsPurchases
100834    +          +     -0.8154661733691 * S_NumWebVisitsMonth
100835    +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
100836    +        S_Recency  +     3.79010135100643 * S_Teenhome
100837    +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 *
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 *
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 *
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 *
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency +
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
100838    +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
100839    +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
100840    +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
100841    +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
100842    +          +    -5.64377068696071 * S_NumCatalogPurchases
100843    +          +       1.315880732417 * S_NumDealsPurchases
100844    +          +    -7.12689902819995 * S_NumWebVisitsMonth
100845    +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
100846    +        S_Recency  +     2.42655161118896 * S_Teenhome
100847    +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 *
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 *
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 *
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 *
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency +
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
100848    +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
100849    +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
100850    +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
100851    +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
100852    +          +    -7.71653347900468 * S_NumCatalogPurchases
100853    +          +    -2.29382480020793 * S_NumDealsPurchases
100854    +          +    -3.92350308032578 * S_NumWebVisitsMonth
100855    +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
100856    +        S_Recency  +     1.88830044274756 * S_Teenhome
100857    +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 *
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 *
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 *
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 *
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency +
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
100858    +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
100859    +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
100860    +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
100861    +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
100862    +          +     0.50178849511862 * S_NumCatalogPurchases
100863    +          +     3.33915340676542 * S_NumDealsPurchases
100864    +          +     2.99171363234904 * S_NumWebVisitsMonth
100865    +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
100866    +        S_Recency  +     1.84778865722952 * S_Teenhome
100867    +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 *
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 *
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 *
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 *
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency +
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
100868    +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
100869    +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
100870    +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
100871    +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
100872    +          +    -5.23430097842472 * S_NumCatalogPurchases
100873    +          +    -1.25644862473488 * S_NumDealsPurchases
100874    +          +     -3.0943337340276 * S_NumWebVisitsMonth
100875    +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
100876    +        S_Recency  +     1.52557456336148 * S_Teenhome
100877    +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 *
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 *
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 *
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 *
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency +
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
100878    +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
100879    +          +     5.12496303990022 * Marital_StatusMarried
100880    +          +    -7.61364369696186 * Marital_StatusSingle
100881    +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced +
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle +
2.78937374370395 * Marital_StatusTogether ;
100882    +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
100883    +          +     7.65332274940308 * Marital_StatusMarried
100884    +          +    -5.13332947688313 * Marital_StatusSingle
100885    +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced +
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle +
8.25159601985572 * Marital_StatusTogether ;
100886    +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
100887    +          +     7.95162959069432 * Marital_StatusMarried
100888    +          +    -6.10797604390061 * Marital_StatusSingle
100889    +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced +
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle +
2.98577039618027 * Marital_StatusTogether ;
100890    +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
100891    +          +     5.45977621823616 * Marital_StatusMarried
100892    +          +    -10.3527985391218 * Marital_StatusSingle
100893    +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced +
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle +
4.66094015963389 * Marital_StatusTogether ;
100894    +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
100895    +          +     8.15909630638185 * Marital_StatusMarried
100896    +          +    -5.88497367282032 * Marital_StatusSingle
100897    +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced +
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle +
3.05474303626666 * Marital_StatusTogether ;
100898    +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
100899    +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
100900    +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
100901    +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
100902    +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
100903    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
100904    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
100905    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
100906    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
100907    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
100908    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
100909    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
100910    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
100911    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
100912    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
100913    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
100914    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
100915    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
100916    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
100917    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
100918    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
100919    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
100920    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
100921    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
100922    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
100923    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
100924    +END;
MPRINT(EM_DIAGRAM):   END;
100925    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
100926    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
100927    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
100928    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
100929    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
100930    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
100931    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
100932    +END;
MPRINT(EM_DIAGRAM):   END;
100933    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100934    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
100935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
100936    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
100937    +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
100938    +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
100939    +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
100940    +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
100941    +          +      0.8747576336553 * S_NumCatalogPurchases
100942    +          +    -0.23551985234916 * S_NumDealsPurchases
100943    +          +     0.83901499225112 * S_NumWebVisitsMonth
100944    +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
100945    +        S_Recency  +    -0.38340703993831 * S_Teenhome
100946    +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 *
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 *
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 *
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 *
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency +
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
100947    +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
100948    +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
100949    +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
100950    +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
100951    +          +    -0.99107054453387 * S_NumCatalogPurchases
100952    +          +    -0.68379823410573 * S_NumDealsPurchases
100953    +          +    -1.67939872609259 * S_NumWebVisitsMonth
100954    +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
100955    +        S_Recency  +    -1.65033346710833 * S_Teenhome
100956    +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 *
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 *
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 *
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 *
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency +
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
100957    +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
100958    +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
100959    +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
100960    +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
100961    +          +      1.4506330104932 * S_NumCatalogPurchases
100962    +          +     0.20085283861849 * S_NumDealsPurchases
100963    +          +     2.37974383924154 * S_NumWebVisitsMonth
100964    +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
100965    +        S_Recency  +     0.60726269989058 * S_Teenhome
100966    +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 *
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 *
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 *
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 *
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency +
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
100967    +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
100968    +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
100969    +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
100970    +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
100971    +          +    -0.79952426911069 * S_NumCatalogPurchases
100972    +          +    -0.70571099772216 * S_NumDealsPurchases
100973    +          +    -0.32158728049114 * S_NumWebVisitsMonth
100974    +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
100975    +        S_Recency  +     2.29389047813725 * S_Teenhome
100976    +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 *
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 *
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 *
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 *
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency +
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
100977    +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
100978    +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
100979    +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
100980    +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
100981    +          +    -0.41491605544255 * S_NumCatalogPurchases
100982    +          +     0.49374983047507 * S_NumDealsPurchases
100983    +          +    -1.38692718220359 * S_NumWebVisitsMonth
100984    +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
100985    +        S_Recency  +     1.29605991841828 * S_Teenhome
100986    +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 *
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 *
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 *
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 *
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency +
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
100987    +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
100988    +          +    -1.29227303709115 * Marital_StatusMarried
100989    +          +     0.71446782242025 * Marital_StatusSingle
100990    +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced +
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle +
0.55295867102727 * Marital_StatusTogether ;
100991    +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
100992    +          +      2.0815223604364 * Marital_StatusMarried
100993    +          +     0.79462013188709 * Marital_StatusSingle
100994    +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced +
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle +
0.20668835346022 * Marital_StatusTogether ;
100995    +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
100996    +          +     0.44769683627357 * Marital_StatusMarried
100997    +          +     1.09957357551209 * Marital_StatusSingle
100998    +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced +
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle +
0.98246644516303 * Marital_StatusTogether ;
100999    +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
101000    +          +    -0.71096069683657 * Marital_StatusMarried
101001    +          +    -0.46849808497503 * Marital_StatusSingle
101002    +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced +
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle +
-0.50186472808298 * Marital_StatusTogether ;
101003    +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
101004    +          +     0.21000014809177 * Marital_StatusMarried
101005    +          +    -1.05959388759825 * Marital_StatusSingle
101006    +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced +
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle +
-0.8202251717493 * Marital_StatusTogether ;
101007    +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
101008    +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
101009    +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
101010    +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
101011    +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
101012    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
101013    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
101014    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101015    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
101016    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
101017    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
101018    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
101019    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
101020    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
101021    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
101022    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
101023    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
101024    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
101025    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
101026    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
101027    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
101028    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
101029    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
101030    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
101031    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
101032    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
101033    +END;
MPRINT(EM_DIAGRAM):   END;
101034    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101035    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
101036    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
101037    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
101038    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
101039    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
101040    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
101041    +END;
MPRINT(EM_DIAGRAM):   END;
101042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101043    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
101044    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101045    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101046    +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
101047    +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
101048    +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 +
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 +
-7.94470945127082 * H1x1_6 ;
101049    +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
101050    +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
101051    +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 +
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 +
-1.96124154717115 * H1x1_6 ;
101052    +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
101053    +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
101054    +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 +
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 +
-5.26174801543685 * H1x1_6 ;
101055    +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
101056    +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
101057    +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 +
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 +
-1.34566786751269 * H1x1_6 ;
101058    +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
101059    +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
101060    +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 +
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 +
-4.42895004794637 * H1x1_6 ;
101061    +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
101062    +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
101063    +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
101064    +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 +
-1.70956044020454 * H1x2_6 ;
101065    +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
101066    +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
101067    +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
101068    +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 +
-0.90111756793979 * H1x2_6 ;
101069    +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
101070    +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
101071    +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
101072    +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 *
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5
+ 0.83089577154267 * H1x2_6 ;
101073    +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
101074    +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
101075    +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
101076    +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 +
-0.21291665093094 * H1x2_6 ;
101077    +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
101078    +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
101079    +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
101080    +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 +
0.28627108561279 * H1x2_6 ;
101081    +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
101082    +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
101083    +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
101084    +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
101085    +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
101086    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
101087    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
101088    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101089    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
101090    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
101091    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
101092    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
101093    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
101094    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
101095    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
101096    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
101097    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
101098    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
101099    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
101100    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
101101    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
101102    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
101103    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
101104    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
101105    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
101106    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
101107    +END;
MPRINT(EM_DIAGRAM):   END;
101108    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101109    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
101110    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
101111    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
101112    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
101113    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
101114    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
101115    +END;
MPRINT(EM_DIAGRAM):   END;
101116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101117    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
101118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101119    +
101120    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
101121    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
101122    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
101123    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
101124    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
101125    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101126    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
101127    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
101128    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
101129    +end;
MPRINT(EM_DIAGRAM):   end;
101130    +else do;
MPRINT(EM_DIAGRAM):   else do;
101131    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
101132    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
101133    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
101134    +   end;
MPRINT(EM_DIAGRAM):   end;
101135    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
101136    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
101137    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
101138    +   end;
MPRINT(EM_DIAGRAM):   end;
101139    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101140    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
101141    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
101142    +   end;
MPRINT(EM_DIAGRAM):   end;
101143    +end;
MPRINT(EM_DIAGRAM):   end;
101144    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101145    +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
101146    +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
101147    +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 +
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 +
2.70843493957574 * H2x1_6 ;
101148    +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
101149    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
101150    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
101151    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101152    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
101153    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
101154    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
101155    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
101156    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
101157    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
101158    +END;
MPRINT(EM_DIAGRAM):   END;
101159    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101160    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
101161    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
101162    +END;
MPRINT(EM_DIAGRAM):   END;
101163    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
101164    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
101165    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
101166    +END;
MPRINT(EM_DIAGRAM):   END;
101167    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
101168    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
101169    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
101170    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
101171    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
101172    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
101173    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
101174    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101175    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
101176    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101177    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
101178    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
101179    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
101180    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
101181    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
101182    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
101183    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
101184    +END;
MPRINT(EM_DIAGRAM):   END;
101185    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
101186    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
101187    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
101188    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
101189    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
101190    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101191    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
101192    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101193    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
101194    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
101195    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
101196    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
101197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101198    +* Renaming Into variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural42;
101199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101200    +length AutoNeural42_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural42_I_DepVar $32;
101201    +drop AutoNeural42_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_I_DepVar;
101202    +AutoNeural42_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural42_I_DepVar = I_DepVar;
101203    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101204    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
101205    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101206    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
101207    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
101208    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
101209    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101210    +* Ensmbl59: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 6 of 7;
101211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101213    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
101214    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
101215    +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
101216    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
101217    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
101218    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
101219    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
101220    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
101221    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
101222    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
101223    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
101224    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
101225    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
101226    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
101227    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
101228    +LENGTH _WARN_ $4
101229    +      F_DepVar  $ 12
101230    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
101231    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
101232    +
101233    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
101234    +
101235    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
101236    +
101237    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
101238    +
101239    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
101240    +
101241    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
101242    +
101243    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
101244    +
101245    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
101246    +
101247    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
101248    +
101249    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
101250    +
101251    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
101252    +
101253    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
101254    +
101255    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
101256    +
101257    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
101258    +
101259    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
101260    +
101261    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
101262    +
101263    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
101264    +
101265    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
101266    +
101267    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
101268    +
101269    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
101270    +
101271    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
101272    +
101273    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
101274    +
101275    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
101276    +
101277    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
101278    +
101279    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
101280    +
101281    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
101282    +
101283    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
101284    +
101285    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
101286    +
101287    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
101288    +
101289    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
101290    +
101291    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
101292    +
101293    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
101294    +
101295    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
101296    +
101297    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
101298    +
101299    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
101300    +
101301    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
101302    +
101303    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
101304    +
101305    +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
101306    +
101307    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
101308    +
101309    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
101310    +
101311    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
101312    +
101313    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
101314    +
101315    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
101316    +
101317    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
101318    +
101319    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
101320    +
101321    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
101322    +
101323    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
101324    +
101325    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
101326    +
101327    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
101328    +
101329    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
101330    +
101331    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
101332    +
101333    +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
101334    +
101335    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
101336    +
101337    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
101338    +
101339    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
101340    +
101341    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
101342    +
101343    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
101344    +
101345    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
101346    +
101347    +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
101348    +
101349    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
101350    +
101351    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
101352    +
101353    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
101354    +
101355    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
101356    +
101357    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
101358    +
101359    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
101360    +
101361    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
101362    +
101363    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
101364    +
101365    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
101366    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
101367    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
101368    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
101369    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
101370    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
101371    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
101372    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
101373    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
101374    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
101375    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
101376    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
101377    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
101378    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
101379    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101380    +end;
MPRINT(EM_DIAGRAM):   end;
101381    +else do;
MPRINT(EM_DIAGRAM):   else do;
101382    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
101383    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
101384    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
101385    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
101386    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
101387    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
101388    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
101389    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
101390    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101391    +         end;
MPRINT(EM_DIAGRAM):   end;
101392    +         else do;
MPRINT(EM_DIAGRAM):   else do;
101393    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
101394    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
101395    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101396    +            end;
MPRINT(EM_DIAGRAM):   end;
101397    +         end;
MPRINT(EM_DIAGRAM):   end;
101398    +      end;
MPRINT(EM_DIAGRAM):   end;
101399    +      else do;
MPRINT(EM_DIAGRAM):   else do;
101400    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
101401    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
101402    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101403    +         end;
MPRINT(EM_DIAGRAM):   end;
101404    +      end;
MPRINT(EM_DIAGRAM):   end;
101405    +   end;
MPRINT(EM_DIAGRAM):   end;
101406    +   else do;
MPRINT(EM_DIAGRAM):   else do;
101407    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
101408    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
101409    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101410    +      end;
MPRINT(EM_DIAGRAM):   end;
101411    +      else do;
MPRINT(EM_DIAGRAM):   else do;
101412    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
101413    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
101414    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
101415    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
101416    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
101417    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
101418    +         end;
MPRINT(EM_DIAGRAM):   end;
101419    +      end;
MPRINT(EM_DIAGRAM):   end;
101420    +   end;
MPRINT(EM_DIAGRAM):   end;
101421    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
101422    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
101423    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
101424    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
101425    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
101426    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
101427    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101428    +   end;
MPRINT(EM_DIAGRAM):   end;
101429    +end;
MPRINT(EM_DIAGRAM):   end;
101430    +
101431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101432    +*** Checking missing input Interval
101433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
101434    +
101435    +IF NMISS(
101436    +   AcceptedCmpTotal ,
101437    +   Frq ,
101438    +   Income ,
101439    +   Mnt ,
101440    +   MntGoldProds ,
101441    +   MntMeatProducts ,
101442    +   NumCatalogPurchases ,
101443    +   NumDealsPurchases ,
101444    +   NumWebVisitsMonth ,
101445    +   RFMstat ,
101446    +   Recency ,
101447    +   Teenhome ,
101448    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
101449    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
101450    +
101451    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
101452    +END;
MPRINT(EM_DIAGRAM):   END;
101453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101454    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
101455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101456    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101457    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
101458    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
101459    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
101460    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
101461    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
101462    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
101463    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
101464    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
101465    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
101466    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
101467    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
101468    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
101469    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
101470    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
101471    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
101472    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
101473    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
101474    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
101475    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
101476    +END;
MPRINT(EM_DIAGRAM):   END;
101477    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101478    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
101479    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
101480    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
101481    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
101482    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
101483    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
101484    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
101485    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
101486    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
101487    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
101488    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
101489    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
101490    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
101491    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
101492    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
101493    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
101494    +   ELSE S_NumCatalogPurchases
101495    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
101496    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
101497    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
101498    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
101499    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
101500    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
101501    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
101502    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
101503    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
101504    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
101505    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
101506    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
101507    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
101508    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
101509    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
101510    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
101511    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
101512    +END;
MPRINT(EM_DIAGRAM):   END;
101513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101514    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
101515    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101516    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101517    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
101518    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101519    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101520    +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
101521    +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
101522    +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
101523    +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
101524    +          +    -0.82528424139262 * S_NumCatalogPurchases
101525    +          +      0.5929046965244 * S_NumDealsPurchases
101526    +          +    -0.52362488197384 * S_NumWebVisitsMonth
101527    +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
101528    +        S_Recency  +    -0.83670225777249 * S_Teenhome
101529    +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 *
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 *
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 *
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 *
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency +
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
101530    +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
101531    +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
101532    +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
101533    +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
101534    +          +    -0.60117742307807 * S_NumCatalogPurchases
101535    +          +     1.09806082321711 * S_NumDealsPurchases
101536    +          +     1.26617704720444 * S_NumWebVisitsMonth
101537    +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
101538    +        S_Recency  +     -0.2630764341314 * S_Teenhome
101539    +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 *
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 *
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 *
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 *
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency +
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
101540    +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
101541    +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
101542    +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
101543    +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
101544    +          +     1.63075268570383 * S_NumCatalogPurchases
101545    +          +     0.62057902628545 * S_NumDealsPurchases
101546    +          +     1.85944172136218 * S_NumWebVisitsMonth
101547    +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
101548    +        S_Recency  +    -0.78663308544854 * S_Teenhome
101549    +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 *
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 *
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 *
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 *
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency +
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
101550    +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
101551    +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
101552    +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
101553    +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
101554    +          +    -2.59032878085972 * S_NumCatalogPurchases
101555    +          +    -0.44146008176644 * S_NumDealsPurchases
101556    +          +     1.16377649939583 * S_NumWebVisitsMonth
101557    +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
101558    +        S_Recency  +    -0.44721505258044 * S_Teenhome
101559    +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 *
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 *
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 *
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 *
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency +
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
101560    +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
101561    +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
101562    +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
101563    +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
101564    +          +    -2.88423926492169 * S_NumCatalogPurchases
101565    +          +     0.76448279454687 * S_NumDealsPurchases
101566    +          +     0.63782718366339 * S_NumWebVisitsMonth
101567    +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
101568    +        S_Recency  +     0.19809045233143 * S_Teenhome
101569    +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 *
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 *
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 *
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 *
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency +
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
101570    +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
101571    +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
101572    +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
101573    +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
101574    +          +     1.71243370379543 * S_NumCatalogPurchases
101575    +          +     1.59034024362028 * S_NumDealsPurchases
101576    +          +     2.43090724707282 * S_NumWebVisitsMonth
101577    +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
101578    +        S_Recency  +    -1.20398234836557 * S_Teenhome
101579    +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 *
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 *
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 *
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 *
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency +
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
101580    +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
101581    +          +     1.90782989914192 * Marital_StatusMarried
101582    +          +    -1.16189886119693 * Marital_StatusSingle
101583    +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced +
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle +
1.42717413956591 * Marital_StatusTogether ;
101584    +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
101585    +          +     0.30468777490799 * Marital_StatusMarried
101586    +          +     0.61978761938746 * Marital_StatusSingle
101587    +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced +
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle +
-0.78873321292122 * Marital_StatusTogether ;
101588    +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
101589    +          +    -1.73477859605124 * Marital_StatusMarried
101590    +          +     1.32595981126289 * Marital_StatusSingle
101591    +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced +
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle +
-1.40161784211243 * Marital_StatusTogether ;
101592    +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
101593    +          +     0.06077392213964 * Marital_StatusMarried
101594    +          +     0.21115279121703 * Marital_StatusSingle
101595    +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced +
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle +
-0.61340758151821 * Marital_StatusTogether ;
101596    +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
101597    +          +    -0.24067068377767 * Marital_StatusMarried
101598    +          +      0.2728964145401 * Marital_StatusSingle
101599    +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced +
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle +
-0.61614895252648 * Marital_StatusTogether ;
101600    +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
101601    +          +    -0.15640287278595 * Marital_StatusMarried
101602    +          +     0.54159395450762 * Marital_StatusSingle
101603    +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced +
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle +
-0.43264862434738 * Marital_StatusTogether ;
101604    +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
101605    +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
101606    +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
101607    +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
101608    +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
101609    +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
101610    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
101611    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
101612    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
101613    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101614    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
101615    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
101616    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
101617    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
101618    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
101619    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
101620    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
101621    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
101622    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
101623    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
101624    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
101625    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
101626    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
101627    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
101628    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
101629    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
101630    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
101631    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
101632    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
101633    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
101634    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
101635    +END;
MPRINT(EM_DIAGRAM):   END;
101636    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101637    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
101638    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
101639    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
101640    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
101641    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
101642    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
101643    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
101644    +END;
MPRINT(EM_DIAGRAM):   END;
101645    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101646    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
101647    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101648    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101649    +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
101650    +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
101651    +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
101652    +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
101653    +          +     0.14209124492657 * S_NumCatalogPurchases
101654    +          +    -1.31625106509803 * S_NumDealsPurchases
101655    +          +     2.35745588368331 * S_NumWebVisitsMonth
101656    +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
101657    +        S_Recency  +     1.23527100408525 * S_Teenhome
101658    +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 *
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 *
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 *
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 *
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency +
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
101659    +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
101660    +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
101661    +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
101662    +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
101663    +          +     1.18605040958794 * S_NumCatalogPurchases
101664    +          +    -0.89798157472835 * S_NumDealsPurchases
101665    +          +    -0.09236646871049 * S_NumWebVisitsMonth
101666    +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
101667    +        S_Recency  +    -0.50770218335102 * S_Teenhome
101668    +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 *
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 *
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 *
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 *
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency +
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
101669    +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
101670    +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
101671    +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
101672    +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
101673    +          +    -1.53424308314822 * S_NumCatalogPurchases
101674    +          +    -0.80590323269981 * S_NumDealsPurchases
101675    +          +    -1.40104490662303 * S_NumWebVisitsMonth
101676    +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
101677    +        S_Recency  +     0.96086280467056 * S_Teenhome
101678    +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 *
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 *
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 *
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 *
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency +
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
101679    +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
101680    +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
101681    +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
101682    +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
101683    +          +    -1.25862219948587 * S_NumCatalogPurchases
101684    +          +     1.95015982914109 * S_NumDealsPurchases
101685    +          +     0.64320281589594 * S_NumWebVisitsMonth
101686    +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
101687    +        S_Recency  +    -0.00184949563812 * S_Teenhome
101688    +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases +
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth +
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome +
-0.90548552271817 * S_Year_Birth ;
101689    +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
101690    +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
101691    +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
101692    +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
101693    +          +     0.30573893169917 * S_NumCatalogPurchases
101694    +          +     0.93169788380491 * S_NumDealsPurchases
101695    +          +     0.04516037232248 * S_NumWebVisitsMonth
101696    +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
101697    +        S_Recency  +      0.1429120113072 * S_Teenhome
101698    +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases +
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth +
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome +
0.57728849891114 * S_Year_Birth ;
101699    +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
101700    +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
101701    +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
101702    +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
101703    +          +      0.2704422632168 * S_NumCatalogPurchases
101704    +          +      2.3389342094366 * S_NumDealsPurchases
101705    +          +     0.01076302858809 * S_NumWebVisitsMonth
101706    +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
101707    +        S_Recency  +     0.68455094392125 * S_Teenhome
101708    +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 *
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 *
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 *
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 *
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency +
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
101709    +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
101710    +          +      0.8255833782513 * Marital_StatusMarried
101711    +          +    -0.48959165020896 * Marital_StatusSingle
101712    +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced +
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle +
2.83781371812098 * Marital_StatusTogether ;
101713    +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
101714    +          +    -0.36405013930464 * Marital_StatusMarried
101715    +          +    -0.11895921007246 * Marital_StatusSingle
101716    +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced +
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle +
-0.94713834966834 * Marital_StatusTogether ;
101717    +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
101718    +          +    -1.38902793752658 * Marital_StatusMarried
101719    +          +     0.47104623132568 * Marital_StatusSingle
101720    +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced +
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle +
-0.55354712799424 * Marital_StatusTogether ;
101721    +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
101722    +          +     0.03793816986941 * Marital_StatusMarried
101723    +          +     0.32286910605532 * Marital_StatusSingle
101724    +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced +
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle +
-1.44817209305758 * Marital_StatusTogether ;
101725    +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
101726    +          +    -0.60013237897988 * Marital_StatusMarried
101727    +          +    -1.54090744803073 * Marital_StatusSingle
101728    +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced +
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle +
-2.24346446510302 * Marital_StatusTogether ;
101729    +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
101730    +          +     2.39490119482132 * Marital_StatusMarried
101731    +          +     0.73080073298893 * Marital_StatusSingle
101732    +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced +
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle +
-0.62296432915598 * Marital_StatusTogether ;
101733    +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
101734    +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
101735    +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
101736    +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
101737    +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
101738    +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
101739    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
101740    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
101741    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
101742    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101743    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
101744    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
101745    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
101746    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
101747    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
101748    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
101749    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
101750    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
101751    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
101752    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
101753    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
101754    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
101755    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
101756    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
101757    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
101758    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
101759    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
101760    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
101761    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
101762    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
101763    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
101764    +END;
MPRINT(EM_DIAGRAM):   END;
101765    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101766    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
101767    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
101768    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
101769    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
101770    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
101771    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
101772    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
101773    +END;
MPRINT(EM_DIAGRAM):   END;
101774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101775    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
101776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101777    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101778    +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
101779    +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
101780    +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
101781    +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
101782    +          +     2.25334156596167 * S_NumCatalogPurchases
101783    +          +     1.11206221926547 * S_NumDealsPurchases
101784    +          +    -0.86546062057987 * S_NumWebVisitsMonth
101785    +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
101786    +        S_Recency  +    -1.57916593034924 * S_Teenhome
101787    +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 *
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 *
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 *
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 *
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency +
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
101788    +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
101789    +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
101790    +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
101791    +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
101792    +          +    -0.72830662589886 * S_NumCatalogPurchases
101793    +          +    -1.43194640925705 * S_NumDealsPurchases
101794    +          +     0.27875145672985 * S_NumWebVisitsMonth
101795    +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
101796    +        S_Recency  +    -1.01056905981073 * S_Teenhome
101797    +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 *
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 *
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 *
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 *
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency +
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
101798    +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
101799    +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
101800    +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
101801    +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
101802    +          +    -0.29577972728188 * S_NumCatalogPurchases
101803    +          +    -0.09204036503823 * S_NumDealsPurchases
101804    +          +     1.09127760712522 * S_NumWebVisitsMonth
101805    +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
101806    +        S_Recency  +    -1.61269837976842 * S_Teenhome
101807    +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 *
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 *
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 *
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 *
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency +
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
101808    +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
101809    +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
101810    +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
101811    +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
101812    +          +     0.74771164805463 * S_NumCatalogPurchases
101813    +          +     1.48674373289951 * S_NumDealsPurchases
101814    +          +    -0.43724934700095 * S_NumWebVisitsMonth
101815    +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
101816    +        S_Recency  +      1.5969237416548 * S_Teenhome
101817    +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases +
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth +
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome +
-0.1539761100948 * S_Year_Birth ;
101818    +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
101819    +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
101820    +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
101821    +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
101822    +          +     0.32607897654777 * S_NumCatalogPurchases
101823    +          +    -0.05989936582211 * S_NumDealsPurchases
101824    +          +     -0.8863628882594 * S_NumWebVisitsMonth
101825    +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
101826    +        S_Recency  +      1.1633098880037 * S_Teenhome
101827    +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 *
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 *
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 *
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 *
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency +
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
101828    +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
101829    +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
101830    +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
101831    +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
101832    +          +    -0.32855091358254 * S_NumCatalogPurchases
101833    +          +    -0.04262624947945 * S_NumDealsPurchases
101834    +          +     0.34844893542429 * S_NumWebVisitsMonth
101835    +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
101836    +        S_Recency  +     0.25374922499465 * S_Teenhome
101837    +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 *
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 *
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 *
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 *
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency +
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
101838    +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
101839    +          +    -1.19357131519861 * Marital_StatusMarried
101840    +          +     1.01104838285626 * Marital_StatusSingle
101841    +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced +
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle +
-1.80955917142309 * Marital_StatusTogether ;
101842    +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
101843    +          +     0.41518199668826 * Marital_StatusMarried
101844    +          +     1.03267293059069 * Marital_StatusSingle
101845    +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced +
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle +
-0.66743874470855 * Marital_StatusTogether ;
101846    +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
101847    +          +     0.56306179671807 * Marital_StatusMarried
101848    +          +    -1.20896369649342 * Marital_StatusSingle
101849    +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced +
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle +
0.2381860290523 * Marital_StatusTogether ;
101850    +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
101851    +          +    -2.56951757071166 * Marital_StatusMarried
101852    +          +     0.89024254219017 * Marital_StatusSingle
101853    +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced +
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle +
-1.38303524163943 * Marital_StatusTogether ;
101854    +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
101855    +          +    -0.82560993254767 * Marital_StatusMarried
101856    +          +     0.67892086377875 * Marital_StatusSingle
101857    +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced +
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle +
-0.99872502550085 * Marital_StatusTogether ;
101858    +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
101859    +          +     1.62783448403167 * Marital_StatusMarried
101860    +          +     0.73020544049082 * Marital_StatusSingle
101861    +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced +
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle +
-0.22473120319236 * Marital_StatusTogether ;
101862    +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
101863    +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
101864    +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
101865    +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
101866    +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
101867    +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
101868    +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
101869    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
101870    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
101871    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
101872    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
101873    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
101874    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
101875    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
101876    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
101877    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
101878    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
101879    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
101880    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
101881    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
101882    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
101883    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
101884    +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
101885    +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
101886    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
101887    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
101888    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
101889    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
101890    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
101891    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
101892    +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
101893    +END;
MPRINT(EM_DIAGRAM):   END;
101894    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
101895    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
101896    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
101897    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
101898    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
101899    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
101900    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
101901    +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
101902    +END;
MPRINT(EM_DIAGRAM):   END;
101903    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101904    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
101905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
101906    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
101907    +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
101908    +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
101909    +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
101910    +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 +
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 +
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
101911    +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
101912    +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
101913    +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
101914    +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 +
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 +
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
101915    +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
101916    +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
101917    +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
101918    +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 +
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 +
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
101919    +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
101920    +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
101921    +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
101922    +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 +
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 +
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
101923    +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
101924    +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
101925    +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
101926    +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 +
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 +
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
101927    +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
101928    +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
101929    +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
101930    +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 +
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 +
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
101931    +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
101932    +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
101933    +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
101934    +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 +
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 +
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
101935    +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
101936    +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
101937    +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
101938    +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 +
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
101939    +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
101940    +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
101941    +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
101942    +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 +
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
101943    +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
101944    +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
101945    +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
101946    +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 +
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
101947    +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
101948    +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
101949    +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
101950    +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 +
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
101951    +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
101952    +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
101953    +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
101954    +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 *
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 +
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
101955    +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
101956    +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
101957    +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
101958    +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 *
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 +
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
101959    +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
101960    +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
101961    +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
101962    +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 +
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
101963    +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
101964    +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
101965    +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
101966    +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 +
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
101967    +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
101968    +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
101969    +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
101970    +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 *
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 +
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
101971    +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
101972    +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
101973    +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
101974    +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 *
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 +
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
101975    +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
101976    +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
101977    +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
101978    +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 +
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
101979    +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
101980    +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
101981    +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
101982    +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 +
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
101983    +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
101984    +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
101985    +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
101986    +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 *
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 +
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
101987    +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
101988    +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
101989    +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
101990    +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 +
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
101991    +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
101992    +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
101993    +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
101994    +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
101995    +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
101996    +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
101997    +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
101998    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
101999    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
102000    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
102001    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
102002    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
102003    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
102004    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
102005    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
102006    +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
102007    +END;
MPRINT(EM_DIAGRAM):   END;
102008    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102009    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
102010    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
102011    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
102012    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
102013    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
102014    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
102015    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
102016    +END;
MPRINT(EM_DIAGRAM):   END;
102017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102018    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
102019    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102020    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102021    +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
102022    +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
102023    +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
102024    +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 +
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 +
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
102025    +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
102026    +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
102027    +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
102028    +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 +
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 +
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
102029    +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
102030    +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
102031    +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
102032    +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 +
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 +
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
102033    +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
102034    +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
102035    +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
102036    +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 +
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 +
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
102037    +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
102038    +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
102039    +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
102040    +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 +
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 +
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
102041    +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
102042    +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
102043    +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
102044    +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 +
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 +
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
102045    +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
102046    +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
102047    +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
102048    +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 +
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 +
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
102049    +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
102050    +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
102051    +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
102052    +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 *
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 +
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
102053    +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
102054    +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
102055    +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
102056    +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 +
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 +
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
102057    +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
102058    +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
102059    +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
102060    +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 +
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
102061    +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
102062    +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
102063    +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
102064    +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 +
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
102065    +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
102066    +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
102067    +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
102068    +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 *
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 +
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
102069    +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
102070    +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
102071    +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
102072    +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 +
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
102073    +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
102074    +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
102075    +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
102076    +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 *
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 +
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
102077    +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
102078    +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
102079    +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
102080    +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 *
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 +
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
102081    +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
102082    +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
102083    +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
102084    +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 +
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
102085    +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
102086    +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
102087    +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
102088    +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 +
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
102089    +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
102090    +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
102091    +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
102092    +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 +
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
102093    +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
102094    +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
102095    +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
102096    +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 *
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 +
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
102097    +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
102098    +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
102099    +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
102100    +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 +
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
102101    +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
102102    +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
102103    +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
102104    +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 *
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 +
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
102105    +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
102106    +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
102107    +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
102108    +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
102109    +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
102110    +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
102111    +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
102112    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
102113    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
102114    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
102115    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
102116    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
102117    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
102118    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
102119    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
102120    +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
102121    +END;
MPRINT(EM_DIAGRAM):   END;
102122    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102123    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
102124    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
102125    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
102126    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
102127    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
102128    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
102129    +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
102130    +END;
MPRINT(EM_DIAGRAM):   END;
102131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102132    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
102133    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102134    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102135    +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
102136    +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
102137    +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
102138    +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 +
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 +
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
102139    +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
102140    +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
102141    +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
102142    +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 +
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 +
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
102143    +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
102144    +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
102145    +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
102146    +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 +
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 +
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
102147    +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
102148    +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
102149    +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
102150    +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 +
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 +
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
102151    +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
102152    +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
102153    +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
102154    +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 +
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 +
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
102155    +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
102156    +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
102157    +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
102158    +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 +
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 +
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
102159    +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
102160    +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
102161    +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
102162    +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 +
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
102163    +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
102164    +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
102165    +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
102166    +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 +
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
102167    +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
102168    +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
102169    +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
102170    +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 +
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
102171    +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
102172    +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
102173    +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
102174    +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 +
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
102175    +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
102176    +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
102177    +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
102178    +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 *
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 +
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
102179    +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
102180    +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
102181    +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
102182    +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 *
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 +
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
102183    +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
102184    +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
102185    +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
102186    +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
102187    +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
102188    +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
102189    +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
102190    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
102191    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 ,
H3x1_7 );
102192    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
102193    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
102194    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
102195    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
102196    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
102197    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
102198    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
102199    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
102200    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
102201    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
102202    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
102203    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
102204    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
102205    +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
102206    +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
102207    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
102208    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
102209    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
102210    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
102211    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
102212    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
102213    +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
102214    +END;
MPRINT(EM_DIAGRAM):   END;
102215    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102216    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
102217    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
102218    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
102219    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
102220    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
102221    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
102222    +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
102223    +END;
MPRINT(EM_DIAGRAM):   END;
102224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102225    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
102226    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102227    +
102228    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
102229    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
102230    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
102231    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
102232    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
102233    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102234    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
102235    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
102236    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
102237    +end;
MPRINT(EM_DIAGRAM):   end;
102238    +else do;
MPRINT(EM_DIAGRAM):   else do;
102239    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
102240    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
102241    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
102242    +   end;
MPRINT(EM_DIAGRAM):   end;
102243    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
102244    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
102245    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
102246    +   end;
MPRINT(EM_DIAGRAM):   end;
102247    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102248    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
102249    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
102250    +   end;
MPRINT(EM_DIAGRAM):   end;
102251    +end;
MPRINT(EM_DIAGRAM):   end;
102252    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102253    +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
102254    +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
102255    +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
102256    +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 +
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 +
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
102257    +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
102258    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
102259    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
102260    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
102261    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
102262    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
102263    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
102264    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
102265    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
102266    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
102267    +END;
MPRINT(EM_DIAGRAM):   END;
102268    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102269    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
102270    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
102271    +END;
MPRINT(EM_DIAGRAM):   END;
102272    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
102273    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
102274    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
102275    +END;
MPRINT(EM_DIAGRAM):   END;
102276    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
102277    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
102278    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
102279    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
102280    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
102281    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
102282    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
102283    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102284    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
102285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102286    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
102287    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
102288    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
102289    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
102290    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
102291    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
102292    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
102293    +END;
MPRINT(EM_DIAGRAM):   END;
102294    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
102295    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
102296    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
102297    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
102298    +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
102299    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102300    +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
102301    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102302    +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
102303    +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
102304    +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
102305    +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
102306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102307    +* Renaming Into variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural43;
102308    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102309    +length AutoNeural43_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural43_I_DepVar $32;
102310    +drop AutoNeural43_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_I_DepVar;
102311    +AutoNeural43_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural43_I_DepVar = I_DepVar;
102312    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102313    +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
102314    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102315    +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
102316    +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
102317    +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
102318    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102319    +* Ensmbl59: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 7 of 7;
102320    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102321    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102322    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
102323    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
102324    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
102325    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102326    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
102327    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
102328    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
102329    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
102330    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
102331    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
102332    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
102333    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
102334    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
102335    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
102336    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
102337    +LENGTH _WARN_ $4
102338    +      F_DepVar  $ 12
102339    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
102340    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
102341    +
102342    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
102343    +
102344    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
102345    +
102346    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
102347    +
102348    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
102349    +
102350    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
102351    +
102352    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
102353    +
102354    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
102355    +
102356    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
102357    +
102358    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
102359    +
102360    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
102361    +
102362    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
102363    +
102364    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
102365    +
102366    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
102367    +
102368    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
102369    +
102370    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
102371    +
102372    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
102373    +
102374    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
102375    +
102376    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
102377    +
102378    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
102379    +
102380    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
102381    +
102382    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
102383    +
102384    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
102385    +
102386    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
102387    +
102388    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
102389    +
102390    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
102391    +
102392    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
102393    +
102394    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
102395    +
102396    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
102397    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
102398    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
102399    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
102400    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
102401    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
102402    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
102403    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
102404    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
102405    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
102406    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
102407    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
102408    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
102409    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
102410    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102411    +end;
MPRINT(EM_DIAGRAM):   end;
102412    +else do;
MPRINT(EM_DIAGRAM):   else do;
102413    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
102414    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
102415    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102416    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
102417    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
102418    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
102419    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
102420    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
102421    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102422    +         end;
MPRINT(EM_DIAGRAM):   end;
102423    +         else do;
MPRINT(EM_DIAGRAM):   else do;
102424    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
102425    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
102426    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102427    +            end;
MPRINT(EM_DIAGRAM):   end;
102428    +         end;
MPRINT(EM_DIAGRAM):   end;
102429    +      end;
MPRINT(EM_DIAGRAM):   end;
102430    +      else do;
MPRINT(EM_DIAGRAM):   else do;
102431    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
102432    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
102433    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102434    +         end;
MPRINT(EM_DIAGRAM):   end;
102435    +      end;
MPRINT(EM_DIAGRAM):   end;
102436    +   end;
MPRINT(EM_DIAGRAM):   end;
102437    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102438    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
102439    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
102440    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102441    +      end;
MPRINT(EM_DIAGRAM):   end;
102442    +      else do;
MPRINT(EM_DIAGRAM):   else do;
102443    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
102444    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
102445    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
102446    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
102447    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
102448    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
102449    +         end;
MPRINT(EM_DIAGRAM):   end;
102450    +      end;
MPRINT(EM_DIAGRAM):   end;
102451    +   end;
MPRINT(EM_DIAGRAM):   end;
102452    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
102453    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
102454    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
102455    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
102456    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
102457    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
102458    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102459    +   end;
MPRINT(EM_DIAGRAM):   end;
102460    +end;
MPRINT(EM_DIAGRAM):   end;
102461    +
102462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102463    +*** Checking missing input Interval
102464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
102465    +
102466    +IF NMISS(
102467    +   AcceptedCmpTotal ,
102468    +   Frq ,
102469    +   Income ,
102470    +   Mnt ,
102471    +   MntGoldProds ,
102472    +   MntMeatProducts ,
102473    +   NumCatalogPurchases ,
102474    +   NumDealsPurchases ,
102475    +   NumWebVisitsMonth ,
102476    +   RFMstat ,
102477    +   Recency ,
102478    +   Teenhome ,
102479    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
102480    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
102481    +
102482    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
102483    +END;
MPRINT(EM_DIAGRAM):   END;
102484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102485    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
102486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102487    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102488    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
102489    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
102490    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
102491    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
102492    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
102493    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
102494    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
102495    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
102496    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
102497    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
102498    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
102499    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
102500    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
102501    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
102502    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
102503    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
102504    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
102505    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
102506    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
102507    +END;
MPRINT(EM_DIAGRAM):   END;
102508    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102509    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
102510    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
102511    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
102512    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
102513    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
102514    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
102515    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
102516    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
102517    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
102518    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
102519    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
102520    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
102521    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
102522    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
102523    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
102524    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
102525    +   ELSE S_NumCatalogPurchases
102526    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
102527    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
102528    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
102529    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
102530    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
102531    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
102532    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
102533    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
102534    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
102535    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
102536    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
102537    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
102538    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
102539    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
102540    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
102541    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
102542    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
102543    +END;
MPRINT(EM_DIAGRAM):   END;
102544    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102545    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
102546    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102548    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
102549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102550    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102551    +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
102552    +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
102553    +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
102554    +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
102555    +          +    -0.01423451356563 * S_NumCatalogPurchases
102556    +          +     0.06006350655487 * S_NumDealsPurchases
102557    +          +    -0.20885493964335 * S_NumWebVisitsMonth
102558    +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
102559    +        S_Recency  +    -0.03326479668652 * S_Teenhome
102560    +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 *
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 *
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 *
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 *
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency +
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
102561    +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
102562    +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
102563    +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
102564    +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
102565    +          +    -0.03109266966794 * S_NumCatalogPurchases
102566    +          +     0.05524435494328 * S_NumDealsPurchases
102567    +          +     -0.0105802056898 * S_NumWebVisitsMonth
102568    +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
102569    +        S_Recency  +       0.195010707702 * S_Teenhome
102570    +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 *
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 *
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 *
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 *
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency +
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
102571    +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
102572    +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
102573    +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
102574    +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
102575    +          +     0.07777995109144 * S_NumCatalogPurchases
102576    +          +     0.08683394019767 * S_NumDealsPurchases
102577    +          +     0.27328366433987 * S_NumWebVisitsMonth
102578    +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
102579    +        S_Recency  +      0.0640153287908 * S_Teenhome
102580    +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 *
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 *
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 *
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 *
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency +
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
102581    +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
102582    +          +    -0.02695167777393 * Marital_StatusMarried
102583    +          +    -0.00733864032764 * Marital_StatusSingle
102584    +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced +
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle +
0.03838747494293 * Marital_StatusTogether ;
102585    +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
102586    +          +     0.42249671001117 * Marital_StatusMarried
102587    +          +    -0.18515416581955 * Marital_StatusSingle
102588    +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced +
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle +
0.25783473520826 * Marital_StatusTogether ;
102589    +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
102590    +          +     0.45127582934777 * Marital_StatusMarried
102591    +          +       0.358157766485 * Marital_StatusSingle
102592    +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced +
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle +
0.42627185625497 * Marital_StatusTogether ;
102593    +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
102594    +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
102595    +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
102596    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
102597    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
102598    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
102599    +END;
MPRINT(EM_DIAGRAM):   END;
102600    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102601    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
102602    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
102603    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
102604    +END;
MPRINT(EM_DIAGRAM):   END;
102605    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102606    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
102607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102608    +
102609    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
102610    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
102611    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
102612    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
102613    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
102614    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
102615    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
102616    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
102617    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
102618    +end;
MPRINT(EM_DIAGRAM):   end;
102619    +else do;
MPRINT(EM_DIAGRAM):   else do;
102620    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
102621    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
102622    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
102623    +   end;
MPRINT(EM_DIAGRAM):   end;
102624    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
102625    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
102626    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
102627    +   end;
MPRINT(EM_DIAGRAM):   end;
102628    +   else do;
MPRINT(EM_DIAGRAM):   else do;
102629    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
102630    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
102631    +   end;
MPRINT(EM_DIAGRAM):   end;
102632    +end;
MPRINT(EM_DIAGRAM):   end;
102633    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
102634    +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
102635    +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 +
-71.6251597703755 * H1x1_3 ;
102636    +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
102637    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
102638    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
102639    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
102640    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
102641    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
102642    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
102643    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
102644    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
102645    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
102646    +END;
MPRINT(EM_DIAGRAM):   END;
102647    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
102648    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
102649    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
102650    +END;
MPRINT(EM_DIAGRAM):   END;
102651    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
102652    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
102653    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
102654    +END;
MPRINT(EM_DIAGRAM):   END;
102655    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
102656    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
102657    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
102658    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
102659    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
102660    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
102661    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
102662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102663    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
102664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
102665    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
102666    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
102667    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
102668    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
102669    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
102670    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
102671    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
102672    +END;
MPRINT(EM_DIAGRAM):   END;
102673    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
102674    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
102675    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
102676    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
102677    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
102678    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102679    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
102680    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102681    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
102682    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
102683    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
102684    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
102685    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102686    +* Renaming Into variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural46;
102687    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102688    +length AutoNeural46_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural46_I_DepVar $32;
102689    +drop AutoNeural46_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_I_DepVar;
102690    +AutoNeural46_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural46_I_DepVar = I_DepVar;
102691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102692    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
102693    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102694    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
102695    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
102696    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
102697    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102698    +* Ensmbl59: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Voting to produce predicted target;
102699    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102700    +array Ensmbl59_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl59_post{2} _temporary_;
102701    +array Ensmbl59_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl59_count{2} _temporary_;
102702    +array Ensmbl59_level{2} $32 _temporary_ (
102703    +"1"
102704    +"0"
102705    +);
MPRINT(EM_DIAGRAM):   array Ensmbl59_level{2} $32 _temporary_ ( "1" "0" );
102706    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
102707    +Ensmbl59_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{i} = 0;
102708    +Ensmbl59_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{i} = 0;
102709    +end;
MPRINT(EM_DIAGRAM):   end;
102710    +if AutoNeural44_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural44_I_DepVar = Ensmbl59_level{1} then do;
102711    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
102712    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural44_P_DepVar1;
102713    +end;
MPRINT(EM_DIAGRAM):   end;
102714    +if AutoNeural45_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural45_I_DepVar = Ensmbl59_level{1} then do;
102715    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
102716    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural45_P_DepVar1;
102717    +end;
MPRINT(EM_DIAGRAM):   end;
102718    +if AutoNeural47_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural47_I_DepVar = Ensmbl59_level{1} then do;
102719    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
102720    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural47_P_DepVar1;
102721    +end;
MPRINT(EM_DIAGRAM):   end;
102722    +if AutoNeural41_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural41_I_DepVar = Ensmbl59_level{1} then do;
102723    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
102724    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural41_P_DepVar1;
102725    +end;
MPRINT(EM_DIAGRAM):   end;
102726    +if AutoNeural42_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural42_I_DepVar = Ensmbl59_level{1} then do;
102727    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
102728    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural42_P_DepVar1;
102729    +end;
MPRINT(EM_DIAGRAM):   end;
102730    +if AutoNeural43_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural43_I_DepVar = Ensmbl59_level{1} then do;
102731    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
102732    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural43_P_DepVar1;
102733    +end;
MPRINT(EM_DIAGRAM):   end;
102734    +if AutoNeural46_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural46_I_DepVar = Ensmbl59_level{1} then do;
102735    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
102736    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural46_P_DepVar1;
102737    +end;
MPRINT(EM_DIAGRAM):   end;
102738    +if AutoNeural44_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural44_I_DepVar = Ensmbl59_level{2} then do;
102739    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
102740    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural44_P_DepVar0;
102741    +end;
MPRINT(EM_DIAGRAM):   end;
102742    +if AutoNeural45_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural45_I_DepVar = Ensmbl59_level{2} then do;
102743    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
102744    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural45_P_DepVar0;
102745    +end;
MPRINT(EM_DIAGRAM):   end;
102746    +if AutoNeural47_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural47_I_DepVar = Ensmbl59_level{2} then do;
102747    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
102748    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural47_P_DepVar0;
102749    +end;
MPRINT(EM_DIAGRAM):   end;
102750    +if AutoNeural41_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural41_I_DepVar = Ensmbl59_level{2} then do;
102751    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
102752    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural41_P_DepVar0;
102753    +end;
MPRINT(EM_DIAGRAM):   end;
102754    +if AutoNeural42_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural42_I_DepVar = Ensmbl59_level{2} then do;
102755    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
102756    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural42_P_DepVar0;
102757    +end;
MPRINT(EM_DIAGRAM):   end;
102758    +if AutoNeural43_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural43_I_DepVar = Ensmbl59_level{2} then do;
102759    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
102760    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural43_P_DepVar0;
102761    +end;
MPRINT(EM_DIAGRAM):   end;
102762    +if AutoNeural46_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural46_I_DepVar = Ensmbl59_level{2} then do;
102763    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
102764    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural46_P_DepVar0;
102765    +end;
MPRINT(EM_DIAGRAM):   end;
102766    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102767    +* Ensmbl59: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Determine Into Variable;
102768    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102769    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
102770    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
102771    +vote_count = max(
102772    +Ensmbl59_count{1} ,
102773    +Ensmbl59_count{2}
102774    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl59_count{1} , Ensmbl59_count{2} );
102775    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
102776    +if Ensmbl59_count{i}=vote_count and Ensmbl59_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl59_count{i}=vote_count and Ensmbl59_post{i}>vote_post then do;
102777    +I_DepVar = Ensmbl59_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl59_level{i};
102778    +vote_post = Ensmbl59_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl59_count{i};
102779    +end;
MPRINT(EM_DIAGRAM):   end;
102780    +end;
MPRINT(EM_DIAGRAM):   end;
102781    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102782    +* Ensmbl59: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Compute posterior vars using models predicting the chosen
level;
102783    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102784    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
102785    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
102786    +if I_DepVar = AutoNeural44_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural44_I_DepVar then do;
102787    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural44_P_DepVar1;
102788    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural44_P_DepVar0;
102789    +end;
MPRINT(EM_DIAGRAM):   end;
102790    +if I_DepVar = AutoNeural45_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural45_I_DepVar then do;
102791    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural45_P_DepVar1;
102792    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural45_P_DepVar0;
102793    +end;
MPRINT(EM_DIAGRAM):   end;
102794    +if I_DepVar = AutoNeural47_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural47_I_DepVar then do;
102795    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural47_P_DepVar1;
102796    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural47_P_DepVar0;
102797    +end;
MPRINT(EM_DIAGRAM):   end;
102798    +if I_DepVar = AutoNeural41_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural41_I_DepVar then do;
102799    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural41_P_DepVar1;
102800    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural41_P_DepVar0;
102801    +end;
MPRINT(EM_DIAGRAM):   end;
102802    +if I_DepVar = AutoNeural42_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural42_I_DepVar then do;
102803    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural42_P_DepVar1;
102804    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural42_P_DepVar0;
102805    +end;
MPRINT(EM_DIAGRAM):   end;
102806    +if I_DepVar = AutoNeural43_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural43_I_DepVar then do;
102807    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural43_P_DepVar1;
102808    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural43_P_DepVar0;
102809    +end;
MPRINT(EM_DIAGRAM):   end;
102810    +if I_DepVar = AutoNeural46_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural46_I_DepVar then do;
102811    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural46_P_DepVar1;
102812    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural46_P_DepVar0;
102813    +end;
MPRINT(EM_DIAGRAM):   end;
102814    +* Ensmbl59: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Averaging posterior;
102815    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
102816    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
102817    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102818    +* Ensmbl59: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Producing Unformatted variable;
102819    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102820    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
102821    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
102822    +else
102823    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
102824    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102825    +* Ensmbl59: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing _WARN_ Variable;
102826    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102827    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
102828    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
102829    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
102830    +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
102830   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
102831    +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
102831   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
102832    +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
102832   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
102833    +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
102833   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
102834    +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
102834   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
102835    +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
102835   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
102836    +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
102836   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
102837    +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
102837   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
102838    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
102838   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
102839    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
102839   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
102840    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
102840   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
102841    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
102841   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
102842    +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
102842   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
102843    +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
102843   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
102844    +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
102844   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
102845    +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
102845   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
102846    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
102846   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
102847    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
102847   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
102848    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
102848   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
102849    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
102849   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
102850    +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
102850   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
102851    +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
102851   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
102852    +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
102852   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
102853    +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
102853   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
102854    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
102854   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
102855    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
102855   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
102856    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
102856   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
102857    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
102857   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
102858    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102859    +* Ensmbl59: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing Residual Vars;
102860    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102861    +if
102862    +F_DepVar NE '1'
102863    +AND F_DepVar NE '0'
102864    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
102865    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
102866    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
102867    +end;
MPRINT(EM_DIAGRAM):   end;
102868    +else do;
MPRINT(EM_DIAGRAM):   else do;
102869    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
102870    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
102871    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
102872    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
102873    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
102874    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
102875    +END;
MPRINT(EM_DIAGRAM):   END;
102876    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
102877     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL59_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL44_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
102878     quit;
102879     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
102880     filename emflow
102880   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring AUTONEURAL44_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102881     *------------------------------------------------------------*;
102882     * Ensmbl59: Scoring AUTONEURAL44_VALIDATE data;
102883     *------------------------------------------------------------*;
102884     data EMWS8.Ensmbl59_VALIDATE
102885     / view=EMWS8.Ensmbl59_VALIDATE
102886     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_VALIDATE / view=EMWS8.Ensmbl59_VALIDATE ;
102887     set EMWS8.AutoNeural44_VALIDATE
102888     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_VALIDATE ;
102889     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas.
102890    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102891    +* Ensmbl59: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Combine model for DepVar;
102892    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102893    +* Ensmbl59: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 1 of 7;
102894    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102895    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102896    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
102897    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
102898    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
102899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102900    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102901    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
102902    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
102903    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
102904    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102905    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102906    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
102907    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
102908    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
102909    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102910    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102911    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
102912    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
102913    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
102914    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102915    +
102916    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
102917    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
102917   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
102918    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
102919    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
102920    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
102921    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
102922    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
102923    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102924    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
102925    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
102926    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
102927    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102928    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102929    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
102930    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102931    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
102932    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
102933    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
102934    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102935    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
102936    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
102937    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
102938    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102939    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102940    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
102941    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
102942    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
102943    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102944    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102945    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
102946    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
102947    +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
102948    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
102949    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
102950    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
102951    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
102952    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
102953    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
102954    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
102955    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
102956    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
102957    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
102958    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
102959    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
102960    +LENGTH _WARN_ $4
102961    +      F_DepVar  $ 12
102962    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
102963    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
102964    +
102965    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
102966    +
102967    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
102968    +
102969    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
102970    +
102971    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
102972    +
102973    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
102974    +
102975    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
102976    +
102977    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
102978    +
102979    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
102980    +
102981    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
102982    +
102983    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
102984    +
102985    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
102986    +
102987    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
102988    +
102989    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
102990    +
102991    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
102992    +
102993    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
102994    +
102995    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
102996    +
102997    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
102998    +
102999    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
103000    +
103001    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
103002    +
103003    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
103004    +
103005    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
103006    +
103007    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
103008    +
103009    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
103010    +
103011    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
103012    +
103013    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
103014    +
103015    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
103016    +
103017    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
103018    +
103019    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
103020    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
103021    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
103022    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
103023    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
103024    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
103025    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
103026    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
103027    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
103028    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103029    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103030    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103031    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103032    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103033    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103034    +end;
MPRINT(EM_DIAGRAM):   end;
103035    +else do;
MPRINT(EM_DIAGRAM):   else do;
103036    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
103037    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
103038    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103039    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
103040    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
103041    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
103042    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
103043    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
103044    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103045    +         end;
MPRINT(EM_DIAGRAM):   end;
103046    +         else do;
MPRINT(EM_DIAGRAM):   else do;
103047    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
103048    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
103049    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103050    +            end;
MPRINT(EM_DIAGRAM):   end;
103051    +         end;
MPRINT(EM_DIAGRAM):   end;
103052    +      end;
MPRINT(EM_DIAGRAM):   end;
103053    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103054    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
103055    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
103056    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103057    +         end;
MPRINT(EM_DIAGRAM):   end;
103058    +      end;
MPRINT(EM_DIAGRAM):   end;
103059    +   end;
MPRINT(EM_DIAGRAM):   end;
103060    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103061    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
103062    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
103063    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103064    +      end;
MPRINT(EM_DIAGRAM):   end;
103065    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103066    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
103067    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
103068    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
103069    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
103070    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
103071    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103072    +         end;
MPRINT(EM_DIAGRAM):   end;
103073    +      end;
MPRINT(EM_DIAGRAM):   end;
103074    +   end;
MPRINT(EM_DIAGRAM):   end;
103075    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
103076    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103077    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103078    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103079    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103080    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103081    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103082    +   end;
MPRINT(EM_DIAGRAM):   end;
103083    +end;
MPRINT(EM_DIAGRAM):   end;
103084    +
103085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103086    +*** Checking missing input Interval
103087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
103088    +
103089    +IF NMISS(
103090    +   AcceptedCmpTotal ,
103091    +   Frq ,
103092    +   Income ,
103093    +   Mnt ,
103094    +   MntGoldProds ,
103095    +   MntMeatProducts ,
103096    +   NumCatalogPurchases ,
103097    +   NumDealsPurchases ,
103098    +   NumWebVisitsMonth ,
103099    +   RFMstat ,
103100    +   Recency ,
103101    +   Teenhome ,
103102    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
103103    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
103104    +
103105    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103106    +END;
MPRINT(EM_DIAGRAM):   END;
103107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103108    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
103109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103110    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103111    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103112    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
103113    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103114    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103115    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
103116    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103117    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
103118    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
103119    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
103120    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
103121    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
103122    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103123    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
103124    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103125    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
103126    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103127    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103128    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103129    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
103130    +END;
MPRINT(EM_DIAGRAM):   END;
103131    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103132    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
103133    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103134    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
103135    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
103136    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103137    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
103138    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103139    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
103140    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
103141    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
103142    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103143    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
103144    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
103145    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
103146    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
103147    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
103148    +   ELSE S_NumCatalogPurchases
103149    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
103150    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
103151    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
103152    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103153    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
103154    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
103155    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103156    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
103157    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
103158    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103159    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
103160    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103161    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
103162    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103163    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
103164    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
103165    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
103166    +END;
MPRINT(EM_DIAGRAM):   END;
103167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103168    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
103169    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103171    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
103172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103173    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103174    +   H1x1_1  =    -0.12469827057082 * S_AcceptedCmpTotal
103175    +          +      3.1876739677725 * S_Frq  +     0.13471808395353 * S_Income
103176    +          +    -0.55590218871332 * S_Mnt  +     0.49013595544334 *
103177    +        S_MntGoldProds  +    -8.24401774301659 * S_MntMeatProducts
103178    +          +    -1.41682724778123 * S_NumCatalogPurchases
103179    +          +    -0.81806751697478 * S_NumDealsPurchases
103180    +          +     0.13721060582485 * S_NumWebVisitsMonth
103181    +          +     -0.8599103465088 * S_RFMstat  +    -0.11788382213726 *
103182    +        S_Recency  +    -0.11154618858027 * S_Teenhome
103183    +          +    -0.09280870729016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.12469827057082 * S_AcceptedCmpTotal + 3.1876739677725 *
S_Frq + 0.13471808395353 * S_Income + -0.55590218871332 * S_Mnt + 0.49013595544334 *
S_MntGoldProds + -8.24401774301659 * S_MntMeatProducts + -1.41682724778123 *
S_NumCatalogPurchases + -0.81806751697478 * S_NumDealsPurchases + 0.13721060582485 *
S_NumWebVisitsMonth + -0.8599103465088 * S_RFMstat + -0.11788382213726 * S_Recency +
-0.11154618858027 * S_Teenhome + -0.09280870729016 * S_Year_Birth ;
103184    +   H1x1_1  = H1x1_1  +     0.34960218424017 * Marital_StatusDivorced
103185    +          +    -0.42475372885131 * Marital_StatusMarried
103186    +          +     0.12884500504295 * Marital_StatusSingle
103187    +          +    -0.15810267147538 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.34960218424017 * Marital_StatusDivorced +
-0.42475372885131 * Marital_StatusMarried + 0.12884500504295 * Marital_StatusSingle +
-0.15810267147538 * Marital_StatusTogether ;
103188    +   H1x1_1  =    -5.00010358329252 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -5.00010358329252 + H1x1_1 ;
103189    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
103190    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
103191    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
103192    +END;
MPRINT(EM_DIAGRAM):   END;
103193    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103194    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
103195    +END;
MPRINT(EM_DIAGRAM):   END;
103196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103197    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
103198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103199    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103200    +   H1x2_1  =    -0.55977918187183 * S_AcceptedCmpTotal
103201    +          +     3.80877597264064 * S_Frq  +       0.740665099365 * S_Income
103202    +          +      1.2189502767856 * S_Mnt  +    -0.64069435073077 *
103203    +        S_MntGoldProds  +    -1.20953450523092 * S_MntMeatProducts
103204    +          +    -1.27566927607767 * S_NumCatalogPurchases
103205    +          +    -0.30700705450077 * S_NumDealsPurchases
103206    +          +    -1.10002183072059 * S_NumWebVisitsMonth
103207    +          +    -0.17115220906364 * S_RFMstat  +     0.98456522108133 *
103208    +        S_Recency  +    -0.46996209026516 * S_Teenhome
103209    +          +     0.11522881334392 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.55977918187183 * S_AcceptedCmpTotal + 3.80877597264064 *
S_Frq + 0.740665099365 * S_Income + 1.2189502767856 * S_Mnt + -0.64069435073077 *
S_MntGoldProds + -1.20953450523092 * S_MntMeatProducts + -1.27566927607767 *
S_NumCatalogPurchases + -0.30700705450077 * S_NumDealsPurchases + -1.10002183072059 *
S_NumWebVisitsMonth + -0.17115220906364 * S_RFMstat + 0.98456522108133 * S_Recency +
-0.46996209026516 * S_Teenhome + 0.11522881334392 * S_Year_Birth ;
103210    +   H1x2_1  = H1x2_1  +    -0.23272680240317 * Marital_StatusDivorced
103211    +          +    -0.32389187879499 * Marital_StatusMarried
103212    +          +     0.77856411154011 * Marital_StatusSingle
103213    +          +    -0.63289071596123 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.23272680240317 * Marital_StatusDivorced +
-0.32389187879499 * Marital_StatusMarried + 0.77856411154011 * Marital_StatusSingle +
-0.63289071596123 * Marital_StatusTogether ;
103214    +   H1x2_1  =     3.21350083886443 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 3.21350083886443 + H1x2_1 ;
103215    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
103216    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
103217    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
103218    +END;
MPRINT(EM_DIAGRAM):   END;
103219    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103220    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
103221    +END;
MPRINT(EM_DIAGRAM):   END;
103222    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103223    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
103224    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103225    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103226    +   H2x1_1  =    -7.90353913070205 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -7.90353913070205 * H1x1_1 ;
103227    +   H2x1_1  = H2x1_1  +     -3.6151322253591 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.6151322253591 * H1x2_1 ;
103228    +   H2x1_1  =     2.06123756742001 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 2.06123756742001 + H2x1_1 ;
103229    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
103230    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
103231    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
103232    +END;
MPRINT(EM_DIAGRAM):   END;
103233    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103234    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
103235    +END;
MPRINT(EM_DIAGRAM):   END;
103236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103237    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
103238    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103239    +
103240    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
103241    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
103242    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
103243    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
103244    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
103245    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103246    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
103247    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
103248    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
103249    +end;
MPRINT(EM_DIAGRAM):   end;
103250    +else do;
MPRINT(EM_DIAGRAM):   else do;
103251    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
103252    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
103253    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
103254    +   end;
MPRINT(EM_DIAGRAM):   end;
103255    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
103256    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
103257    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
103258    +   end;
MPRINT(EM_DIAGRAM):   end;
103259    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103260    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
103261    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
103262    +   end;
MPRINT(EM_DIAGRAM):   end;
103263    +end;
MPRINT(EM_DIAGRAM):   end;
103264    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103265    +   P_DepVar1  =     23.6383607789635 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 23.6383607789635 * H2x1_1 ;
103266    +   P_DepVar1  =    -12.8845549880418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.8845549880418 + P_DepVar1 ;
103267    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
103268    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
103269    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
103270    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
103271    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
103272    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
103273    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
103274    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
103275    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
103276    +END;
MPRINT(EM_DIAGRAM):   END;
103277    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103278    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
103279    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
103280    +END;
MPRINT(EM_DIAGRAM):   END;
103281    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
103282    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
103283    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
103284    +END;
MPRINT(EM_DIAGRAM):   END;
103285    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
103286    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
103287    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
103288    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
103289    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
103290    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
103291    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
103292    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103293    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
103294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103295    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
103296    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
103297    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
103298    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
103299    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
103300    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
103301    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
103302    +END;
MPRINT(EM_DIAGRAM):   END;
103303    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
103304    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
103305    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
103306    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
103307    +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
103308    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103309    +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
103310    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103311    +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
103312    +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
103313    +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
103314    +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
103315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103316    +* Renaming Into variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural44;
103317    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103318    +length AutoNeural44_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural44_I_DepVar $32;
103319    +drop AutoNeural44_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_I_DepVar;
103320    +AutoNeural44_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural44_I_DepVar = I_DepVar;
103321    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103322    +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
103323    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103324    +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
103325    +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
103326    +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
103327    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103328    +* Ensmbl59: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 2 of 7;
103329    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103330    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103331    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
103332    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
103333    +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
103334    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103335    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
103336    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
103337    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
103338    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
103339    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
103340    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
103341    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
103342    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
103343    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
103344    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
103345    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
103346    +LENGTH _WARN_ $4
103347    +      F_DepVar  $ 12
103348    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
103349    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
103350    +
103351    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
103352    +
103353    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
103354    +
103355    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
103356    +
103357    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
103358    +
103359    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
103360    +
103361    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
103362    +
103363    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
103364    +
103365    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
103366    +
103367    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
103368    +
103369    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
103370    +
103371    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
103372    +
103373    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
103374    +
103375    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
103376    +
103377    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
103378    +
103379    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
103380    +
103381    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
103382    +
103383    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
103384    +
103385    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
103386    +
103387    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
103388    +
103389    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
103390    +
103391    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
103392    +
103393    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
103394    +
103395    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
103396    +
103397    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
103398    +
103399    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
103400    +
103401    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
103402    +
103403    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
103404    +
103405    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
103406    +
103407    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
103408    +
103409    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
103410    +
103411    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
103412    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
103413    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
103414    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
103415    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
103416    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
103417    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
103418    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
103419    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
103420    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103421    +   Marital_StatusMarried = .;
The SAS System
 
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103422    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103423    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103424    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103426    +end;
MPRINT(EM_DIAGRAM):   end;
103427    +else do;
MPRINT(EM_DIAGRAM):   else do;
103428    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
103429    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
103430    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103431    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
103432    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
103433    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
103434    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
103435    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
103436    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103437    +         end;
MPRINT(EM_DIAGRAM):   end;
103438    +         else do;
MPRINT(EM_DIAGRAM):   else do;
103439    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
103440    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
103441    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103442    +            end;
MPRINT(EM_DIAGRAM):   end;
103443    +         end;
MPRINT(EM_DIAGRAM):   end;
103444    +      end;
MPRINT(EM_DIAGRAM):   end;
103445    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103446    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
103447    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
103448    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103449    +         end;
MPRINT(EM_DIAGRAM):   end;
103450    +      end;
MPRINT(EM_DIAGRAM):   end;
103451    +   end;
MPRINT(EM_DIAGRAM):   end;
103452    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103453    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
103454    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
103455    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103456    +      end;
MPRINT(EM_DIAGRAM):   end;
103457    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103458    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
103459    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
103460    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
103461    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
103462    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
103463    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103464    +         end;
MPRINT(EM_DIAGRAM):   end;
103465    +      end;
MPRINT(EM_DIAGRAM):   end;
103466    +   end;
MPRINT(EM_DIAGRAM):   end;
103467    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
103468    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103469    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103470    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103471    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103472    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103473    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103474    +   end;
MPRINT(EM_DIAGRAM):   end;
103475    +end;
MPRINT(EM_DIAGRAM):   end;
103476    +
103477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103478    +*** Checking missing input Interval
103479    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
103480    +
103481    +IF NMISS(
103482    +   AcceptedCmpTotal ,
103483    +   Frq ,
103484    +   Income ,
103485    +   Mnt ,
103486    +   MntGoldProds ,
103487    +   MntMeatProducts ,
103488    +   NumCatalogPurchases ,
103489    +   NumDealsPurchases ,
103490    +   NumWebVisitsMonth ,
103491    +   RFMstat ,
103492    +   Recency ,
103493    +   Teenhome ,
103494    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
103495    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
103496    +
103497    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103498    +END;
MPRINT(EM_DIAGRAM):   END;
103499    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103500    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
103501    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103502    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103503    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103504    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
103505    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103506    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103507    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
103508    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103509    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
103510    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
103511    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
103512    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
103513    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
103514    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103515    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
103516    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103517    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
103518    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103519    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103520    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103521    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
103522    +END;
MPRINT(EM_DIAGRAM):   END;
103523    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103524    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
103525    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103526    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
103527    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
103528    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103529    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
103530    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103531    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
103532    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
103533    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
103534    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103535    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
103536    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
103537    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
103538    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
103539    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
103540    +   ELSE S_NumCatalogPurchases
103541    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
103542    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
103543    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
103544    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103545    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
103546    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
103547    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103548    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
103549    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
103550    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103551    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
103552    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103553    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
103554    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103555    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
103556    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
103557    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
103558    +END;
MPRINT(EM_DIAGRAM):   END;
103559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103560    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
103561    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103563    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
103564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103565    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103566    +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
103567    +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
103568    +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
103569    +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
103570    +          +    -0.17075976331442 * S_NumCatalogPurchases
103571    +          +     0.11936859656737 * S_NumDealsPurchases
103572    +          +    -0.02241344557322 * S_NumWebVisitsMonth
103573    +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
103574    +        S_Recency  +     0.15041197329983 * S_Teenhome
103575    +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 *
S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 *
S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 *
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 *
S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency +
0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
103576    +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
103577    +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
103578    +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
103579    +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
103580    +          +     -0.1082096588215 * S_NumCatalogPurchases
103581    +          +    -0.35286072202398 * S_NumDealsPurchases
103582    +          +     0.41909763538671 * S_NumWebVisitsMonth
103583    +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
103584    +        S_Recency  +     0.03657184300378 * S_Teenhome
103585    +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 *
S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 *
S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 *
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 *
S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency +
0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
103586    +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
103587    +          +     0.35890266446407 * Marital_StatusMarried
103588    +          +    -0.32958224268654 * Marital_StatusSingle
103589    +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced +
0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle +
0.26093411772209 * Marital_StatusTogether ;
103590    +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
103591    +          +    -0.02828904025667 * Marital_StatusMarried
103592    +          +      0.2062300465945 * Marital_StatusSingle
103593    +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced +
-0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle +
-0.11283173230117 * Marital_StatusTogether ;
103594    +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
103595    +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
103596    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
103597    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
103598    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
103599    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
103600    +END;
MPRINT(EM_DIAGRAM):   END;
103601    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103602    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
103603    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
103604    +END;
MPRINT(EM_DIAGRAM):   END;
103605    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103606    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
103607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103608    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103609    +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
103610    +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
103611    +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
103612    +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
103613    +          +    -0.01120232190428 * S_NumCatalogPurchases
103614    +          +     0.08335061407191 * S_NumDealsPurchases
103615    +          +     0.19045617784308 * S_NumWebVisitsMonth
103616    +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
103617    +        S_Recency  +    -0.01223664611486 * S_Teenhome
103618    +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 *
S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 *
S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 *
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 *
S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency +
-0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
103619    +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
103620    +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
103621    +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
103622    +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
103623    +          +     0.05405710367459 * S_NumCatalogPurchases
103624    +          +     0.05779108423435 * S_NumDealsPurchases
103625    +          +     0.06578830114376 * S_NumWebVisitsMonth
103626    +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
103627    +        S_Recency  +     0.07188455936346 * S_Teenhome
103628    +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 *
S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 *
S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 *
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 *
S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency +
0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
103629    +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
103630    +          +     -0.0971208757038 * Marital_StatusMarried
103631    +          +    -0.07250288479873 * Marital_StatusSingle
103632    +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced +
-0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle +
-0.09370040203357 * Marital_StatusTogether ;
103633    +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
103634    +          +     0.21091057941446 * Marital_StatusMarried
103635    +          +    -0.10578923343752 * Marital_StatusSingle
103636    +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced +
0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle +
0.14340624257864 * Marital_StatusTogether ;
103637    +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
103638    +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
103639    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
103640    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
103641    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
103642    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
103643    +END;
MPRINT(EM_DIAGRAM):   END;
103644    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103645    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
103646    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
103647    +END;
MPRINT(EM_DIAGRAM):   END;
103648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103649    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
103650    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103651    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103652    +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
103653    +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
103654    +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 *
H1x2_2 ;
103655    +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
103656    +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
103657    +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
103658    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
103659    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
103660    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
103661    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
103662    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
103663    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
103664    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
103665    +END;
MPRINT(EM_DIAGRAM):   END;
103666    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103667    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
103668    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
103669    +END;
MPRINT(EM_DIAGRAM):   END;
103670    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103671    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
103672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103673    +
103674    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
103675    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
103676    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
103677    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
103678    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
103679    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103680    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
103681    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
103682    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
103683    +end;
MPRINT(EM_DIAGRAM):   end;
103684    +else do;
MPRINT(EM_DIAGRAM):   else do;
103685    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
103686    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
103687    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
103688    +   end;
MPRINT(EM_DIAGRAM):   end;
103689    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
103690    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
103691    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
103692    +   end;
MPRINT(EM_DIAGRAM):   end;
103693    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103694    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
103695    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
103696    +   end;
MPRINT(EM_DIAGRAM):   end;
103697    +end;
MPRINT(EM_DIAGRAM):   end;
103698    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103699    +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
103700    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
103701    +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
103702    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
103703    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
103704    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
103705    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
103706    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
103707    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
103708    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
103709    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
103710    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
103711    +END;
MPRINT(EM_DIAGRAM):   END;
103712    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103713    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
103714    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
103715    +END;
MPRINT(EM_DIAGRAM):   END;
103716    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
103717    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
103718    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
103719    +END;
MPRINT(EM_DIAGRAM):   END;
103720    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
103721    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
103722    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
103723    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
103724    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
103725    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
103726    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
103727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103728    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
103729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103730    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
103731    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
103732    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
103733    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
103734    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
103735    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
103736    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
103737    +END;
MPRINT(EM_DIAGRAM):   END;
103738    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
103739    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
103740    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
103741    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
103742    +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
103743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103744    +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
103745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103746    +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
103747    +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
103748    +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
103749    +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
103750    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103751    +* Renaming Into variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural45;
103752    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103753    +length AutoNeural45_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural45_I_DepVar $32;
103754    +drop AutoNeural45_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_I_DepVar;
103755    +AutoNeural45_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural45_I_DepVar = I_DepVar;
103756    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103757    +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
103758    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103759    +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
103760    +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
103761    +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
103762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103763    +* Ensmbl59: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 3 of 7;
103764    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103765    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103766    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
103767    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
103768    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
103769    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
103770    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
103771    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
103772    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
103773    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
103774    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
103775    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
103776    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
103777    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
103778    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
103779    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
103780    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
103781    +LENGTH _WARN_ $4
103782    +      F_DepVar  $ 12
103783    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
103784    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
103785    +
103786    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
103787    +
103788    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
103789    +
103790    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
103791    +
103792    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
103793    +
103794    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
103795    +
103796    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
103797    +
103798    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
103799    +
103800    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
103801    +
103802    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
103803    +
103804    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
103805    +
103806    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
103807    +
103808    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
103809    +
103810    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
103811    +
103812    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
103813    +
103814    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
103815    +
103816    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
103817    +
103818    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
103819    +
103820    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
103821    +
103822    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
103823    +
103824    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
103825    +
103826    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
103827    +
103828    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
103829    +
103830    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
103831    +
103832    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
103833    +
103834    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
103835    +
103836    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
103837    +
103838    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
103839    +
103840    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
103841    +
103842    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
103843    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
103844    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
103845    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
103846    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
103847    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
103848    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
103849    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
103850    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
103851    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103852    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103853    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103854    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103855    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
103856    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103857    +end;
MPRINT(EM_DIAGRAM):   end;
103858    +else do;
MPRINT(EM_DIAGRAM):   else do;
103859    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
103860    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
103861    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
103862    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
103863    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
103864    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
103865    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
103866    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
103867    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103868    +         end;
MPRINT(EM_DIAGRAM):   end;
103869    +         else do;
MPRINT(EM_DIAGRAM):   else do;
103870    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
103871    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
103872    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103873    +            end;
MPRINT(EM_DIAGRAM):   end;
103874    +         end;
MPRINT(EM_DIAGRAM):   end;
103875    +      end;
MPRINT(EM_DIAGRAM):   end;
103876    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103877    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
103878    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
103879    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103880    +         end;
MPRINT(EM_DIAGRAM):   end;
103881    +      end;
MPRINT(EM_DIAGRAM):   end;
103882    +   end;
MPRINT(EM_DIAGRAM):   end;
103883    +   else do;
MPRINT(EM_DIAGRAM):   else do;
103884    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
103885    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
103886    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103887    +      end;
MPRINT(EM_DIAGRAM):   end;
103888    +      else do;
MPRINT(EM_DIAGRAM):   else do;
103889    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
103890    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
103891    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
103892    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
103893    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
103894    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
103895    +         end;
MPRINT(EM_DIAGRAM):   end;
103896    +      end;
MPRINT(EM_DIAGRAM):   end;
103897    +   end;
MPRINT(EM_DIAGRAM):   end;
103898    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
103899    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
103900    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
103901    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
103902    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
103903    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
103904    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103905    +   end;
MPRINT(EM_DIAGRAM):   end;
103906    +end;
MPRINT(EM_DIAGRAM):   end;
103907    +
103908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103909    +*** Checking missing input Interval
103910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
103911    +
103912    +IF NMISS(
103913    +   AcceptedCmpTotal ,
103914    +   Frq ,
103915    +   Income ,
103916    +   Mnt ,
103917    +   MntGoldProds ,
103918    +   MntMeatProducts ,
103919    +   NumCatalogPurchases ,
103920    +   NumDealsPurchases ,
103921    +   NumWebVisitsMonth ,
103922    +   RFMstat ,
103923    +   Recency ,
103924    +   Teenhome ,
103925    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
103926    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
103927    +
103928    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
103929    +END;
MPRINT(EM_DIAGRAM):   END;
103930    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103931    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
103932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103933    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103934    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103935    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
103936    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103937    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103938    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
103939    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103940    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
103941    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
103942    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
103943    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
103944    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
103945    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103946    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
103947    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103948    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
103949    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103950    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103951    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103952    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
103953    +END;
MPRINT(EM_DIAGRAM):   END;
103954    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
103955    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
103956    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
103957    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
103958    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
103959    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
103960    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
103961    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
103962    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
103963    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
103964    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
103965    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
103966    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
103967    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
103968    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
103969    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
103970    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
103971    +   ELSE S_NumCatalogPurchases
103972    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
103973    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
103974    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
103975    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
103976    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
103977    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
103978    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
103979    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
103980    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
103981    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
103982    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
103983    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
103984    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
103985    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
103986    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
103987    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
103988    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
103989    +END;
MPRINT(EM_DIAGRAM):   END;
103990    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103991    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
103992    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103994    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
103995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
103996    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
103997    +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
103998    +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
103999    +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
104000    +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
104001    +          +     0.96941096546276 * S_NumCatalogPurchases
104002    +          +    -0.78169009272221 * S_NumDealsPurchases
104003    +          +     2.46694552614806 * S_NumWebVisitsMonth
104004    +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
104005    +        S_Recency  +    -1.09760548427625 * S_Teenhome
104006    +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 *
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 *
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 *
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 *
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency +
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
104007    +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
104008    +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
104009    +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
104010    +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
104011    +          +    -2.01779739147185 * S_NumCatalogPurchases
104012    +          +     -2.6507470301089 * S_NumDealsPurchases
104013    +          +     0.43757499676531 * S_NumWebVisitsMonth
104014    +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
104015    +        S_Recency  +    -0.45321912120397 * S_Teenhome
104016    +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 *
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 *
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 *
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 *
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency +
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
104017    +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
104018    +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
104019    +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
104020    +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
104021    +          +      3.9474982958259 * S_NumCatalogPurchases
104022    +          +       0.376468804707 * S_NumDealsPurchases
104023    +          +     3.31501013882439 * S_NumWebVisitsMonth
104024    +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
104025    +        S_Recency  +    -1.57729700618019 * S_Teenhome
104026    +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 *
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 *
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 *
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 *
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency +
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
104027    +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
104028    +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
104029    +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
104030    +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
104031    +          +    -1.47064436222345 * S_NumCatalogPurchases
104032    +          +    -0.47773085529503 * S_NumDealsPurchases
104033    +          +     0.20028656323595 * S_NumWebVisitsMonth
104034    +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
104035    +        S_Recency  +    -0.11530372179295 * S_Teenhome
104036    +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 *
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 *
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 *
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 *
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency +
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
104037    +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
104038    +          +    -1.68634246986018 * Marital_StatusMarried
104039    +          +     0.61674763327859 * Marital_StatusSingle
104040    +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced +
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle +
-1.26649958570453 * Marital_StatusTogether ;
104041    +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
104042    +          +    -0.63821523628652 * Marital_StatusMarried
104043    +          +    -1.40431603473643 * Marital_StatusSingle
104044    +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced +
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle +
-0.20849152262706 * Marital_StatusTogether ;
104045    +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
104046    +          +    -2.86773035723606 * Marital_StatusMarried
104047    +          +     2.52900517550184 * Marital_StatusSingle
104048    +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced +
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle +
-3.34343954102751 * Marital_StatusTogether ;
104049    +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
104050    +          +    -0.89880425714459 * Marital_StatusMarried
104051    +          +     0.97652284934456 * Marital_StatusSingle
104052    +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced +
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle +
-0.83414241747679 * Marital_StatusTogether ;
104053    +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
104054    +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
104055    +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
104056    +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
104057    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
104058    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
104059    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
104060    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
104061    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
104062    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
104063    +END;
MPRINT(EM_DIAGRAM):   END;
104064    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104065    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
104066    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
104067    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
104068    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
104069    +END;
MPRINT(EM_DIAGRAM):   END;
104070    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104071    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
104072    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104073    +
104074    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
104075    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
104076    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
104077    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
104078    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
104079    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104080    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
104081    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
104082    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
104083    +end;
MPRINT(EM_DIAGRAM):   end;
104084    +else do;
MPRINT(EM_DIAGRAM):   else do;
104085    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
104086    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
104087    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
104088    +   end;
MPRINT(EM_DIAGRAM):   end;
104089    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
104090    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
104091    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
104092    +   end;
MPRINT(EM_DIAGRAM):   end;
104093    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104094    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
104095    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
104096    +   end;
MPRINT(EM_DIAGRAM):   end;
104097    +end;
MPRINT(EM_DIAGRAM):   end;
104098    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104099    +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
104100    +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 +
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
104101    +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
104102    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
104103    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
104104    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
104105    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
104106    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
104107    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
104108    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
104109    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
104110    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
104111    +END;
MPRINT(EM_DIAGRAM):   END;
104112    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104113    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
104114    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
104115    +END;
MPRINT(EM_DIAGRAM):   END;
104116    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
104117    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
104118    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
104119    +END;
MPRINT(EM_DIAGRAM):   END;
104120    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
104121    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
104122    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
104123    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
104124    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
104125    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
104126    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
104127    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104128    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
104129    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104130    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
104131    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
104132    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
104133    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
104134    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
104135    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
104136    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
104137    +END;
MPRINT(EM_DIAGRAM):   END;
104138    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
104139    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
104140    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
104141    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
104142    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
104143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104144    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
104145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104146    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
104147    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
104148    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
104149    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
104150    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104151    +* Renaming Into variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural47;
104152    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104153    +length AutoNeural47_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural47_I_DepVar $32;
104154    +drop AutoNeural47_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_I_DepVar;
104155    +AutoNeural47_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural47_I_DepVar = I_DepVar;
104156    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104157    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
104158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104159    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
104160    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
104161    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
104162    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104163    +* Ensmbl59: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 4 of 7;
104164    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104165    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104166    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
104167    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
104168    +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
104169    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104170    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
104171    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
104172    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
104173    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
104174    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
104175    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
104176    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
104177    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
104178    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
104179    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
104180    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
104181    +LENGTH _WARN_ $4
104182    +      F_DepVar  $ 12
104183    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
104184    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
104185    +
104186    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
104187    +
104188    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
104189    +
104190    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
104191    +
104192    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
104193    +
104194    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
104195    +
104196    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
104197    +
104198    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
104199    +
104200    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
104201    +
104202    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
104203    +
104204    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
104205    +
104206    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
104207    +
104208    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
104209    +
104210    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
104211    +
104212    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
104213    +
104214    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
104215    +
104216    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
104217    +
104218    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
104219    +
104220    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
104221    +
104222    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
104223    +
104224    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
104225    +
104226    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
104227    +
104228    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
104229    +
104230    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
104231    +
104232    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
104233    +
104234    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
104235    +
104236    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
104237    +
104238    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
104239    +
104240    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
104241    +
104242    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
104243    +
104244    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
104245    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
104246    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
104247    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
104248    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
104249    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
104250    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
104251    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
104252    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
104253    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
104254    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
104255    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
104256    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
104257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104259    +end;
MPRINT(EM_DIAGRAM):   end;
104260    +else do;
MPRINT(EM_DIAGRAM):   else do;
104261    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
104262    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
104263    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104264    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
104265    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
104266    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
104267    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
104268    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
104269    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104270    +         end;
MPRINT(EM_DIAGRAM):   end;
104271    +         else do;
MPRINT(EM_DIAGRAM):   else do;
104272    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
104273    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
104274    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104275    +            end;
MPRINT(EM_DIAGRAM):   end;
104276    +         end;
MPRINT(EM_DIAGRAM):   end;
104277    +      end;
MPRINT(EM_DIAGRAM):   end;
104278    +      else do;
MPRINT(EM_DIAGRAM):   else do;
104279    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
104280    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
104281    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104282    +         end;
MPRINT(EM_DIAGRAM):   end;
104283    +      end;
MPRINT(EM_DIAGRAM):   end;
104284    +   end;
MPRINT(EM_DIAGRAM):   end;
104285    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104286    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
104287    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
104288    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104289    +      end;
MPRINT(EM_DIAGRAM):   end;
104290    +      else do;
MPRINT(EM_DIAGRAM):   else do;
104291    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
104292    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
104293    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
104294    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
104295    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
104296    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104297    +         end;
MPRINT(EM_DIAGRAM):   end;
104298    +      end;
MPRINT(EM_DIAGRAM):   end;
104299    +   end;
MPRINT(EM_DIAGRAM):   end;
104300    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
104301    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
104302    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
104303    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
104304    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
104305    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104306    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104307    +   end;
MPRINT(EM_DIAGRAM):   end;
104308    +end;
MPRINT(EM_DIAGRAM):   end;
104309    +
104310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104311    +*** Checking missing input Interval
104312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
104313    +
104314    +IF NMISS(
104315    +   AcceptedCmpTotal ,
104316    +   Frq ,
104317    +   Income ,
104318    +   Mnt ,
104319    +   MntGoldProds ,
104320    +   MntMeatProducts ,
104321    +   NumCatalogPurchases ,
104322    +   NumDealsPurchases ,
104323    +   NumWebVisitsMonth ,
104324    +   RFMstat ,
104325    +   Recency ,
104326    +   Teenhome ,
104327    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
104328    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
104329    +
104330    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104331    +END;
MPRINT(EM_DIAGRAM):   END;
104332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104333    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
104334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104335    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104336    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
104337    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
104338    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
104339    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
104340    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
104341    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
104342    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
104343    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
104344    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
104345    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
104346    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
104347    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
104348    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
104349    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
104350    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
104351    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
104352    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
104353    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
104354    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
104355    +END;
MPRINT(EM_DIAGRAM):   END;
104356    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104357    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
104358    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
104359    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
104360    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
104361    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
104362    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
104363    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
104364    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
104365    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
104366    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
104367    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
104368    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
104369    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
104370    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
104371    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
104372    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
104373    +   ELSE S_NumCatalogPurchases
104374    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
104375    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
104376    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
104377    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
104378    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
104379    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
104380    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
104381    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
104382    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
104383    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
104384    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
104385    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
104386    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
104387    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
104388    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
104389    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
104390    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
104391    +END;
MPRINT(EM_DIAGRAM):   END;
104392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104393    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
104394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104396    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
104397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104398    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104399    +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
104400    +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
104401    +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
104402    +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
104403    +          +     0.18813452089487 * S_NumCatalogPurchases
104404    +          +     0.07572009513796 * S_NumDealsPurchases
104405    +          +     0.26290613719398 * S_NumWebVisitsMonth
104406    +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
104407    +        S_Recency  +    -0.08184869022013 * S_Teenhome
104408    +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 *
S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 *
S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 *
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 *
S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency +
-0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
104409    +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
104410    +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
104411    +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
104412    +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
104413    +          +      0.3860900431806 * S_NumCatalogPurchases
104414    +          +    -0.05602869666287 * S_NumDealsPurchases
104415    +          +     0.25751125196672 * S_NumWebVisitsMonth
104416    +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
104417    +        S_Recency  +     0.00740928227007 * S_Teenhome
104418    +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 *
S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 *
S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 *
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 *
S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency +
0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
104419    +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
104420    +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
104421    +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
104422    +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
104423    +          +     0.20017136343834 * S_NumCatalogPurchases
104424    +          +      0.4177949842415 * S_NumDealsPurchases
104425    +          +     0.12267139708832 * S_NumWebVisitsMonth
104426    +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
104427    +        S_Recency  +    -0.04165775695782 * S_Teenhome
104428    +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 *
S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 *
S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 *
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 *
S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency +
-0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
104429    +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
104430    +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
104431    +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
104432    +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
104433    +          +    -0.41475045310519 * S_NumCatalogPurchases
104434    +          +     0.05270183882345 * S_NumDealsPurchases
104435    +          +     -0.3411138782759 * S_NumWebVisitsMonth
104436    +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
104437    +        S_Recency  +     0.09131411279492 * S_Teenhome
104438    +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 *
S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 *
S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 *
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 *
S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency +
0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
104439    +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
104440    +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
104441    +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
104442    +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
104443    +          +     0.28201604995327 * S_NumCatalogPurchases
104444    +          +     -0.0106712941301 * S_NumDealsPurchases
104445    +          +     0.44937825968958 * S_NumWebVisitsMonth
104446    +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
104447    +        S_Recency  +    -0.07776231003236 * S_Teenhome
104448    +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 *
S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 *
S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 *
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 *
S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency +
-0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
104449    +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
104450    +          +     -0.2248578245828 * Marital_StatusMarried
104451    +          +     0.07509958702397 * Marital_StatusSingle
104452    +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced +
-0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle +
-0.12991422082545 * Marital_StatusTogether ;
104453    +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
104454    +          +     0.45662921783631 * Marital_StatusMarried
104455    +          +     -0.7587900494362 * Marital_StatusSingle
104456    +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced +
0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle +
0.91918379082777 * Marital_StatusTogether ;
104457    +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
104458    +          +     0.48232640763102 * Marital_StatusMarried
104459    +          +    -0.26767355443511 * Marital_StatusSingle
104460    +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced +
0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle +
0.26207298280723 * Marital_StatusTogether ;
104461    +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
104462    +          +       0.692510056964 * Marital_StatusMarried
104463    +          +    -0.62467969689335 * Marital_StatusSingle
104464    +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced +
0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle +
0.57377256791387 * Marital_StatusTogether ;
104465    +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
104466    +          +    -0.12414433690654 * Marital_StatusMarried
104467    +          +     0.01287765001755 * Marital_StatusSingle
104468    +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced +
-0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle +
-0.08087882377532 * Marital_StatusTogether ;
104469    +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
104470    +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
104471    +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
104472    +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
104473    +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
104474    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
104475    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
104476    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
104477    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
104478    +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
104479    +END;
MPRINT(EM_DIAGRAM):   END;
104480    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104481    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
104482    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
104483    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
104484    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
104485    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
104486    +END;
MPRINT(EM_DIAGRAM):   END;
104487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104488    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
104489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104490    +
104491    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
104492    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
104493    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
104494    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
104495    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
104496    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104497    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
104498    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
104499    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
104500    +end;
MPRINT(EM_DIAGRAM):   end;
104501    +else do;
MPRINT(EM_DIAGRAM):   else do;
104502    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
104503    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
104504    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
104505    +   end;
MPRINT(EM_DIAGRAM):   end;
104506    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
104507    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
104508    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
104509    +   end;
MPRINT(EM_DIAGRAM):   end;
104510    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104511    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
104512    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
104513    +   end;
MPRINT(EM_DIAGRAM):   end;
104514    +end;
MPRINT(EM_DIAGRAM):   end;
104515    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104516    +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
104517    +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
104518    +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 +
63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
104519    +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
104520    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
104521    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
104522    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
104523    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
104524    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
104525    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
104526    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
104527    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
104528    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
104529    +END;
MPRINT(EM_DIAGRAM):   END;
104530    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104531    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
104532    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
104533    +END;
MPRINT(EM_DIAGRAM):   END;
104534    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
104535    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
104536    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
104537    +END;
MPRINT(EM_DIAGRAM):   END;
104538    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
104539    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
104540    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
104541    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
104542    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
104543    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
104544    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
104545    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104546    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
104547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104548    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
104549    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
104550    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
104551    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
104552    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
104553    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
104554    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
104555    +END;
MPRINT(EM_DIAGRAM):   END;
104556    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
104557    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
104558    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
104559    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
104560    +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
104561    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104562    +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
104563    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104564    +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
104565    +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
104566    +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
104567    +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
104568    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104569    +* Renaming Into variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural41;
104570    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104571    +length AutoNeural41_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural41_I_DepVar $32;
104572    +drop AutoNeural41_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_I_DepVar;
104573    +AutoNeural41_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural41_I_DepVar = I_DepVar;
104574    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104575    +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
104576    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104577    +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
104578    +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
104579    +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
104580    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104581    +* Ensmbl59: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 5 of 7;
104582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104583    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104584    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
104585    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
104586    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
104587    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
104588    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
104589    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
104590    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
104591    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
104592    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
104593    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
104594    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
104595    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
104596    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
104597    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
104598    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
104599    +LENGTH _WARN_ $4
104600    +      F_DepVar  $ 12
104601    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
104602    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
104603    +
104604    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
104605    +
104606    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
104607    +
104608    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
104609    +
104610    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
104611    +
104612    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
104613    +
104614    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
104615    +
104616    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
104617    +
104618    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
104619    +
104620    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
104621    +
104622    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
104623    +
104624    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
104625    +
104626    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
104627    +
104628    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
104629    +
104630    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
104631    +
104632    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
104633    +
104634    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
104635    +
104636    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
104637    +
104638    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
104639    +
104640    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
104641    +
104642    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
104643    +
104644    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
104645    +
104646    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
104647    +
104648    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
104649    +
104650    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
104651    +
104652    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
104653    +
104654    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
104655    +
104656    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
104657    +
104658    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
104659    +
104660    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
104661    +
104662    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
104663    +
104664    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
104665    +
104666    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
104667    +
104668    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
104669    +
104670    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
104671    +
104672    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
104673    +
104674    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
104675    +
104676    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
104677    +
104678    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
104679    +
104680    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
104681    +
104682    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
104683    +
104684    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
104685    +
104686    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
104687    +
104688    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
104689    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
104690    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
104691    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
104692    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
104693    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
104694    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
104695    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
104696    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
104697    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
104698    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
104699    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
104700    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
104701    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
104702    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104703    +end;
MPRINT(EM_DIAGRAM):   end;
104704    +else do;
MPRINT(EM_DIAGRAM):   else do;
104705    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
104706    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
104707    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
104708    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
104709    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
104710    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
104711    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
104712    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
104713    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104714    +         end;
MPRINT(EM_DIAGRAM):   end;
104715    +         else do;
MPRINT(EM_DIAGRAM):   else do;
104716    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
104717    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
104718    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104719    +            end;
MPRINT(EM_DIAGRAM):   end;
104720    +         end;
MPRINT(EM_DIAGRAM):   end;
104721    +      end;
MPRINT(EM_DIAGRAM):   end;
104722    +      else do;
MPRINT(EM_DIAGRAM):   else do;
104723    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
104724    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
104725    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104726    +         end;
MPRINT(EM_DIAGRAM):   end;
104727    +      end;
MPRINT(EM_DIAGRAM):   end;
104728    +   end;
MPRINT(EM_DIAGRAM):   end;
104729    +   else do;
MPRINT(EM_DIAGRAM):   else do;
104730    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
104731    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
104732    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104733    +      end;
MPRINT(EM_DIAGRAM):   end;
104734    +      else do;
MPRINT(EM_DIAGRAM):   else do;
104735    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
104736    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
104737    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
104738    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
104739    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
104740    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
104741    +         end;
MPRINT(EM_DIAGRAM):   end;
104742    +      end;
MPRINT(EM_DIAGRAM):   end;
104743    +   end;
MPRINT(EM_DIAGRAM):   end;
104744    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
104745    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
104746    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
104747    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
104748    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
104749    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
104750    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104751    +   end;
MPRINT(EM_DIAGRAM):   end;
104752    +end;
MPRINT(EM_DIAGRAM):   end;
104753    +
104754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104755    +*** Checking missing input Interval
104756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
104757    +
104758    +IF NMISS(
104759    +   AcceptedCmpTotal ,
104760    +   Frq ,
104761    +   Income ,
104762    +   Mnt ,
104763    +   MntGoldProds ,
104764    +   MntMeatProducts ,
104765    +   NumCatalogPurchases ,
104766    +   NumDealsPurchases ,
104767    +   NumWebVisitsMonth ,
104768    +   RFMstat ,
104769    +   Recency ,
104770    +   Teenhome ,
104771    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
104772    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
104773    +
104774    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
104775    +END;
MPRINT(EM_DIAGRAM):   END;
104776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104777    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
104778    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104779    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104780    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
104781    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
104782    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
104783    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
104784    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
104785    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
104786    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
104787    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
104788    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
104789    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
104790    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
104791    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
104792    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
104793    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
104794    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
104795    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
104796    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
104797    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
104798    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
104799    +END;
MPRINT(EM_DIAGRAM):   END;
104800    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104801    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
104802    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
104803    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
104804    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
104805    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
104806    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
104807    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
104808    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
104809    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
104810    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
104811    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
104812    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
104813    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
104814    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
104815    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
104816    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
104817    +   ELSE S_NumCatalogPurchases
104818    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
104819    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
104820    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
104821    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
104822    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
104823    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
104824    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
104825    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
104826    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
104827    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
104828    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
104829    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
104830    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
104831    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
104832    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
104833    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
104834    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
104835    +END;
MPRINT(EM_DIAGRAM):   END;
104836    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104837    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
104838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104840    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
104841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104842    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104843    +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
104844    +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
104845    +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
104846    +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
104847    +          +    -12.1201262560598 * S_NumCatalogPurchases
104848    +          +    -7.64265449386917 * S_NumDealsPurchases
104849    +          +     -0.8154661733691 * S_NumWebVisitsMonth
104850    +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
104851    +        S_Recency  +     3.79010135100643 * S_Teenhome
104852    +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 *
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 *
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 *
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 *
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency +
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
104853    +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
104854    +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
104855    +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
104856    +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
104857    +          +    -5.64377068696071 * S_NumCatalogPurchases
104858    +          +       1.315880732417 * S_NumDealsPurchases
104859    +          +    -7.12689902819995 * S_NumWebVisitsMonth
104860    +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
104861    +        S_Recency  +     2.42655161118896 * S_Teenhome
104862    +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 *
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 *
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 *
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 *
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency +
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
104863    +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
104864    +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
104865    +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
104866    +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
104867    +          +    -7.71653347900468 * S_NumCatalogPurchases
104868    +          +    -2.29382480020793 * S_NumDealsPurchases
104869    +          +    -3.92350308032578 * S_NumWebVisitsMonth
104870    +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
104871    +        S_Recency  +     1.88830044274756 * S_Teenhome
104872    +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 *
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 *
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 *
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 *
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency +
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
104873    +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
104874    +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
104875    +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
104876    +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
104877    +          +     0.50178849511862 * S_NumCatalogPurchases
104878    +          +     3.33915340676542 * S_NumDealsPurchases
104879    +          +     2.99171363234904 * S_NumWebVisitsMonth
104880    +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
104881    +        S_Recency  +     1.84778865722952 * S_Teenhome
104882    +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 *
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 *
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 *
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 *
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency +
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
104883    +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
104884    +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
104885    +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
104886    +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
104887    +          +    -5.23430097842472 * S_NumCatalogPurchases
104888    +          +    -1.25644862473488 * S_NumDealsPurchases
104889    +          +     -3.0943337340276 * S_NumWebVisitsMonth
104890    +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
104891    +        S_Recency  +     1.52557456336148 * S_Teenhome
104892    +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 *
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 *
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 *
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 *
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency +
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
104893    +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
104894    +          +     5.12496303990022 * Marital_StatusMarried
104895    +          +    -7.61364369696186 * Marital_StatusSingle
104896    +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced +
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle +
2.78937374370395 * Marital_StatusTogether ;
104897    +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
104898    +          +     7.65332274940308 * Marital_StatusMarried
104899    +          +    -5.13332947688313 * Marital_StatusSingle
104900    +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced +
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle +
8.25159601985572 * Marital_StatusTogether ;
104901    +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
104902    +          +     7.95162959069432 * Marital_StatusMarried
104903    +          +    -6.10797604390061 * Marital_StatusSingle
104904    +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced +
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle +
2.98577039618027 * Marital_StatusTogether ;
104905    +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
104906    +          +     5.45977621823616 * Marital_StatusMarried
104907    +          +    -10.3527985391218 * Marital_StatusSingle
104908    +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced +
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle +
4.66094015963389 * Marital_StatusTogether ;
104909    +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
104910    +          +     8.15909630638185 * Marital_StatusMarried
104911    +          +    -5.88497367282032 * Marital_StatusSingle
104912    +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced +
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle +
3.05474303626666 * Marital_StatusTogether ;
104913    +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
104914    +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
104915    +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
104916    +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
104917    +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
104918    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
104919    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
104920    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
104921    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
104922    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
104923    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
104924    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
104925    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
104926    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
104927    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
104928    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
104929    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
104930    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
104931    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
104932    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
104933    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
104934    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
104935    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
104936    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
104937    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
104938    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
104939    +END;
MPRINT(EM_DIAGRAM):   END;
104940    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
104941    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
104942    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
104943    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
104944    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
104945    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
104946    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
104947    +END;
MPRINT(EM_DIAGRAM):   END;
104948    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104949    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
104950    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
104951    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
104952    +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
104953    +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
104954    +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
104955    +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
104956    +          +      0.8747576336553 * S_NumCatalogPurchases
104957    +          +    -0.23551985234916 * S_NumDealsPurchases
104958    +          +     0.83901499225112 * S_NumWebVisitsMonth
104959    +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
104960    +        S_Recency  +    -0.38340703993831 * S_Teenhome
104961    +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 *
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 *
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 *
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 *
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency +
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
104962    +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
104963    +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
104964    +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
104965    +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
104966    +          +    -0.99107054453387 * S_NumCatalogPurchases
104967    +          +    -0.68379823410573 * S_NumDealsPurchases
104968    +          +    -1.67939872609259 * S_NumWebVisitsMonth
104969    +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
104970    +        S_Recency  +    -1.65033346710833 * S_Teenhome
104971    +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 *
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 *
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 *
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 *
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency +
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
104972    +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
104973    +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
104974    +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
104975    +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
104976    +          +      1.4506330104932 * S_NumCatalogPurchases
104977    +          +     0.20085283861849 * S_NumDealsPurchases
104978    +          +     2.37974383924154 * S_NumWebVisitsMonth
104979    +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
104980    +        S_Recency  +     0.60726269989058 * S_Teenhome
104981    +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 *
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 *
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 *
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 *
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency +
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
104982    +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
104983    +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
104984    +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
104985    +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
104986    +          +    -0.79952426911069 * S_NumCatalogPurchases
104987    +          +    -0.70571099772216 * S_NumDealsPurchases
104988    +          +    -0.32158728049114 * S_NumWebVisitsMonth
104989    +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
104990    +        S_Recency  +     2.29389047813725 * S_Teenhome
104991    +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 *
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 *
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 *
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 *
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency +
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
104992    +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
104993    +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
104994    +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
104995    +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
104996    +          +    -0.41491605544255 * S_NumCatalogPurchases
104997    +          +     0.49374983047507 * S_NumDealsPurchases
104998    +          +    -1.38692718220359 * S_NumWebVisitsMonth
104999    +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
105000    +        S_Recency  +     1.29605991841828 * S_Teenhome
105001    +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 *
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 *
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 *
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 *
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency +
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
105002    +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
105003    +          +    -1.29227303709115 * Marital_StatusMarried
105004    +          +     0.71446782242025 * Marital_StatusSingle
105005    +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced +
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle +
0.55295867102727 * Marital_StatusTogether ;
105006    +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
105007    +          +      2.0815223604364 * Marital_StatusMarried
105008    +          +     0.79462013188709 * Marital_StatusSingle
105009    +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced +
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle +
0.20668835346022 * Marital_StatusTogether ;
105010    +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
105011    +          +     0.44769683627357 * Marital_StatusMarried
105012    +          +     1.09957357551209 * Marital_StatusSingle
105013    +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced +
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle +
0.98246644516303 * Marital_StatusTogether ;
105014    +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
105015    +          +    -0.71096069683657 * Marital_StatusMarried
105016    +          +    -0.46849808497503 * Marital_StatusSingle
105017    +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced +
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle +
-0.50186472808298 * Marital_StatusTogether ;
105018    +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
105019    +          +     0.21000014809177 * Marital_StatusMarried
105020    +          +    -1.05959388759825 * Marital_StatusSingle
105021    +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced +
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle +
-0.8202251717493 * Marital_StatusTogether ;
105022    +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
105023    +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
105024    +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
105025    +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
105026    +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
105027    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
105028    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
105029    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
105030    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
105031    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
105032    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
105033    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
105034    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
105035    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
105036    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
105037    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
105038    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
105039    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
105040    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
105041    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
105042    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
105043    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
105044    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
105045    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
105046    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
105047    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
105048    +END;
MPRINT(EM_DIAGRAM):   END;
105049    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105050    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
105051    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
105052    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
105053    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
105054    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
105055    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
105056    +END;
MPRINT(EM_DIAGRAM):   END;
105057    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105058    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
105059    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105060    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105061    +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
105062    +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
105063    +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 +
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 +
-7.94470945127082 * H1x1_6 ;
105064    +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
105065    +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
105066    +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 +
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 +
-1.96124154717115 * H1x1_6 ;
105067    +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
105068    +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
105069    +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 +
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 +
-5.26174801543685 * H1x1_6 ;
105070    +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
105071    +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
105072    +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 +
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 +
-1.34566786751269 * H1x1_6 ;
105073    +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
105074    +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
105075    +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 +
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 +
-4.42895004794637 * H1x1_6 ;
105076    +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
105077    +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
105078    +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
105079    +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 +
-1.70956044020454 * H1x2_6 ;
105080    +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
105081    +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
105082    +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
105083    +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 +
-0.90111756793979 * H1x2_6 ;
105084    +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
105085    +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
105086    +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
105087    +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 *
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5
+ 0.83089577154267 * H1x2_6 ;
105088    +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
105089    +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
105090    +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
105091    +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 +
-0.21291665093094 * H1x2_6 ;
105092    +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
105093    +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
105094    +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
105095    +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 +
0.28627108561279 * H1x2_6 ;
105096    +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
105097    +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
105098    +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
105099    +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
105100    +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
105101    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
105102    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
105103    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
105104    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
105105    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
105106    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
105107    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
105108    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
105109    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
105110    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
105111    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
105112    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
105113    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
105114    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
105115    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
105116    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
105117    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
105118    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
105119    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
105120    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
105121    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
105122    +END;
MPRINT(EM_DIAGRAM):   END;
105123    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105124    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
105125    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
105126    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
105127    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
105128    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
105129    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
105130    +END;
MPRINT(EM_DIAGRAM):   END;
105131    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105132    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
105133    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105134    +
105135    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
105136    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
105137    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
105138    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
105139    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
105140    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105141    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
105142    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
105143    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
105144    +end;
MPRINT(EM_DIAGRAM):   end;
105145    +else do;
MPRINT(EM_DIAGRAM):   else do;
105146    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
105147    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
105148    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
105149    +   end;
MPRINT(EM_DIAGRAM):   end;
105150    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
105151    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
105152    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
105153    +   end;
MPRINT(EM_DIAGRAM):   end;
105154    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105155    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
105156    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
105157    +   end;
MPRINT(EM_DIAGRAM):   end;
105158    +end;
MPRINT(EM_DIAGRAM):   end;
105159    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105160    +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
105161    +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
105162    +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 +
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 +
2.70843493957574 * H2x1_6 ;
105163    +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
105164    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
105165    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
105166    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
105167    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
105168    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
105169    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
105170    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
105171    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
105172    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
105173    +END;
MPRINT(EM_DIAGRAM):   END;
105174    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105175    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
105176    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
105177    +END;
MPRINT(EM_DIAGRAM):   END;
105178    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
105179    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
105180    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
105181    +END;
MPRINT(EM_DIAGRAM):   END;
105182    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
105183    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
105184    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
105185    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
105186    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
105187    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
105188    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
105189    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105190    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
105191    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105192    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
105193    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
105194    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
105195    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
105196    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
105197    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
105198    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
105199    +END;
MPRINT(EM_DIAGRAM):   END;
105200    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
105201    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
105202    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
105203    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
105204    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
105205    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105206    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
105207    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105208    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
105209    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
105210    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
105211    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
105212    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105213    +* Renaming Into variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural42;
105214    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105215    +length AutoNeural42_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural42_I_DepVar $32;
105216    +drop AutoNeural42_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_I_DepVar;
105217    +AutoNeural42_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural42_I_DepVar = I_DepVar;
105218    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105219    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
105220    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105221    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
105222    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
105223    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
105224    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105225    +* Ensmbl59: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 6 of 7;
105226    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105227    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105228    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
105229    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
105230    +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
105231    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
105232    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
105233    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
105234    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
105235    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
105236    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
105237    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
105238    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
105239    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
105240    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
105241    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
105242    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
105243    +LENGTH _WARN_ $4
105244    +      F_DepVar  $ 12
105245    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
105246    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
105247    +
105248    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
105249    +
105250    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
105251    +
105252    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
105253    +
105254    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
105255    +
105256    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
105257    +
105258    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
105259    +
105260    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
105261    +
105262    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
105263    +
105264    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
105265    +
105266    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
105267    +
105268    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
105269    +
105270    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
105271    +
105272    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
105273    +
105274    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
105275    +
105276    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
105277    +
105278    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
105279    +
105280    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
105281    +
105282    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
105283    +
105284    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
105285    +
105286    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
105287    +
105288    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
105289    +
105290    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
105291    +
105292    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
105293    +
105294    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
105295    +
105296    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
105297    +
105298    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
105299    +
105300    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
105301    +
105302    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
105303    +
105304    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
105305    +
105306    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
105307    +
105308    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
105309    +
105310    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
105311    +
105312    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
105313    +
105314    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
105315    +
105316    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
105317    +
105318    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
105319    +
105320    +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
105321    +
105322    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
105323    +
105324    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
105325    +
105326    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
105327    +
105328    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
105329    +
105330    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
105331    +
105332    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
105333    +
105334    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
105335    +
105336    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
105337    +
105338    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
105339    +
105340    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
105341    +
105342    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
105343    +
105344    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
105345    +
105346    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
105347    +
105348    +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
105349    +
105350    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
105351    +
105352    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
105353    +
105354    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
105355    +
105356    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
105357    +
105358    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
105359    +
105360    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
105361    +
105362    +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
105363    +
105364    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
105365    +
105366    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
105367    +
105368    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
105369    +
105370    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
105371    +
105372    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
105373    +
105374    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
105375    +
105376    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
105377    +
105378    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
105379    +
105380    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
105381    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
105382    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
105383    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
105384    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
105385    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
105386    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
105387    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
105388    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
105389    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
105390    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
105391    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
105392    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
105393    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
105394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105395    +end;
MPRINT(EM_DIAGRAM):   end;
105396    +else do;
MPRINT(EM_DIAGRAM):   else do;
105397    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
105398    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
105399    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
105400    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
105401    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
105402    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
105403    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
105404    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
105405    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105406    +         end;
MPRINT(EM_DIAGRAM):   end;
105407    +         else do;
MPRINT(EM_DIAGRAM):   else do;
105408    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
105409    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
105410    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105411    +            end;
MPRINT(EM_DIAGRAM):   end;
105412    +         end;
MPRINT(EM_DIAGRAM):   end;
105413    +      end;
MPRINT(EM_DIAGRAM):   end;
105414    +      else do;
MPRINT(EM_DIAGRAM):   else do;
105415    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
105416    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
105417    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105418    +         end;
MPRINT(EM_DIAGRAM):   end;
105419    +      end;
MPRINT(EM_DIAGRAM):   end;
105420    +   end;
MPRINT(EM_DIAGRAM):   end;
105421    +   else do;
MPRINT(EM_DIAGRAM):   else do;
105422    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
105423    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
105424    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105425    +      end;
MPRINT(EM_DIAGRAM):   end;
105426    +      else do;
MPRINT(EM_DIAGRAM):   else do;
105427    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
105428    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
105429    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
105430    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
105431    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
105432    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
105433    +         end;
MPRINT(EM_DIAGRAM):   end;
105434    +      end;
MPRINT(EM_DIAGRAM):   end;
105435    +   end;
MPRINT(EM_DIAGRAM):   end;
105436    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
105437    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
105438    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
105439    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
105440    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
105441    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
105442    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105443    +   end;
MPRINT(EM_DIAGRAM):   end;
105444    +end;
MPRINT(EM_DIAGRAM):   end;
105445    +
105446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105447    +*** Checking missing input Interval
105448    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
105449    +
105450    +IF NMISS(
105451    +   AcceptedCmpTotal ,
105452    +   Frq ,
105453    +   Income ,
105454    +   Mnt ,
105455    +   MntGoldProds ,
105456    +   MntMeatProducts ,
105457    +   NumCatalogPurchases ,
105458    +   NumDealsPurchases ,
105459    +   NumWebVisitsMonth ,
105460    +   RFMstat ,
105461    +   Recency ,
105462    +   Teenhome ,
105463    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
105464    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
105465    +
105466    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
105467    +END;
MPRINT(EM_DIAGRAM):   END;
105468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105469    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
105470    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105471    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105472    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
105473    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
105474    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
105475    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
105476    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
105477    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
105478    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
105479    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
105480    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
105481    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
105482    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
105483    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
105484    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
105485    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
105486    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
105487    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
105488    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
105489    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
105490    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
105491    +END;
MPRINT(EM_DIAGRAM):   END;
105492    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105493    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
105494    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
105495    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
105496    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
105497    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
105498    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
105499    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
105500    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
105501    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
105502    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
105503    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
105504    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
105505    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
105506    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
105507    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
105508    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
105509    +   ELSE S_NumCatalogPurchases
105510    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
105511    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
105512    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
105513    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
105514    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
105515    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
105516    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
105517    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
105518    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
105519    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
105520    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
105521    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
105522    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
105523    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
105524    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
105525    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
105526    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
105527    +END;
MPRINT(EM_DIAGRAM):   END;
105528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105529    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
105530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105531    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105532    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
105533    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105534    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105535    +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
105536    +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
105537    +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
105538    +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
105539    +          +    -0.82528424139262 * S_NumCatalogPurchases
105540    +          +      0.5929046965244 * S_NumDealsPurchases
105541    +          +    -0.52362488197384 * S_NumWebVisitsMonth
105542    +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
105543    +        S_Recency  +    -0.83670225777249 * S_Teenhome
105544    +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 *
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 *
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 *
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 *
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency +
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
105545    +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
105546    +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
105547    +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
105548    +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
105549    +          +    -0.60117742307807 * S_NumCatalogPurchases
105550    +          +     1.09806082321711 * S_NumDealsPurchases
105551    +          +     1.26617704720444 * S_NumWebVisitsMonth
105552    +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
105553    +        S_Recency  +     -0.2630764341314 * S_Teenhome
105554    +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 *
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 *
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 *
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 *
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency +
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
105555    +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
105556    +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
105557    +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
105558    +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
105559    +          +     1.63075268570383 * S_NumCatalogPurchases
105560    +          +     0.62057902628545 * S_NumDealsPurchases
105561    +          +     1.85944172136218 * S_NumWebVisitsMonth
105562    +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
105563    +        S_Recency  +    -0.78663308544854 * S_Teenhome
105564    +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 *
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 *
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 *
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 *
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency +
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
105565    +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
105566    +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
105567    +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
105568    +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
105569    +          +    -2.59032878085972 * S_NumCatalogPurchases
105570    +          +    -0.44146008176644 * S_NumDealsPurchases
105571    +          +     1.16377649939583 * S_NumWebVisitsMonth
105572    +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
105573    +        S_Recency  +    -0.44721505258044 * S_Teenhome
105574    +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 *
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 *
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 *
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 *
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency +
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
105575    +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
105576    +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
105577    +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
105578    +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
105579    +          +    -2.88423926492169 * S_NumCatalogPurchases
105580    +          +     0.76448279454687 * S_NumDealsPurchases
105581    +          +     0.63782718366339 * S_NumWebVisitsMonth
105582    +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
105583    +        S_Recency  +     0.19809045233143 * S_Teenhome
105584    +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 *
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 *
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 *
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 *
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency +
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
105585    +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
105586    +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
105587    +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
105588    +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
105589    +          +     1.71243370379543 * S_NumCatalogPurchases
105590    +          +     1.59034024362028 * S_NumDealsPurchases
105591    +          +     2.43090724707282 * S_NumWebVisitsMonth
105592    +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
105593    +        S_Recency  +    -1.20398234836557 * S_Teenhome
105594    +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 *
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 *
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 *
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 *
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency +
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
105595    +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
105596    +          +     1.90782989914192 * Marital_StatusMarried
105597    +          +    -1.16189886119693 * Marital_StatusSingle
105598    +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced +
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle +
1.42717413956591 * Marital_StatusTogether ;
105599    +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
105600    +          +     0.30468777490799 * Marital_StatusMarried
105601    +          +     0.61978761938746 * Marital_StatusSingle
105602    +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced +
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle +
-0.78873321292122 * Marital_StatusTogether ;
105603    +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
105604    +          +    -1.73477859605124 * Marital_StatusMarried
105605    +          +     1.32595981126289 * Marital_StatusSingle
105606    +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced +
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle +
-1.40161784211243 * Marital_StatusTogether ;
105607    +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
105608    +          +     0.06077392213964 * Marital_StatusMarried
105609    +          +     0.21115279121703 * Marital_StatusSingle
105610    +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced +
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle +
-0.61340758151821 * Marital_StatusTogether ;
105611    +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
105612    +          +    -0.24067068377767 * Marital_StatusMarried
105613    +          +      0.2728964145401 * Marital_StatusSingle
105614    +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced +
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle +
-0.61614895252648 * Marital_StatusTogether ;
105615    +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
105616    +          +    -0.15640287278595 * Marital_StatusMarried
105617    +          +     0.54159395450762 * Marital_StatusSingle
105618    +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced +
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle +
-0.43264862434738 * Marital_StatusTogether ;
105619    +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
105620    +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
105621    +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
105622    +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
105623    +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
105624    +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
105625    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
105626    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
105627    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
105628    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
105629    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
105630    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
105631    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
105632    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
105633    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
105634    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
105635    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
105636    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
105637    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
105638    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
105639    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
105640    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
105641    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
105642    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
105643    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
105644    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
105645    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
105646    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
105647    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
105648    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
105649    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
105650    +END;
MPRINT(EM_DIAGRAM):   END;
105651    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105652    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
105653    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
105654    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
105655    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
105656    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
105657    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
105658    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
105659    +END;
MPRINT(EM_DIAGRAM):   END;
105660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105661    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
105662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105663    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105664    +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
105665    +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
105666    +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
105667    +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
105668    +          +     0.14209124492657 * S_NumCatalogPurchases
105669    +          +    -1.31625106509803 * S_NumDealsPurchases
105670    +          +     2.35745588368331 * S_NumWebVisitsMonth
105671    +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
105672    +        S_Recency  +     1.23527100408525 * S_Teenhome
105673    +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 *
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 *
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 *
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 *
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency +
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
105674    +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
105675    +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
105676    +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
105677    +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
105678    +          +     1.18605040958794 * S_NumCatalogPurchases
105679    +          +    -0.89798157472835 * S_NumDealsPurchases
105680    +          +    -0.09236646871049 * S_NumWebVisitsMonth
105681    +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
105682    +        S_Recency  +    -0.50770218335102 * S_Teenhome
105683    +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 *
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 *
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 *
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 *
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency +
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
105684    +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
105685    +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
105686    +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
105687    +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
105688    +          +    -1.53424308314822 * S_NumCatalogPurchases
105689    +          +    -0.80590323269981 * S_NumDealsPurchases
105690    +          +    -1.40104490662303 * S_NumWebVisitsMonth
105691    +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
105692    +        S_Recency  +     0.96086280467056 * S_Teenhome
105693    +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 *
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 *
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 *
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 *
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency +
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
105694    +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
105695    +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
105696    +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
105697    +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
105698    +          +    -1.25862219948587 * S_NumCatalogPurchases
105699    +          +     1.95015982914109 * S_NumDealsPurchases
105700    +          +     0.64320281589594 * S_NumWebVisitsMonth
105701    +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
105702    +        S_Recency  +    -0.00184949563812 * S_Teenhome
105703    +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases +
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth +
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome +
-0.90548552271817 * S_Year_Birth ;
105704    +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
105705    +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
105706    +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
105707    +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
105708    +          +     0.30573893169917 * S_NumCatalogPurchases
105709    +          +     0.93169788380491 * S_NumDealsPurchases
105710    +          +     0.04516037232248 * S_NumWebVisitsMonth
105711    +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
105712    +        S_Recency  +      0.1429120113072 * S_Teenhome
105713    +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases +
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth +
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome +
0.57728849891114 * S_Year_Birth ;
105714    +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
105715    +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
105716    +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
105717    +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
105718    +          +      0.2704422632168 * S_NumCatalogPurchases
105719    +          +      2.3389342094366 * S_NumDealsPurchases
105720    +          +     0.01076302858809 * S_NumWebVisitsMonth
105721    +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
105722    +        S_Recency  +     0.68455094392125 * S_Teenhome
105723    +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 *
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 *
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 *
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 *
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency +
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
105724    +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
105725    +          +      0.8255833782513 * Marital_StatusMarried
105726    +          +    -0.48959165020896 * Marital_StatusSingle
105727    +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced +
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle +
2.83781371812098 * Marital_StatusTogether ;
105728    +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
105729    +          +    -0.36405013930464 * Marital_StatusMarried
105730    +          +    -0.11895921007246 * Marital_StatusSingle
105731    +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced +
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle +
-0.94713834966834 * Marital_StatusTogether ;
105732    +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
105733    +          +    -1.38902793752658 * Marital_StatusMarried
105734    +          +     0.47104623132568 * Marital_StatusSingle
105735    +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced +
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle +
-0.55354712799424 * Marital_StatusTogether ;
105736    +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
105737    +          +     0.03793816986941 * Marital_StatusMarried
105738    +          +     0.32286910605532 * Marital_StatusSingle
105739    +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced +
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle +
-1.44817209305758 * Marital_StatusTogether ;
105740    +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
105741    +          +    -0.60013237897988 * Marital_StatusMarried
105742    +          +    -1.54090744803073 * Marital_StatusSingle
105743    +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced +
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle +
-2.24346446510302 * Marital_StatusTogether ;
105744    +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
105745    +          +     2.39490119482132 * Marital_StatusMarried
105746    +          +     0.73080073298893 * Marital_StatusSingle
105747    +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced +
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle +
-0.62296432915598 * Marital_StatusTogether ;
105748    +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
105749    +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
105750    +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
105751    +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
105752    +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
105753    +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
105754    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
105755    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
105756    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
105757    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
105758    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
105759    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
105760    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
105761    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
105762    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
105763    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
105764    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
105765    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
105766    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
105767    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
105768    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
105769    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
105770    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
105771    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
105772    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
105773    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
105774    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
105775    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
105776    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
105777    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
105778    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
105779    +END;
MPRINT(EM_DIAGRAM):   END;
105780    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105781    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
105782    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
105783    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
105784    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
105785    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
105786    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
105787    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
105788    +END;
MPRINT(EM_DIAGRAM):   END;
105789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105790    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
105791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105792    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105793    +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
105794    +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
105795    +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
105796    +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
105797    +          +     2.25334156596167 * S_NumCatalogPurchases
105798    +          +     1.11206221926547 * S_NumDealsPurchases
105799    +          +    -0.86546062057987 * S_NumWebVisitsMonth
105800    +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
105801    +        S_Recency  +    -1.57916593034924 * S_Teenhome
105802    +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 *
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 *
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 *
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 *
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency +
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
105803    +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
105804    +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
105805    +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
105806    +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
105807    +          +    -0.72830662589886 * S_NumCatalogPurchases
105808    +          +    -1.43194640925705 * S_NumDealsPurchases
105809    +          +     0.27875145672985 * S_NumWebVisitsMonth
105810    +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
105811    +        S_Recency  +    -1.01056905981073 * S_Teenhome
105812    +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 *
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 *
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 *
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 *
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency +
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
105813    +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
105814    +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
105815    +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
105816    +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
105817    +          +    -0.29577972728188 * S_NumCatalogPurchases
105818    +          +    -0.09204036503823 * S_NumDealsPurchases
105819    +          +     1.09127760712522 * S_NumWebVisitsMonth
105820    +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
105821    +        S_Recency  +    -1.61269837976842 * S_Teenhome
105822    +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 *
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 *
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 *
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 *
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency +
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
105823    +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
105824    +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
105825    +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
105826    +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
105827    +          +     0.74771164805463 * S_NumCatalogPurchases
105828    +          +     1.48674373289951 * S_NumDealsPurchases
105829    +          +    -0.43724934700095 * S_NumWebVisitsMonth
105830    +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
105831    +        S_Recency  +      1.5969237416548 * S_Teenhome
105832    +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases +
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth +
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome +
-0.1539761100948 * S_Year_Birth ;
105833    +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
105834    +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
105835    +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
105836    +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
105837    +          +     0.32607897654777 * S_NumCatalogPurchases
105838    +          +    -0.05989936582211 * S_NumDealsPurchases
105839    +          +     -0.8863628882594 * S_NumWebVisitsMonth
105840    +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
105841    +        S_Recency  +      1.1633098880037 * S_Teenhome
105842    +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 *
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 *
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 *
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 *
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency +
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
105843    +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
105844    +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
105845    +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
105846    +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
105847    +          +    -0.32855091358254 * S_NumCatalogPurchases
105848    +          +    -0.04262624947945 * S_NumDealsPurchases
105849    +          +     0.34844893542429 * S_NumWebVisitsMonth
105850    +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
105851    +        S_Recency  +     0.25374922499465 * S_Teenhome
105852    +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 *
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 *
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 *
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 *
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency +
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
105853    +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
105854    +          +    -1.19357131519861 * Marital_StatusMarried
105855    +          +     1.01104838285626 * Marital_StatusSingle
105856    +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced +
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle +
-1.80955917142309 * Marital_StatusTogether ;
105857    +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
105858    +          +     0.41518199668826 * Marital_StatusMarried
105859    +          +     1.03267293059069 * Marital_StatusSingle
105860    +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced +
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle +
-0.66743874470855 * Marital_StatusTogether ;
105861    +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
105862    +          +     0.56306179671807 * Marital_StatusMarried
105863    +          +    -1.20896369649342 * Marital_StatusSingle
105864    +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced +
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle +
0.2381860290523 * Marital_StatusTogether ;
105865    +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
105866    +          +    -2.56951757071166 * Marital_StatusMarried
105867    +          +     0.89024254219017 * Marital_StatusSingle
105868    +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced +
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle +
-1.38303524163943 * Marital_StatusTogether ;
105869    +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
105870    +          +    -0.82560993254767 * Marital_StatusMarried
105871    +          +     0.67892086377875 * Marital_StatusSingle
105872    +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced +
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle +
-0.99872502550085 * Marital_StatusTogether ;
105873    +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
105874    +          +     1.62783448403167 * Marital_StatusMarried
105875    +          +     0.73020544049082 * Marital_StatusSingle
105876    +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced +
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle +
-0.22473120319236 * Marital_StatusTogether ;
105877    +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
105878    +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
105879    +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
105880    +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
105881    +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
105882    +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
105883    +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
105884    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
105885    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
105886    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
105887    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
105888    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
105889    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
105890    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
105891    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
105892    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
105893    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
105894    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
105895    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
105896    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
105897    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
105898    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
105899    +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
105900    +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
105901    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
105902    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
105903    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
105904    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
105905    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
105906    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
105907    +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
105908    +END;
MPRINT(EM_DIAGRAM):   END;
105909    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
105910    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
105911    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
105912    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
105913    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
105914    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
105915    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
105916    +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
105917    +END;
MPRINT(EM_DIAGRAM):   END;
105918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105919    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
105920    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
105921    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
105922    +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
105923    +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
105924    +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
105925    +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 +
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 +
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
105926    +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
105927    +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
105928    +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
105929    +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 +
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 +
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
105930    +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
105931    +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
105932    +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
105933    +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 +
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 +
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
105934    +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
105935    +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
105936    +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
105937    +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 +
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 +
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
105938    +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
105939    +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
105940    +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
105941    +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 +
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 +
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
105942    +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
105943    +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
105944    +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
105945    +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 +
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 +
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
105946    +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
105947    +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
105948    +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
105949    +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 +
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 +
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
105950    +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
105951    +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
105952    +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
105953    +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 +
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
105954    +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
105955    +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
105956    +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
105957    +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 +
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
105958    +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
105959    +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
105960    +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
105961    +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 +
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
105962    +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
105963    +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
105964    +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
105965    +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 +
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
105966    +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
105967    +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
105968    +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
105969    +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 *
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 +
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
105970    +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
105971    +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
105972    +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
105973    +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 *
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 +
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
105974    +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
105975    +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
105976    +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
105977    +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 +
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
105978    +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
105979    +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
105980    +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
105981    +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 +
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
105982    +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
105983    +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
105984    +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
105985    +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 *
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 +
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
105986    +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
105987    +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
105988    +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
105989    +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 *
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 +
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
105990    +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
105991    +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
105992    +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
105993    +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 +
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
105994    +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
105995    +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
105996    +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
105997    +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 +
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
105998    +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
105999    +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
106000    +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
106001    +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 *
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 +
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
106002    +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
106003    +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
106004    +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
106005    +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 +
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
106006    +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
106007    +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
106008    +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
106009    +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
106010    +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
106011    +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
106012    +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
106013    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
106014    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
106015    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
106016    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
106017    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
106018    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
106019    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
106020    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
106021    +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
106022    +END;
MPRINT(EM_DIAGRAM):   END;
106023    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
106024    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
106025    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
106026    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
106027    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
106028    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
106029    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
106030    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
106031    +END;
MPRINT(EM_DIAGRAM):   END;
106032    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106033    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
106034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106035    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
106036    +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
106037    +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
106038    +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
106039    +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 +
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 +
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
106040    +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
106041    +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
106042    +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
106043    +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 +
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 +
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
106044    +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
106045    +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
106046    +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
106047    +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 +
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 +
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
106048    +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
106049    +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
106050    +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
106051    +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 +
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 +
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
106052    +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
106053    +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
106054    +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
106055    +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 +
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 +
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
106056    +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
106057    +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
106058    +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
106059    +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 +
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 +
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
106060    +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
106061    +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
106062    +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
106063    +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 +
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 +
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
106064    +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
106065    +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
106066    +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
106067    +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 *
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 +
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
106068    +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
106069    +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
106070    +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
106071    +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 +
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 +
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
106072    +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
106073    +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
106074    +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
106075    +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 +
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
106076    +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
106077    +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
106078    +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
106079    +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 +
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
106080    +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
106081    +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
106082    +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
106083    +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 *
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 +
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
106084    +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
106085    +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
106086    +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
106087    +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 +
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
106088    +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
106089    +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
106090    +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
106091    +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 *
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 +
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
106092    +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
106093    +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
106094    +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
106095    +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 *
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 +
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
106096    +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
106097    +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
106098    +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
106099    +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 +
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
106100    +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
106101    +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
106102    +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
106103    +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 +
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
106104    +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
106105    +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
106106    +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
106107    +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 +
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
106108    +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
106109    +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
106110    +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
106111    +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 *
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 +
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
106112    +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
106113    +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
106114    +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
106115    +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 +
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
106116    +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
106117    +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
106118    +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
106119    +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 *
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 +
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
106120    +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
106121    +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
106122    +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
106123    +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
106124    +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
106125    +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
106126    +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
106127    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
106128    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
106129    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
106130    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
106131    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
106132    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
106133    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
106134    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
106135    +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
106136    +END;
MPRINT(EM_DIAGRAM):   END;
106137    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
106138    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
106139    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
106140    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
106141    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
106142    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
106143    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
106144    +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
106145    +END;
MPRINT(EM_DIAGRAM):   END;
106146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106147    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
106148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106149    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
106150    +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
106151    +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
106152    +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
106153    +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 +
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 +
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
106154    +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
106155    +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
106156    +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
106157    +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 +
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 +
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
106158    +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
106159    +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
106160    +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
106161    +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 +
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 +
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
106162    +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
106163    +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
106164    +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
106165    +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 +
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 +
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
106166    +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
106167    +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
106168    +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
106169    +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 +
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 +
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
106170    +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
106171    +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
106172    +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
106173    +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 +
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 +
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
106174    +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
106175    +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
106176    +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
106177    +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 +
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
106178    +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
106179    +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
106180    +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
106181    +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 +
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
106182    +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
106183    +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
106184    +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
106185    +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 +
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
106186    +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
106187    +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
106188    +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
106189    +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 +
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
106190    +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
106191    +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
106192    +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
106193    +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 *
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 +
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
106194    +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
106195    +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
106196    +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
106197    +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 *
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 +
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
106198    +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
106199    +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
106200    +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
106201    +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
106202    +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
106203    +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
106204    +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
106205    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
106206    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 ,
H3x1_7 );
106207    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
106208    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
106209    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
106210    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
106211    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
106212    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
106213    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
106214    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
106215    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
106216    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
106217    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
106218    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
106219    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
106220    +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
106221    +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
106222    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
106223    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
106224    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
106225    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
106226    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
106227    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
106228    +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
106229    +END;
MPRINT(EM_DIAGRAM):   END;
106230    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
106231    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
106232    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
106233    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
106234    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
106235    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
106236    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
106237    +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
106238    +END;
MPRINT(EM_DIAGRAM):   END;
106239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106240    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
106241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106242    +
106243    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
106244    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
106245    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
106246    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
106247    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
106248    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
106249    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
106250    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
106251    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
106252    +end;
MPRINT(EM_DIAGRAM):   end;
106253    +else do;
MPRINT(EM_DIAGRAM):   else do;
106254    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
106255    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
106256    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
106257    +   end;
MPRINT(EM_DIAGRAM):   end;
106258    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
106259    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
106260    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
106261    +   end;
MPRINT(EM_DIAGRAM):   end;
106262    +   else do;
MPRINT(EM_DIAGRAM):   else do;
106263    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
106264    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
106265    +   end;
MPRINT(EM_DIAGRAM):   end;
106266    +end;
MPRINT(EM_DIAGRAM):   end;
106267    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
106268    +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
106269    +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
106270    +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
106271    +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 +
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 +
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
106272    +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
106273    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
106274    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
106275    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
106276    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
106277    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
106278    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
106279    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
106280    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
106281    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
106282    +END;
MPRINT(EM_DIAGRAM):   END;
106283    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
106284    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
106285    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
106286    +END;
MPRINT(EM_DIAGRAM):   END;
106287    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
106288    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
106289    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
106290    +END;
MPRINT(EM_DIAGRAM):   END;
106291    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
106292    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
106293    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
106294    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
106295    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
106296    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
106297    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
106298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106299    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
106300    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106301    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
106302    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
106303    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
106304    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
106305    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
106306    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
106307    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
106308    +END;
MPRINT(EM_DIAGRAM):   END;
106309    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
106310    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
106311    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
106312    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
106313    +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
106314    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106315    +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
106316    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106317    +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
106318    +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
106319    +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
106320    +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
106321    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106322    +* Renaming Into variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural43;
106323    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106324    +length AutoNeural43_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural43_I_DepVar $32;
106325    +drop AutoNeural43_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_I_DepVar;
106326    +AutoNeural43_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural43_I_DepVar = I_DepVar;
106327    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106328    +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
106329    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106330    +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
106331    +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
106332    +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
106333    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106334    +* Ensmbl59: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 7 of 7;
106335    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106336    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106337    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
106338    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
106339    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
106340    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106341    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
106342    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
106343    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
106344    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
106345    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
106346    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
106347    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
106348    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
106349    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
106350    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
106351    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
106352    +LENGTH _WARN_ $4
106353    +      F_DepVar  $ 12
106354    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
106355    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
106356    +
106357    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
106358    +
106359    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
106360    +
106361    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
106362    +
106363    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
106364    +
106365    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
106366    +
106367    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
106368    +
106369    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
106370    +
106371    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
106372    +
106373    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
106374    +
106375    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
106376    +
106377    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
106378    +
106379    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
106380    +
106381    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
106382    +
106383    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
106384    +
106385    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
106386    +
106387    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
106388    +
106389    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
106390    +
106391    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
106392    +
106393    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
106394    +
106395    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
106396    +
106397    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
106398    +
106399    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
106400    +
106401    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
106402    +
106403    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
106404    +
106405    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
106406    +
106407    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
106408    +
106409    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
106410    +
106411    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
106412    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
106413    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
106414    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
106415    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
106416    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
106417    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
106418    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
106419    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
106420    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
106421    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
106422    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
106423    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
106424    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
106425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
106426    +end;
MPRINT(EM_DIAGRAM):   end;
106427    +else do;
MPRINT(EM_DIAGRAM):   else do;
106428    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
106429    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
106430    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
106431    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
106432    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
106433    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
106434    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
106435    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
106436    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
106437    +         end;
MPRINT(EM_DIAGRAM):   end;
106438    +         else do;
MPRINT(EM_DIAGRAM):   else do;
106439    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
106440    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
106441    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
106442    +            end;
MPRINT(EM_DIAGRAM):   end;
106443    +         end;
MPRINT(EM_DIAGRAM):   end;
106444    +      end;
MPRINT(EM_DIAGRAM):   end;
106445    +      else do;
MPRINT(EM_DIAGRAM):   else do;
106446    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
106447    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
106448    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
106449    +         end;
MPRINT(EM_DIAGRAM):   end;
106450    +      end;
MPRINT(EM_DIAGRAM):   end;
106451    +   end;
MPRINT(EM_DIAGRAM):   end;
106452    +   else do;
MPRINT(EM_DIAGRAM):   else do;
106453    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
106454    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
106455    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
106456    +      end;
MPRINT(EM_DIAGRAM):   end;
106457    +      else do;
MPRINT(EM_DIAGRAM):   else do;
106458    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
106459    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
106460    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
106461    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
106462    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
106463    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
106464    +         end;
MPRINT(EM_DIAGRAM):   end;
106465    +      end;
MPRINT(EM_DIAGRAM):   end;
106466    +   end;
MPRINT(EM_DIAGRAM):   end;
106467    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
106468    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
106469    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
106470    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
106471    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
106472    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
106473    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
106474    +   end;
MPRINT(EM_DIAGRAM):   end;
106475    +end;
MPRINT(EM_DIAGRAM):   end;
106476    +
106477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106478    +*** Checking missing input Interval
106479    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
106480    +
106481    +IF NMISS(
106482    +   AcceptedCmpTotal ,
106483    +   Frq ,
106484    +   Income ,
106485    +   Mnt ,
106486    +   MntGoldProds ,
106487    +   MntMeatProducts ,
106488    +   NumCatalogPurchases ,
106489    +   NumDealsPurchases ,
106490    +   NumWebVisitsMonth ,
106491    +   RFMstat ,
106492    +   Recency ,
106493    +   Teenhome ,
106494    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
106495    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
106496    +
106497    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
106498    +END;
MPRINT(EM_DIAGRAM):   END;
106499    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106500    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
106501    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106502    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
106503    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
106504    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
106505    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
106506    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
106507    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
106508    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
106509    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
106510    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
106511    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
106512    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
106513    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
106514    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
106515    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
106516    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
106517    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
106518    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
106519    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
106520    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
106521    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
106522    +END;
MPRINT(EM_DIAGRAM):   END;
106523    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
106524    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
106525    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
106526    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
106527    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
106528    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
106529    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
106530    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
106531    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
106532    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
106533    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
106534    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
106535    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
106536    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
106537    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
106538    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
106539    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
106540    +   ELSE S_NumCatalogPurchases
106541    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
106542    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
106543    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
106544    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
106545    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
106546    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
106547    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
106548    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
106549    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
106550    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
106551    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
106552    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
106553    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
106554    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
106555    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
106556    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
106557    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
106558    +END;
MPRINT(EM_DIAGRAM):   END;
106559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106560    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
106561    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106563    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
106564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106565    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
106566    +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
106567    +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
106568    +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
106569    +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
106570    +          +    -0.01423451356563 * S_NumCatalogPurchases
106571    +          +     0.06006350655487 * S_NumDealsPurchases
106572    +          +    -0.20885493964335 * S_NumWebVisitsMonth
106573    +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
106574    +        S_Recency  +    -0.03326479668652 * S_Teenhome
106575    +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 *
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 *
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 *
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 *
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency +
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
106576    +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
106577    +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
106578    +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
106579    +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
106580    +          +    -0.03109266966794 * S_NumCatalogPurchases
106581    +          +     0.05524435494328 * S_NumDealsPurchases
106582    +          +     -0.0105802056898 * S_NumWebVisitsMonth
106583    +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
106584    +        S_Recency  +       0.195010707702 * S_Teenhome
106585    +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 *
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 *
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 *
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 *
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency +
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
106586    +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
106587    +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
106588    +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
106589    +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
106590    +          +     0.07777995109144 * S_NumCatalogPurchases
106591    +          +     0.08683394019767 * S_NumDealsPurchases
106592    +          +     0.27328366433987 * S_NumWebVisitsMonth
106593    +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
106594    +        S_Recency  +      0.0640153287908 * S_Teenhome
106595    +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 *
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 *
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 *
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 *
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency +
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
106596    +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
106597    +          +    -0.02695167777393 * Marital_StatusMarried
106598    +          +    -0.00733864032764 * Marital_StatusSingle
106599    +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced +
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle +
0.03838747494293 * Marital_StatusTogether ;
106600    +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
106601    +          +     0.42249671001117 * Marital_StatusMarried
106602    +          +    -0.18515416581955 * Marital_StatusSingle
106603    +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced +
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle +
0.25783473520826 * Marital_StatusTogether ;
106604    +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
106605    +          +     0.45127582934777 * Marital_StatusMarried
106606    +          +       0.358157766485 * Marital_StatusSingle
106607    +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced +
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle +
0.42627185625497 * Marital_StatusTogether ;
106608    +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
106609    +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
106610    +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
106611    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
106612    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
106613    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
106614    +END;
MPRINT(EM_DIAGRAM):   END;
106615    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
106616    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
106617    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
106618    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
106619    +END;
MPRINT(EM_DIAGRAM):   END;
106620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106621    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
106622    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106623    +
106624    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
106625    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
106626    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
106627    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
106628    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
106629    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
106630    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
106631    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
106632    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
106633    +end;
MPRINT(EM_DIAGRAM):   end;
106634    +else do;
MPRINT(EM_DIAGRAM):   else do;
106635    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
106636    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
106637    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
106638    +   end;
MPRINT(EM_DIAGRAM):   end;
106639    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
106640    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
106641    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
106642    +   end;
MPRINT(EM_DIAGRAM):   end;
106643    +   else do;
MPRINT(EM_DIAGRAM):   else do;
106644    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
106645    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
106646    +   end;
MPRINT(EM_DIAGRAM):   end;
106647    +end;
MPRINT(EM_DIAGRAM):   end;
106648    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
106649    +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
106650    +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 +
-71.6251597703755 * H1x1_3 ;
106651    +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
106652    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
106653    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
106654    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
106655    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
106656    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
106657    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
106658    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
106659    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
106660    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
106661    +END;
MPRINT(EM_DIAGRAM):   END;
106662    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
106663    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
106664    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
106665    +END;
MPRINT(EM_DIAGRAM):   END;
106666    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
106667    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
106668    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
106669    +END;
MPRINT(EM_DIAGRAM):   END;
106670    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
106671    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
106672    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
106673    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
106674    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
106675    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
106676    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
106677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106678    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
106679    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
106680    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
106681    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
106682    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
106683    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
106684    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
106685    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
106686    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
106687    +END;
MPRINT(EM_DIAGRAM):   END;
106688    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
106689    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
106690    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
106691    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
106692    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
106693    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106694    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
106695    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106696    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
106697    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
106698    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
106699    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
106700    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106701    +* Renaming Into variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural46;
106702    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106703    +length AutoNeural46_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural46_I_DepVar $32;
106704    +drop AutoNeural46_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_I_DepVar;
106705    +AutoNeural46_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural46_I_DepVar = I_DepVar;
106706    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106707    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
106708    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106709    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
106710    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
106711    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
106712    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106713    +* Ensmbl59: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Voting to produce predicted target;
106714    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106715    +array Ensmbl59_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl59_post{2} _temporary_;
106716    +array Ensmbl59_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl59_count{2} _temporary_;
106717    +array Ensmbl59_level{2} $32 _temporary_ (
106718    +"1"
106719    +"0"
106720    +);
MPRINT(EM_DIAGRAM):   array Ensmbl59_level{2} $32 _temporary_ ( "1" "0" );
106721    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
106722    +Ensmbl59_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{i} = 0;
106723    +Ensmbl59_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{i} = 0;
106724    +end;
MPRINT(EM_DIAGRAM):   end;
106725    +if AutoNeural44_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural44_I_DepVar = Ensmbl59_level{1} then do;
106726    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
106727    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural44_P_DepVar1;
106728    +end;
MPRINT(EM_DIAGRAM):   end;
106729    +if AutoNeural45_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural45_I_DepVar = Ensmbl59_level{1} then do;
106730    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
106731    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural45_P_DepVar1;
106732    +end;
MPRINT(EM_DIAGRAM):   end;
106733    +if AutoNeural47_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural47_I_DepVar = Ensmbl59_level{1} then do;
106734    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
106735    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural47_P_DepVar1;
106736    +end;
MPRINT(EM_DIAGRAM):   end;
106737    +if AutoNeural41_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural41_I_DepVar = Ensmbl59_level{1} then do;
106738    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
106739    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural41_P_DepVar1;
106740    +end;
MPRINT(EM_DIAGRAM):   end;
106741    +if AutoNeural42_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural42_I_DepVar = Ensmbl59_level{1} then do;
106742    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
106743    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural42_P_DepVar1;
106744    +end;
MPRINT(EM_DIAGRAM):   end;
106745    +if AutoNeural43_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural43_I_DepVar = Ensmbl59_level{1} then do;
106746    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
106747    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural43_P_DepVar1;
106748    +end;
MPRINT(EM_DIAGRAM):   end;
106749    +if AutoNeural46_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural46_I_DepVar = Ensmbl59_level{1} then do;
106750    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
106751    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural46_P_DepVar1;
106752    +end;
MPRINT(EM_DIAGRAM):   end;
106753    +if AutoNeural44_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural44_I_DepVar = Ensmbl59_level{2} then do;
106754    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
106755    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural44_P_DepVar0;
106756    +end;
MPRINT(EM_DIAGRAM):   end;
106757    +if AutoNeural45_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural45_I_DepVar = Ensmbl59_level{2} then do;
106758    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
106759    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural45_P_DepVar0;
106760    +end;
MPRINT(EM_DIAGRAM):   end;
106761    +if AutoNeural47_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural47_I_DepVar = Ensmbl59_level{2} then do;
106762    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
106763    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural47_P_DepVar0;
106764    +end;
MPRINT(EM_DIAGRAM):   end;
106765    +if AutoNeural41_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural41_I_DepVar = Ensmbl59_level{2} then do;
106766    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
106767    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural41_P_DepVar0;
106768    +end;
MPRINT(EM_DIAGRAM):   end;
106769    +if AutoNeural42_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural42_I_DepVar = Ensmbl59_level{2} then do;
106770    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
106771    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural42_P_DepVar0;
106772    +end;
MPRINT(EM_DIAGRAM):   end;
106773    +if AutoNeural43_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural43_I_DepVar = Ensmbl59_level{2} then do;
106774    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
106775    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural43_P_DepVar0;
106776    +end;
MPRINT(EM_DIAGRAM):   end;
106777    +if AutoNeural46_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural46_I_DepVar = Ensmbl59_level{2} then do;
106778    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
106779    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural46_P_DepVar0;
106780    +end;
MPRINT(EM_DIAGRAM):   end;
106781    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106782    +* Ensmbl59: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Determine Into Variable;
106783    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106784    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
106785    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
106786    +vote_count = max(
106787    +Ensmbl59_count{1} ,
106788    +Ensmbl59_count{2}
106789    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl59_count{1} , Ensmbl59_count{2} );
106790    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
106791    +if Ensmbl59_count{i}=vote_count and Ensmbl59_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl59_count{i}=vote_count and Ensmbl59_post{i}>vote_post then do;
106792    +I_DepVar = Ensmbl59_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl59_level{i};
106793    +vote_post = Ensmbl59_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl59_count{i};
106794    +end;
MPRINT(EM_DIAGRAM):   end;
106795    +end;
MPRINT(EM_DIAGRAM):   end;
106796    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106797    +* Ensmbl59: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Compute posterior vars using models predicting the chosen
level;
106798    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106799    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
106800    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
106801    +if I_DepVar = AutoNeural44_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural44_I_DepVar then do;
106802    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural44_P_DepVar1;
106803    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural44_P_DepVar0;
106804    +end;
MPRINT(EM_DIAGRAM):   end;
106805    +if I_DepVar = AutoNeural45_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural45_I_DepVar then do;
106806    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural45_P_DepVar1;
106807    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural45_P_DepVar0;
106808    +end;
MPRINT(EM_DIAGRAM):   end;
106809    +if I_DepVar = AutoNeural47_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural47_I_DepVar then do;
106810    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural47_P_DepVar1;
106811    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural47_P_DepVar0;
106812    +end;
MPRINT(EM_DIAGRAM):   end;
106813    +if I_DepVar = AutoNeural41_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural41_I_DepVar then do;
106814    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural41_P_DepVar1;
106815    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural41_P_DepVar0;
106816    +end;
MPRINT(EM_DIAGRAM):   end;
106817    +if I_DepVar = AutoNeural42_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural42_I_DepVar then do;
106818    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural42_P_DepVar1;
106819    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural42_P_DepVar0;
106820    +end;
MPRINT(EM_DIAGRAM):   end;
106821    +if I_DepVar = AutoNeural43_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural43_I_DepVar then do;
106822    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural43_P_DepVar1;
106823    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural43_P_DepVar0;
106824    +end;
MPRINT(EM_DIAGRAM):   end;
106825    +if I_DepVar = AutoNeural46_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural46_I_DepVar then do;
106826    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural46_P_DepVar1;
106827    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural46_P_DepVar0;
106828    +end;
MPRINT(EM_DIAGRAM):   end;
106829    +* Ensmbl59: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Averaging posterior;
106830    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
106831    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
106832    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106833    +* Ensmbl59: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Producing Unformatted variable;
106834    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106835    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
106836    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
106837    +else
106838    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
106839    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106840    +* Ensmbl59: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing _WARN_ Variable;
106841    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106842    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
106843    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
106844    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
106845    +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
106845   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
106846    +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
106846   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
106847    +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
106847   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
106848    +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
106848   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
106849    +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
106849   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
106850    +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
106850   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
106851    +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
106851   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
106852    +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
106852   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
106853    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
106853   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
106854    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
106854   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
106855    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
106855   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
106856    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
106856   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
106857    +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
106857   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
106858    +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
106858   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
106859    +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
106859   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
106860    +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
106860   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
106861    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
106861   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
106862    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
106862   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
106863    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
106863   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
106864    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
106864   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
106865    +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
106865   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
106866    +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
106866   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
106867    +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
106867   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
106868    +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
106868   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
106869    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
106869   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
106870    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
106870   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
106871    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
106871   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
106872    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
106872   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
106873    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106874    +* Ensmbl59: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing Residual Vars;
106875    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
106876    +if
106877    +F_DepVar NE '1'
106878    +AND F_DepVar NE '0'
106879    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
106880    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
106881    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
106882    +end;
MPRINT(EM_DIAGRAM):   end;
106883    +else do;
MPRINT(EM_DIAGRAM):   else do;
106884    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
106885    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
106886    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
106887    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
106888    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
106889    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
106890    +END;
MPRINT(EM_DIAGRAM):   END;
106891    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
106892     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL59_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL44_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
106893     quit;
106894     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl59_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl59_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl59_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
106954     filename _pref
106954   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
106955     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
106956     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas.
106957    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
106958    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
106959    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
106960    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
106961    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
106962    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
106963    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
106964    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
106965    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
106966    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
106967    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
106968    +LENGTH _WARN_ $4
106969    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
106970    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
106971    +
106972    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
106973    +
106974    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
106975    +
106976    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
106977    +
106978    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
106979    +
106980    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
106981    +
106982    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
106983    +
106984    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
106985    +
106986    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
106987    +
106988    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
106989    +
106990    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
106991    +
106992    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
106993    +
106994    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
106995    +
106996    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
106997    +
106998    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
106999    +
107000    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
107001    +
107002    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
107003    +
107004    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
107005    +
107006    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
107007    +
107008    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
107009    +
107010    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
107011    +
107012    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
107013    +
107014    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
107015    +
107016    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
107017    +
107018    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
107019    +
107020    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
107021    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
107022    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
107023    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
107024    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
107025    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
107026    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
107027    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
107028    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
107029    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
107030    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
107031    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
107032    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
107033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
107034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107035    +end;
MPRINT(EM_DIAGRAM):   end;
107036    +else do;
MPRINT(EM_DIAGRAM):   else do;
107037    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
107038    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
107039    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
107040    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
107041    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
107042    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
107043    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
107044    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
107045    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107046    +         end;
MPRINT(EM_DIAGRAM):   end;
107047    +         else do;
MPRINT(EM_DIAGRAM):   else do;
107048    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
107049    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
107050    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107051    +            end;
MPRINT(EM_DIAGRAM):   end;
107052    +         end;
MPRINT(EM_DIAGRAM):   end;
107053    +      end;
MPRINT(EM_DIAGRAM):   end;
107054    +      else do;
MPRINT(EM_DIAGRAM):   else do;
107055    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
107056    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
107057    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107058    +         end;
MPRINT(EM_DIAGRAM):   end;
107059    +      end;
MPRINT(EM_DIAGRAM):   end;
107060    +   end;
MPRINT(EM_DIAGRAM):   end;
107061    +   else do;
MPRINT(EM_DIAGRAM):   else do;
107062    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
107063    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
107064    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107065    +      end;
MPRINT(EM_DIAGRAM):   end;
107066    +      else do;
MPRINT(EM_DIAGRAM):   else do;
107067    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
107068    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
107069    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
107070    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
107071    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
107072    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107073    +         end;
MPRINT(EM_DIAGRAM):   end;
107074    +      end;
MPRINT(EM_DIAGRAM):   end;
107075    +   end;
MPRINT(EM_DIAGRAM):   end;
107076    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
107077    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
107078    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
107079    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
107080    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
107081    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
107082    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107083    +   end;
MPRINT(EM_DIAGRAM):   end;
107084    +end;
MPRINT(EM_DIAGRAM):   end;
107085    +
107086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107087    +*** Checking missing input Interval
107088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
107089    +
107090    +IF NMISS(
107091    +   AcceptedCmpTotal ,
107092    +   Frq ,
107093    +   Income ,
107094    +   Mnt ,
107095    +   MntGoldProds ,
107096    +   MntMeatProducts ,
107097    +   NumCatalogPurchases ,
107098    +   NumDealsPurchases ,
107099    +   NumWebVisitsMonth ,
107100    +   RFMstat ,
107101    +   Recency ,
107102    +   Teenhome ,
107103    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
107104    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
107105    +
107106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107107    +END;
MPRINT(EM_DIAGRAM):   END;
107108    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107109    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
107110    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107111    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107112    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
107113    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
107114    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
107115    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
107116    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
107117    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
107118    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
107119    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
107120    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
107121    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
107122    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
107123    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
107124    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
107125    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
107126    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
107127    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
107128    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
107129    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
107130    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
107131    +END;
MPRINT(EM_DIAGRAM):   END;
107132    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107133    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
107134    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
107135    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
107136    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
107137    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
107138    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
107139    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
107140    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
107141    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
107142    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
107143    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
107144    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
107145    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
107146    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
107147    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
107148    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
107149    +   ELSE S_NumCatalogPurchases
107150    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
107151    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
107152    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
107153    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
107154    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
107155    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
107156    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
107157    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
107158    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
107159    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
107160    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
107161    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
107162    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
107163    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
107164    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
107165    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
107166    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
107167    +END;
MPRINT(EM_DIAGRAM):   END;
107168    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107169    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
107170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107171    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107172    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
107173    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107174    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107175    +   H1x1_1  =    -0.12469827057082 * S_AcceptedCmpTotal
107176    +          +      3.1876739677725 * S_Frq  +     0.13471808395353 * S_Income
107177    +          +    -0.55590218871332 * S_Mnt  +     0.49013595544334 *
107178    +        S_MntGoldProds  +    -8.24401774301659 * S_MntMeatProducts
107179    +          +    -1.41682724778123 * S_NumCatalogPurchases
107180    +          +    -0.81806751697478 * S_NumDealsPurchases
107181    +          +     0.13721060582485 * S_NumWebVisitsMonth
107182    +          +     -0.8599103465088 * S_RFMstat  +    -0.11788382213726 *
107183    +        S_Recency  +    -0.11154618858027 * S_Teenhome
107184    +          +    -0.09280870729016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.12469827057082 * S_AcceptedCmpTotal + 3.1876739677725 *
S_Frq + 0.13471808395353 * S_Income + -0.55590218871332 * S_Mnt + 0.49013595544334 *
S_MntGoldProds + -8.24401774301659 * S_MntMeatProducts + -1.41682724778123 *
S_NumCatalogPurchases + -0.81806751697478 * S_NumDealsPurchases + 0.13721060582485 *
S_NumWebVisitsMonth + -0.8599103465088 * S_RFMstat + -0.11788382213726 * S_Recency +
-0.11154618858027 * S_Teenhome + -0.09280870729016 * S_Year_Birth ;
107185    +   H1x1_1  = H1x1_1  +     0.34960218424017 * Marital_StatusDivorced
107186    +          +    -0.42475372885131 * Marital_StatusMarried
107187    +          +     0.12884500504295 * Marital_StatusSingle
107188    +          +    -0.15810267147538 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.34960218424017 * Marital_StatusDivorced +
-0.42475372885131 * Marital_StatusMarried + 0.12884500504295 * Marital_StatusSingle +
-0.15810267147538 * Marital_StatusTogether ;
107189    +   H1x1_1  =    -5.00010358329252 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -5.00010358329252 + H1x1_1 ;
107190    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
107191    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
107192    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
107193    +END;
MPRINT(EM_DIAGRAM):   END;
107194    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107195    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
107196    +END;
MPRINT(EM_DIAGRAM):   END;
107197    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107198    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
107199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107200    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107201    +   H1x2_1  =    -0.55977918187183 * S_AcceptedCmpTotal
107202    +          +     3.80877597264064 * S_Frq  +       0.740665099365 * S_Income
107203    +          +      1.2189502767856 * S_Mnt  +    -0.64069435073077 *
107204    +        S_MntGoldProds  +    -1.20953450523092 * S_MntMeatProducts
107205    +          +    -1.27566927607767 * S_NumCatalogPurchases
107206    +          +    -0.30700705450077 * S_NumDealsPurchases
107207    +          +    -1.10002183072059 * S_NumWebVisitsMonth
107208    +          +    -0.17115220906364 * S_RFMstat  +     0.98456522108133 *
107209    +        S_Recency  +    -0.46996209026516 * S_Teenhome
107210    +          +     0.11522881334392 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.55977918187183 * S_AcceptedCmpTotal + 3.80877597264064 *
S_Frq + 0.740665099365 * S_Income + 1.2189502767856 * S_Mnt + -0.64069435073077 *
S_MntGoldProds + -1.20953450523092 * S_MntMeatProducts + -1.27566927607767 *
S_NumCatalogPurchases + -0.30700705450077 * S_NumDealsPurchases + -1.10002183072059 *
S_NumWebVisitsMonth + -0.17115220906364 * S_RFMstat + 0.98456522108133 * S_Recency +
-0.46996209026516 * S_Teenhome + 0.11522881334392 * S_Year_Birth ;
107211    +   H1x2_1  = H1x2_1  +    -0.23272680240317 * Marital_StatusDivorced
107212    +          +    -0.32389187879499 * Marital_StatusMarried
107213    +          +     0.77856411154011 * Marital_StatusSingle
107214    +          +    -0.63289071596123 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.23272680240317 * Marital_StatusDivorced +
-0.32389187879499 * Marital_StatusMarried + 0.77856411154011 * Marital_StatusSingle +
-0.63289071596123 * Marital_StatusTogether ;
107215    +   H1x2_1  =     3.21350083886443 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 3.21350083886443 + H1x2_1 ;
107216    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
107217    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
107218    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
107219    +END;
MPRINT(EM_DIAGRAM):   END;
107220    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107221    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
107222    +END;
MPRINT(EM_DIAGRAM):   END;
107223    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107224    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
107225    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107226    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107227    +   H2x1_1  =    -7.90353913070205 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -7.90353913070205 * H1x1_1 ;
107228    +   H2x1_1  = H2x1_1  +     -3.6151322253591 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -3.6151322253591 * H1x2_1 ;
107229    +   H2x1_1  =     2.06123756742001 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 2.06123756742001 + H2x1_1 ;
107230    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
107231    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
107232    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
107233    +END;
MPRINT(EM_DIAGRAM):   END;
107234    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107235    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
107236    +END;
MPRINT(EM_DIAGRAM):   END;
107237    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107238    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
107239    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107240    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107241    +   P_DepVar1  =     23.6383607789635 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 23.6383607789635 * H2x1_1 ;
107242    +   P_DepVar1  =    -12.8845549880418 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.8845549880418 + P_DepVar1 ;
107243    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
107244    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
107245    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
107246    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
107247    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
107248    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
107249    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
107250    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
107251    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
107252    +END;
MPRINT(EM_DIAGRAM):   END;
107253    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107254    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
107255    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
107256    +END;
MPRINT(EM_DIAGRAM):   END;
107257    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
107258    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
107259    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
107260    +END;
MPRINT(EM_DIAGRAM):   END;
107261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107262    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
107263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107264    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
107265    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
107266    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
107267    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
107268    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
107269    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
107270    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
107271    +END;
MPRINT(EM_DIAGRAM):   END;
107272    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
107273    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
107274    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
107275    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
107276     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
107277     quit;
107278     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
107279     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
107280     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
107281     retain ID 2 Node "AutoNeural44";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural44";
107282     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
107283     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 997 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 997 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
107284     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
107285     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107286     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 997 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 997 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107287     proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME
CREATOR);
107288     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107289     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL44_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107290     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
107291     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
107292     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
107293     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
107294     proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
107295     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
107296     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
107297     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107298     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
107299     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
107300     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
107301     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107302     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107303     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
107304     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
107304   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 514 rows and 5 columns.
 
107305     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107306     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
107307     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 514 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 514 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107308     filename _pref
107308   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
107309     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
107310     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
107311    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
107312    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
107313    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
107314    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
107315    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
107316    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
107317     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
107318     quit;
107319     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
107320     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
107321     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
107322     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
107323     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
107324     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
107325     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
107326     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107327     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107328     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
107329     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107330     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107331     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
107332     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
107333     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
107334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107335     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
107336     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
107337     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
107338     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107339     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107340     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
107341     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
107342     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107343     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
107344     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
107345     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
107345   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
107346     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107347     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
107348     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 518 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107349     filename _pref
107349   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
107350     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
107351     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
107352    +
107353    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
107354    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
107354   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
107355    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
107356    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
107357    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
107358    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
107359    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
107360     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
107361     quit;
107362     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
107363     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
107364     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
107365     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
107366     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
107367     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107368     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
107369     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107370     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107371     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
107372     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107373     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107374     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
107375     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
107376     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
107377     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107378     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
107379     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107380     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
107381     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107382     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
107383     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
107384     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
107385     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107386     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107387     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
107388     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
107388   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
107389     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107390     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
107391     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 557 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107392     filename _pref
107392   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
107393     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
107394     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
107395    +
107396    +
107397    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
107398    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
107399    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
107400    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
107401    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
107402    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
107403    +
107404    +
107405    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
107406    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
107407    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
107408    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
107409    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
107410    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
107411    +
107412    +
107413    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
107414    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
107415    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
107416    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
107417    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
107418    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
107419    +
107420    +
107421    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
107422    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
107423    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
107424    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
107425    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
107426    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
107427    +
107428    +
107429    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
107430    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
107431    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
107432    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
107433    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
107434    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
107435    +
107436    +
107437    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
107438    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
107439    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
107440    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
107441    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
107442    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
107443    +
107444    +
107445    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
107446    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
107447    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
107448    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
107449    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
107450    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
107451    +
107452    +
107453    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
107454    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
107455    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
107456    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
107457    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
107458    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
107459    +if
107460    +_FILTERNORM1 not in ( '.')
107461    + and
107462    +_FILTERNORM2 not in ( '.')
107463    + and
107464    +_FILTERNORM3 not in ( '.')
107465    + and
107466    +_FILTERNORM4 not in ( '.')
107467    + and
107468    +_FILTERNORM5 not in ( '.')
107469    + and
107470    +_FILTERNORM6 not in ( '.')
107471    + and
107472    +_FILTERNORM7 not in ( ' ')
107473    + and
107474    +_FILTERNORM8 not in ( ' ')
107475    +and
107476    +( Dt_Customer ne .)
107477    +and ( Income ne . and (Income<=107000))
107478    +and ( Kidhome ne .)
107479    +and ( MntFishProducts ne .)
107480    +and ( MntFruits ne .)
107481    +and ( MntGoldProds ne .)
107482    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
107483    +and ( MntSweetProducts ne .)
107484    +and ( MntWines ne .)
107485    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
107486    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
107487    +and ( NumStorePurchases ne .)
107488    +and ( NumWebPurchases ne .)
107489    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
107490    +and ( Recency ne .)
107491    +and ( Teenhome ne .)
107492    +and ( Year_Birth ne .)
107493    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
107494    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
107495    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
107496    +end;
MPRINT(EM_DIAGRAM):   end;
107497    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
107498    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
107499     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
107500     quit;
107501     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
107502     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
107503     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
107504     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
107505     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
107506     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
107507     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
107508     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107509     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107510     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
107511     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107513     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
107514     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
107515     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
107516     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
107517     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
107518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
107519     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
107520     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107521     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107522     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
107523     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
107524     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
107525     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
107526     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
107527     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
107527   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
107528     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107529     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
107530     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
107531     %macro varDept(fcmpdata=,id=);
107532     %global nobs&id scoreFlag&id;
107533     %let scoreFlag&id = 0;
107534     %if &id=1 or ^&fcmpStart %then %do;
107535     proc sort data=&fcmpdata out=_temp&id nodupkey;
107536     by NAME;
107537     where id=&id and LHS in( %let j=1;
107538     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
107539     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
107540     "&var" %let j = %eval(&j+1);
107541     %end;
107542     );
107543     run;
107544     %let dsid = %sysfunc(open(_temp&id));
107545     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
107546     %let dsid = %sysfunc(close(&dsid));
107547     %if &&nobs&id %then %do;
107548     %let scoreFlag&id = 1;
107549     %let fcmpStart = 1;
107550     %end;
107551     %else %let fcmpStart = 0;
107552     %end;
107553     %else %do;
107554     proc sort data=&fcmpdata out=_tempid;
107555     where id=&id;
107556     by LHS;
107557     run;
107558     %let dsid = %sysfunc(open(_tempid));
107559     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
107560     %let dsid = %sysfunc(close(&dsid));
107561     %if ^&&nobs&id %then %do;
107562     proc datasets lib=work nolist;
107563     delete _tempid;
107564     run;
107565     quit;
107566     %end;
107567     %else %do;
107568     data _tempAll;
107569     set %let j=%eval(&id-1);
107570     %do x=1 %to &j;
107571     %if &&nobs&x %then %do;
107572     _temp&x %end;
107573     %end;
107574     ;
107575     run;
107576     proc sql;
107577     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
107577   ! work._tempid p2 where p.name=p2.lhs;
107578     quit;
107579     data _temp&id;
107580     set _temp&id;
107581     where LHS ne '' and NAME ne '' and Node ne '';
107582     run;
107583     proc datasets lib=work nolist;
107584     delete _tempAll;
107585     run;
107586     %let dsid = %sysfunc(open(_temp&id));
107587     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
107588     %let dsid = %sysfunc(close(&dsid));
107589     %if ^&&nobs&id %then %do;
107590     proc datasets lib=work nolist;
107591     delete _temp&id;
107592     run;
107593     quit;
107594     %end;
107595     %else %do;
107596     %let scoreFlag&id = 1;
107597     data _temp&id;
107598     set _temp&id;
107599     where LHS ne NAME and node ne '';
107600     run;
107601     %let dsid = %sysfunc(open(_temp&id));
107602     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
107603     %let dsid = %sysfunc(close(&dsid));
107604     %if ^&&nobs&id %then %do;
107605     proc datasets lib=work nolist;
107606     delete _temp&id;
107607     run;
107608     quit;
107609     %end;
107610     %else %do;
107611     proc sort data=_temp&id nodupkey;
107612     by LHS NAME;
107613     run;
107614     %end;
107615     %end;
107616     %end;
107617     %end;
107618     %mend varDept;
107619     %macro optCode(outdata=fcmpdata);
107620     %global fcmpStart;
107621     %let fcmpStart = 0;
107622     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
107623     %let NumNodes=9;
107624     %do k=1 %to &NumNodes;
107625     %vardept(fcmpdata=&outdata, id=&k);
107626     %end;
107627     %mend optCode;
107628     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 71 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 52 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
107629     filename _pref
107629   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
107630     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
107631     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas.
107632    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
107633    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
107634    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
107635    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
107636    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
107637    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
107638    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
107639    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
107640    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
107641    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
107642    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
107643    +LENGTH _WARN_ $4
107644    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
107645    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
107646    +
107647    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
107648    +
107649    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
107650    +
107651    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
107652    +
107653    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
107654    +
107655    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
107656    +
107657    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
107658    +
107659    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
107660    +
107661    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
107662    +
107663    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
107664    +
107665    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
107666    +
107667    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
107668    +
107669    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
107670    +
107671    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
107672    +
107673    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
107674    +
107675    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
107676    +
107677    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
107678    +
107679    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
107680    +
107681    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
107682    +
107683    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
107684    +
107685    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
107686    +
107687    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
107688    +
107689    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
107690    +
107691    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
107692    +
107693    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
107694    +
107695    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
107696    +
107697    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
107698    +
107699    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
107700    +
107701    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
107702    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
107703    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
107704    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
107705    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
107706    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
107707    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
107708    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
107709    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
107710    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
107711    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
107712    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
107713    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
107714    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
107715    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107716    +end;
MPRINT(EM_DIAGRAM):   end;
107717    +else do;
MPRINT(EM_DIAGRAM):   else do;
107718    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
107719    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
107720    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
107721    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
107722    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
107723    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
107724    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
107725    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
107726    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107727    +         end;
MPRINT(EM_DIAGRAM):   end;
107728    +         else do;
MPRINT(EM_DIAGRAM):   else do;
107729    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
107730    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
107731    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107732    +            end;
MPRINT(EM_DIAGRAM):   end;
107733    +         end;
MPRINT(EM_DIAGRAM):   end;
107734    +      end;
MPRINT(EM_DIAGRAM):   end;
107735    +      else do;
MPRINT(EM_DIAGRAM):   else do;
107736    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
107737    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
107738    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107739    +         end;
MPRINT(EM_DIAGRAM):   end;
107740    +      end;
MPRINT(EM_DIAGRAM):   end;
107741    +   end;
MPRINT(EM_DIAGRAM):   end;
107742    +   else do;
MPRINT(EM_DIAGRAM):   else do;
107743    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
107744    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
107745    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107746    +      end;
MPRINT(EM_DIAGRAM):   end;
107747    +      else do;
MPRINT(EM_DIAGRAM):   else do;
107748    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
107749    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
107750    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
107751    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
107752    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
107753    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
107754    +         end;
MPRINT(EM_DIAGRAM):   end;
107755    +      end;
MPRINT(EM_DIAGRAM):   end;
107756    +   end;
MPRINT(EM_DIAGRAM):   end;
107757    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
107758    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
107759    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
107760    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
107761    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
107762    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
107763    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107764    +   end;
MPRINT(EM_DIAGRAM):   end;
107765    +end;
MPRINT(EM_DIAGRAM):   end;
107766    +
107767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107768    +*** Checking missing input Interval
107769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
107770    +
107771    +IF NMISS(
107772    +   AcceptedCmpTotal ,
107773    +   Frq ,
107774    +   Income ,
107775    +   Mnt ,
107776    +   MntGoldProds ,
107777    +   MntMeatProducts ,
107778    +   NumCatalogPurchases ,
107779    +   NumDealsPurchases ,
107780    +   NumWebVisitsMonth ,
107781    +   RFMstat ,
107782    +   Recency ,
107783    +   Teenhome ,
107784    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
107785    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
107786    +
107787    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
107788    +END;
MPRINT(EM_DIAGRAM):   END;
107789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107790    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
107791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107792    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107793    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
107794    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
107795    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
107796    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
107797    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
107798    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
107799    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
107800    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
107801    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
107802    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
107803    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
107804    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
107805    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
107806    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
107807    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
107808    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
107809    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
107810    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
107811    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
107812    +END;
MPRINT(EM_DIAGRAM):   END;
107813    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107814    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
107815    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
107816    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
107817    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
107818    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
107819    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
107820    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
107821    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
107822    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
107823    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
107824    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
107825    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
107826    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
107827    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
107828    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
107829    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
107830    +   ELSE S_NumCatalogPurchases
107831    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
107832    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
107833    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
107834    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
107835    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
107836    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
107837    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
107838    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
107839    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
107840    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
107841    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
107842    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
107843    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
107844    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
107845    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
107846    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
107847    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
107848    +END;
MPRINT(EM_DIAGRAM):   END;
107849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107850    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
107851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107852    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107853    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
107854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107855    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107856    +   H1x1_1  =     0.05803258857677 * S_AcceptedCmpTotal
107857    +          +     0.20201401677737 * S_Frq  +    -0.20060721007078 * S_Income
107858    +          +     0.60811032155087 * S_Mnt  +     0.01308658928857 *
107859    +        S_MntGoldProds  +    -0.32543222756203 * S_MntMeatProducts
107860    +          +    -0.17075976331442 * S_NumCatalogPurchases
107861    +          +     0.11936859656737 * S_NumDealsPurchases
107862    +          +    -0.02241344557322 * S_NumWebVisitsMonth
107863    +          +    -0.00310652561662 * S_RFMstat  +    -0.02230175002754 *
107864    +        S_Recency  +     0.15041197329983 * S_Teenhome
107865    +          +     0.08314198987289 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.05803258857677 * S_AcceptedCmpTotal + 0.20201401677737 *
S_Frq + -0.20060721007078 * S_Income + 0.60811032155087 * S_Mnt + 0.01308658928857 *
S_MntGoldProds + -0.32543222756203 * S_MntMeatProducts + -0.17075976331442 *
S_NumCatalogPurchases + 0.11936859656737 * S_NumDealsPurchases + -0.02241344557322 *
S_NumWebVisitsMonth + -0.00310652561662 * S_RFMstat + -0.02230175002754 * S_Recency +
0.15041197329983 * S_Teenhome + 0.08314198987289 * S_Year_Birth ;
107866    +   H1x1_2  =    -0.00804143026158 * S_AcceptedCmpTotal
107867    +          +     0.27782411169423 * S_Frq  +    -0.09048435288173 * S_Income
107868    +          +    -0.33276938238431 * S_Mnt  +     0.04318269159154 *
107869    +        S_MntGoldProds  +     -2.0876028997983 * S_MntMeatProducts
107870    +          +     -0.1082096588215 * S_NumCatalogPurchases
107871    +          +    -0.35286072202398 * S_NumDealsPurchases
107872    +          +     0.41909763538671 * S_NumWebVisitsMonth
107873    +          +    -0.00388254493812 * S_RFMstat  +    -0.25572729223699 *
107874    +        S_Recency  +     0.03657184300378 * S_Teenhome
107875    +          +    -0.16144911909057 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.00804143026158 * S_AcceptedCmpTotal + 0.27782411169423 *
S_Frq + -0.09048435288173 * S_Income + -0.33276938238431 * S_Mnt + 0.04318269159154 *
S_MntGoldProds + -2.0876028997983 * S_MntMeatProducts + -0.1082096588215 *
S_NumCatalogPurchases + -0.35286072202398 * S_NumDealsPurchases + 0.41909763538671 *
S_NumWebVisitsMonth + -0.00388254493812 * S_RFMstat + -0.25572729223699 * S_Recency +
0.03657184300378 * S_Teenhome + -0.16144911909057 * S_Year_Birth ;
107876    +   H1x1_1  = H1x1_1  +    -0.14329179496615 * Marital_StatusDivorced
107877    +          +     0.35890266446407 * Marital_StatusMarried
107878    +          +    -0.32958224268654 * Marital_StatusSingle
107879    +          +     0.26093411772209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.14329179496615 * Marital_StatusDivorced +
0.35890266446407 * Marital_StatusMarried + -0.32958224268654 * Marital_StatusSingle +
0.26093411772209 * Marital_StatusTogether ;
107880    +   H1x1_2  = H1x1_2  +     0.31162998470604 * Marital_StatusDivorced
107881    +          +    -0.02828904025667 * Marital_StatusMarried
107882    +          +      0.2062300465945 * Marital_StatusSingle
107883    +          +    -0.11283173230117 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.31162998470604 * Marital_StatusDivorced +
-0.02828904025667 * Marital_StatusMarried + 0.2062300465945 * Marital_StatusSingle +
-0.11283173230117 * Marital_StatusTogether ;
107884    +   H1x1_1  =     0.22625757706844 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22625757706844 + H1x1_1 ;
107885    +   H1x1_2  =    -2.80839017705591 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.80839017705591 + H1x1_2 ;
107886    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
107887    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
107888    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
107889    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
107890    +END;
MPRINT(EM_DIAGRAM):   END;
107891    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107892    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
107893    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
107894    +END;
MPRINT(EM_DIAGRAM):   END;
107895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107896    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
107897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107898    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107899    +   H1x2_1  =     0.27800214153202 * S_AcceptedCmpTotal
107900    +          +     0.25771103125393 * S_Frq  +     0.06540858611057 * S_Income
107901    +          +     0.88062167564978 * S_Mnt  +    -0.03352879166216 *
107902    +        S_MntGoldProds  +    -0.36438303456911 * S_MntMeatProducts
107903    +          +    -0.01120232190428 * S_NumCatalogPurchases
107904    +          +     0.08335061407191 * S_NumDealsPurchases
107905    +          +     0.19045617784308 * S_NumWebVisitsMonth
107906    +          +    -0.06814497340743 * S_RFMstat  +     -0.3861487824541 *
107907    +        S_Recency  +    -0.01223664611486 * S_Teenhome
107908    +          +     0.11830416426236 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27800214153202 * S_AcceptedCmpTotal + 0.25771103125393 *
S_Frq + 0.06540858611057 * S_Income + 0.88062167564978 * S_Mnt + -0.03352879166216 *
S_MntGoldProds + -0.36438303456911 * S_MntMeatProducts + -0.01120232190428 *
S_NumCatalogPurchases + 0.08335061407191 * S_NumDealsPurchases + 0.19045617784308 *
S_NumWebVisitsMonth + -0.06814497340743 * S_RFMstat + -0.3861487824541 * S_Recency +
-0.01223664611486 * S_Teenhome + 0.11830416426236 * S_Year_Birth ;
107909    +   H1x2_2  =     0.00966586432047 * S_AcceptedCmpTotal
107910    +          +    -0.15805213020363 * S_Frq  +    -0.10704590641296 * S_Income
107911    +          +    -0.22835348335472 * S_Mnt  +     0.04216459566963 *
107912    +        S_MntGoldProds  +     0.12105776304851 * S_MntMeatProducts
107913    +          +     0.05405710367459 * S_NumCatalogPurchases
107914    +          +     0.05779108423435 * S_NumDealsPurchases
107915    +          +     0.06578830114376 * S_NumWebVisitsMonth
107916    +          +     0.03581918113264 * S_RFMstat  +    -0.03493380943266 *
107917    +        S_Recency  +     0.07188455936346 * S_Teenhome
107918    +          +    -0.01037640411629 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.00966586432047 * S_AcceptedCmpTotal + -0.15805213020363 *
S_Frq + -0.10704590641296 * S_Income + -0.22835348335472 * S_Mnt + 0.04216459566963 *
S_MntGoldProds + 0.12105776304851 * S_MntMeatProducts + 0.05405710367459 *
S_NumCatalogPurchases + 0.05779108423435 * S_NumDealsPurchases + 0.06578830114376 *
S_NumWebVisitsMonth + 0.03581918113264 * S_RFMstat + -0.03493380943266 * S_Recency +
0.07188455936346 * S_Teenhome + -0.01037640411629 * S_Year_Birth ;
107919    +   H1x2_1  = H1x2_1  +    -0.11011761565852 * Marital_StatusDivorced
107920    +          +     -0.0971208757038 * Marital_StatusMarried
107921    +          +    -0.07250288479873 * Marital_StatusSingle
107922    +          +    -0.09370040203357 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.11011761565852 * Marital_StatusDivorced +
-0.0971208757038 * Marital_StatusMarried + -0.07250288479873 * Marital_StatusSingle +
-0.09370040203357 * Marital_StatusTogether ;
107923    +   H1x2_2  = H1x2_2  +     0.00981909678131 * Marital_StatusDivorced
107924    +          +     0.21091057941446 * Marital_StatusMarried
107925    +          +    -0.10578923343752 * Marital_StatusSingle
107926    +          +     0.14340624257864 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.00981909678131 * Marital_StatusDivorced +
0.21091057941446 * Marital_StatusMarried + -0.10578923343752 * Marital_StatusSingle +
0.14340624257864 * Marital_StatusTogether ;
107927    +   H1x2_1  =    -1.44195571181963 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.44195571181963 + H1x2_1 ;
107928    +   H1x2_2  =    -1.92908634775882 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.92908634775882 + H1x2_2 ;
107929    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
107930    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
107931    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
107932    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
107933    +END;
MPRINT(EM_DIAGRAM):   END;
107934    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107935    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
107936    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
107937    +END;
MPRINT(EM_DIAGRAM):   END;
107938    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107939    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
107940    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107941    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107942    +   H2x1_1  =     22.0923538262076 * H1x1_1  +     8.31949814946749 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 22.0923538262076 * H1x1_1 + 8.31949814946749 * H1x1_2 ;
107943    +   H2x1_1  = H2x1_1  +    -17.2128148948815 * H1x2_1
107944    +          +    -68.7975539209644 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -17.2128148948815 * H1x2_1 + -68.7975539209644 *
H1x2_2 ;
107945    +   H2x1_1  =    -0.74489671021313 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.74489671021313 + H2x1_1 ;
107946    +   H2x1_2  = 0;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0;
107947    +   _MAX_ = MAX (H2x1_1 , H2x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 );
107948    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
107949    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
107950    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
107951    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
107952    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
107953    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
107954    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
107955    +END;
MPRINT(EM_DIAGRAM):   END;
107956    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107957    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
107958    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
107959    +END;
MPRINT(EM_DIAGRAM):   END;
107960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107961    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
107962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107963    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
107964    +   P_DepVar1  =    -142.808746328345 * H2x1_1  +     -41.474410437113 * H2x1_2
107965    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -142.808746328345 * H2x1_1 + -41.474410437113 * H2x1_2 ;
107966    +   P_DepVar1  =     56.9415259403341 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 56.9415259403341 + P_DepVar1 ;
107967    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
107968    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
107969    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
107970    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
107971    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
107972    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
107973    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
107974    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
107975    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
107976    +END;
MPRINT(EM_DIAGRAM):   END;
107977    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
107978    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
107979    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
107980    +END;
MPRINT(EM_DIAGRAM):   END;
107981    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
107982    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
107983    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
107984    +END;
MPRINT(EM_DIAGRAM):   END;
107985    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107986    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
107987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
107988    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
107989    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
107990    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
107991    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
107992    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
107993    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
107994    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
107995    +END;
MPRINT(EM_DIAGRAM):   END;
107996    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
107997    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
107998    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
107999    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
108000     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
108001     quit;
108002     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
108003     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
108004     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
108005     retain ID 2 Node "AutoNeural45";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural45";
108006     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
108007     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1339 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1339 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108008     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
108009     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108010     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1339 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1339 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108011     proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME
CREATOR);
108012     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL45_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
108014     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108015     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
108016     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
108017     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108018     proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
108019     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108020     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
108021     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108022     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108023     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108024     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
108025     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108026     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108027     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
108028     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
108028   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 658 rows and 5 columns.
 
108029     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108030     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
108031     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 658 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 658 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108032     filename _pref
108032   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
108033     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
108034     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
108035    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
108036    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
108037    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
108038    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
108039    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
108040    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
108041     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
108042     quit;
108043     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
108044     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
108045     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
108046     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
108047     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
108048     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108049     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
108050     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108051     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108052     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
108053     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108054     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108055     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108056     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
108057     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
108058     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108059     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
108060     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
108061     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
108062     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108063     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108064     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108065     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
108066     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108067     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108068     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
108069     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
108069   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
108070     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108071     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
108072     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 662 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108073     filename _pref
108073   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
108074     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
108075     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
108076    +
108077    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
108078    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
108078   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
108079    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
108080    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
108081    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
108082    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
108083    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
108084     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
108085     quit;
108086     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
108087     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
108088     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
108089     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
108090     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
108091     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108092     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
108093     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108094     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108095     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
108096     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108097     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108098     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108099     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
108100     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
108101     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
108102     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
108103     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108104     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
108105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108106     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108107     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108108     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
108109     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108110     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108111     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
108112     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
108112   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
108113     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108114     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
108115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 701 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108116     filename _pref
108116   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
108117     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
108118     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
108119    +
108120    +
108121    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
108122    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
108123    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
108124    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
108125    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
108126    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108127    +
108128    +
108129    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
108130    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
108131    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
108132    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
108133    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
108134    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108135    +
108136    +
108137    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
108138    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
108139    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
108140    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
108141    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
108142    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108143    +
108144    +
108145    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
108146    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
108147    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
108148    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
108149    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
108150    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108151    +
108152    +
108153    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
108154    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
108155    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
108156    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
108157    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
108158    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108159    +
108160    +
108161    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
108162    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
108163    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
108164    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
108165    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
108166    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108167    +
108168    +
108169    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
108170    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
108171    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
108172    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
108173    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
108174    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108175    +
108176    +
108177    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
108178    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
108179    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
108180    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
108181    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
108182    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108183    +if
108184    +_FILTERNORM1 not in ( '.')
108185    + and
108186    +_FILTERNORM2 not in ( '.')
108187    + and
108188    +_FILTERNORM3 not in ( '.')
108189    + and
108190    +_FILTERNORM4 not in ( '.')
108191    + and
108192    +_FILTERNORM5 not in ( '.')
108193    + and
108194    +_FILTERNORM6 not in ( '.')
108195    + and
108196    +_FILTERNORM7 not in ( ' ')
108197    + and
108198    +_FILTERNORM8 not in ( ' ')
108199    +and
108200    +( Dt_Customer ne .)
108201    +and ( Income ne . and (Income<=107000))
108202    +and ( Kidhome ne .)
108203    +and ( MntFishProducts ne .)
108204    +and ( MntFruits ne .)
108205    +and ( MntGoldProds ne .)
108206    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
108207    +and ( MntSweetProducts ne .)
108208    +and ( MntWines ne .)
108209    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
108210    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
108211    +and ( NumStorePurchases ne .)
108212    +and ( NumWebPurchases ne .)
108213    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
108214    +and ( Recency ne .)
108215    +and ( Teenhome ne .)
108216    +and ( Year_Birth ne .)
108217    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
108218    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
108219    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
108220    +end;
MPRINT(EM_DIAGRAM):   end;
108221    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
108222    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
108223     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
108224     quit;
108225     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
108226     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
108227     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
108228     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
108229     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
108230     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108231     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
108232     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108233     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
108234     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
108235     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108236     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108237     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108238     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
108239     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
108240     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108241     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
108242     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
108243     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
108244     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108245     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108246     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108247     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
108248     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108249     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108250     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
108251     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
108251   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
108252     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108253     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
108254     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 767 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108255     %macro varDept(fcmpdata=,id=);
108256     %global nobs&id scoreFlag&id;
108257     %let scoreFlag&id = 0;
108258     %if &id=1 or ^&fcmpStart %then %do;
108259     proc sort data=&fcmpdata out=_temp&id nodupkey;
The SAS System
 
108260     by NAME;
108261     where id=&id and LHS in( %let j=1;
108262     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
108263     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
108264     "&var" %let j = %eval(&j+1);
108265     %end;
108266     );
108267     run;
108268     %let dsid = %sysfunc(open(_temp&id));
108269     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
108270     %let dsid = %sysfunc(close(&dsid));
108271     %if &&nobs&id %then %do;
108272     %let scoreFlag&id = 1;
108273     %let fcmpStart = 1;
108274     %end;
108275     %else %let fcmpStart = 0;
108276     %end;
108277     %else %do;
108278     proc sort data=&fcmpdata out=_tempid;
108279     where id=&id;
108280     by LHS;
108281     run;
108282     %let dsid = %sysfunc(open(_tempid));
108283     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
108284     %let dsid = %sysfunc(close(&dsid));
108285     %if ^&&nobs&id %then %do;
108286     proc datasets lib=work nolist;
108287     delete _tempid;
108288     run;
108289     quit;
108290     %end;
108291     %else %do;
108292     data _tempAll;
108293     set %let j=%eval(&id-1);
108294     %do x=1 %to &j;
108295     %if &&nobs&x %then %do;
108296     _temp&x %end;
108297     %end;
108298     ;
108299     run;
108300     proc sql;
108301     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
108301   ! work._tempid p2 where p.name=p2.lhs;
108302     quit;
108303     data _temp&id;
108304     set _temp&id;
108305     where LHS ne '' and NAME ne '' and Node ne '';
108306     run;
108307     proc datasets lib=work nolist;
108308     delete _tempAll;
108309     run;
108310     %let dsid = %sysfunc(open(_temp&id));
108311     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
108312     %let dsid = %sysfunc(close(&dsid));
108313     %if ^&&nobs&id %then %do;
108314     proc datasets lib=work nolist;
108315     delete _temp&id;
108316     run;
108317     quit;
108318     %end;
108319     %else %do;
108320     %let scoreFlag&id = 1;
108321     data _temp&id;
108322     set _temp&id;
108323     where LHS ne NAME and node ne '';
108324     run;
108325     %let dsid = %sysfunc(open(_temp&id));
108326     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
108327     %let dsid = %sysfunc(close(&dsid));
108328     %if ^&&nobs&id %then %do;
108329     proc datasets lib=work nolist;
108330     delete _temp&id;
108331     run;
108332     quit;
108333     %end;
108334     %else %do;
108335     proc sort data=_temp&id nodupkey;
108336     by LHS NAME;
108337     run;
108338     %end;
108339     %end;
108340     %end;
108341     %end;
108342     %mend varDept;
108343     %macro optCode(outdata=fcmpdata);
108344     %global fcmpStart;
108345     %let fcmpStart = 0;
108346     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
108347     %let NumNodes=9;
108348     %do k=1 %to &NumNodes;
108349     %vardept(fcmpdata=&outdata, id=&k);
108350     %end;
108351     %mend optCode;
108352     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 80 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 58 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 22 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 22 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 48 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
108353     filename _pref
108353   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
108354     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
108355     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas.
108356    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
108357    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
108358    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
108359    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
108360    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
108361    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
108362    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
108363    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
108364    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
108365    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
108366    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
108367    +LENGTH _WARN_ $4
108368    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
108369    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
108370    +
108371    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
108372    +
108373    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
108374    +
108375    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
108376    +
108377    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
108378    +
108379    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
108380    +
108381    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
108382    +
108383    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
108384    +
108385    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
108386    +
108387    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
108388    +
108389    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
108390    +
108391    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
108392    +
108393    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
108394    +
108395    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
108396    +
108397    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
108398    +
108399    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
108400    +
108401    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
108402    +
108403    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
108404    +
108405    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
108406    +
108407    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
108408    +
108409    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
108410    +
108411    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
108412    +
108413    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
108414    +
108415    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
108416    +
108417    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
108418    +
108419    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
108420    +
108421    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
108422    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
108423    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
108424    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
108425    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
108426    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
108427    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
108428    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
108429    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
108430    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
108431    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
108432    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
108433    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
108434    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
108435    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
108436    +end;
MPRINT(EM_DIAGRAM):   end;
108437    +else do;
MPRINT(EM_DIAGRAM):   else do;
108438    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
108439    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
108440    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
108441    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
108442    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
108443    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
108444    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
108445    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
108446    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
108447    +         end;
MPRINT(EM_DIAGRAM):   end;
108448    +         else do;
MPRINT(EM_DIAGRAM):   else do;
108449    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
108450    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
108451    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
108452    +            end;
MPRINT(EM_DIAGRAM):   end;
108453    +         end;
MPRINT(EM_DIAGRAM):   end;
108454    +      end;
MPRINT(EM_DIAGRAM):   end;
108455    +      else do;
MPRINT(EM_DIAGRAM):   else do;
108456    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
108457    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
108458    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
108459    +         end;
MPRINT(EM_DIAGRAM):   end;
108460    +      end;
MPRINT(EM_DIAGRAM):   end;
108461    +   end;
MPRINT(EM_DIAGRAM):   end;
108462    +   else do;
MPRINT(EM_DIAGRAM):   else do;
108463    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
108464    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
108465    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
108466    +      end;
MPRINT(EM_DIAGRAM):   end;
108467    +      else do;
MPRINT(EM_DIAGRAM):   else do;
108468    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
108469    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
108470    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
108471    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
108472    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
108473    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
108474    +         end;
MPRINT(EM_DIAGRAM):   end;
108475    +      end;
MPRINT(EM_DIAGRAM):   end;
108476    +   end;
MPRINT(EM_DIAGRAM):   end;
108477    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
108478    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
108479    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
108480    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
108481    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
108482    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
108483    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
108484    +   end;
MPRINT(EM_DIAGRAM):   end;
108485    +end;
MPRINT(EM_DIAGRAM):   end;
108486    +
108487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108488    +*** Checking missing input Interval
108489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
108490    +
108491    +IF NMISS(
108492    +   AcceptedCmpTotal ,
108493    +   Frq ,
108494    +   Income ,
108495    +   Mnt ,
108496    +   MntGoldProds ,
108497    +   MntMeatProducts ,
108498    +   NumCatalogPurchases ,
108499    +   NumDealsPurchases ,
108500    +   NumWebVisitsMonth ,
108501    +   RFMstat ,
108502    +   Recency ,
108503    +   Teenhome ,
108504    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
108505    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
108506    +
108507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
108508    +END;
MPRINT(EM_DIAGRAM):   END;
108509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108510    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
108511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108512    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
108513    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
108514    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
108515    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
108516    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
108517    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
108518    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
108519    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
108520    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
108521    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
108522    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
108523    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
108524    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
108525    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
108526    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
108527    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
108528    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
108529    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
108530    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
108531    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
108532    +END;
MPRINT(EM_DIAGRAM):   END;
108533    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
108534    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
108535    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
108536    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
108537    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
108538    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
108539    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
108540    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
108541    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
108542    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
108543    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
108544    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
108545    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
108546    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
108547    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
108548    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
108549    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
108550    +   ELSE S_NumCatalogPurchases
108551    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
108552    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
108553    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
108554    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
108555    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
108556    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
108557    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
108558    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
108559    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
108560    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
108561    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
108562    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
108563    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
108564    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
108565    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
108566    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
108567    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
108568    +END;
MPRINT(EM_DIAGRAM):   END;
108569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108570    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
108571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108573    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
108574    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108575    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
108576    +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
108577    +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
108578    +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
108579    +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
108580    +          +     0.96941096546276 * S_NumCatalogPurchases
108581    +          +    -0.78169009272221 * S_NumDealsPurchases
108582    +          +     2.46694552614806 * S_NumWebVisitsMonth
108583    +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
108584    +        S_Recency  +    -1.09760548427625 * S_Teenhome
108585    +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 *
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 *
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 *
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 *
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency +
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
108586    +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
108587    +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
108588    +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
108589    +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
108590    +          +    -2.01779739147185 * S_NumCatalogPurchases
108591    +          +     -2.6507470301089 * S_NumDealsPurchases
108592    +          +     0.43757499676531 * S_NumWebVisitsMonth
108593    +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
108594    +        S_Recency  +    -0.45321912120397 * S_Teenhome
108595    +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 *
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 *
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 *
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 *
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency +
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
108596    +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
108597    +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
108598    +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
108599    +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
108600    +          +      3.9474982958259 * S_NumCatalogPurchases
108601    +          +       0.376468804707 * S_NumDealsPurchases
108602    +          +     3.31501013882439 * S_NumWebVisitsMonth
108603    +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
108604    +        S_Recency  +    -1.57729700618019 * S_Teenhome
108605    +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 *
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 *
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 *
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 *
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency +
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
108606    +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
108607    +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
108608    +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
108609    +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
108610    +          +    -1.47064436222345 * S_NumCatalogPurchases
108611    +          +    -0.47773085529503 * S_NumDealsPurchases
108612    +          +     0.20028656323595 * S_NumWebVisitsMonth
108613    +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
108614    +        S_Recency  +    -0.11530372179295 * S_Teenhome
108615    +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 *
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 *
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 *
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 *
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency +
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
108616    +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
108617    +          +    -1.68634246986018 * Marital_StatusMarried
108618    +          +     0.61674763327859 * Marital_StatusSingle
108619    +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced +
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle +
-1.26649958570453 * Marital_StatusTogether ;
108620    +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
108621    +          +    -0.63821523628652 * Marital_StatusMarried
108622    +          +    -1.40431603473643 * Marital_StatusSingle
108623    +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced +
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle +
-0.20849152262706 * Marital_StatusTogether ;
108624    +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
108625    +          +    -2.86773035723606 * Marital_StatusMarried
108626    +          +     2.52900517550184 * Marital_StatusSingle
108627    +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced +
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle +
-3.34343954102751 * Marital_StatusTogether ;
108628    +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
108629    +          +    -0.89880425714459 * Marital_StatusMarried
108630    +          +     0.97652284934456 * Marital_StatusSingle
108631    +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced +
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle +
-0.83414241747679 * Marital_StatusTogether ;
108632    +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
108633    +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
108634    +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
108635    +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
108636    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
108637    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
108638    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
108639    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
108640    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
108641    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
108642    +END;
MPRINT(EM_DIAGRAM):   END;
108643    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
108644    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
108645    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
108646    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
108647    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
108648    +END;
MPRINT(EM_DIAGRAM):   END;
108649    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108650    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
108651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108652    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
108653    +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
108654    +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 +
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
108655    +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
108656    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
108657    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
108658    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
108659    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
108660    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
108661    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
108662    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
108663    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
108664    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
108665    +END;
MPRINT(EM_DIAGRAM):   END;
108666    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
108667    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
108668    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
108669    +END;
MPRINT(EM_DIAGRAM):   END;
108670    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
108671    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
108672    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
108673    +END;
MPRINT(EM_DIAGRAM):   END;
108674    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108675    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
108676    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
108677    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
108678    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
108679    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
108680    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
108681    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
108682    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
108683    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
108684    +END;
MPRINT(EM_DIAGRAM):   END;
108685    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
108686    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
108687    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
108688    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
108689     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
108690     quit;
108691     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
108692     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
108693     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
108694     retain ID 2 Node "AutoNeural47";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural47";
108695     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
108696     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1083 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1083 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108697     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
108698     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108699     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1083 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1083 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
108700     proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME
CREATOR);
108701     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108702     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL47_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108703     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108704     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
108705     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
108706     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108707     proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
108708     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
108709     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
108710     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108711     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108712     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108713     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
108714     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108715     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
108716     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
108717     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
108717   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 550 rows and 5 columns.
 
108718     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108719     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
108720     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 550 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 550 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108721     filename _pref
108721   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
108722     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
108723     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
108724    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
108725    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
108726    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
108727    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
108728    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
108729    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
108730     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
108731     quit;
108732     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
108733     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
108734     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
108735     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
108736     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
108737     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108738     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
108739     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108740     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108741     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
108742     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108743     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108744     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108745     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
108746     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
108747     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108748     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
108749     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
108750     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
108751     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108752     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108753     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108754     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
108755     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108756     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108757     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
108758     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
108758   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
108759     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108760     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
108761     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 554 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108762     filename _pref
108762   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
108763     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
108764     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
108765    +
108766    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
108767    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
108767   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
108768    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
108769    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
108770    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
108771    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
108772    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
108773     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
108774     quit;
108775     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
108776     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
108777     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
108778     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
108779     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
108780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108781     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
108782     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108783     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108784     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
108785     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108786     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108787     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108788     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
108789     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
108790     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108791     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
108792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108793     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
108794     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108795     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108796     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108797     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
108798     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108799     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108800     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
108801     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
108801   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
108802     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108803     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
108804     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 593 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108805     filename _pref
108805   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
108806     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
108807     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
108808    +
108809    +
108810    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
108811    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
108812    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
108813    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
108814    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
108815    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108816    +
108817    +
108818    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
108819    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
108820    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
108821    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
108822    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
108823    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108824    +
108825    +
108826    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
108827    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
108828    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
108829    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
108830    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
108831    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108832    +
108833    +
108834    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
108835    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
108836    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
108837    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
108838    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
108839    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108840    +
108841    +
108842    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
108843    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
108844    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
108845    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
108846    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
108847    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108848    +
108849    +
108850    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
108851    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
108852    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
108853    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
108854    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
108855    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108856    +
108857    +
108858    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
108859    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
108860    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
108861    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
108862    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
108863    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108864    +
108865    +
108866    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
108867    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
108868    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
108869    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
108870    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
108871    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
108872    +if
108873    +_FILTERNORM1 not in ( '.')
108874    + and
108875    +_FILTERNORM2 not in ( '.')
108876    + and
108877    +_FILTERNORM3 not in ( '.')
108878    + and
108879    +_FILTERNORM4 not in ( '.')
108880    + and
108881    +_FILTERNORM5 not in ( '.')
108882    + and
108883    +_FILTERNORM6 not in ( '.')
108884    + and
108885    +_FILTERNORM7 not in ( ' ')
108886    + and
108887    +_FILTERNORM8 not in ( ' ')
108888    +and
108889    +( Dt_Customer ne .)
108890    +and ( Income ne . and (Income<=107000))
108891    +and ( Kidhome ne .)
108892    +and ( MntFishProducts ne .)
108893    +and ( MntFruits ne .)
108894    +and ( MntGoldProds ne .)
108895    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
108896    +and ( MntSweetProducts ne .)
108897    +and ( MntWines ne .)
108898    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
108899    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
108900    +and ( NumStorePurchases ne .)
108901    +and ( NumWebPurchases ne .)
108902    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
108903    +and ( Recency ne .)
108904    +and ( Teenhome ne .)
108905    +and ( Year_Birth ne .)
108906    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
108907    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
108908    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
108909    +end;
MPRINT(EM_DIAGRAM):   end;
108910    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
108911    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
108912     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
108913     quit;
108914     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
108915     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
108916     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
108917     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
108918     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
108919     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108920     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
108921     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108922     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108923     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
108924     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108925     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108926     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108927     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
108928     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
108929     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108930     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
108931     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
108932     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
108933     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108934     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108935     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
108936     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
108937     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
108938     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108939     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
108940     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
108940   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
108941     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
108942     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
108943     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
108944     %macro varDept(fcmpdata=,id=);
108945     %global nobs&id scoreFlag&id;
108946     %let scoreFlag&id = 0;
108947     %if &id=1 or ^&fcmpStart %then %do;
108948     proc sort data=&fcmpdata out=_temp&id nodupkey;
108949     by NAME;
108950     where id=&id and LHS in( %let j=1;
108951     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
108952     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
108953     "&var" %let j = %eval(&j+1);
108954     %end;
108955     );
108956     run;
108957     %let dsid = %sysfunc(open(_temp&id));
108958     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
108959     %let dsid = %sysfunc(close(&dsid));
108960     %if &&nobs&id %then %do;
108961     %let scoreFlag&id = 1;
108962     %let fcmpStart = 1;
108963     %end;
108964     %else %let fcmpStart = 0;
108965     %end;
108966     %else %do;
108967     proc sort data=&fcmpdata out=_tempid;
108968     where id=&id;
108969     by LHS;
108970     run;
108971     %let dsid = %sysfunc(open(_tempid));
108972     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
108973     %let dsid = %sysfunc(close(&dsid));
108974     %if ^&&nobs&id %then %do;
108975     proc datasets lib=work nolist;
108976     delete _tempid;
108977     run;
108978     quit;
108979     %end;
108980     %else %do;
108981     data _tempAll;
108982     set %let j=%eval(&id-1);
108983     %do x=1 %to &j;
108984     %if &&nobs&x %then %do;
108985     _temp&x %end;
108986     %end;
108987     ;
108988     run;
108989     proc sql;
108990     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
108990   ! work._tempid p2 where p.name=p2.lhs;
108991     quit;
108992     data _temp&id;
108993     set _temp&id;
108994     where LHS ne '' and NAME ne '' and Node ne '';
108995     run;
108996     proc datasets lib=work nolist;
108997     delete _tempAll;
108998     run;
108999     %let dsid = %sysfunc(open(_temp&id));
109000     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
109001     %let dsid = %sysfunc(close(&dsid));
109002     %if ^&&nobs&id %then %do;
109003     proc datasets lib=work nolist;
109004     delete _temp&id;
109005     run;
109006     quit;
109007     %end;
109008     %else %do;
109009     %let scoreFlag&id = 1;
109010     data _temp&id;
109011     set _temp&id;
109012     where LHS ne NAME and node ne '';
109013     run;
109014     %let dsid = %sysfunc(open(_temp&id));
109015     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
109016     %let dsid = %sysfunc(close(&dsid));
109017     %if ^&&nobs&id %then %do;
109018     proc datasets lib=work nolist;
109019     delete _temp&id;
109020     run;
109021     quit;
109022     %end;
109023     %else %do;
109024     proc sort data=_temp&id nodupkey;
109025     by LHS NAME;
109026     run;
109027     %end;
109028     %end;
109029     %end;
109030     %end;
109031     %mend varDept;
109032     %macro optCode(outdata=fcmpdata);
109033     %global fcmpStart;
109034     %let fcmpStart = 0;
109035     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
109036     %let NumNodes=9;
109037     %do k=1 %to &NumNodes;
109038     %vardept(fcmpdata=&outdata, id=&k);
109039     %end;
109040     %mend optCode;
109041     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 20 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 46 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
109042     filename _pref
109042   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
109043     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
109044     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas.
109045    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
109046    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
109047    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
109048    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
109049    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
109050    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
109051    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
109052    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
109053    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
109054    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
109055    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
109056    +LENGTH _WARN_ $4
109057    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
109058    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
109059    +
109060    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
109061    +
109062    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
109063    +
109064    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
109065    +
109066    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
109067    +
109068    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
109069    +
109070    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
109071    +
109072    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
109073    +
109074    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
109075    +
109076    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
109077    +
109078    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
109079    +
109080    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
109081    +
109082    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
109083    +
109084    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
109085    +
109086    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
109087    +
109088    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
109089    +
109090    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
109091    +
109092    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
109093    +
109094    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
109095    +
109096    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
109097    +
109098    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
109099    +
109100    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
109101    +
109102    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
109103    +
109104    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
109105    +
109106    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
109107    +
109108    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
109109    +
109110    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
109111    +
109112    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
109113    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
109114    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
109115    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
109116    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
109117    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
109118    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
109119    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
109120    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
109121    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
109122    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
109123    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
109124    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
109125    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109126    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109127    +end;
MPRINT(EM_DIAGRAM):   end;
109128    +else do;
MPRINT(EM_DIAGRAM):   else do;
109129    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
109130    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
109131    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109132    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
109133    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
109134    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
109135    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
109136    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
109137    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109138    +         end;
MPRINT(EM_DIAGRAM):   end;
109139    +         else do;
MPRINT(EM_DIAGRAM):   else do;
109140    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
109141    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
109142    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109143    +            end;
MPRINT(EM_DIAGRAM):   end;
109144    +         end;
MPRINT(EM_DIAGRAM):   end;
109145    +      end;
MPRINT(EM_DIAGRAM):   end;
109146    +      else do;
MPRINT(EM_DIAGRAM):   else do;
109147    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
109148    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
109149    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109150    +         end;
MPRINT(EM_DIAGRAM):   end;
109151    +      end;
MPRINT(EM_DIAGRAM):   end;
109152    +   end;
MPRINT(EM_DIAGRAM):   end;
109153    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109154    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
109155    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
109156    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109157    +      end;
MPRINT(EM_DIAGRAM):   end;
109158    +      else do;
MPRINT(EM_DIAGRAM):   else do;
109159    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
109160    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
109161    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
109162    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
109163    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
109164    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109165    +         end;
MPRINT(EM_DIAGRAM):   end;
109166    +      end;
MPRINT(EM_DIAGRAM):   end;
109167    +   end;
MPRINT(EM_DIAGRAM):   end;
109168    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
109169    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
109170    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
109171    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
109172    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
109173    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109174    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109175    +   end;
MPRINT(EM_DIAGRAM):   end;
109176    +end;
MPRINT(EM_DIAGRAM):   end;
109177    +
109178    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109179    +*** Checking missing input Interval
109180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
109181    +
109182    +IF NMISS(
109183    +   AcceptedCmpTotal ,
109184    +   Frq ,
109185    +   Income ,
109186    +   Mnt ,
109187    +   MntGoldProds ,
109188    +   MntMeatProducts ,
109189    +   NumCatalogPurchases ,
109190    +   NumDealsPurchases ,
109191    +   NumWebVisitsMonth ,
109192    +   RFMstat ,
109193    +   Recency ,
109194    +   Teenhome ,
109195    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
109196    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
109197    +
109198    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109199    +END;
MPRINT(EM_DIAGRAM):   END;
109200    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109201    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
109202    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109203    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
109204    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
109205    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
109206    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
109207    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
109208    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
109209    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
109210    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
109211    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
109212    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
109213    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
109214    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
109215    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
109216    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
109217    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
109218    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
109219    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
109220    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
109221    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
109222    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
109223    +END;
MPRINT(EM_DIAGRAM):   END;
109224    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
109225    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
109226    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
109227    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
109228    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
109229    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
109230    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
109231    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
109232    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
109233    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
109234    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
109235    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
109236    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
109237    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
109238    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
109239    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
109240    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
109241    +   ELSE S_NumCatalogPurchases
109242    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
109243    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
109244    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
109245    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
109246    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
109247    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
109248    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
109249    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
109250    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
109251    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
109252    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
109253    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
109254    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
109255    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
109256    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
109257    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
109258    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
109259    +END;
MPRINT(EM_DIAGRAM):   END;
109260    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109261    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
109262    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109264    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
109265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109266    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
109267    +   H1x1_1  =     0.27619305633764 * S_AcceptedCmpTotal
109268    +          +    -0.11236902682497 * S_Frq  +     0.02547336321659 * S_Income
109269    +          +     1.22594163788316 * S_Mnt  +    -0.13304067437519 *
109270    +        S_MntGoldProds  +    -0.25318386797622 * S_MntMeatProducts
109271    +          +     0.18813452089487 * S_NumCatalogPurchases
109272    +          +     0.07572009513796 * S_NumDealsPurchases
109273    +          +     0.26290613719398 * S_NumWebVisitsMonth
109274    +          +    -0.07407700105008 * S_RFMstat  +    -0.42371914006256 *
109275    +        S_Recency  +    -0.08184869022013 * S_Teenhome
109276    +          +     0.01152140021328 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27619305633764 * S_AcceptedCmpTotal + -0.11236902682497 *
S_Frq + 0.02547336321659 * S_Income + 1.22594163788316 * S_Mnt + -0.13304067437519 *
S_MntGoldProds + -0.25318386797622 * S_MntMeatProducts + 0.18813452089487 *
S_NumCatalogPurchases + 0.07572009513796 * S_NumDealsPurchases + 0.26290613719398 *
S_NumWebVisitsMonth + -0.07407700105008 * S_RFMstat + -0.42371914006256 * S_Recency +
-0.08184869022013 * S_Teenhome + 0.01152140021328 * S_Year_Birth ;
109277    +   H1x1_2  =     0.10663705781144 * S_AcceptedCmpTotal
109278    +          +     -1.0540282734074 * S_Frq  +    -0.11987114679821 * S_Income
109279    +          +     0.64876951297444 * S_Mnt  +     0.19900484060335 *
109280    +        S_MntGoldProds  +     0.97085619241432 * S_MntMeatProducts
109281    +          +      0.3860900431806 * S_NumCatalogPurchases
109282    +          +    -0.05602869666287 * S_NumDealsPurchases
109283    +          +     0.25751125196672 * S_NumWebVisitsMonth
109284    +          +     0.02624606311455 * S_RFMstat  +    -0.13483172331925 *
109285    +        S_Recency  +     0.00740928227007 * S_Teenhome
109286    +          +     0.00743631640493 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.10663705781144 * S_AcceptedCmpTotal + -1.0540282734074 *
S_Frq + -0.11987114679821 * S_Income + 0.64876951297444 * S_Mnt + 0.19900484060335 *
S_MntGoldProds + 0.97085619241432 * S_MntMeatProducts + 0.3860900431806 *
S_NumCatalogPurchases + -0.05602869666287 * S_NumDealsPurchases + 0.25751125196672 *
S_NumWebVisitsMonth + 0.02624606311455 * S_RFMstat + -0.13483172331925 * S_Recency +
0.00740928227007 * S_Teenhome + 0.00743631640493 * S_Year_Birth ;
109287    +   H1x1_3  =     0.25721067351974 * S_AcceptedCmpTotal
109288    +          +    -0.86907357751772 * S_Frq  +    -0.08157123692791 * S_Income
109289    +          +     0.01248777269658 * S_Mnt  +     0.05157436079695 *
109290    +        S_MntGoldProds  +     0.77615263309304 * S_MntMeatProducts
109291    +          +     0.20017136343834 * S_NumCatalogPurchases
109292    +          +      0.4177949842415 * S_NumDealsPurchases
109293    +          +     0.12267139708832 * S_NumWebVisitsMonth
109294    +          +    -0.04813980569775 * S_RFMstat  +    -0.35935125476541 *
109295    +        S_Recency  +    -0.04165775695782 * S_Teenhome
109296    +          +    -0.02142572027654 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.25721067351974 * S_AcceptedCmpTotal + -0.86907357751772 *
S_Frq + -0.08157123692791 * S_Income + 0.01248777269658 * S_Mnt + 0.05157436079695 *
S_MntGoldProds + 0.77615263309304 * S_MntMeatProducts + 0.20017136343834 *
S_NumCatalogPurchases + 0.4177949842415 * S_NumDealsPurchases + 0.12267139708832 *
S_NumWebVisitsMonth + -0.04813980569775 * S_RFMstat + -0.35935125476541 * S_Recency +
-0.04165775695782 * S_Teenhome + -0.02142572027654 * S_Year_Birth ;
109297    +   H1x1_4  =    -0.14554708768829 * S_AcceptedCmpTotal
109298    +          +     -0.0597172306674 * S_Frq  +    -0.28285875178634 * S_Income
109299    +          +     1.04591505007314 * S_Mnt  +     0.00461806901547 *
109300    +        S_MntGoldProds  +    -0.61862352433469 * S_MntMeatProducts
109301    +          +    -0.41475045310519 * S_NumCatalogPurchases
109302    +          +     0.05270183882345 * S_NumDealsPurchases
109303    +          +     -0.3411138782759 * S_NumWebVisitsMonth
109304    +          +    -0.06158026374803 * S_RFMstat  +     0.33899005947536 *
109305    +        S_Recency  +     0.09131411279492 * S_Teenhome
109306    +          +    -0.00935201223775 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.14554708768829 * S_AcceptedCmpTotal + -0.0597172306674 *
S_Frq + -0.28285875178634 * S_Income + 1.04591505007314 * S_Mnt + 0.00461806901547 *
S_MntGoldProds + -0.61862352433469 * S_MntMeatProducts + -0.41475045310519 *
S_NumCatalogPurchases + 0.05270183882345 * S_NumDealsPurchases + -0.3411138782759 *
S_NumWebVisitsMonth + -0.06158026374803 * S_RFMstat + 0.33899005947536 * S_Recency +
0.09131411279492 * S_Teenhome + -0.00935201223775 * S_Year_Birth ;
109307    +   H1x1_5  =     0.19976617457438 * S_AcceptedCmpTotal
109308    +          +    -0.47746743016353 * S_Frq  +     0.16855808605754 * S_Income
109309    +          +    -0.87114248882356 * S_Mnt  +     0.16259754490995 *
109310    +        S_MntGoldProds  +     0.11590070773645 * S_MntMeatProducts
109311    +          +     0.28201604995327 * S_NumCatalogPurchases
109312    +          +     -0.0106712941301 * S_NumDealsPurchases
109313    +          +     0.44937825968958 * S_NumWebVisitsMonth
109314    +          +     0.00709750447129 * S_RFMstat  +    -0.47138460185175 *
109315    +        S_Recency  +    -0.07776231003236 * S_Teenhome
109316    +          +    -0.02330056365233 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.19976617457438 * S_AcceptedCmpTotal + -0.47746743016353 *
S_Frq + 0.16855808605754 * S_Income + -0.87114248882356 * S_Mnt + 0.16259754490995 *
S_MntGoldProds + 0.11590070773645 * S_MntMeatProducts + 0.28201604995327 *
S_NumCatalogPurchases + -0.0106712941301 * S_NumDealsPurchases + 0.44937825968958 *
S_NumWebVisitsMonth + 0.00709750447129 * S_RFMstat + -0.47138460185175 * S_Recency +
-0.07776231003236 * S_Teenhome + -0.02330056365233 * S_Year_Birth ;
109317    +   H1x1_1  = H1x1_1  +    -0.29133741090287 * Marital_StatusDivorced
109318    +          +     -0.2248578245828 * Marital_StatusMarried
109319    +          +     0.07509958702397 * Marital_StatusSingle
109320    +          +    -0.12991422082545 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.29133741090287 * Marital_StatusDivorced +
-0.2248578245828 * Marital_StatusMarried + 0.07509958702397 * Marital_StatusSingle +
-0.12991422082545 * Marital_StatusTogether ;
109321    +   H1x1_2  = H1x1_2  +     -1.1074732716993 * Marital_StatusDivorced
109322    +          +     0.45662921783631 * Marital_StatusMarried
109323    +          +     -0.7587900494362 * Marital_StatusSingle
109324    +          +     0.91918379082777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.1074732716993 * Marital_StatusDivorced +
0.45662921783631 * Marital_StatusMarried + -0.7587900494362 * Marital_StatusSingle +
0.91918379082777 * Marital_StatusTogether ;
109325    +   H1x1_3  = H1x1_3  +    -0.00289956415432 * Marital_StatusDivorced
109326    +          +     0.48232640763102 * Marital_StatusMarried
109327    +          +    -0.26767355443511 * Marital_StatusSingle
109328    +          +     0.26207298280723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00289956415432 * Marital_StatusDivorced +
0.48232640763102 * Marital_StatusMarried + -0.26767355443511 * Marital_StatusSingle +
0.26207298280723 * Marital_StatusTogether ;
109329    +   H1x1_4  = H1x1_4  +    -0.33422568214247 * Marital_StatusDivorced
109330    +          +       0.692510056964 * Marital_StatusMarried
109331    +          +    -0.62467969689335 * Marital_StatusSingle
109332    +          +     0.57377256791387 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.33422568214247 * Marital_StatusDivorced +
0.692510056964 * Marital_StatusMarried + -0.62467969689335 * Marital_StatusSingle +
0.57377256791387 * Marital_StatusTogether ;
109333    +   H1x1_5  = H1x1_5  +     0.08963617061236 * Marital_StatusDivorced
109334    +          +    -0.12414433690654 * Marital_StatusMarried
109335    +          +     0.01287765001755 * Marital_StatusSingle
109336    +          +    -0.08087882377532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.08963617061236 * Marital_StatusDivorced +
-0.12414433690654 * Marital_StatusMarried + 0.01287765001755 * Marital_StatusSingle +
-0.08087882377532 * Marital_StatusTogether ;
109337    +   H1x1_1  =    -1.91971008925725 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91971008925725 + H1x1_1 ;
109338    +   H1x1_2  =     0.32368735038167 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32368735038167 + H1x1_2 ;
109339    +   H1x1_3  =    -1.01494899635831 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.01494899635831 + H1x1_3 ;
109340    +   H1x1_4  =     0.37995275511318 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.37995275511318 + H1x1_4 ;
109341    +   H1x1_5  =     0.85001953980369 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.85001953980369 + H1x1_5 ;
109342    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
109343    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
109344    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
109345    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
109346    +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
109347    +END;
MPRINT(EM_DIAGRAM):   END;
109348    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
109349    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
109350    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
109351    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
109352    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
109353    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
109354    +END;
MPRINT(EM_DIAGRAM):   END;
109355    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109356    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
109357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109358    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
109359    +   P_DepVar1  =     70.1947351743048 * H1x1_1  +     37.5347968698288 * H1x1_2
109360    +          +     63.5093925909107 * H1x1_3  +    -88.4297436279603 * H1x1_4
109361    +          +     56.9032773964405 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 70.1947351743048 * H1x1_1 + 37.5347968698288 * H1x1_2 +
63.5093925909107 * H1x1_3 + -88.4297436279603 * H1x1_4 + 56.9032773964405 * H1x1_5 ;
109362    +   P_DepVar1  =     22.2427233048176 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 22.2427233048176 + P_DepVar1 ;
109363    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
109364    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
109365    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
109366    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
109367    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
109368    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
109369    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
109370    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
109371    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
109372    +END;
MPRINT(EM_DIAGRAM):   END;
109373    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
109374    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
109375    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
109376    +END;
MPRINT(EM_DIAGRAM):   END;
109377    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
109378    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
109379    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
109380    +END;
MPRINT(EM_DIAGRAM):   END;
109381    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109382    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
109383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109384    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
109385    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
109386    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
109387    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
109388    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
109389    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
109390    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
109391    +END;
MPRINT(EM_DIAGRAM):   END;
109392    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
109393    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
109394    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
109395    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
109396     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
109397     quit;
109398     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
109399     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
109400     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
109401     retain ID 2 Node "AutoNeural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural41";
109402     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
109403     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1140 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1140 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109404     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
109405     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109406     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1140 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1140 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
109407     proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME
CREATOR);
109408     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109409     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109410     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
109411     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
109412     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
109413     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109414     proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
109415     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
109416     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
109417     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109418     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109419     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
109420     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
109421     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109422     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109423     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
109424     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
109424   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 576 rows and 5 columns.
 
109425     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
109426     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
109427     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 576 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 576 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109428     filename _pref
109428   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
109429     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
109430     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
109431    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
109432    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
109433    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
109434    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
109435    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
109436    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
109437     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
109438     quit;
109439     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
109440     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
109441     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
109442     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
109443     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
109444     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109445     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
109446     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109447     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109448     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
109449     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109450     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
109451     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
109452     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
109453     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
109454     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109455     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
109456     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
109457     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
109458     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109459     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109460     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
109461     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
109462     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109463     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109464     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
109465     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
109465   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
109466     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109467     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
109468     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 580 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
109469     filename _pref
109469   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
109470     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
109471     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
109472    +
109473    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
109474    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
109474   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
109475    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
109476    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
109477    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
109478    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
109479    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
109480     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
109481     quit;
109482     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
109483     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
109484     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
109485     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
109486     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
109487     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109488     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
109489     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109490     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109491     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
109492     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109493     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109494     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
109495     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
109496     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
109497     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
109498     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
109499     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109500     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
109501     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109502     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109503     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
109504     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
109505     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109506     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109507     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
109508     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
109508   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
109509     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
109510     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
109511     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 619 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109512     filename _pref
109512   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
109513     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
109514     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
109515    +
109516    +
109517    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
109518    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
109519    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
109520    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
109521    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
109522    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
109523    +
109524    +
109525    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
109526    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
109527    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
109528    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
109529    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
109530    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
109531    +
109532    +
109533    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
109534    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
109535    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
109536    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
109537    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
109538    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
109539    +
109540    +
109541    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
109542    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
109543    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
109544    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
109545    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
109546    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
109547    +
109548    +
109549    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
109550    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
109551    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
109552    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
109553    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
109554    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
109555    +
109556    +
109557    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
109558    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
109559    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
109560    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
109561    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
109562    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
109563    +
109564    +
109565    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
109566    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
109567    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
109568    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
109569    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
109570    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
109571    +
109572    +
109573    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
109574    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
109575    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
109576    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
109577    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
109578    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
109579    +if
109580    +_FILTERNORM1 not in ( '.')
109581    + and
109582    +_FILTERNORM2 not in ( '.')
109583    + and
109584    +_FILTERNORM3 not in ( '.')
109585    + and
109586    +_FILTERNORM4 not in ( '.')
109587    + and
109588    +_FILTERNORM5 not in ( '.')
109589    + and
109590    +_FILTERNORM6 not in ( '.')
109591    + and
109592    +_FILTERNORM7 not in ( ' ')
109593    + and
109594    +_FILTERNORM8 not in ( ' ')
109595    +and
109596    +( Dt_Customer ne .)
109597    +and ( Income ne . and (Income<=107000))
109598    +and ( Kidhome ne .)
109599    +and ( MntFishProducts ne .)
109600    +and ( MntFruits ne .)
109601    +and ( MntGoldProds ne .)
109602    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
109603    +and ( MntSweetProducts ne .)
109604    +and ( MntWines ne .)
109605    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
109606    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
109607    +and ( NumStorePurchases ne .)
109608    +and ( NumWebPurchases ne .)
109609    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
109610    +and ( Recency ne .)
109611    +and ( Teenhome ne .)
109612    +and ( Year_Birth ne .)
109613    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
109614    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
109615    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
109616    +end;
MPRINT(EM_DIAGRAM):   end;
109617    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
109618    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
109619     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
109620     quit;
109621     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
109622     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
109623     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
109624     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
109625     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
109626     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109627     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
109628     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109629     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109630     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
109631     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109632     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
109633     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
109634     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
109635     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
109636     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109637     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
109638     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
109639     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
109640     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109641     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109642     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
109643     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
109644     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
109645     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109646     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
109647     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
109647   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
109648     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
109649     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
109650     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 685 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
109651     %macro varDept(fcmpdata=,id=);
109652     %global nobs&id scoreFlag&id;
109653     %let scoreFlag&id = 0;
109654     %if &id=1 or ^&fcmpStart %then %do;
109655     proc sort data=&fcmpdata out=_temp&id nodupkey;
109656     by NAME;
109657     where id=&id and LHS in( %let j=1;
109658     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
109659     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
109660     "&var" %let j = %eval(&j+1);
109661     %end;
109662     );
109663     run;
109664     %let dsid = %sysfunc(open(_temp&id));
109665     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
109666     %let dsid = %sysfunc(close(&dsid));
109667     %if &&nobs&id %then %do;
109668     %let scoreFlag&id = 1;
109669     %let fcmpStart = 1;
109670     %end;
109671     %else %let fcmpStart = 0;
109672     %end;
109673     %else %do;
109674     proc sort data=&fcmpdata out=_tempid;
109675     where id=&id;
109676     by LHS;
109677     run;
109678     %let dsid = %sysfunc(open(_tempid));
109679     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
109680     %let dsid = %sysfunc(close(&dsid));
109681     %if ^&&nobs&id %then %do;
109682     proc datasets lib=work nolist;
109683     delete _tempid;
109684     run;
109685     quit;
109686     %end;
109687     %else %do;
109688     data _tempAll;
109689     set %let j=%eval(&id-1);
109690     %do x=1 %to &j;
109691     %if &&nobs&x %then %do;
109692     _temp&x %end;
109693     %end;
109694     ;
109695     run;
109696     proc sql;
109697     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
109697   ! work._tempid p2 where p.name=p2.lhs;
109698     quit;
109699     data _temp&id;
109700     set _temp&id;
109701     where LHS ne '' and NAME ne '' and Node ne '';
109702     run;
109703     proc datasets lib=work nolist;
109704     delete _tempAll;
109705     run;
109706     %let dsid = %sysfunc(open(_temp&id));
109707     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
109708     %let dsid = %sysfunc(close(&dsid));
109709     %if ^&&nobs&id %then %do;
109710     proc datasets lib=work nolist;
109711     delete _temp&id;
109712     run;
109713     quit;
109714     %end;
109715     %else %do;
109716     %let scoreFlag&id = 1;
109717     data _temp&id;
109718     set _temp&id;
109719     where LHS ne NAME and node ne '';
109720     run;
109721     %let dsid = %sysfunc(open(_temp&id));
109722     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
109723     %let dsid = %sysfunc(close(&dsid));
109724     %if ^&&nobs&id %then %do;
109725     proc datasets lib=work nolist;
109726     delete _temp&id;
109727     run;
109728     quit;
109729     %end;
109730     %else %do;
109731     proc sort data=_temp&id nodupkey;
109732     by LHS NAME;
109733     run;
109734     %end;
109735     %end;
109736     %end;
109737     %end;
109738     %mend varDept;
109739     %macro optCode(outdata=fcmpdata);
109740     %global fcmpStart;
109741     %let fcmpStart = 0;
109742     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
109743     %let NumNodes=9;
109744     %do k=1 %to &NumNodes;
109745     %vardept(fcmpdata=&outdata, id=&k);
109746     %end;
109747     %mend optCode;
109748     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 77 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 56 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 21 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 21 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 47 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
109749     filename _pref
109749   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
109750     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
109751     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas.
109752    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
109753    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
109754    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
109755    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
109756    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
109757    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
109758    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
109759    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
109760    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
109761    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
109762    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
109763    +LENGTH _WARN_ $4
109764    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
109765    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
109766    +
109767    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
109768    +
109769    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
109770    +
109771    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
109772    +
109773    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
109774    +
109775    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
109776    +
109777    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
109778    +
109779    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
109780    +
109781    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
109782    +
109783    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
109784    +
109785    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
109786    +
109787    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
109788    +
109789    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
109790    +
109791    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
109792    +
109793    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
109794    +
109795    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
109796    +
109797    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
109798    +
109799    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
109800    +
109801    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
109802    +
109803    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
109804    +
109805    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
109806    +
109807    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
109808    +
109809    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
109810    +
109811    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
109812    +
109813    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
109814    +
109815    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
109816    +
109817    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
109818    +
109819    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
109820    +
109821    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
109822    +
109823    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
109824    +
109825    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
109826    +
109827    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
109828    +
109829    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
109830    +
109831    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
109832    +
109833    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
109834    +
109835    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
109836    +
109837    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
109838    +
109839    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
109840    +
109841    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
109842    +
109843    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
109844    +
109845    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
109846    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
109847    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
109848    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
109849    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
109850    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
109851    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
109852    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
109853    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
109854    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
109855    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
109856    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
109857    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
109858    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
109859    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109860    +end;
MPRINT(EM_DIAGRAM):   end;
109861    +else do;
MPRINT(EM_DIAGRAM):   else do;
109862    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
109863    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
109864    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
109865    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
109866    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
109867    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
109868    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
109869    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
109870    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109871    +         end;
MPRINT(EM_DIAGRAM):   end;
109872    +         else do;
MPRINT(EM_DIAGRAM):   else do;
109873    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
109874    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
109875    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109876    +            end;
MPRINT(EM_DIAGRAM):   end;
109877    +         end;
MPRINT(EM_DIAGRAM):   end;
109878    +      end;
MPRINT(EM_DIAGRAM):   end;
109879    +      else do;
MPRINT(EM_DIAGRAM):   else do;
109880    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
109881    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
109882    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109883    +         end;
MPRINT(EM_DIAGRAM):   end;
109884    +      end;
MPRINT(EM_DIAGRAM):   end;
109885    +   end;
MPRINT(EM_DIAGRAM):   end;
109886    +   else do;
MPRINT(EM_DIAGRAM):   else do;
109887    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
109888    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
109889    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109890    +      end;
MPRINT(EM_DIAGRAM):   end;
109891    +      else do;
MPRINT(EM_DIAGRAM):   else do;
109892    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
109893    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
109894    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
109895    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
109896    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
109897    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
109898    +         end;
MPRINT(EM_DIAGRAM):   end;
109899    +      end;
MPRINT(EM_DIAGRAM):   end;
109900    +   end;
MPRINT(EM_DIAGRAM):   end;
109901    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
109902    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
109903    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
109904    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
109905    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
109906    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
109907    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109908    +   end;
MPRINT(EM_DIAGRAM):   end;
109909    +end;
MPRINT(EM_DIAGRAM):   end;
109910    +
109911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109912    +*** Checking missing input Interval
109913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
109914    +
109915    +IF NMISS(
109916    +   AcceptedCmpTotal ,
109917    +   Frq ,
109918    +   Income ,
109919    +   Mnt ,
109920    +   MntGoldProds ,
109921    +   MntMeatProducts ,
109922    +   NumCatalogPurchases ,
109923    +   NumDealsPurchases ,
109924    +   NumWebVisitsMonth ,
109925    +   RFMstat ,
109926    +   Recency ,
109927    +   Teenhome ,
109928    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
109929    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
109930    +
109931    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
109932    +END;
MPRINT(EM_DIAGRAM):   END;
109933    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109934    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
109935    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109936    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
109937    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
109938    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
109939    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
109940    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
109941    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
109942    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
109943    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
109944    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
109945    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
109946    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
109947    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
109948    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
109949    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
109950    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
109951    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
109952    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
109953    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
109954    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
109955    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
109956    +END;
MPRINT(EM_DIAGRAM):   END;
109957    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
109958    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
109959    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
109960    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
109961    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
109962    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
109963    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
109964    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
109965    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
109966    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
109967    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
109968    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
109969    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
109970    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
109971    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
109972    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
109973    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
109974    +   ELSE S_NumCatalogPurchases
109975    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
109976    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
109977    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
109978    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
109979    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
109980    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
109981    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
109982    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
109983    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
109984    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
109985    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
109986    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
109987    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
109988    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
109989    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
109990    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
109991    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
109992    +END;
MPRINT(EM_DIAGRAM):   END;
109993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109994    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
109995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109997    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
109998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
109999    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
110000    +   H1x1_1  =    -3.92905088817122 * S_AcceptedCmpTotal
110001    +          +    -4.76567955922662 * S_Frq  +    -3.20305851407308 * S_Income
110002    +          +     10.4290156082038 * S_Mnt  +     2.82139196372317 *
110003    +        S_MntGoldProds  +    -4.54749029525518 * S_MntMeatProducts
110004    +          +    -12.1201262560598 * S_NumCatalogPurchases
110005    +          +    -7.64265449386917 * S_NumDealsPurchases
110006    +          +     -0.8154661733691 * S_NumWebVisitsMonth
110007    +          +    -7.34275682075933 * S_RFMstat  +     3.14025498790893 *
110008    +        S_Recency  +     3.79010135100643 * S_Teenhome
110009    +          +    -1.18831354068466 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.92905088817122 * S_AcceptedCmpTotal + -4.76567955922662 *
S_Frq + -3.20305851407308 * S_Income + 10.4290156082038 * S_Mnt + 2.82139196372317 *
S_MntGoldProds + -4.54749029525518 * S_MntMeatProducts + -12.1201262560598 *
S_NumCatalogPurchases + -7.64265449386917 * S_NumDealsPurchases + -0.8154661733691 *
S_NumWebVisitsMonth + -7.34275682075933 * S_RFMstat + 3.14025498790893 * S_Recency +
3.79010135100643 * S_Teenhome + -1.18831354068466 * S_Year_Birth ;
110010    +   H1x1_2  =    -4.72019183577823 * S_AcceptedCmpTotal
110011    +          +     5.14902294151494 * S_Frq  +     -2.7967028726716 * S_Income
110012    +          +     7.90170532262596 * S_Mnt  +    -0.27896242131344 *
110013    +        S_MntGoldProds  +    -6.13177486713562 * S_MntMeatProducts
110014    +          +    -5.64377068696071 * S_NumCatalogPurchases
110015    +          +       1.315880732417 * S_NumDealsPurchases
110016    +          +    -7.12689902819995 * S_NumWebVisitsMonth
110017    +          +     -0.1333171344564 * S_RFMstat  +     8.57178329047956 *
110018    +        S_Recency  +     2.42655161118896 * S_Teenhome
110019    +          +     0.41845495922131 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -4.72019183577823 * S_AcceptedCmpTotal + 5.14902294151494 *
S_Frq + -2.7967028726716 * S_Income + 7.90170532262596 * S_Mnt + -0.27896242131344 *
S_MntGoldProds + -6.13177486713562 * S_MntMeatProducts + -5.64377068696071 *
S_NumCatalogPurchases + 1.315880732417 * S_NumDealsPurchases + -7.12689902819995 *
S_NumWebVisitsMonth + -0.1333171344564 * S_RFMstat + 8.57178329047956 * S_Recency +
2.42655161118896 * S_Teenhome + 0.41845495922131 * S_Year_Birth ;
110020    +   H1x1_3  =    -3.47660178529996 * S_AcceptedCmpTotal
110021    +          +     6.36750571377116 * S_Frq  +    -3.65638554203354 * S_Income
110022    +          +     5.03085244876136 * S_Mnt  +    -1.53184712146016 *
110023    +        S_MntGoldProds  +    -11.4803326240536 * S_MntMeatProducts
110024    +          +    -7.71653347900468 * S_NumCatalogPurchases
110025    +          +    -2.29382480020793 * S_NumDealsPurchases
110026    +          +    -3.92350308032578 * S_NumWebVisitsMonth
110027    +          +      0.1666173174602 * S_RFMstat  +      5.5545699438819 *
110028    +        S_Recency  +     1.88830044274756 * S_Teenhome
110029    +          +     0.36177301880441 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.47660178529996 * S_AcceptedCmpTotal + 6.36750571377116 *
S_Frq + -3.65638554203354 * S_Income + 5.03085244876136 * S_Mnt + -1.53184712146016 *
S_MntGoldProds + -11.4803326240536 * S_MntMeatProducts + -7.71653347900468 *
S_NumCatalogPurchases + -2.29382480020793 * S_NumDealsPurchases + -3.92350308032578 *
S_NumWebVisitsMonth + 0.1666173174602 * S_RFMstat + 5.5545699438819 * S_Recency +
1.88830044274756 * S_Teenhome + 0.36177301880441 * S_Year_Birth ;
110030    +   H1x1_4  =     3.46597508500309 * S_AcceptedCmpTotal
110031    +          +    -3.55913679518365 * S_Frq  +     -3.8279864380535 * S_Income
110032    +          +     4.37031319397754 * S_Mnt  +     0.25558899887189 *
110033    +        S_MntGoldProds  +     1.30937005137526 * S_MntMeatProducts
110034    +          +     0.50178849511862 * S_NumCatalogPurchases
110035    +          +     3.33915340676542 * S_NumDealsPurchases
110036    +          +     2.99171363234904 * S_NumWebVisitsMonth
110037    +          +    -1.10860117011224 * S_RFMstat  +     -5.2144291963152 *
110038    +        S_Recency  +     1.84778865722952 * S_Teenhome
110039    +          +     1.48264084751626 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.46597508500309 * S_AcceptedCmpTotal + -3.55913679518365 *
S_Frq + -3.8279864380535 * S_Income + 4.37031319397754 * S_Mnt + 0.25558899887189 *
S_MntGoldProds + 1.30937005137526 * S_MntMeatProducts + 0.50178849511862 *
S_NumCatalogPurchases + 3.33915340676542 * S_NumDealsPurchases + 2.99171363234904 *
S_NumWebVisitsMonth + -1.10860117011224 * S_RFMstat + -5.2144291963152 * S_Recency +
1.84778865722952 * S_Teenhome + 1.48264084751626 * S_Year_Birth ;
110040    +   H1x1_5  =    -3.28077802512331 * S_AcceptedCmpTotal
110041    +          +     3.26112701694144 * S_Frq  +    -3.51257256391539 * S_Income
110042    +          +     -13.277904245629 * S_Mnt  +    -0.08185099069039 *
110043    +        S_MntGoldProds  +      2.6349809613264 * S_MntMeatProducts
110044    +          +    -5.23430097842472 * S_NumCatalogPurchases
110045    +          +    -1.25644862473488 * S_NumDealsPurchases
110046    +          +     -3.0943337340276 * S_NumWebVisitsMonth
110047    +          +     0.96429102250453 * S_RFMstat  +     4.60373013139143 *
110048    +        S_Recency  +     1.52557456336148 * S_Teenhome
110049    +          +     0.00287578113165 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.28077802512331 * S_AcceptedCmpTotal + 3.26112701694144 *
S_Frq + -3.51257256391539 * S_Income + -13.277904245629 * S_Mnt + -0.08185099069039 *
S_MntGoldProds + 2.6349809613264 * S_MntMeatProducts + -5.23430097842472 *
S_NumCatalogPurchases + -1.25644862473488 * S_NumDealsPurchases + -3.0943337340276 *
S_NumWebVisitsMonth + 0.96429102250453 * S_RFMstat + 4.60373013139143 * S_Recency +
1.52557456336148 * S_Teenhome + 0.00287578113165 * S_Year_Birth ;
110050    +   H1x1_1  = H1x1_1  +     1.77432710413329 * Marital_StatusDivorced
110051    +          +     5.12496303990022 * Marital_StatusMarried
110052    +          +    -7.61364369696186 * Marital_StatusSingle
110053    +          +     2.78937374370395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.77432710413329 * Marital_StatusDivorced +
5.12496303990022 * Marital_StatusMarried + -7.61364369696186 * Marital_StatusSingle +
2.78937374370395 * Marital_StatusTogether ;
110054    +   H1x1_2  = H1x1_2  +    -5.49070434381597 * Marital_StatusDivorced
110055    +          +     7.65332274940308 * Marital_StatusMarried
110056    +          +    -5.13332947688313 * Marital_StatusSingle
110057    +          +     8.25159601985572 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -5.49070434381597 * Marital_StatusDivorced +
7.65332274940308 * Marital_StatusMarried + -5.13332947688313 * Marital_StatusSingle +
8.25159601985572 * Marital_StatusTogether ;
110058    +   H1x1_3  = H1x1_3  +     1.57910552070948 * Marital_StatusDivorced
110059    +          +     7.95162959069432 * Marital_StatusMarried
110060    +          +    -6.10797604390061 * Marital_StatusSingle
110061    +          +     2.98577039618027 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.57910552070948 * Marital_StatusDivorced +
7.95162959069432 * Marital_StatusMarried + -6.10797604390061 * Marital_StatusSingle +
2.98577039618027 * Marital_StatusTogether ;
110062    +   H1x1_4  = H1x1_4  +     3.65411081783958 * Marital_StatusDivorced
110063    +          +     5.45977621823616 * Marital_StatusMarried
110064    +          +    -10.3527985391218 * Marital_StatusSingle
110065    +          +     4.66094015963389 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 3.65411081783958 * Marital_StatusDivorced +
5.45977621823616 * Marital_StatusMarried + -10.3527985391218 * Marital_StatusSingle +
4.66094015963389 * Marital_StatusTogether ;
110066    +   H1x1_5  = H1x1_5  +     1.57864743151562 * Marital_StatusDivorced
110067    +          +     8.15909630638185 * Marital_StatusMarried
110068    +          +    -5.88497367282032 * Marital_StatusSingle
110069    +          +     3.05474303626666 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.57864743151562 * Marital_StatusDivorced +
8.15909630638185 * Marital_StatusMarried + -5.88497367282032 * Marital_StatusSingle +
3.05474303626666 * Marital_StatusTogether ;
110070    +   H1x1_1  =    -1.55078746609233 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.55078746609233 + H1x1_1 ;
110071    +   H1x1_2  =     5.40474806112383 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 5.40474806112383 + H1x1_2 ;
110072    +   H1x1_3  =     11.2733164995662 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 11.2733164995662 + H1x1_3 ;
110073    +   H1x1_4  =    -7.78487963966384 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.78487963966384 + H1x1_4 ;
110074    +   H1x1_5  =      3.8784406873535 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 3.8784406873535 + H1x1_5 ;
110075    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
110076    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
110077    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
110078    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
110079    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
110080    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
110081    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
110082    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
110083    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
110084    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
110085    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
110086    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
110087    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
110088    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
110089    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
110090    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
110091    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
110092    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
110093    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
110094    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
110095    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
110096    +END;
MPRINT(EM_DIAGRAM):   END;
110097    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
110098    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
110099    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
110100    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
110101    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
110102    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
110103    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
110104    +END;
MPRINT(EM_DIAGRAM):   END;
110105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110106    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
110107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110108    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
110109    +   H1x2_1  =     0.07453146398445 * S_AcceptedCmpTotal
110110    +          +     0.17438368465616 * S_Frq  +     0.97121905855093 * S_Income
110111    +          +    -0.15757686261675 * S_Mnt  +     0.28678754855648 *
110112    +        S_MntGoldProds  +     2.03999655184815 * S_MntMeatProducts
110113    +          +      0.8747576336553 * S_NumCatalogPurchases
110114    +          +    -0.23551985234916 * S_NumDealsPurchases
110115    +          +     0.83901499225112 * S_NumWebVisitsMonth
110116    +          +     -0.7643570473353 * S_RFMstat  +      0.0823609346051 *
110117    +        S_Recency  +    -0.38340703993831 * S_Teenhome
110118    +          +     1.16037573405943 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.07453146398445 * S_AcceptedCmpTotal + 0.17438368465616 *
S_Frq + 0.97121905855093 * S_Income + -0.15757686261675 * S_Mnt + 0.28678754855648 *
S_MntGoldProds + 2.03999655184815 * S_MntMeatProducts + 0.8747576336553 *
S_NumCatalogPurchases + -0.23551985234916 * S_NumDealsPurchases + 0.83901499225112 *
S_NumWebVisitsMonth + -0.7643570473353 * S_RFMstat + 0.0823609346051 * S_Recency +
-0.38340703993831 * S_Teenhome + 1.16037573405943 * S_Year_Birth ;
110119    +   H1x2_2  =      -2.285017059996 * S_AcceptedCmpTotal
110120    +          +    -0.29646095672581 * S_Frq  +     -3.5024410668082 * S_Income
110121    +          +    -2.12091528193185 * S_Mnt  +    -1.48506012188621 *
110122    +        S_MntGoldProds  +    -1.38316375865608 * S_MntMeatProducts
110123    +          +    -0.99107054453387 * S_NumCatalogPurchases
110124    +          +    -0.68379823410573 * S_NumDealsPurchases
110125    +          +    -1.67939872609259 * S_NumWebVisitsMonth
110126    +          +     0.49106697429539 * S_RFMstat  +    -0.01117108974211 *
110127    +        S_Recency  +    -1.65033346710833 * S_Teenhome
110128    +          +    -1.03897054098621 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.285017059996 * S_AcceptedCmpTotal + -0.29646095672581 *
S_Frq + -3.5024410668082 * S_Income + -2.12091528193185 * S_Mnt + -1.48506012188621 *
S_MntGoldProds + -1.38316375865608 * S_MntMeatProducts + -0.99107054453387 *
S_NumCatalogPurchases + -0.68379823410573 * S_NumDealsPurchases + -1.67939872609259 *
S_NumWebVisitsMonth + 0.49106697429539 * S_RFMstat + -0.01117108974211 * S_Recency +
-1.65033346710833 * S_Teenhome + -1.03897054098621 * S_Year_Birth ;
110129    +   H1x2_3  =      2.9562672276462 * S_AcceptedCmpTotal
110130    +          +    -0.19531439441895 * S_Frq  +      0.3125078734463 * S_Income
110131    +          +     -1.6099267525002 * S_Mnt  +    -0.36573328507463 *
110132    +        S_MntGoldProds  +     -0.3392853565114 * S_MntMeatProducts
110133    +          +      1.4506330104932 * S_NumCatalogPurchases
110134    +          +     0.20085283861849 * S_NumDealsPurchases
110135    +          +     2.37974383924154 * S_NumWebVisitsMonth
110136    +          +     -0.1106906484364 * S_RFMstat  +    -3.36701384866793 *
110137    +        S_Recency  +     0.60726269989058 * S_Teenhome
110138    +          +     0.51474814816173 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.9562672276462 * S_AcceptedCmpTotal + -0.19531439441895 *
S_Frq + 0.3125078734463 * S_Income + -1.6099267525002 * S_Mnt + -0.36573328507463 *
S_MntGoldProds + -0.3392853565114 * S_MntMeatProducts + 1.4506330104932 *
S_NumCatalogPurchases + 0.20085283861849 * S_NumDealsPurchases + 2.37974383924154 *
S_NumWebVisitsMonth + -0.1106906484364 * S_RFMstat + -3.36701384866793 * S_Recency +
0.60726269989058 * S_Teenhome + 0.51474814816173 * S_Year_Birth ;
110139    +   H1x2_4  =    -3.19375607611292 * S_AcceptedCmpTotal
110140    +          +    -1.28391627024222 * S_Frq  +     1.20886875907222 * S_Income
110141    +          +     0.33241907162962 * S_Mnt  +     0.81131852742978 *
110142    +        S_MntGoldProds  +     0.66955477854362 * S_MntMeatProducts
110143    +          +    -0.79952426911069 * S_NumCatalogPurchases
110144    +          +    -0.70571099772216 * S_NumDealsPurchases
110145    +          +    -0.32158728049114 * S_NumWebVisitsMonth
110146    +          +    -0.83126265863782 * S_RFMstat  +     1.49830148501327 *
110147    +        S_Recency  +     2.29389047813725 * S_Teenhome
110148    +          +     0.04615513391624 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -3.19375607611292 * S_AcceptedCmpTotal + -1.28391627024222 *
S_Frq + 1.20886875907222 * S_Income + 0.33241907162962 * S_Mnt + 0.81131852742978 *
S_MntGoldProds + 0.66955477854362 * S_MntMeatProducts + -0.79952426911069 *
S_NumCatalogPurchases + -0.70571099772216 * S_NumDealsPurchases + -0.32158728049114 *
S_NumWebVisitsMonth + -0.83126265863782 * S_RFMstat + 1.49830148501327 * S_Recency +
2.29389047813725 * S_Teenhome + 0.04615513391624 * S_Year_Birth ;
110149    +   H1x2_5  =     -0.6002425930451 * S_AcceptedCmpTotal
110150    +          +    -0.86762771301251 * S_Frq  +    -0.57793933969656 * S_Income
110151    +          +     0.41975808190408 * S_Mnt  +    -0.13242897225011 *
110152    +        S_MntGoldProds  +    -1.44402585881872 * S_MntMeatProducts
110153    +          +    -0.41491605544255 * S_NumCatalogPurchases
110154    +          +     0.49374983047507 * S_NumDealsPurchases
110155    +          +    -1.38692718220359 * S_NumWebVisitsMonth
110156    +          +    -0.07580803465143 * S_RFMstat  +      0.4152505934779 *
110157    +        S_Recency  +     1.29605991841828 * S_Teenhome
110158    +          +     2.17160180088465 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.6002425930451 * S_AcceptedCmpTotal + -0.86762771301251 *
S_Frq + -0.57793933969656 * S_Income + 0.41975808190408 * S_Mnt + -0.13242897225011 *
S_MntGoldProds + -1.44402585881872 * S_MntMeatProducts + -0.41491605544255 *
S_NumCatalogPurchases + 0.49374983047507 * S_NumDealsPurchases + -1.38692718220359 *
S_NumWebVisitsMonth + -0.07580803465143 * S_RFMstat + 0.4152505934779 * S_Recency +
1.29605991841828 * S_Teenhome + 2.17160180088465 * S_Year_Birth ;
110159    +   H1x2_1  = H1x2_1  +     0.77674448865903 * Marital_StatusDivorced
110160    +          +    -1.29227303709115 * Marital_StatusMarried
110161    +          +     0.71446782242025 * Marital_StatusSingle
110162    +          +     0.55295867102727 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.77674448865903 * Marital_StatusDivorced +
-1.29227303709115 * Marital_StatusMarried + 0.71446782242025 * Marital_StatusSingle +
0.55295867102727 * Marital_StatusTogether ;
110163    +   H1x2_2  = H1x2_2  +     -0.1845223373129 * Marital_StatusDivorced
110164    +          +      2.0815223604364 * Marital_StatusMarried
110165    +          +     0.79462013188709 * Marital_StatusSingle
110166    +          +     0.20668835346022 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.1845223373129 * Marital_StatusDivorced +
2.0815223604364 * Marital_StatusMarried + 0.79462013188709 * Marital_StatusSingle +
0.20668835346022 * Marital_StatusTogether ;
110167    +   H1x2_3  = H1x2_3  +    -1.02774258915556 * Marital_StatusDivorced
110168    +          +     0.44769683627357 * Marital_StatusMarried
110169    +          +     1.09957357551209 * Marital_StatusSingle
110170    +          +     0.98246644516303 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.02774258915556 * Marital_StatusDivorced +
0.44769683627357 * Marital_StatusMarried + 1.09957357551209 * Marital_StatusSingle +
0.98246644516303 * Marital_StatusTogether ;
110171    +   H1x2_4  = H1x2_4  +     1.02578628033933 * Marital_StatusDivorced
110172    +          +    -0.71096069683657 * Marital_StatusMarried
110173    +          +    -0.46849808497503 * Marital_StatusSingle
110174    +          +    -0.50186472808298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.02578628033933 * Marital_StatusDivorced +
-0.71096069683657 * Marital_StatusMarried + -0.46849808497503 * Marital_StatusSingle +
-0.50186472808298 * Marital_StatusTogether ;
110175    +   H1x2_5  = H1x2_5  +     0.83514340443964 * Marital_StatusDivorced
110176    +          +     0.21000014809177 * Marital_StatusMarried
110177    +          +    -1.05959388759825 * Marital_StatusSingle
110178    +          +     -0.8202251717493 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83514340443964 * Marital_StatusDivorced +
0.21000014809177 * Marital_StatusMarried + -1.05959388759825 * Marital_StatusSingle +
-0.8202251717493 * Marital_StatusTogether ;
110179    +   H1x2_1  =     0.66244588339698 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.66244588339698 + H1x2_1 ;
110180    +   H1x2_2  =     0.36306484617725 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.36306484617725 + H1x2_2 ;
110181    +   H1x2_3  =     0.00299288434405 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.00299288434405 + H1x2_3 ;
110182    +   H1x2_4  =     0.32206403734945 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.32206403734945 + H1x2_4 ;
110183    +   H1x2_5  =     0.48514364636978 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.48514364636978 + H1x2_5 ;
110184    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
110185    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
110186    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
110187    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
110188    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
110189    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
110190    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
110191    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
110192    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
110193    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
110194    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
110195    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
110196    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
110197    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
110198    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
110199    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
110200    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
110201    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
110202    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
110203    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
110204    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
110205    +END;
MPRINT(EM_DIAGRAM):   END;
110206    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
110207    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
110208    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
110209    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
110210    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
110211    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
110212    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
110213    +END;
MPRINT(EM_DIAGRAM):   END;
110214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110215    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
110216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110217    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
110218    +   H2x1_1  =     5.34062678932931 * H1x1_1  +     7.71604112891627 * H1x1_2
110219    +          +     7.54377937186103 * H1x1_3  +    -5.90943850663966 * H1x1_4
110220    +          +    -6.06522890475814 * H1x1_5  +    -7.94470945127082 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 5.34062678932931 * H1x1_1 + 7.71604112891627 * H1x1_2 +
7.54377937186103 * H1x1_3 + -5.90943850663966 * H1x1_4 + -6.06522890475814 * H1x1_5 +
-7.94470945127082 * H1x1_6 ;
110221    +   H2x1_2  =      1.1479485803131 * H1x1_1  +      1.4482835893576 * H1x1_2
110222    +          +    -0.15220644394866 * H1x1_3  +    -1.30000676790854 * H1x1_4
110223    +          +    -0.49333138568117 * H1x1_5  +    -1.96124154717115 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.1479485803131 * H1x1_1 + 1.4482835893576 * H1x1_2 +
-0.15220644394866 * H1x1_3 + -1.30000676790854 * H1x1_4 + -0.49333138568117 * H1x1_5 +
-1.96124154717115 * H1x1_6 ;
110224    +   H2x1_3  =     2.12915623251937 * H1x1_1  +     4.39530013559682 * H1x1_2
110225    +          +     3.38050961443392 * H1x1_3  +    -5.12182301645649 * H1x1_4
110226    +          +    -3.74697079524831 * H1x1_5  +    -5.26174801543685 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 2.12915623251937 * H1x1_1 + 4.39530013559682 * H1x1_2 +
3.38050961443392 * H1x1_3 + -5.12182301645649 * H1x1_4 + -3.74697079524831 * H1x1_5 +
-5.26174801543685 * H1x1_6 ;
110227    +   H2x1_4  =     0.54854810712303 * H1x1_1  +      1.6486650469525 * H1x1_2
110228    +          +     1.84563084742932 * H1x1_3  +    -2.43710509923951 * H1x1_4
110229    +          +     0.03038093596976 * H1x1_5  +    -1.34566786751269 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.54854810712303 * H1x1_1 + 1.6486650469525 * H1x1_2 +
1.84563084742932 * H1x1_3 + -2.43710509923951 * H1x1_4 + 0.03038093596976 * H1x1_5 +
-1.34566786751269 * H1x1_6 ;
110230    +   H2x1_5  =     0.89845480530178 * H1x1_1  +     3.19967829294268 * H1x1_2
110231    +          +     3.58592569542093 * H1x1_3  +    -3.76417733693485 * H1x1_4
110232    +          +     -4.1568039640005 * H1x1_5  +    -4.42895004794637 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.89845480530178 * H1x1_1 + 3.19967829294268 * H1x1_2 +
3.58592569542093 * H1x1_3 + -3.76417733693485 * H1x1_4 + -4.1568039640005 * H1x1_5 +
-4.42895004794637 * H1x1_6 ;
110233    +   H2x1_1  = H2x1_1  +     0.44545310705069 * H1x2_1
110234    +          +     2.72471946580982 * H1x2_2  +    -1.42856846603531 * H1x2_3
110235    +          +     0.25357521888082 * H1x2_4  +    -1.25902268741411 * H1x2_5
110236    +          +    -1.70956044020454 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.44545310705069 * H1x2_1 + 2.72471946580982 * H1x2_2
+ -1.42856846603531 * H1x2_3 + 0.25357521888082 * H1x2_4 + -1.25902268741411 * H1x2_5 +
-1.70956044020454 * H1x2_6 ;
110237    +   H2x1_2  = H2x1_2  +      0.9465771639497 * H1x2_1
110238    +          +    -0.41110969777104 * H1x2_2  +    -0.92834816798625 * H1x2_3
110239    +          +     -1.7337755087443 * H1x2_4  +     -1.2522448489667 * H1x2_5
110240    +          +    -0.90111756793979 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.9465771639497 * H1x2_1 + -0.41110969777104 * H1x2_2
+ -0.92834816798625 * H1x2_3 + -1.7337755087443 * H1x2_4 + -1.2522448489667 * H1x2_5 +
-0.90111756793979 * H1x2_6 ;
110241    +   H2x1_3  = H2x1_3  +    -0.22355080983787 * H1x2_1
110242    +          +    -0.18918346120545 * H1x2_2  +    -1.50592518382263 * H1x2_3
110243    +          +    -1.00672320426732 * H1x2_4  +    -1.09510249463921 * H1x2_5
110244    +          +     0.83089577154267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.22355080983787 * H1x2_1 + -0.18918346120545 *
H1x2_2 + -1.50592518382263 * H1x2_3 + -1.00672320426732 * H1x2_4 + -1.09510249463921 * H1x2_5
+ 0.83089577154267 * H1x2_6 ;
110245    +   H2x1_4  = H2x1_4  +    -0.74505363577487 * H1x2_1
110246    +          +     0.41544439689687 * H1x2_2  +    -0.11467073820729 * H1x2_3
110247    +          +    -2.16913690278917 * H1x2_4  +     1.07667011067144 * H1x2_5
110248    +          +    -0.21291665093094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.74505363577487 * H1x2_1 + 0.41544439689687 * H1x2_2
+ -0.11467073820729 * H1x2_3 + -2.16913690278917 * H1x2_4 + 1.07667011067144 * H1x2_5 +
-0.21291665093094 * H1x2_6 ;
110249    +   H2x1_5  = H2x1_5  +    -0.22639397151159 * H1x2_1
110250    +          +     0.59976504799464 * H1x2_2  +    -1.19497833953318 * H1x2_3
110251    +          +     0.40681132265012 * H1x2_4  +    -1.18142813082248 * H1x2_5
110252    +          +     0.28627108561279 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.22639397151159 * H1x2_1 + 0.59976504799464 * H1x2_2
+ -1.19497833953318 * H1x2_3 + 0.40681132265012 * H1x2_4 + -1.18142813082248 * H1x2_5 +
0.28627108561279 * H1x2_6 ;
110253    +   H2x1_1  =     0.80837297417824 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.80837297417824 + H2x1_1 ;
110254    +   H2x1_2  =    -3.15918654233626 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -3.15918654233626 + H2x1_2 ;
110255    +   H2x1_3  =     -1.1148455701308 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.1148455701308 + H2x1_3 ;
110256    +   H2x1_4  =    -2.43637271773179 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.43637271773179 + H2x1_4 ;
110257    +   H2x1_5  =     -1.5068240097035 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.5068240097035 + H2x1_5 ;
110258    +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
110259    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
110260    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
110261    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
110262    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
110263    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
110264    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
110265    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
110266    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
110267    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
110268    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
110269    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
110270    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
110271    +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
110272    +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
110273    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
110274    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
110275    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
110276    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
110277    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
110278    +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
110279    +END;
MPRINT(EM_DIAGRAM):   END;
110280    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
110281    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
110282    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
110283    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
110284    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
110285    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
110286    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
110287    +END;
MPRINT(EM_DIAGRAM):   END;
110288    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110289    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
110290    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110291    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
110292    +   P_DepVar1  =    -14.9408685199347 * H2x1_1  +     1.48309430635242 * H2x1_2
110293    +          +     -4.3496216751271 * H2x1_3  +     0.01239249943556 * H2x1_4
110294    +          +    -6.27169756239783 * H2x1_5  +     2.70843493957574 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -14.9408685199347 * H2x1_1 + 1.48309430635242 * H2x1_2 +
-4.3496216751271 * H2x1_3 + 0.01239249943556 * H2x1_4 + -6.27169756239783 * H2x1_5 +
2.70843493957574 * H2x1_6 ;
110295    +   P_DepVar1  =     5.67267561171469 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.67267561171469 + P_DepVar1 ;
110296    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
110297    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
110298    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
110299    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
110300    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
110301    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
110302    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
110303    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
110304    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
110305    +END;
MPRINT(EM_DIAGRAM):   END;
110306    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
110307    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
110308    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
110309    +END;
MPRINT(EM_DIAGRAM):   END;
110310    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
110311    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
110312    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
110313    +END;
MPRINT(EM_DIAGRAM):   END;
110314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110315    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
110316    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110317    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
110318    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
110319    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
110320    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
110321    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
110322    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
110323    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
110324    +END;
MPRINT(EM_DIAGRAM):   END;
110325    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
110326    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
110327    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
110328    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
110329     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
110330     quit;
110331     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
110332     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
110333     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
110334     retain ID 2 Node "AutoNeural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural42";
110335     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
110336     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3812 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3812 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110337     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
110338     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110339     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3812 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3812 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110340     proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME
CREATOR);
110341     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110342     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
110343     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
110344     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
110345     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
110346     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110347     proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
110348     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
110349     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
110350     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110351     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110352     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
110353     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
110354     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110355     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110356     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
110357     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
110357   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1780 rows and 5 columns.
 
110358     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
110359     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
110360     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1780 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1780 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110361     filename _pref
110361   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
110362     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
110363     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
110364    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
110365    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
110366    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
110367    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
110368    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
110369    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
110370     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.23 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
110371     quit;
110372     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
110373     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
110374     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
110375     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
110376     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
110377     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110378     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
110379     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110380     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110381     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
110382     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110383     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
110384     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
110385     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
110386     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
110387     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110388     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
110389     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
110390     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
110391     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110392     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110393     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
110394     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
110395     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110396     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110397     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
110398     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
110398   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
110399     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
110400     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
110401     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1784 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110402     filename _pref
110402   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
110403     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
110404     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
110405    +
110406    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
110407    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
110407   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
110408    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
110409    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
110410    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
110411    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
110412    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
110413     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
110414     quit;
110415     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
110416     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
110417     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
110418     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
110419     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
110420     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110421     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
110422     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110423     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110424     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
110425     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110426     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110427     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
110428     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
110429     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
110430     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
110431     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
110432     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110433     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
110434     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110435     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110436     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
110437     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
110438     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110439     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
110440     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
110441     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
110441   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
110442     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110443     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
110444     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1823 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110445     filename _pref
110445   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
110446     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
110447     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
110448    +
110449    +
110450    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
110451    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
110452    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
110453    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
110454    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
110455    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
110456    +
110457    +
110458    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
110459    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
110460    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
110461    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
110462    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
110463    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
110464    +
110465    +
110466    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
110467    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
110468    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
110469    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
110470    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
110471    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
110472    +
110473    +
110474    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
110475    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
110476    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
110477    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
110478    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
110479    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
110480    +
110481    +
110482    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
110483    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
110484    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
110485    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
110486    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
110487    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
110488    +
110489    +
110490    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
110491    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
110492    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
110493    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
110494    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
110495    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
110496    +
110497    +
110498    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
110499    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
110500    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
110501    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
110502    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
110503    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
110504    +
110505    +
110506    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
110507    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
110508    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
110509    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
110510    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
110511    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
110512    +if
110513    +_FILTERNORM1 not in ( '.')
110514    + and
110515    +_FILTERNORM2 not in ( '.')
110516    + and
110517    +_FILTERNORM3 not in ( '.')
110518    + and
110519    +_FILTERNORM4 not in ( '.')
110520    + and
110521    +_FILTERNORM5 not in ( '.')
110522    + and
110523    +_FILTERNORM6 not in ( '.')
110524    + and
110525    +_FILTERNORM7 not in ( ' ')
110526    + and
110527    +_FILTERNORM8 not in ( ' ')
110528    +and
110529    +( Dt_Customer ne .)
110530    +and ( Income ne . and (Income<=107000))
110531    +and ( Kidhome ne .)
110532    +and ( MntFishProducts ne .)
110533    +and ( MntFruits ne .)
110534    +and ( MntGoldProds ne .)
110535    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
110536    +and ( MntSweetProducts ne .)
110537    +and ( MntWines ne .)
110538    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
110539    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
110540    +and ( NumStorePurchases ne .)
110541    +and ( NumWebPurchases ne .)
110542    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
110543    +and ( Recency ne .)
110544    +and ( Teenhome ne .)
110545    +and ( Year_Birth ne .)
110546    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
110547    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
110548    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
110549    +end;
MPRINT(EM_DIAGRAM):   end;
110550    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
110551    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
110552     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
110553     quit;
110554     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
110555     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
110556     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
110557     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
110558     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
110559     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110560     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
110561     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110562     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
110563     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
110564     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110565     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110566     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
110567     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
110568     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
110569     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110570     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
110571     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
110572     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
110573     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110574     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110575     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
110576     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
110577     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
110578     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110579     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
110580     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
110580   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
110581     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
110582     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
110583     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1889 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
110584     %macro varDept(fcmpdata=,id=);
110585     %global nobs&id scoreFlag&id;
110586     %let scoreFlag&id = 0;
110587     %if &id=1 or ^&fcmpStart %then %do;
110588     proc sort data=&fcmpdata out=_temp&id nodupkey;
110589     by NAME;
110590     where id=&id and LHS in( %let j=1;
110591     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
110592     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
110593     "&var" %let j = %eval(&j+1);
110594     %end;
110595     );
110596     run;
110597     %let dsid = %sysfunc(open(_temp&id));
110598     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
110599     %let dsid = %sysfunc(close(&dsid));
110600     %if &&nobs&id %then %do;
110601     %let scoreFlag&id = 1;
110602     %let fcmpStart = 1;
110603     %end;
110604     %else %let fcmpStart = 0;
110605     %end;
110606     %else %do;
110607     proc sort data=&fcmpdata out=_tempid;
110608     where id=&id;
110609     by LHS;
110610     run;
110611     %let dsid = %sysfunc(open(_tempid));
110612     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
110613     %let dsid = %sysfunc(close(&dsid));
110614     %if ^&&nobs&id %then %do;
110615     proc datasets lib=work nolist;
110616     delete _tempid;
110617     run;
110618     quit;
110619     %end;
110620     %else %do;
110621     data _tempAll;
110622     set %let j=%eval(&id-1);
110623     %do x=1 %to &j;
110624     %if &&nobs&x %then %do;
110625     _temp&x %end;
110626     %end;
110627     ;
110628     run;
110629     proc sql;
110630     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
110630   ! work._tempid p2 where p.name=p2.lhs;
110631     quit;
110632     data _temp&id;
110633     set _temp&id;
110634     where LHS ne '' and NAME ne '' and Node ne '';
110635     run;
110636     proc datasets lib=work nolist;
110637     delete _tempAll;
110638     run;
110639     %let dsid = %sysfunc(open(_temp&id));
110640     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
110641     %let dsid = %sysfunc(close(&dsid));
110642     %if ^&&nobs&id %then %do;
110643     proc datasets lib=work nolist;
110644     delete _temp&id;
110645     run;
110646     quit;
110647     %end;
110648     %else %do;
110649     %let scoreFlag&id = 1;
110650     data _temp&id;
110651     set _temp&id;
110652     where LHS ne NAME and node ne '';
110653     run;
110654     %let dsid = %sysfunc(open(_temp&id));
110655     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
110656     %let dsid = %sysfunc(close(&dsid));
110657     %if ^&&nobs&id %then %do;
110658     proc datasets lib=work nolist;
110659     delete _temp&id;
110660     run;
110661     quit;
110662     %end;
110663     %else %do;
110664     proc sort data=_temp&id nodupkey;
110665     by LHS NAME;
110666     run;
110667     %end;
110668     %end;
110669     %end;
110670     %end;
110671     %mend varDept;
110672     %macro optCode(outdata=fcmpdata);
110673     %global fcmpStart;
110674     %let fcmpStart = 0;
110675     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
110676     %let NumNodes=9;
110677     %do k=1 %to &NumNodes;
110678     %vardept(fcmpdata=&outdata, id=&k);
110679     %end;
110680     %mend optCode;
110681     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 82 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 60 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
110682     filename _pref
110682   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
110683     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
110684     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas.
110685    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
110686    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
110687    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
110688    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
110689    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
110690    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
110691    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
110692    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
110693    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
110694    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
110695    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
110696    +LENGTH _WARN_ $4
110697    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
110698    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
110699    +
110700    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
110701    +
110702    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
110703    +
110704    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
110705    +
110706    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
110707    +
110708    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
110709    +
110710    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
110711    +
110712    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
110713    +
110714    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
110715    +
110716    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
110717    +
110718    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
110719    +
110720    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
110721    +
110722    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
110723    +
110724    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
110725    +
110726    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
110727    +
110728    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
110729    +
110730    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
110731    +
110732    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
110733    +
110734    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
110735    +
110736    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
110737    +
110738    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
110739    +
110740    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
110741    +
110742    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
110743    +
110744    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
110745    +
110746    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
110747    +
110748    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
110749    +
110750    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
110751    +
110752    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
110753    +
110754    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
110755    +
110756    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
110757    +
110758    +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
110759    +
110760    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
110761    +
110762    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
110763    +
110764    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
110765    +
110766    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
110767    +
110768    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
110769    +
110770    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
110771    +
110772    +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
110773    +
110774    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
110775    +
110776    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
110777    +
110778    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
110779    +
110780    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
110781    +
110782    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
110783    +
110784    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
110785    +
110786    +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
110787    +
110788    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
110789    +
110790    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
110791    +
110792    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
110793    +
110794    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
110795    +
110796    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
110797    +
110798    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
110799    +
110800    +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
110801    +
110802    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
110803    +
110804    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
110805    +
110806    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
110807    +
110808    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
110809    +
110810    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
110811    +
110812    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
110813    +
110814    +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
110815    +
110816    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
110817    +
110818    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
110819    +
110820    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
110821    +
110822    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
110823    +
110824    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
110825    +
110826    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
110827    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
110828    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
110829    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
110830    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
110831    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
110832    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
110833    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
110834    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
110835    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
110836    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
110837    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
110838    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
110839    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
110840    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110841    +end;
MPRINT(EM_DIAGRAM):   end;
110842    +else do;
MPRINT(EM_DIAGRAM):   else do;
110843    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
110844    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
110845    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
110846    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
110847    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
110848    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
110849    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
110850    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
110851    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110852    +         end;
MPRINT(EM_DIAGRAM):   end;
110853    +         else do;
MPRINT(EM_DIAGRAM):   else do;
110854    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
110855    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
110856    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110857    +            end;
MPRINT(EM_DIAGRAM):   end;
110858    +         end;
MPRINT(EM_DIAGRAM):   end;
110859    +      end;
MPRINT(EM_DIAGRAM):   end;
110860    +      else do;
MPRINT(EM_DIAGRAM):   else do;
110861    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
110862    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
110863    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110864    +         end;
MPRINT(EM_DIAGRAM):   end;
110865    +      end;
MPRINT(EM_DIAGRAM):   end;
110866    +   end;
MPRINT(EM_DIAGRAM):   end;
110867    +   else do;
MPRINT(EM_DIAGRAM):   else do;
110868    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
110869    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
110870    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110871    +      end;
MPRINT(EM_DIAGRAM):   end;
110872    +      else do;
MPRINT(EM_DIAGRAM):   else do;
110873    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
110874    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
110875    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
110876    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
110877    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
110878    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
110879    +         end;
MPRINT(EM_DIAGRAM):   end;
110880    +      end;
MPRINT(EM_DIAGRAM):   end;
110881    +   end;
MPRINT(EM_DIAGRAM):   end;
110882    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
110883    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
110884    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
110885    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
110886    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
110887    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
110888    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110889    +   end;
MPRINT(EM_DIAGRAM):   end;
110890    +end;
MPRINT(EM_DIAGRAM):   end;
110891    +
110892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110893    +*** Checking missing input Interval
110894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
110895    +
110896    +IF NMISS(
110897    +   AcceptedCmpTotal ,
110898    +   Frq ,
110899    +   Income ,
110900    +   Mnt ,
110901    +   MntGoldProds ,
110902    +   MntMeatProducts ,
110903    +   NumCatalogPurchases ,
110904    +   NumDealsPurchases ,
110905    +   NumWebVisitsMonth ,
110906    +   RFMstat ,
110907    +   Recency ,
110908    +   Teenhome ,
110909    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
110910    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
110911    +
110912    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
110913    +END;
MPRINT(EM_DIAGRAM):   END;
110914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110915    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
110916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110917    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
110918    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
110919    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
110920    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
110921    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
110922    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
110923    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
110924    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
110925    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
110926    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
110927    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
110928    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
110929    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
110930    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
110931    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
110932    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
110933    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
110934    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
110935    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
110936    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
110937    +END;
MPRINT(EM_DIAGRAM):   END;
110938    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
110939    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
110940    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
110941    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
110942    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
110943    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
110944    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
110945    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
110946    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
110947    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
110948    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
110949    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
110950    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
110951    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
110952    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
110953    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
110954    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
110955    +   ELSE S_NumCatalogPurchases
110956    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
110957    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
110958    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
110959    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
110960    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
110961    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
110962    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
110963    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
110964    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
110965    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
110966    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
110967    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
110968    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
110969    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
110970    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
110971    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
110972    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
110973    +END;
MPRINT(EM_DIAGRAM):   END;
110974    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110975    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
110976    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110978    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
110979    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
110980    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
110981    +   H1x1_1  =    -0.29618919413806 * S_AcceptedCmpTotal
110982    +          +     0.65621237028757 * S_Frq  +     0.03418945976327 * S_Income
110983    +          +     1.44880456678399 * S_Mnt  +     0.74166093949552 *
110984    +        S_MntGoldProds  +     1.02706876663519 * S_MntMeatProducts
110985    +          +    -0.82528424139262 * S_NumCatalogPurchases
110986    +          +      0.5929046965244 * S_NumDealsPurchases
110987    +          +    -0.52362488197384 * S_NumWebVisitsMonth
110988    +          +     0.37882892269923 * S_RFMstat  +     2.12340115344155 *
110989    +        S_Recency  +    -0.83670225777249 * S_Teenhome
110990    +          +     0.53976656905831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.29618919413806 * S_AcceptedCmpTotal + 0.65621237028757 *
S_Frq + 0.03418945976327 * S_Income + 1.44880456678399 * S_Mnt + 0.74166093949552 *
S_MntGoldProds + 1.02706876663519 * S_MntMeatProducts + -0.82528424139262 *
S_NumCatalogPurchases + 0.5929046965244 * S_NumDealsPurchases + -0.52362488197384 *
S_NumWebVisitsMonth + 0.37882892269923 * S_RFMstat + 2.12340115344155 * S_Recency +
-0.83670225777249 * S_Teenhome + 0.53976656905831 * S_Year_Birth ;
110991    +   H1x1_2  =     0.29962396390652 * S_AcceptedCmpTotal
110992    +          +     -2.5902198016826 * S_Frq  +    -0.18776639473475 * S_Income
110993    +          +    -2.77524252217737 * S_Mnt  +     0.96018065616836 *
110994    +        S_MntGoldProds  +     3.16907172523474 * S_MntMeatProducts
110995    +          +    -0.60117742307807 * S_NumCatalogPurchases
110996    +          +     1.09806082321711 * S_NumDealsPurchases
110997    +          +     1.26617704720444 * S_NumWebVisitsMonth
110998    +          +     1.08444062320284 * S_RFMstat  +     1.05523311776937 *
110999    +        S_Recency  +     -0.2630764341314 * S_Teenhome
111000    +          +    -0.42373178164016 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.29962396390652 * S_AcceptedCmpTotal + -2.5902198016826 *
S_Frq + -0.18776639473475 * S_Income + -2.77524252217737 * S_Mnt + 0.96018065616836 *
S_MntGoldProds + 3.16907172523474 * S_MntMeatProducts + -0.60117742307807 *
S_NumCatalogPurchases + 1.09806082321711 * S_NumDealsPurchases + 1.26617704720444 *
S_NumWebVisitsMonth + 1.08444062320284 * S_RFMstat + 1.05523311776937 * S_Recency +
-0.2630764341314 * S_Teenhome + -0.42373178164016 * S_Year_Birth ;
111001    +   H1x1_3  =     2.31041583450369 * S_AcceptedCmpTotal
111002    +          +    -1.96810851023784 * S_Frq  +     0.93795839333407 * S_Income
111003    +          +    -1.55337331547216 * S_Mnt  +     1.13417428979776 *
111004    +        S_MntGoldProds  +     3.70573651287077 * S_MntMeatProducts
111005    +          +     1.63075268570383 * S_NumCatalogPurchases
111006    +          +     0.62057902628545 * S_NumDealsPurchases
111007    +          +     1.85944172136218 * S_NumWebVisitsMonth
111008    +          +     0.51474936656536 * S_RFMstat  +    -2.17922024885571 *
111009    +        S_Recency  +    -0.78663308544854 * S_Teenhome
111010    +          +    -0.08719031066365 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.31041583450369 * S_AcceptedCmpTotal + -1.96810851023784 *
S_Frq + 0.93795839333407 * S_Income + -1.55337331547216 * S_Mnt + 1.13417428979776 *
S_MntGoldProds + 3.70573651287077 * S_MntMeatProducts + 1.63075268570383 *
S_NumCatalogPurchases + 0.62057902628545 * S_NumDealsPurchases + 1.85944172136218 *
S_NumWebVisitsMonth + 0.51474936656536 * S_RFMstat + -2.17922024885571 * S_Recency +
-0.78663308544854 * S_Teenhome + -0.08719031066365 * S_Year_Birth ;
111011    +   H1x1_4  =     -0.0390409024382 * S_AcceptedCmpTotal
111012    +          +     2.11606776858073 * S_Frq  +     -0.3817450995856 * S_Income
111013    +          +     0.40531492299483 * S_Mnt  +     0.54341985868017 *
111014    +        S_MntGoldProds  +    -5.50809183295151 * S_MntMeatProducts
111015    +          +    -2.59032878085972 * S_NumCatalogPurchases
111016    +          +    -0.44146008176644 * S_NumDealsPurchases
111017    +          +     1.16377649939583 * S_NumWebVisitsMonth
111018    +          +    -0.40950445519308 * S_RFMstat  +     1.44701615363875 *
111019    +        S_Recency  +    -0.44721505258044 * S_Teenhome
111020    +          +    -0.53780522701747 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.0390409024382 * S_AcceptedCmpTotal + 2.11606776858073 *
S_Frq + -0.3817450995856 * S_Income + 0.40531492299483 * S_Mnt + 0.54341985868017 *
S_MntGoldProds + -5.50809183295151 * S_MntMeatProducts + -2.59032878085972 *
S_NumCatalogPurchases + -0.44146008176644 * S_NumDealsPurchases + 1.16377649939583 *
S_NumWebVisitsMonth + -0.40950445519308 * S_RFMstat + 1.44701615363875 * S_Recency +
-0.44721505258044 * S_Teenhome + -0.53780522701747 * S_Year_Birth ;
111021    +   H1x1_5  =    -0.96249689474011 * S_AcceptedCmpTotal
111022    +          +     1.18171571446591 * S_Frq  +     0.15643078933994 * S_Income
111023    +          +      1.1855275327594 * S_Mnt  +    -0.31882188338593 *
111024    +        S_MntGoldProds  +    -0.17799046807331 * S_MntMeatProducts
111025    +          +    -2.88423926492169 * S_NumCatalogPurchases
111026    +          +     0.76448279454687 * S_NumDealsPurchases
111027    +          +     0.63782718366339 * S_NumWebVisitsMonth
111028    +          +    -1.52311206450608 * S_RFMstat  +     2.66138322599513 *
111029    +        S_Recency  +     0.19809045233143 * S_Teenhome
111030    +          +    -0.11944673598308 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.96249689474011 * S_AcceptedCmpTotal + 1.18171571446591 *
S_Frq + 0.15643078933994 * S_Income + 1.1855275327594 * S_Mnt + -0.31882188338593 *
S_MntGoldProds + -0.17799046807331 * S_MntMeatProducts + -2.88423926492169 *
S_NumCatalogPurchases + 0.76448279454687 * S_NumDealsPurchases + 0.63782718366339 *
S_NumWebVisitsMonth + -1.52311206450608 * S_RFMstat + 2.66138322599513 * S_Recency +
0.19809045233143 * S_Teenhome + -0.11944673598308 * S_Year_Birth ;
111031    +   H1x1_6  =     1.48018319811202 * S_AcceptedCmpTotal
111032    +          +    -2.35201132061873 * S_Frq  +     1.49549206730687 * S_Income
111033    +          +    -0.92311571755706 * S_Mnt  +    -0.17036386789536 *
111034    +        S_MntGoldProds  +     2.42959371021324 * S_MntMeatProducts
111035    +          +     1.71243370379543 * S_NumCatalogPurchases
111036    +          +     1.59034024362028 * S_NumDealsPurchases
111037    +          +     2.43090724707282 * S_NumWebVisitsMonth
111038    +          +    -1.84934930083177 * S_RFMstat  +    -1.10219728762745 *
111039    +        S_Recency  +    -1.20398234836557 * S_Teenhome
111040    +          +    -0.04071326663204 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.48018319811202 * S_AcceptedCmpTotal + -2.35201132061873 *
S_Frq + 1.49549206730687 * S_Income + -0.92311571755706 * S_Mnt + -0.17036386789536 *
S_MntGoldProds + 2.42959371021324 * S_MntMeatProducts + 1.71243370379543 *
S_NumCatalogPurchases + 1.59034024362028 * S_NumDealsPurchases + 2.43090724707282 *
S_NumWebVisitsMonth + -1.84934930083177 * S_RFMstat + -1.10219728762745 * S_Recency +
-1.20398234836557 * S_Teenhome + -0.04071326663204 * S_Year_Birth ;
111041    +   H1x1_1  = H1x1_1  +    -1.53952272056325 * Marital_StatusDivorced
111042    +          +     1.90782989914192 * Marital_StatusMarried
111043    +          +    -1.16189886119693 * Marital_StatusSingle
111044    +          +     1.42717413956591 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.53952272056325 * Marital_StatusDivorced +
1.90782989914192 * Marital_StatusMarried + -1.16189886119693 * Marital_StatusSingle +
1.42717413956591 * Marital_StatusTogether ;
111045    +   H1x1_2  = H1x1_2  +     0.65814869063598 * Marital_StatusDivorced
111046    +          +     0.30468777490799 * Marital_StatusMarried
111047    +          +     0.61978761938746 * Marital_StatusSingle
111048    +          +    -0.78873321292122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.65814869063598 * Marital_StatusDivorced +
0.30468777490799 * Marital_StatusMarried + 0.61978761938746 * Marital_StatusSingle +
-0.78873321292122 * Marital_StatusTogether ;
111049    +   H1x1_3  = H1x1_3  +      0.1292120736254 * Marital_StatusDivorced
111050    +          +    -1.73477859605124 * Marital_StatusMarried
111051    +          +     1.32595981126289 * Marital_StatusSingle
111052    +          +    -1.40161784211243 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.1292120736254 * Marital_StatusDivorced +
-1.73477859605124 * Marital_StatusMarried + 1.32595981126289 * Marital_StatusSingle +
-1.40161784211243 * Marital_StatusTogether ;
111053    +   H1x1_4  = H1x1_4  +     0.20617554754163 * Marital_StatusDivorced
111054    +          +     0.06077392213964 * Marital_StatusMarried
111055    +          +     0.21115279121703 * Marital_StatusSingle
111056    +          +    -0.61340758151821 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.20617554754163 * Marital_StatusDivorced +
0.06077392213964 * Marital_StatusMarried + 0.21115279121703 * Marital_StatusSingle +
-0.61340758151821 * Marital_StatusTogether ;
111057    +   H1x1_5  = H1x1_5  +    -0.69141266071894 * Marital_StatusDivorced
111058    +          +    -0.24067068377767 * Marital_StatusMarried
111059    +          +      0.2728964145401 * Marital_StatusSingle
111060    +          +    -0.61614895252648 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.69141266071894 * Marital_StatusDivorced +
-0.24067068377767 * Marital_StatusMarried + 0.2728964145401 * Marital_StatusSingle +
-0.61614895252648 * Marital_StatusTogether ;
111061    +   H1x1_6  = H1x1_6  +    -0.81455860225062 * Marital_StatusDivorced
111062    +          +    -0.15640287278595 * Marital_StatusMarried
111063    +          +     0.54159395450762 * Marital_StatusSingle
111064    +          +    -0.43264862434738 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.81455860225062 * Marital_StatusDivorced +
-0.15640287278595 * Marital_StatusMarried + 0.54159395450762 * Marital_StatusSingle +
-0.43264862434738 * Marital_StatusTogether ;
111065    +   H1x1_1  =    -0.36385036888345 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.36385036888345 + H1x1_1 ;
111066    +   H1x1_2  =     0.02663558500629 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.02663558500629 + H1x1_2 ;
111067    +   H1x1_3  =    -3.50526409213811 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.50526409213811 + H1x1_3 ;
111068    +   H1x1_4  =     0.63048769294892 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.63048769294892 + H1x1_4 ;
111069    +   H1x1_5  =     1.21111796976731 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.21111796976731 + H1x1_5 ;
111070    +   H1x1_6  =    -1.76174187739611 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.76174187739611 + H1x1_6 ;
111071    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
111072    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
111073    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
111074    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
111075    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
111076    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
111077    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
111078    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
111079    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
111080    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
111081    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
111082    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
111083    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
111084    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
111085    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
111086    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
111087    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
111088    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
111089    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
111090    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
111091    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
111092    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
111093    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
111094    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
111095    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
111096    +END;
MPRINT(EM_DIAGRAM):   END;
111097    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
111098    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
111099    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
111100    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
111101    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
111102    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
111103    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
111104    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
111105    +END;
MPRINT(EM_DIAGRAM):   END;
111106    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111107    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
111108    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111109    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
111110    +   H1x2_1  =     0.51589041180152 * S_AcceptedCmpTotal
111111    +          +     -0.6498311499195 * S_Frq  +    -1.08182644925044 * S_Income
111112    +          +    -1.19064228379044 * S_Mnt  +    -1.27287496888491 *
111113    +        S_MntGoldProds  +    -1.33897837883991 * S_MntMeatProducts
111114    +          +     0.14209124492657 * S_NumCatalogPurchases
111115    +          +    -1.31625106509803 * S_NumDealsPurchases
111116    +          +     2.35745588368331 * S_NumWebVisitsMonth
111117    +          +    -1.28657356976181 * S_RFMstat  +     0.25408650330935 *
111118    +        S_Recency  +     1.23527100408525 * S_Teenhome
111119    +          +    -1.87183507669176 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.51589041180152 * S_AcceptedCmpTotal + -0.6498311499195 *
S_Frq + -1.08182644925044 * S_Income + -1.19064228379044 * S_Mnt + -1.27287496888491 *
S_MntGoldProds + -1.33897837883991 * S_MntMeatProducts + 0.14209124492657 *
S_NumCatalogPurchases + -1.31625106509803 * S_NumDealsPurchases + 2.35745588368331 *
S_NumWebVisitsMonth + -1.28657356976181 * S_RFMstat + 0.25408650330935 * S_Recency +
1.23527100408525 * S_Teenhome + -1.87183507669176 * S_Year_Birth ;
111120    +   H1x2_2  =    -1.23424462482032 * S_AcceptedCmpTotal
111121    +          +     1.46358102529667 * S_Frq  +     1.75790517593121 * S_Income
111122    +          +      -0.424881586919 * S_Mnt  +     -0.9331242135447 *
111123    +        S_MntGoldProds  +     0.54942904780681 * S_MntMeatProducts
111124    +          +     1.18605040958794 * S_NumCatalogPurchases
111125    +          +    -0.89798157472835 * S_NumDealsPurchases
111126    +          +    -0.09236646871049 * S_NumWebVisitsMonth
111127    +          +    -1.29341547638046 * S_RFMstat  +     1.66853355984342 *
111128    +        S_Recency  +    -0.50770218335102 * S_Teenhome
111129    +          +    -1.07353749220663 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.23424462482032 * S_AcceptedCmpTotal + 1.46358102529667 *
S_Frq + 1.75790517593121 * S_Income + -0.424881586919 * S_Mnt + -0.9331242135447 *
S_MntGoldProds + 0.54942904780681 * S_MntMeatProducts + 1.18605040958794 *
S_NumCatalogPurchases + -0.89798157472835 * S_NumDealsPurchases + -0.09236646871049 *
S_NumWebVisitsMonth + -1.29341547638046 * S_RFMstat + 1.66853355984342 * S_Recency +
-0.50770218335102 * S_Teenhome + -1.07353749220663 * S_Year_Birth ;
111130    +   H1x2_3  =     0.77624009560593 * S_AcceptedCmpTotal
111131    +          +    -0.52739784343536 * S_Frq  +     0.03893675518591 * S_Income
111132    +          +     2.17484611279249 * S_Mnt  +    -0.17952459801341 *
111133    +        S_MntGoldProds  +     0.34588410829653 * S_MntMeatProducts
111134    +          +    -1.53424308314822 * S_NumCatalogPurchases
111135    +          +    -0.80590323269981 * S_NumDealsPurchases
111136    +          +    -1.40104490662303 * S_NumWebVisitsMonth
111137    +          +     1.66586308350968 * S_RFMstat  +    -0.47553614859646 *
111138    +        S_Recency  +     0.96086280467056 * S_Teenhome
111139    +          +    -1.77672596886127 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.77624009560593 * S_AcceptedCmpTotal + -0.52739784343536 *
S_Frq + 0.03893675518591 * S_Income + 2.17484611279249 * S_Mnt + -0.17952459801341 *
S_MntGoldProds + 0.34588410829653 * S_MntMeatProducts + -1.53424308314822 *
S_NumCatalogPurchases + -0.80590323269981 * S_NumDealsPurchases + -1.40104490662303 *
S_NumWebVisitsMonth + 1.66586308350968 * S_RFMstat + -0.47553614859646 * S_Recency +
0.96086280467056 * S_Teenhome + -1.77672596886127 * S_Year_Birth ;
111140    +   H1x2_4  =     0.58137966699652 * S_AcceptedCmpTotal
111141    +          +      1.4040418295752 * S_Frq  +    -0.24832517883948 * S_Income
111142    +          +    -0.61141424736299 * S_Mnt  +     0.20471254162898 *
111143    +        S_MntGoldProds  +     0.44314427658514 * S_MntMeatProducts
111144    +          +    -1.25862219948587 * S_NumCatalogPurchases
111145    +          +     1.95015982914109 * S_NumDealsPurchases
111146    +          +     0.64320281589594 * S_NumWebVisitsMonth
111147    +          +     0.79165027029588 * S_RFMstat  +     0.66988554846863 *
111148    +        S_Recency  +    -0.00184949563812 * S_Teenhome
111149    +          +    -0.90548552271817 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.58137966699652 * S_AcceptedCmpTotal + 1.4040418295752 * S_Frq
+ -0.24832517883948 * S_Income + -0.61141424736299 * S_Mnt + 0.20471254162898 * S_MntGoldProds
+ 0.44314427658514 * S_MntMeatProducts + -1.25862219948587 * S_NumCatalogPurchases +
1.95015982914109 * S_NumDealsPurchases + 0.64320281589594 * S_NumWebVisitsMonth +
0.79165027029588 * S_RFMstat + 0.66988554846863 * S_Recency + -0.00184949563812 * S_Teenhome +
-0.90548552271817 * S_Year_Birth ;
111150    +   H1x2_5  =      0.5931660751286 * S_AcceptedCmpTotal
111151    +          +     0.58645753040534 * S_Frq  +     1.15236353289832 * S_Income
111152    +          +     0.33853280493921 * S_Mnt  +    -0.34695797092699 *
111153    +        S_MntGoldProds  +     2.24596975589576 * S_MntMeatProducts
111154    +          +     0.30573893169917 * S_NumCatalogPurchases
111155    +          +     0.93169788380491 * S_NumDealsPurchases
111156    +          +     0.04516037232248 * S_NumWebVisitsMonth
111157    +          +     0.56461660789519 * S_RFMstat  +    -0.73850030816559 *
111158    +        S_Recency  +      0.1429120113072 * S_Teenhome
111159    +          +     0.57728849891114 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.5931660751286 * S_AcceptedCmpTotal + 0.58645753040534 * S_Frq
+ 1.15236353289832 * S_Income + 0.33853280493921 * S_Mnt + -0.34695797092699 * S_MntGoldProds
+ 2.24596975589576 * S_MntMeatProducts + 0.30573893169917 * S_NumCatalogPurchases +
0.93169788380491 * S_NumDealsPurchases + 0.04516037232248 * S_NumWebVisitsMonth +
0.56461660789519 * S_RFMstat + -0.73850030816559 * S_Recency + 0.1429120113072 * S_Teenhome +
0.57728849891114 * S_Year_Birth ;
111160    +   H1x2_6  =    -0.61564457275113 * S_AcceptedCmpTotal
111161    +          +     0.25558411574917 * S_Frq  +      0.1079727446126 * S_Income
111162    +          +    -1.20360633098467 * S_Mnt  +     1.72797334940475 *
111163    +        S_MntGoldProds  +    -1.65210775934619 * S_MntMeatProducts
111164    +          +      0.2704422632168 * S_NumCatalogPurchases
111165    +          +      2.3389342094366 * S_NumDealsPurchases
111166    +          +     0.01076302858809 * S_NumWebVisitsMonth
111167    +          +    -2.36764292681458 * S_RFMstat  +     1.10196533018748 *
111168    +        S_Recency  +     0.68455094392125 * S_Teenhome
111169    +          +     1.22292273319927 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.61564457275113 * S_AcceptedCmpTotal + 0.25558411574917 *
S_Frq + 0.1079727446126 * S_Income + -1.20360633098467 * S_Mnt + 1.72797334940475 *
S_MntGoldProds + -1.65210775934619 * S_MntMeatProducts + 0.2704422632168 *
S_NumCatalogPurchases + 2.3389342094366 * S_NumDealsPurchases + 0.01076302858809 *
S_NumWebVisitsMonth + -2.36764292681458 * S_RFMstat + 1.10196533018748 * S_Recency +
0.68455094392125 * S_Teenhome + 1.22292273319927 * S_Year_Birth ;
111170    +   H1x2_1  = H1x2_1  +    -2.04566893512123 * Marital_StatusDivorced
111171    +          +      0.8255833782513 * Marital_StatusMarried
111172    +          +    -0.48959165020896 * Marital_StatusSingle
111173    +          +     2.83781371812098 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.04566893512123 * Marital_StatusDivorced +
0.8255833782513 * Marital_StatusMarried + -0.48959165020896 * Marital_StatusSingle +
2.83781371812098 * Marital_StatusTogether ;
111174    +   H1x2_2  = H1x2_2  +     0.67000557197818 * Marital_StatusDivorced
111175    +          +    -0.36405013930464 * Marital_StatusMarried
111176    +          +    -0.11895921007246 * Marital_StatusSingle
111177    +          +    -0.94713834966834 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67000557197818 * Marital_StatusDivorced +
-0.36405013930464 * Marital_StatusMarried + -0.11895921007246 * Marital_StatusSingle +
-0.94713834966834 * Marital_StatusTogether ;
111178    +   H1x2_3  = H1x2_3  +     0.26597574107473 * Marital_StatusDivorced
111179    +          +    -1.38902793752658 * Marital_StatusMarried
111180    +          +     0.47104623132568 * Marital_StatusSingle
111181    +          +    -0.55354712799424 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.26597574107473 * Marital_StatusDivorced +
-1.38902793752658 * Marital_StatusMarried + 0.47104623132568 * Marital_StatusSingle +
-0.55354712799424 * Marital_StatusTogether ;
111182    +   H1x2_4  = H1x2_4  +    -1.69625977318234 * Marital_StatusDivorced
111183    +          +     0.03793816986941 * Marital_StatusMarried
111184    +          +     0.32286910605532 * Marital_StatusSingle
111185    +          +    -1.44817209305758 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.69625977318234 * Marital_StatusDivorced +
0.03793816986941 * Marital_StatusMarried + 0.32286910605532 * Marital_StatusSingle +
-1.44817209305758 * Marital_StatusTogether ;
111186    +   H1x2_5  = H1x2_5  +     0.19745523338489 * Marital_StatusDivorced
111187    +          +    -0.60013237897988 * Marital_StatusMarried
111188    +          +    -1.54090744803073 * Marital_StatusSingle
111189    +          +    -2.24346446510302 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.19745523338489 * Marital_StatusDivorced +
-0.60013237897988 * Marital_StatusMarried + -1.54090744803073 * Marital_StatusSingle +
-2.24346446510302 * Marital_StatusTogether ;
111190    +   H1x2_6  = H1x2_6  +     0.47464108124928 * Marital_StatusDivorced
111191    +          +     2.39490119482132 * Marital_StatusMarried
111192    +          +     0.73080073298893 * Marital_StatusSingle
111193    +          +    -0.62296432915598 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.47464108124928 * Marital_StatusDivorced +
2.39490119482132 * Marital_StatusMarried + 0.73080073298893 * Marital_StatusSingle +
-0.62296432915598 * Marital_StatusTogether ;
111194    +   H1x2_1  =     1.03099135229255 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.03099135229255 + H1x2_1 ;
111195    +   H1x2_2  =     -0.9436150278938 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.9436150278938 + H1x2_2 ;
111196    +   H1x2_3  =    -0.17327523864686 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.17327523864686 + H1x2_3 ;
111197    +   H1x2_4  =     0.30103807123555 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.30103807123555 + H1x2_4 ;
111198    +   H1x2_5  =    -2.06815743640812 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -2.06815743640812 + H1x2_5 ;
111199    +   H1x2_6  =     1.90356790294644 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.90356790294644 + H1x2_6 ;
111200    +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
111201    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
111202    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
111203    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
111204    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
111205    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
111206    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
111207    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
111208    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
111209    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
111210    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
111211    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
111212    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
111213    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
111214    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
111215    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
111216    +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
111217    +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
111218    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
111219    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
111220    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
111221    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
111222    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
111223    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
111224    +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
111225    +END;
MPRINT(EM_DIAGRAM):   END;
111226    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
111227    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
111228    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
111229    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
111230    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
111231    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
111232    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
111233    +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
111234    +END;
MPRINT(EM_DIAGRAM):   END;
111235    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111236    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
111237    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111238    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
111239    +   H1x3_1  =    -0.02577999703823 * S_AcceptedCmpTotal
111240    +          +     1.15166430232754 * S_Frq  +     0.14876168620543 * S_Income
111241    +          +    -0.18380736633059 * S_Mnt  +     0.50048252433262 *
111242    +        S_MntGoldProds  +    -0.33191625929347 * S_MntMeatProducts
111243    +          +     2.25334156596167 * S_NumCatalogPurchases
111244    +          +     1.11206221926547 * S_NumDealsPurchases
111245    +          +    -0.86546062057987 * S_NumWebVisitsMonth
111246    +          +    -0.98321051175326 * S_RFMstat  +     1.25274008829299 *
111247    +        S_Recency  +    -1.57916593034924 * S_Teenhome
111248    +          +    -2.06345344469395 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02577999703823 * S_AcceptedCmpTotal + 1.15166430232754 *
S_Frq + 0.14876168620543 * S_Income + -0.18380736633059 * S_Mnt + 0.50048252433262 *
S_MntGoldProds + -0.33191625929347 * S_MntMeatProducts + 2.25334156596167 *
S_NumCatalogPurchases + 1.11206221926547 * S_NumDealsPurchases + -0.86546062057987 *
S_NumWebVisitsMonth + -0.98321051175326 * S_RFMstat + 1.25274008829299 * S_Recency +
-1.57916593034924 * S_Teenhome + -2.06345344469395 * S_Year_Birth ;
111249    +   H1x3_2  =    -1.17329843303132 * S_AcceptedCmpTotal
111250    +          +     1.78916673039241 * S_Frq  +    -0.84674133842717 * S_Income
111251    +          +     0.28484675606294 * S_Mnt  +     0.63187019772354 *
111252    +        S_MntGoldProds  +    -0.96245535082151 * S_MntMeatProducts
111253    +          +    -0.72830662589886 * S_NumCatalogPurchases
111254    +          +    -1.43194640925705 * S_NumDealsPurchases
111255    +          +     0.27875145672985 * S_NumWebVisitsMonth
111256    +          +    -2.03430995128807 * S_RFMstat  +    -0.52413738058555 *
111257    +        S_Recency  +    -1.01056905981073 * S_Teenhome
111258    +          +     0.00830584207402 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.17329843303132 * S_AcceptedCmpTotal + 1.78916673039241 *
S_Frq + -0.84674133842717 * S_Income + 0.28484675606294 * S_Mnt + 0.63187019772354 *
S_MntGoldProds + -0.96245535082151 * S_MntMeatProducts + -0.72830662589886 *
S_NumCatalogPurchases + -1.43194640925705 * S_NumDealsPurchases + 0.27875145672985 *
S_NumWebVisitsMonth + -2.03430995128807 * S_RFMstat + -0.52413738058555 * S_Recency +
-1.01056905981073 * S_Teenhome + 0.00830584207402 * S_Year_Birth ;
111259    +   H1x3_3  =    -1.51193899177395 * S_AcceptedCmpTotal
111260    +          +    -1.18260896990859 * S_Frq  +    -0.95243122164169 * S_Income
111261    +          +    -0.18792820239336 * S_Mnt  +    -0.06982279743147 *
111262    +        S_MntGoldProds  +    -1.14763783870634 * S_MntMeatProducts
111263    +          +    -0.29577972728188 * S_NumCatalogPurchases
111264    +          +    -0.09204036503823 * S_NumDealsPurchases
111265    +          +     1.09127760712522 * S_NumWebVisitsMonth
111266    +          +     0.67251355869104 * S_RFMstat  +     0.02406054275944 *
111267    +        S_Recency  +    -1.61269837976842 * S_Teenhome
111268    +          +     1.49645524045306 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -1.51193899177395 * S_AcceptedCmpTotal + -1.18260896990859 *
S_Frq + -0.95243122164169 * S_Income + -0.18792820239336 * S_Mnt + -0.06982279743147 *
S_MntGoldProds + -1.14763783870634 * S_MntMeatProducts + -0.29577972728188 *
S_NumCatalogPurchases + -0.09204036503823 * S_NumDealsPurchases + 1.09127760712522 *
S_NumWebVisitsMonth + 0.67251355869104 * S_RFMstat + 0.02406054275944 * S_Recency +
-1.61269837976842 * S_Teenhome + 1.49645524045306 * S_Year_Birth ;
111269    +   H1x3_4  =      0.0300271349218 * S_AcceptedCmpTotal
111270    +          +     0.92676949944979 * S_Frq  +    -0.43729227407729 * S_Income
111271    +          +     0.20149694045928 * S_Mnt  +    -0.72339995493149 *
111272    +        S_MntGoldProds  +     0.79792093415572 * S_MntMeatProducts
111273    +          +     0.74771164805463 * S_NumCatalogPurchases
111274    +          +     1.48674373289951 * S_NumDealsPurchases
111275    +          +    -0.43724934700095 * S_NumWebVisitsMonth
111276    +          +    -0.83295997374079 * S_RFMstat  +    -0.78737099754706 *
111277    +        S_Recency  +      1.5969237416548 * S_Teenhome
111278    +          +     -0.1539761100948 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.0300271349218 * S_AcceptedCmpTotal + 0.92676949944979 * S_Frq
+ -0.43729227407729 * S_Income + 0.20149694045928 * S_Mnt + -0.72339995493149 * S_MntGoldProds
+ 0.79792093415572 * S_MntMeatProducts + 0.74771164805463 * S_NumCatalogPurchases +
1.48674373289951 * S_NumDealsPurchases + -0.43724934700095 * S_NumWebVisitsMonth +
-0.83295997374079 * S_RFMstat + -0.78737099754706 * S_Recency + 1.5969237416548 * S_Teenhome +
-0.1539761100948 * S_Year_Birth ;
111279    +   H1x3_5  =     0.10850479066736 * S_AcceptedCmpTotal
111280    +          +    -0.69523987336905 * S_Frq  +    -1.03313846128362 * S_Income
111281    +          +     0.25026080496919 * S_Mnt  +    -0.97357883151863 *
111282    +        S_MntGoldProds  +    -0.61754054300662 * S_MntMeatProducts
111283    +          +     0.32607897654777 * S_NumCatalogPurchases
111284    +          +    -0.05989936582211 * S_NumDealsPurchases
111285    +          +     -0.8863628882594 * S_NumWebVisitsMonth
111286    +          +      1.1124532739734 * S_RFMstat  +    -0.38719199193265 *
111287    +        S_Recency  +      1.1633098880037 * S_Teenhome
111288    +          +    -1.12745203473451 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.10850479066736 * S_AcceptedCmpTotal + -0.69523987336905 *
S_Frq + -1.03313846128362 * S_Income + 0.25026080496919 * S_Mnt + -0.97357883151863 *
S_MntGoldProds + -0.61754054300662 * S_MntMeatProducts + 0.32607897654777 *
S_NumCatalogPurchases + -0.05989936582211 * S_NumDealsPurchases + -0.8863628882594 *
S_NumWebVisitsMonth + 1.1124532739734 * S_RFMstat + -0.38719199193265 * S_Recency +
1.1633098880037 * S_Teenhome + -1.12745203473451 * S_Year_Birth ;
111289    +   H1x3_6  =    -0.11588080697234 * S_AcceptedCmpTotal
111290    +          +     0.62360534366171 * S_Frq  +     0.05171263107667 * S_Income
111291    +          +    -2.09517372359855 * S_Mnt  +     1.82275072298905 *
111292    +        S_MntGoldProds  +    -0.20222711303443 * S_MntMeatProducts
111293    +          +    -0.32855091358254 * S_NumCatalogPurchases
111294    +          +    -0.04262624947945 * S_NumDealsPurchases
111295    +          +     0.34844893542429 * S_NumWebVisitsMonth
111296    +          +     1.02395415516187 * S_RFMstat  +     0.72163010188304 *
111297    +        S_Recency  +     0.25374922499465 * S_Teenhome
111298    +          +    -0.26482823596248 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -0.11588080697234 * S_AcceptedCmpTotal + 0.62360534366171 *
S_Frq + 0.05171263107667 * S_Income + -2.09517372359855 * S_Mnt + 1.82275072298905 *
S_MntGoldProds + -0.20222711303443 * S_MntMeatProducts + -0.32855091358254 *
S_NumCatalogPurchases + -0.04262624947945 * S_NumDealsPurchases + 0.34844893542429 *
S_NumWebVisitsMonth + 1.02395415516187 * S_RFMstat + 0.72163010188304 * S_Recency +
0.25374922499465 * S_Teenhome + -0.26482823596248 * S_Year_Birth ;
111299    +   H1x3_1  = H1x3_1  +     0.22579923464903 * Marital_StatusDivorced
111300    +          +    -1.19357131519861 * Marital_StatusMarried
111301    +          +     1.01104838285626 * Marital_StatusSingle
111302    +          +    -1.80955917142309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.22579923464903 * Marital_StatusDivorced +
-1.19357131519861 * Marital_StatusMarried + 1.01104838285626 * Marital_StatusSingle +
-1.80955917142309 * Marital_StatusTogether ;
111303    +   H1x3_2  = H1x3_2  +    -0.94571479472535 * Marital_StatusDivorced
111304    +          +     0.41518199668826 * Marital_StatusMarried
111305    +          +     1.03267293059069 * Marital_StatusSingle
111306    +          +    -0.66743874470855 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.94571479472535 * Marital_StatusDivorced +
0.41518199668826 * Marital_StatusMarried + 1.03267293059069 * Marital_StatusSingle +
-0.66743874470855 * Marital_StatusTogether ;
111307    +   H1x3_3  = H1x3_3  +    -0.15213926695809 * Marital_StatusDivorced
111308    +          +     0.56306179671807 * Marital_StatusMarried
111309    +          +    -1.20896369649342 * Marital_StatusSingle
111310    +          +      0.2381860290523 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.15213926695809 * Marital_StatusDivorced +
0.56306179671807 * Marital_StatusMarried + -1.20896369649342 * Marital_StatusSingle +
0.2381860290523 * Marital_StatusTogether ;
111311    +   H1x3_4  = H1x3_4  +      1.0736711015636 * Marital_StatusDivorced
111312    +          +    -2.56951757071166 * Marital_StatusMarried
111313    +          +     0.89024254219017 * Marital_StatusSingle
111314    +          +    -1.38303524163943 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.0736711015636 * Marital_StatusDivorced +
-2.56951757071166 * Marital_StatusMarried + 0.89024254219017 * Marital_StatusSingle +
-1.38303524163943 * Marital_StatusTogether ;
111315    +   H1x3_5  = H1x3_5  +     2.33108578518176 * Marital_StatusDivorced
111316    +          +    -0.82560993254767 * Marital_StatusMarried
111317    +          +     0.67892086377875 * Marital_StatusSingle
111318    +          +    -0.99872502550085 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 2.33108578518176 * Marital_StatusDivorced +
-0.82560993254767 * Marital_StatusMarried + 0.67892086377875 * Marital_StatusSingle +
-0.99872502550085 * Marital_StatusTogether ;
111319    +   H1x3_6  = H1x3_6  +    -1.46724646572707 * Marital_StatusDivorced
111320    +          +     1.62783448403167 * Marital_StatusMarried
111321    +          +     0.73020544049082 * Marital_StatusSingle
111322    +          +    -0.22473120319236 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -1.46724646572707 * Marital_StatusDivorced +
1.62783448403167 * Marital_StatusMarried + 0.73020544049082 * Marital_StatusSingle +
-0.22473120319236 * Marital_StatusTogether ;
111323    +   H1x3_1  =     0.67900930500511 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67900930500511 + H1x3_1 ;
111324    +   H1x3_2  =     1.40060666199115 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.40060666199115 + H1x3_2 ;
111325    +   H1x3_3  =     0.29463847527526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.29463847527526 + H1x3_3 ;
111326    +   H1x3_4  =    -0.04357875847579 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -0.04357875847579 + H1x3_4 ;
111327    +   H1x3_5  =      0.8612643972197 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.8612643972197 + H1x3_5 ;
111328    +   H1x3_6  =    -1.88380703730164 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = -1.88380703730164 + H1x3_6 ;
111329    +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
111330    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
111331    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 ,
H1x3_7 );
111332    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
111333    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
111334    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
111335    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
111336    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
111337    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
111338    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
111339    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
111340    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
111341    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
111342    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
111343    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
111344    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
111345    +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
111346    +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
111347    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
111348    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
111349    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
111350    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
111351    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
111352    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
111353    +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
111354    +END;
MPRINT(EM_DIAGRAM):   END;
111355    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
111356    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
111357    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
111358    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
111359    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
111360    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
111361    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
111362    +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
111363    +END;
MPRINT(EM_DIAGRAM):   END;
111364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111365    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
111366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111367    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
111368    +   H2x1_1  =    -0.95656178134917 * H1x1_1  +     1.37796748135739 * H1x1_2
111369    +          +     1.78756036673938 * H1x1_3  +     -0.8439546201475 * H1x1_4
111370    +          +    -1.03166099242293 * H1x1_5  +     0.52943703441707 * H1x1_6
111371    +          +     0.59795148287931 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.95656178134917 * H1x1_1 + 1.37796748135739 * H1x1_2 +
1.78756036673938 * H1x1_3 + -0.8439546201475 * H1x1_4 + -1.03166099242293 * H1x1_5 +
0.52943703441707 * H1x1_6 + 0.59795148287931 * H1x1_7 ;
111372    +   H2x1_2  =     1.91190798936382 * H1x1_1  +      -0.175949167006 * H1x1_2
111373    +          +    -0.20010954623703 * H1x1_3  +    -1.12168184279533 * H1x1_4
111374    +          +     0.35517508917627 * H1x1_5  +    -0.45519619936571 * H1x1_6
111375    +          +     1.08432924744886 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.91190798936382 * H1x1_1 + -0.175949167006 * H1x1_2 +
-0.20010954623703 * H1x1_3 + -1.12168184279533 * H1x1_4 + 0.35517508917627 * H1x1_5 +
-0.45519619936571 * H1x1_6 + 1.08432924744886 * H1x1_7 ;
111376    +   H2x1_3  =    -0.27236838695598 * H1x1_1  +     2.63546136140352 * H1x1_2
111377    +          +     1.80045649255758 * H1x1_3  +    -2.98830892061373 * H1x1_4
111378    +          +    -2.46045881589621 * H1x1_5  +     3.22396803549708 * H1x1_6
111379    +          +    -2.34667330067152 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.27236838695598 * H1x1_1 + 2.63546136140352 * H1x1_2 +
1.80045649255758 * H1x1_3 + -2.98830892061373 * H1x1_4 + -2.46045881589621 * H1x1_5 +
3.22396803549708 * H1x1_6 + -2.34667330067152 * H1x1_7 ;
111380    +   H2x1_4  =    -3.13210205675036 * H1x1_1  +     3.91450403558871 * H1x1_2
111381    +          +       4.933279615521 * H1x1_3  +    -2.59282514986249 * H1x1_4
111382    +          +    -2.03653671740081 * H1x1_5  +       4.064405082461 * H1x1_6
111383    +          +    -2.60526325926954 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.13210205675036 * H1x1_1 + 3.91450403558871 * H1x1_2 +
4.933279615521 * H1x1_3 + -2.59282514986249 * H1x1_4 + -2.03653671740081 * H1x1_5 +
4.064405082461 * H1x1_6 + -2.60526325926954 * H1x1_7 ;
111384    +   H2x1_5  =    -0.63232084982839 * H1x1_1  +     0.33718773947492 * H1x1_2
111385    +          +     1.29296448887546 * H1x1_3  +     1.12889621039023 * H1x1_4
111386    +          +     2.18934908118237 * H1x1_5  +     0.87862098785892 * H1x1_6
111387    +          +     0.91832061749569 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.63232084982839 * H1x1_1 + 0.33718773947492 * H1x1_2 +
1.29296448887546 * H1x1_3 + 1.12889621039023 * H1x1_4 + 2.18934908118237 * H1x1_5 +
0.87862098785892 * H1x1_6 + 0.91832061749569 * H1x1_7 ;
111388    +   H2x1_6  =     1.81043244413035 * H1x1_1  +      1.4777958998418 * H1x1_2
111389    +          +     2.53190667102186 * H1x1_3  +      0.4670787906688 * H1x1_4
111390    +          +    -0.00303664790933 * H1x1_5  +     0.21078497178324 * H1x1_6
111391    +          +     0.34792900678934 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.81043244413035 * H1x1_1 + 1.4777958998418 * H1x1_2 +
2.53190667102186 * H1x1_3 + 0.4670787906688 * H1x1_4 + -0.00303664790933 * H1x1_5 +
0.21078497178324 * H1x1_6 + 0.34792900678934 * H1x1_7 ;
111392    +   H2x1_7  =      2.7297431384039 * H1x1_1  +    -1.30829815853208 * H1x1_2
111393    +          +    -0.74317234707744 * H1x1_3  +     0.02621795882884 * H1x1_4
111394    +          +     1.92641283593631 * H1x1_5  +     0.32006968332264 * H1x1_6
111395    +          +     0.87129000431049 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = 2.7297431384039 * H1x1_1 + -1.30829815853208 * H1x1_2 +
-0.74317234707744 * H1x1_3 + 0.02621795882884 * H1x1_4 + 1.92641283593631 * H1x1_5 +
0.32006968332264 * H1x1_6 + 0.87129000431049 * H1x1_7 ;
111396    +   H2x1_1  = H2x1_1  +     -2.1938127062121 * H1x2_1
111397    +          +     0.21780666650637 * H1x2_2  +    -0.59195589593425 * H1x2_3
111398    +          +     0.38436245185742 * H1x2_4  +     0.62573807049092 * H1x2_5
111399    +          +    -0.61319348011502 * H1x2_6  +     0.47203210338015 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.1938127062121 * H1x2_1 + 0.21780666650637 * H1x2_2
+ -0.59195589593425 * H1x2_3 + 0.38436245185742 * H1x2_4 + 0.62573807049092 * H1x2_5 +
-0.61319348011502 * H1x2_6 + 0.47203210338015 * H1x2_7 ;
111400    +   H2x1_2  = H2x1_2  +    -0.26087177829438 * H1x2_1
111401    +          +      1.5809361009025 * H1x2_2  +     1.48270435958935 * H1x2_3
111402    +          +    -0.08943866833208 * H1x2_4  +     1.06601866330059 * H1x2_5
111403    +          +     0.65908674086625 * H1x2_6  +    -0.41138217409507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.26087177829438 * H1x2_1 + 1.5809361009025 * H1x2_2
+ 1.48270435958935 * H1x2_3 + -0.08943866833208 * H1x2_4 + 1.06601866330059 * H1x2_5 +
0.65908674086625 * H1x2_6 + -0.41138217409507 * H1x2_7 ;
111404    +   H2x1_3  = H2x1_3  +     0.38416253176813 * H1x2_1
111405    +          +    -0.18005172775158 * H1x2_2  +    -0.64477973121074 * H1x2_3
111406    +          +    -0.89326621554735 * H1x2_4  +     2.10808351608759 * H1x2_5
111407    +          +    -0.79701502540522 * H1x2_6  +     0.12564972289045 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.38416253176813 * H1x2_1 + -0.18005172775158 * H1x2_2
+ -0.64477973121074 * H1x2_3 + -0.89326621554735 * H1x2_4 + 2.10808351608759 * H1x2_5 +
-0.79701502540522 * H1x2_6 + 0.12564972289045 * H1x2_7 ;
111408    +   H2x1_4  = H2x1_4  +     0.45607666975085 * H1x2_1
111409    +          +     0.66281103175614 * H1x2_2  +     -2.2042052849244 * H1x2_3
111410    +          +    -0.88338513539567 * H1x2_4  +      0.8444719755129 * H1x2_5
111411    +          +    -1.34699546034909 * H1x2_6  +    -0.92256004986079 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.45607666975085 * H1x2_1 + 0.66281103175614 * H1x2_2
+ -2.2042052849244 * H1x2_3 + -0.88338513539567 * H1x2_4 + 0.8444719755129 * H1x2_5 +
-1.34699546034909 * H1x2_6 + -0.92256004986079 * H1x2_7 ;
111412    +   H2x1_5  = H2x1_5  +    -1.36966827041497 * H1x2_1
111413    +          +    -0.50899589190563 * H1x2_2  +    -1.06117764109728 * H1x2_3
111414    +          +    -0.15325014700397 * H1x2_4  +     0.77845029985607 * H1x2_5
111415    +          +     0.15661838238861 * H1x2_6  +    -1.46533717081069 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.36966827041497 * H1x2_1 + -0.50899589190563 *
H1x2_2 + -1.06117764109728 * H1x2_3 + -0.15325014700397 * H1x2_4 + 0.77845029985607 * H1x2_5 +
0.15661838238861 * H1x2_6 + -1.46533717081069 * H1x2_7 ;
111416    +   H2x1_6  = H2x1_6  +    -1.39055542164691 * H1x2_1
111417    +          +    -0.58359991825266 * H1x2_2  +     1.77147289208184 * H1x2_3
111418    +          +    -0.35342441714416 * H1x2_4  +     0.33680205236698 * H1x2_5
111419    +          +    -0.30165800401137 * H1x2_6  +    -1.49792110543314 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -1.39055542164691 * H1x2_1 + -0.58359991825266 *
H1x2_2 + 1.77147289208184 * H1x2_3 + -0.35342441714416 * H1x2_4 + 0.33680205236698 * H1x2_5 +
-0.30165800401137 * H1x2_6 + -1.49792110543314 * H1x2_7 ;
111420    +   H2x1_7  = H2x1_7  +     0.20334369322498 * H1x2_1
111421    +          +    -0.56117684469389 * H1x2_2  +     1.27451151893116 * H1x2_3
111422    +          +    -0.39759641471947 * H1x2_4  +    -0.48424888739695 * H1x2_5
111423    +          +      0.5776601194378 * H1x2_6  +    -0.11343742791086 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.20334369322498 * H1x2_1 + -0.56117684469389 * H1x2_2
+ 1.27451151893116 * H1x2_3 + -0.39759641471947 * H1x2_4 + -0.48424888739695 * H1x2_5 +
0.5776601194378 * H1x2_6 + -0.11343742791086 * H1x2_7 ;
111424    +   H2x1_1  = H2x1_1  +    -0.06990804266869 * H1x3_1
111425    +          +     1.59179747886577 * H1x3_2  +     -0.3658160611529 * H1x3_3
111426    +          +    -0.16177521959465 * H1x3_4  +     0.23353693967535 * H1x3_5
111427    +          +     0.96164596504173 * H1x3_6  +    -0.49996390114171 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.06990804266869 * H1x3_1 + 1.59179747886577 * H1x3_2
+ -0.3658160611529 * H1x3_3 + -0.16177521959465 * H1x3_4 + 0.23353693967535 * H1x3_5 +
0.96164596504173 * H1x3_6 + -0.49996390114171 * H1x3_7 ;
111428    +   H2x1_2  = H2x1_2  +    -1.34775541988885 * H1x3_1
111429    +          +    -0.94185062200477 * H1x3_2  +     2.40002799790884 * H1x3_3
111430    +          +      1.3228491036493 * H1x3_4  +    -2.27212522601702 * H1x3_5
111431    +          +     0.22676652176348 * H1x3_6  +     0.96810343094913 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.34775541988885 * H1x3_1 + -0.94185062200477 *
H1x3_2 + 2.40002799790884 * H1x3_3 + 1.3228491036493 * H1x3_4 + -2.27212522601702 * H1x3_5 +
0.22676652176348 * H1x3_6 + 0.96810343094913 * H1x3_7 ;
111432    +   H2x1_3  = H2x1_3  +    -0.68382731119741 * H1x3_1
111433    +          +    -0.90388882694092 * H1x3_2  +     0.51668393396039 * H1x3_3
111434    +          +     0.45716345972756 * H1x3_4  +    -0.49320936872992 * H1x3_5
111435    +          +     0.11919896076076 * H1x3_6  +    -0.14288859595709 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.68382731119741 * H1x3_1 + -0.90388882694092 *
H1x3_2 + 0.51668393396039 * H1x3_3 + 0.45716345972756 * H1x3_4 + -0.49320936872992 * H1x3_5 +
0.11919896076076 * H1x3_6 + -0.14288859595709 * H1x3_7 ;
111436    +   H2x1_4  = H2x1_4  +    -0.68614915242276 * H1x3_1
111437    +          +     0.55556081003484 * H1x3_2  +     0.26058803548386 * H1x3_3
111438    +          +     0.44653924204999 * H1x3_4  +    -0.97704608173388 * H1x3_5
111439    +          +    -0.04291306465274 * H1x3_6  +    -0.70203538063923 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.68614915242276 * H1x3_1 + 0.55556081003484 * H1x3_2
+ 0.26058803548386 * H1x3_3 + 0.44653924204999 * H1x3_4 + -0.97704608173388 * H1x3_5 +
-0.04291306465274 * H1x3_6 + -0.70203538063923 * H1x3_7 ;
111440    +   H2x1_5  = H2x1_5  +     0.58123765973845 * H1x3_1
111441    +          +     0.48842685419846 * H1x3_2  +     1.59951720976688 * H1x3_3
111442    +          +     0.39804915100427 * H1x3_4  +    -0.47629764750379 * H1x3_5
111443    +          +    -1.56133001160202 * H1x3_6  +     1.12232825939123 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.58123765973845 * H1x3_1 + 0.48842685419846 * H1x3_2
+ 1.59951720976688 * H1x3_3 + 0.39804915100427 * H1x3_4 + -0.47629764750379 * H1x3_5 +
-1.56133001160202 * H1x3_6 + 1.12232825939123 * H1x3_7 ;
111444    +   H2x1_6  = H2x1_6  +    -0.35903530664944 * H1x3_1
111445    +          +    -1.21870303791063 * H1x3_2  +     -0.0358958118983 * H1x3_3
111446    +          +     1.71577031345204 * H1x3_4  +    -0.29111463093854 * H1x3_5
111447    +          +    -1.77383444462785 * H1x3_6  +    -0.93379473274206 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.35903530664944 * H1x3_1 + -1.21870303791063 *
H1x3_2 + -0.0358958118983 * H1x3_3 + 1.71577031345204 * H1x3_4 + -0.29111463093854 * H1x3_5 +
-1.77383444462785 * H1x3_6 + -0.93379473274206 * H1x3_7 ;
111448    +   H2x1_7  = H2x1_7  +     0.79356954272121 * H1x3_1
111449    +          +    -2.23344635077437 * H1x3_2  +     0.01459894574902 * H1x3_3
111450    +          +    -1.76556734796059 * H1x3_4  +     0.55679401249834 * H1x3_5
111451    +          +    -0.00867866380584 * H1x3_6  +     1.61311341603142 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 + 0.79356954272121 * H1x3_1 + -2.23344635077437 * H1x3_2
+ 0.01459894574902 * H1x3_3 + -1.76556734796059 * H1x3_4 + 0.55679401249834 * H1x3_5 +
-0.00867866380584 * H1x3_6 + 1.61311341603142 * H1x3_7 ;
111452    +   H2x1_1  =     0.45495097945606 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.45495097945606 + H2x1_1 ;
111453    +   H2x1_2  =    -0.00150409200191 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.00150409200191 + H2x1_2 ;
111454    +   H2x1_3  =     0.06766385008662 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.06766385008662 + H2x1_3 ;
111455    +   H2x1_4  =    -0.15767488957433 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.15767488957433 + H2x1_4 ;
111456    +   H2x1_5  =     3.00862692955968 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 3.00862692955968 + H2x1_5 ;
111457    +   H2x1_6  =     1.46151036473661 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.46151036473661 + H2x1_6 ;
111458    +   H2x1_7  =    -1.14350195577506 + H2x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_7 = -1.14350195577506 + H2x1_7 ;
111459    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
111460    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
111461    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
111462    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
111463    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
111464    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
111465    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
111466    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
111467    +   H2x1_7  = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_7 = 1.0 / (1.0 + EXP(MIN( - H2x1_7 , _EXP_BAR)));
111468    +END;
MPRINT(EM_DIAGRAM):   END;
111469    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
111470    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
111471    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
111472    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
111473    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
111474    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
111475    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
111476    +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
111477    +END;
MPRINT(EM_DIAGRAM):   END;
111478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111479    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
111480    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111481    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
111482    +   H2x2_1  =     -0.6098073780758 * H1x1_1  +    -0.36212005078054 * H1x1_2
111483    +          +     0.06355695656592 * H1x1_3  +     0.42978415336514 * H1x1_4
111484    +          +     1.73171637681701 * H1x1_5  +    -0.19499247120261 * H1x1_6
111485    +          +     0.74015079276747 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.6098073780758 * H1x1_1 + -0.36212005078054 * H1x1_2 +
0.06355695656592 * H1x1_3 + 0.42978415336514 * H1x1_4 + 1.73171637681701 * H1x1_5 +
-0.19499247120261 * H1x1_6 + 0.74015079276747 * H1x1_7 ;
111486    +   H2x2_2  =     0.94291268086892 * H1x1_1  +    -0.57821086705904 * H1x1_2
111487    +          +     1.78126629448091 * H1x1_3  +    -1.19267460568433 * H1x1_4
111488    +          +    -0.23111688249081 * H1x1_5  +     0.48499259969431 * H1x1_6
111489    +          +    -1.56999349458897 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.94291268086892 * H1x1_1 + -0.57821086705904 * H1x1_2 +
1.78126629448091 * H1x1_3 + -1.19267460568433 * H1x1_4 + -0.23111688249081 * H1x1_5 +
0.48499259969431 * H1x1_6 + -1.56999349458897 * H1x1_7 ;
111490    +   H2x2_3  =    -0.83943846185187 * H1x1_1  +     0.07494097035466 * H1x1_2
111491    +          +    -0.22510824455886 * H1x1_3  +     0.73702100581613 * H1x1_4
111492    +          +     0.84717434356729 * H1x1_5  +      1.1890648131813 * H1x1_6
111493    +          +    -0.69985750736721 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.83943846185187 * H1x1_1 + 0.07494097035466 * H1x1_2 +
-0.22510824455886 * H1x1_3 + 0.73702100581613 * H1x1_4 + 0.84717434356729 * H1x1_5 +
1.1890648131813 * H1x1_6 + -0.69985750736721 * H1x1_7 ;
111494    +   H2x2_4  =     1.34186573490327 * H1x1_1  +     0.10476556384336 * H1x1_2
111495    +          +    -0.07073923857851 * H1x1_3  +     0.49865386241422 * H1x1_4
111496    +          +     1.20386613863792 * H1x1_5  +     0.13033316874168 * H1x1_6
111497    +          +     0.36095712511699 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.34186573490327 * H1x1_1 + 0.10476556384336 * H1x1_2 +
-0.07073923857851 * H1x1_3 + 0.49865386241422 * H1x1_4 + 1.20386613863792 * H1x1_5 +
0.13033316874168 * H1x1_6 + 0.36095712511699 * H1x1_7 ;
111498    +   H2x2_5  =     0.18683850895928 * H1x1_1  +     0.14087720385762 * H1x1_2
111499    +          +     0.39026989292984 * H1x1_3  +     0.40839626117338 * H1x1_4
111500    +          +     0.17816964710989 * H1x1_5  +     0.64340089705428 * H1x1_6
111501    +          +    -1.27363167094111 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.18683850895928 * H1x1_1 + 0.14087720385762 * H1x1_2 +
0.39026989292984 * H1x1_3 + 0.40839626117338 * H1x1_4 + 0.17816964710989 * H1x1_5 +
0.64340089705428 * H1x1_6 + -1.27363167094111 * H1x1_7 ;
111502    +   H2x2_6  =     0.67895838050616 * H1x1_1  +     0.23794862788395 * H1x1_2
111503    +          +     1.47625698143483 * H1x1_3  +    -0.78874578699705 * H1x1_4
111504    +          +     0.11576168045678 * H1x1_5  +     0.44470888441177 * H1x1_6
111505    +          +     1.87629961612594 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.67895838050616 * H1x1_1 + 0.23794862788395 * H1x1_2 +
1.47625698143483 * H1x1_3 + -0.78874578699705 * H1x1_4 + 0.11576168045678 * H1x1_5 +
0.44470888441177 * H1x1_6 + 1.87629961612594 * H1x1_7 ;
111506    +   H2x2_7  =     0.68721855914482 * H1x1_1  +    -0.49548906059129 * H1x1_2
111507    +          +    -0.95479435424814 * H1x1_3  +    -0.39636357013457 * H1x1_4
111508    +          +     1.05784760554335 * H1x1_5  +     0.55302681608178 * H1x1_6
111509    +          +     0.46646041474723 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.68721855914482 * H1x1_1 + -0.49548906059129 * H1x1_2 +
-0.95479435424814 * H1x1_3 + -0.39636357013457 * H1x1_4 + 1.05784760554335 * H1x1_5 +
0.55302681608178 * H1x1_6 + 0.46646041474723 * H1x1_7 ;
111510    +   H2x2_1  = H2x2_1  +    -0.27434389803517 * H1x2_1
111511    +          +    -0.02074671287693 * H1x2_2  +    -1.51155778758517 * H1x2_3
111512    +          +    -1.19011584420542 * H1x2_4  +     -0.8540083688408 * H1x2_5
111513    +          +    -0.51772310023527 * H1x2_6  +     -0.0192399267251 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.27434389803517 * H1x2_1 + -0.02074671287693 *
H1x2_2 + -1.51155778758517 * H1x2_3 + -1.19011584420542 * H1x2_4 + -0.8540083688408 * H1x2_5 +
-0.51772310023527 * H1x2_6 + -0.0192399267251 * H1x2_7 ;
111514    +   H2x2_2  = H2x2_2  +      -1.312525087163 * H1x2_1
111515    +          +     1.19175487774401 * H1x2_2  +    -1.10903746388023 * H1x2_3
111516    +          +      0.2627511726941 * H1x2_4  +    -1.49474705736936 * H1x2_5
111517    +          +     0.79354329450131 * H1x2_6  +    -0.48676510074213 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.312525087163 * H1x2_1 + 1.19175487774401 * H1x2_2 +
-1.10903746388023 * H1x2_3 + 0.2627511726941 * H1x2_4 + -1.49474705736936 * H1x2_5 +
0.79354329450131 * H1x2_6 + -0.48676510074213 * H1x2_7 ;
111518    +   H2x2_3  = H2x2_3  +     0.36715282986404 * H1x2_1
111519    +          +    -1.54691354420052 * H1x2_2  +     0.58334429972967 * H1x2_3
111520    +          +     3.32026929025218 * H1x2_4  +     0.08578287392048 * H1x2_5
111521    +          +     0.66591130534429 * H1x2_6  +     0.57559013181145 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.36715282986404 * H1x2_1 + -1.54691354420052 * H1x2_2
+ 0.58334429972967 * H1x2_3 + 3.32026929025218 * H1x2_4 + 0.08578287392048 * H1x2_5 +
0.66591130534429 * H1x2_6 + 0.57559013181145 * H1x2_7 ;
111522    +   H2x2_4  = H2x2_4  +     1.28239253398808 * H1x2_1
111523    +          +     0.06662925242621 * H1x2_2  +     0.49967984015316 * H1x2_3
111524    +          +     0.65508978056742 * H1x2_4  +    -0.28141359636508 * H1x2_5
111525    +          +    -0.11787887977724 * H1x2_6  +     -0.6607325871171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.28239253398808 * H1x2_1 + 0.06662925242621 * H1x2_2
+ 0.49967984015316 * H1x2_3 + 0.65508978056742 * H1x2_4 + -0.28141359636508 * H1x2_5 +
-0.11787887977724 * H1x2_6 + -0.6607325871171 * H1x2_7 ;
111526    +   H2x2_5  = H2x2_5  +    -0.49511046906315 * H1x2_1
111527    +          +    -1.88759923025868 * H1x2_2  +    -0.99578805432186 * H1x2_3
111528    +          +     0.47300607025135 * H1x2_4  +     0.73725488149784 * H1x2_5
111529    +          +     0.56107930260304 * H1x2_6  +     -0.6618265083723 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.49511046906315 * H1x2_1 + -1.88759923025868 *
H1x2_2 + -0.99578805432186 * H1x2_3 + 0.47300607025135 * H1x2_4 + 0.73725488149784 * H1x2_5 +
0.56107930260304 * H1x2_6 + -0.6618265083723 * H1x2_7 ;
111530    +   H2x2_6  = H2x2_6  +    -0.56511063846684 * H1x2_1
111531    +          +      0.1682036403191 * H1x2_2  +     -0.7835100270482 * H1x2_3
111532    +          +    -0.05926261017522 * H1x2_4  +     0.28303530518131 * H1x2_5
111533    +          +     1.57291802723543 * H1x2_6  +    -1.59403373749444 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + -0.56511063846684 * H1x2_1 + 0.1682036403191 * H1x2_2
+ -0.7835100270482 * H1x2_3 + -0.05926261017522 * H1x2_4 + 0.28303530518131 * H1x2_5 +
1.57291802723543 * H1x2_6 + -1.59403373749444 * H1x2_7 ;
111534    +   H2x2_7  = H2x2_7  +    -1.06397759700592 * H1x2_1
111535    +          +    -0.21206214531111 * H1x2_2  +     1.52697813698804 * H1x2_3
111536    +          +    -0.03132126915438 * H1x2_4  +     0.11910805580916 * H1x2_5
111537    +          +     1.03394382602734 * H1x2_6  +    -0.28139834412941 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -1.06397759700592 * H1x2_1 + -0.21206214531111 *
H1x2_2 + 1.52697813698804 * H1x2_3 + -0.03132126915438 * H1x2_4 + 0.11910805580916 * H1x2_5 +
1.03394382602734 * H1x2_6 + -0.28139834412941 * H1x2_7 ;
111538    +   H2x2_1  = H2x2_1  +    -1.18028681022903 * H1x3_1
111539    +          +    -0.56354962807969 * H1x3_2  +    -0.32071823564038 * H1x3_3
111540    +          +    -1.14868021494554 * H1x3_4  +     0.50491385711883 * H1x3_5
111541    +          +      0.3595638799915 * H1x3_6  +    -1.04253859844314 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.18028681022903 * H1x3_1 + -0.56354962807969 *
H1x3_2 + -0.32071823564038 * H1x3_3 + -1.14868021494554 * H1x3_4 + 0.50491385711883 * H1x3_5 +
0.3595638799915 * H1x3_6 + -1.04253859844314 * H1x3_7 ;
111542    +   H2x2_2  = H2x2_2  +     1.10237781244945 * H1x3_1
111543    +          +     1.08171284637926 * H1x3_2  +     0.51153068676713 * H1x3_3
111544    +          +     -0.0106772728333 * H1x3_4  +     0.21777593557961 * H1x3_5
111545    +          +     0.10772516691825 * H1x3_6  +    -0.91346091248416 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 1.10237781244945 * H1x3_1 + 1.08171284637926 * H1x3_2
+ 0.51153068676713 * H1x3_3 + -0.0106772728333 * H1x3_4 + 0.21777593557961 * H1x3_5 +
0.10772516691825 * H1x3_6 + -0.91346091248416 * H1x3_7 ;
111546    +   H2x2_3  = H2x2_3  +    -0.71132206215234 * H1x3_1
111547    +          +     0.60006902706544 * H1x3_2  +      -0.471170925786 * H1x3_3
111548    +          +     0.07477379311969 * H1x3_4  +    -0.34034195429991 * H1x3_5
111549    +          +     1.63429052967629 * H1x3_6  +     0.13697740143754 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.71132206215234 * H1x3_1 + 0.60006902706544 * H1x3_2
+ -0.471170925786 * H1x3_3 + 0.07477379311969 * H1x3_4 + -0.34034195429991 * H1x3_5 +
1.63429052967629 * H1x3_6 + 0.13697740143754 * H1x3_7 ;
111550    +   H2x2_4  = H2x2_4  +     0.76338339806809 * H1x3_1
111551    +          +     0.34600443003632 * H1x3_2  +    -0.60707577837208 * H1x3_3
111552    +          +     1.37001034857478 * H1x3_4  +    -1.24749521510775 * H1x3_5
111553    +          +    -1.45784349983015 * H1x3_6  +     0.12879195100917 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.76338339806809 * H1x3_1 + 0.34600443003632 * H1x3_2
+ -0.60707577837208 * H1x3_3 + 1.37001034857478 * H1x3_4 + -1.24749521510775 * H1x3_5 +
-1.45784349983015 * H1x3_6 + 0.12879195100917 * H1x3_7 ;
111554    +   H2x2_5  = H2x2_5  +    -2.33392280718246 * H1x3_1
111555    +          +    -0.48123076018945 * H1x3_2  +    -0.76638732765894 * H1x3_3
111556    +          +    -1.76560846551209 * H1x3_4  +     1.62249911960883 * H1x3_5
111557    +          +    -0.31271093507345 * H1x3_6  +    -0.34748800562391 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -2.33392280718246 * H1x3_1 + -0.48123076018945 *
H1x3_2 + -0.76638732765894 * H1x3_3 + -1.76560846551209 * H1x3_4 + 1.62249911960883 * H1x3_5 +
-0.31271093507345 * H1x3_6 + -0.34748800562391 * H1x3_7 ;
111558    +   H2x2_6  = H2x2_6  +     0.53202536648562 * H1x3_1
111559    +          +     0.36605088046069 * H1x3_2  +     -1.7626773020241 * H1x3_3
111560    +          +     0.14681062331369 * H1x3_4  +     0.10699108516053 * H1x3_5
111561    +          +     2.24609371442936 * H1x3_6  +    -0.59076884674419 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.53202536648562 * H1x3_1 + 0.36605088046069 * H1x3_2
+ -1.7626773020241 * H1x3_3 + 0.14681062331369 * H1x3_4 + 0.10699108516053 * H1x3_5 +
2.24609371442936 * H1x3_6 + -0.59076884674419 * H1x3_7 ;
111562    +   H2x2_7  = H2x2_7  +    -0.05290923023086 * H1x3_1
111563    +          +    -0.30472796298249 * H1x3_2  +     1.89100111779461 * H1x3_3
111564    +          +     0.51110284119421 * H1x3_4  +     -0.2014479939412 * H1x3_5
111565    +          +     1.02507111515379 * H1x3_6  +    -0.63211120065975 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 + -0.05290923023086 * H1x3_1 + -0.30472796298249 *
H1x3_2 + 1.89100111779461 * H1x3_3 + 0.51110284119421 * H1x3_4 + -0.2014479939412 * H1x3_5 +
1.02507111515379 * H1x3_6 + -0.63211120065975 * H1x3_7 ;
111566    +   H2x2_1  =    -2.15023760884419 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.15023760884419 + H2x2_1 ;
111567    +   H2x2_2  =    -1.03542203438136 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.03542203438136 + H2x2_2 ;
111568    +   H2x2_3  =    -1.03202542428687 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -1.03202542428687 + H2x2_3 ;
111569    +   H2x2_4  =     0.79380822765375 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.79380822765375 + H2x2_4 ;
111570    +   H2x2_5  =    -0.37637686056399 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.37637686056399 + H2x2_5 ;
111571    +   H2x2_6  =    -0.12032383488066 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -0.12032383488066 + H2x2_6 ;
111572    +   H2x2_7  =     0.84544057856735 + H2x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0.84544057856735 + H2x2_7 ;
111573    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
111574    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
111575    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
111576    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
111577    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
111578    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
111579    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
111580    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
111581    +   H2x2_7  = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_7 = 1.0 / (1.0 + EXP(MIN( - H2x2_7 , _EXP_BAR)));
111582    +END;
MPRINT(EM_DIAGRAM):   END;
111583    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
111584    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
111585    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
111586    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
111587    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
111588    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
111589    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
111590    +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
111591    +END;
MPRINT(EM_DIAGRAM):   END;
111592    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111593    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
111594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111595    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
111596    +   H3x1_1  =    -0.90634182479211 * H2x1_1  +    -0.09135307681655 * H2x1_2
111597    +          +     -1.1697186659188 * H2x1_3  +    -1.58089509972168 * H2x1_4
111598    +          +    -0.36298075828987 * H2x1_5  +     -0.1512750341775 * H2x1_6
111599    +          +    -0.95333639415651 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.90634182479211 * H2x1_1 + -0.09135307681655 * H2x1_2 +
-1.1697186659188 * H2x1_3 + -1.58089509972168 * H2x1_4 + -0.36298075828987 * H2x1_5 +
-0.1512750341775 * H2x1_6 + -0.95333639415651 * H2x1_7 ;
111600    +   H3x1_2  =     0.55686365647701 * H2x1_1  +      1.5696753982442 * H2x1_2
111601    +          +    -0.32250855602992 * H2x1_3  +     0.19455668370146 * H2x1_4
111602    +          +     0.44351097086868 * H2x1_5  +     0.27358852097745 * H2x1_6
111603    +          +      0.4281879736941 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.55686365647701 * H2x1_1 + 1.5696753982442 * H2x1_2 +
-0.32250855602992 * H2x1_3 + 0.19455668370146 * H2x1_4 + 0.44351097086868 * H2x1_5 +
0.27358852097745 * H2x1_6 + 0.4281879736941 * H2x1_7 ;
111604    +   H3x1_3  =     0.12633341645489 * H2x1_1  +    -0.66899185238366 * H2x1_2
111605    +          +    -2.56536949854372 * H2x1_3  +    -1.44702955697377 * H2x1_4
111606    +          +    -2.12726548877297 * H2x1_5  +     0.98860110338896 * H2x1_6
111607    +          +    -1.81290069415788 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.12633341645489 * H2x1_1 + -0.66899185238366 * H2x1_2 +
-2.56536949854372 * H2x1_3 + -1.44702955697377 * H2x1_4 + -2.12726548877297 * H2x1_5 +
0.98860110338896 * H2x1_6 + -1.81290069415788 * H2x1_7 ;
111608    +   H3x1_4  =     -1.5244883189849 * H2x1_1  +     -0.8795974458787 * H2x1_2
111609    +          +    -0.90961705850703 * H2x1_3  +    -0.41256891447907 * H2x1_4
111610    +          +    -1.55913982799805 * H2x1_5  +     -0.9171280329681 * H2x1_6
111611    +          +    -0.70506147827449 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -1.5244883189849 * H2x1_1 + -0.8795974458787 * H2x1_2 +
-0.90961705850703 * H2x1_3 + -0.41256891447907 * H2x1_4 + -1.55913982799805 * H2x1_5 +
-0.9171280329681 * H2x1_6 + -0.70506147827449 * H2x1_7 ;
111612    +   H3x1_5  =     0.35217616707387 * H2x1_1  +    -1.16700891298034 * H2x1_2
111613    +          +      0.5371834401358 * H2x1_3  +     2.90147333104132 * H2x1_4
111614    +          +     0.77800792666349 * H2x1_5  +     0.78250225671691 * H2x1_6
111615    +          +    -0.59091463760785 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0.35217616707387 * H2x1_1 + -1.16700891298034 * H2x1_2 +
0.5371834401358 * H2x1_3 + 2.90147333104132 * H2x1_4 + 0.77800792666349 * H2x1_5 +
0.78250225671691 * H2x1_6 + -0.59091463760785 * H2x1_7 ;
111616    +   H3x1_6  =    -0.44929632444778 * H2x1_1  +    -0.78833736143978 * H2x1_2
111617    +          +    -2.25458905584756 * H2x1_3  +    -1.94571232358746 * H2x1_4
111618    +          +     1.80055450278469 * H2x1_5  +     1.56927477052283 * H2x1_6
111619    +          +     0.56206783006188 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.44929632444778 * H2x1_1 + -0.78833736143978 * H2x1_2 +
-2.25458905584756 * H2x1_3 + -1.94571232358746 * H2x1_4 + 1.80055450278469 * H2x1_5 +
1.56927477052283 * H2x1_6 + 0.56206783006188 * H2x1_7 ;
111620    +   H3x1_1  = H3x1_1  +    -1.50414812258238 * H2x2_1
111621    +          +     2.71183535634521 * H2x2_2  +     0.92780495410356 * H2x2_3
111622    +          +     1.94819401410825 * H2x2_4  +     0.85505273909828 * H2x2_5
111623    +          +    -0.66540689026991 * H2x2_6  +    -0.32749055872531 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.50414812258238 * H2x2_1 + 2.71183535634521 * H2x2_2
+ 0.92780495410356 * H2x2_3 + 1.94819401410825 * H2x2_4 + 0.85505273909828 * H2x2_5 +
-0.66540689026991 * H2x2_6 + -0.32749055872531 * H2x2_7 ;
111624    +   H3x1_2  = H3x1_2  +     0.55540470737424 * H2x2_1
111625    +          +    -1.17598972209898 * H2x2_2  +    -0.16619065810258 * H2x2_3
111626    +          +    -0.58955298520043 * H2x2_4  +     1.04029871696373 * H2x2_5
111627    +          +    -0.71430896416332 * H2x2_6  +    -1.57031773170963 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.55540470737424 * H2x2_1 + -1.17598972209898 * H2x2_2
+ -0.16619065810258 * H2x2_3 + -0.58955298520043 * H2x2_4 + 1.04029871696373 * H2x2_5 +
-0.71430896416332 * H2x2_6 + -1.57031773170963 * H2x2_7 ;
111628    +   H3x1_3  = H3x1_3  +    -1.83796456414338 * H2x2_1
111629    +          +     1.49146311784803 * H2x2_2  +     0.05550989818961 * H2x2_3
111630    +          +    -0.08016006878981 * H2x2_4  +    -1.41328284571945 * H2x2_5
111631    +          +    -0.58920642563444 * H2x2_6  +     1.30950353008631 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -1.83796456414338 * H2x2_1 + 1.49146311784803 * H2x2_2
+ 0.05550989818961 * H2x2_3 + -0.08016006878981 * H2x2_4 + -1.41328284571945 * H2x2_5 +
-0.58920642563444 * H2x2_6 + 1.30950353008631 * H2x2_7 ;
111632    +   H3x1_4  = H3x1_4  +     0.91384399854626 * H2x2_1
111633    +          +     -0.0377841204978 * H2x2_2  +     0.67274196472005 * H2x2_3
111634    +          +     0.76900504900432 * H2x2_4  +     0.71823373480501 * H2x2_5
111635    +          +    -0.04199535362683 * H2x2_6  +    -0.23501610033448 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.91384399854626 * H2x2_1 + -0.0377841204978 * H2x2_2
+ 0.67274196472005 * H2x2_3 + 0.76900504900432 * H2x2_4 + 0.71823373480501 * H2x2_5 +
-0.04199535362683 * H2x2_6 + -0.23501610033448 * H2x2_7 ;
111636    +   H3x1_5  = H3x1_5  +    -0.06769558303335 * H2x2_1
111637    +          +    -0.95662890382057 * H2x2_2  +    -0.56314830579562 * H2x2_3
111638    +          +    -0.17355939108245 * H2x2_4  +     0.49684441057813 * H2x2_5
111639    +          +    -0.27220440010331 * H2x2_6  +     1.13747855812864 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.06769558303335 * H2x2_1 + -0.95662890382057 *
H2x2_2 + -0.56314830579562 * H2x2_3 + -0.17355939108245 * H2x2_4 + 0.49684441057813 * H2x2_5 +
-0.27220440010331 * H2x2_6 + 1.13747855812864 * H2x2_7 ;
111640    +   H3x1_6  = H3x1_6  +    -0.58306849781773 * H2x2_1
111641    +          +    -1.96921645645113 * H2x2_2  +     0.09529919260054 * H2x2_3
111642    +          +     1.84321935581989 * H2x2_4  +     1.90621049776113 * H2x2_5
111643    +          +     0.22735961476244 * H2x2_6  +      1.7681869270915 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + -0.58306849781773 * H2x2_1 + -1.96921645645113 *
H2x2_2 + 0.09529919260054 * H2x2_3 + 1.84321935581989 * H2x2_4 + 1.90621049776113 * H2x2_5 +
0.22735961476244 * H2x2_6 + 1.7681869270915 * H2x2_7 ;
111644    +   H3x1_1  =     0.84072071725045 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.84072071725045 + H3x1_1 ;
111645    +   H3x1_2  =    -0.84331420680493 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.84331420680493 + H3x1_2 ;
111646    +   H3x1_3  =    -1.15131491327763 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.15131491327763 + H3x1_3 ;
111647    +   H3x1_4  =    -0.56905094914727 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.56905094914727 + H3x1_4 ;
111648    +   H3x1_5  =     1.29747074025762 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.29747074025762 + H3x1_5 ;
111649    +   H3x1_6  =     1.70771922783336 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.70771922783336 + H3x1_6 ;
111650    +   H3x1_7  = 0;
MPRINT(EM_DIAGRAM):   H3x1_7 = 0;
111651    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 , H3x1_7
111652    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 ,
H3x1_7 );
111653    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
111654    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
111655    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
111656    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
111657    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
111658    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
111659    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
111660    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
111661    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
111662    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
111663    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
111664    +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
111665    +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
111666    +   H3x1_7  = EXP(H3x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_7 = EXP(H3x1_7 - _MAX_);
111667    +   _SUM_ = _SUM_ + H3x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_7 ;
111668    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
111669    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
111670    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
111671    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
111672    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
111673    +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
111674    +   H3x1_7  = H3x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 / _SUM_;
111675    +END;
MPRINT(EM_DIAGRAM):   END;
111676    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
111677    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
111678    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
111679    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
111680    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
111681    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
111682    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
111683    +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
111684    +END;
MPRINT(EM_DIAGRAM):   END;
111685    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111686    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
111687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111688    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
111689    +   P_DepVar1  =    -10.5125772193731 * H3x1_1  +     0.35682915649078 * H3x1_2
111690    +          +    -0.04349805114958 * H3x1_3  +    -0.04491244667008 * H3x1_4
111691    +          +     34.5477259369591 * H3x1_5  +    -16.5063579573423 * H3x1_6
111692    +          +     0.83421675743806 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.5125772193731 * H3x1_1 + 0.35682915649078 * H3x1_2 +
-0.04349805114958 * H3x1_3 + -0.04491244667008 * H3x1_4 + 34.5477259369591 * H3x1_5 +
-16.5063579573423 * H3x1_6 + 0.83421675743806 * H3x1_7 ;
111693    +   P_DepVar1  =     6.85864742009761 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.85864742009761 + P_DepVar1 ;
111694    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
111695    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
111696    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
111697    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
111698    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
111699    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
111700    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
111701    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
111702    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
111703    +END;
MPRINT(EM_DIAGRAM):   END;
111704    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
111705    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
111706    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
111707    +END;
MPRINT(EM_DIAGRAM):   END;
111708    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
111709    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
111710    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
111711    +END;
MPRINT(EM_DIAGRAM):   END;
111712    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111713    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
111714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
111715    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
111716    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
111717    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
111718    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
111719    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
111720    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
111721    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
111722    +END;
MPRINT(EM_DIAGRAM):   END;
111723    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
111724    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
111725    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
111726    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
111727     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
111728     quit;
111729     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
111730     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
111731     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
111732     retain ID 2 Node "AutoNeural43";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural43";
111733     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
111734     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12131 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 12131 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111735     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
111736     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111737     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12131 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 12131 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111738     proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME
CREATOR);
111739     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111740     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL43_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111741     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
111742     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
111743     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
111744     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111745     proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
111746     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
111747     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
111748     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111749     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111750     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
111751     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
111752     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111753     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111754     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
111755     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
111755   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 5682 rows and 5 columns.
 
111756     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111757     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
111758     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 5682 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 5682 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111759     filename _pref
111759   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
111760     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
111761     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
111762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
111763    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
111764    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
111765    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
111766    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
111767    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
111768     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
111769     quit;
111770     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
111771     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
111772     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
111773     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
111774     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
111775     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111776     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
111777     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111778     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111779     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
111780     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111781     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111782     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
111783     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
111784     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
111785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111786     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
111787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111788     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
111789     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111790     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111791     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
111792     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
111793     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111794     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111795     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
111796     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
111796   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
111797     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111798     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
111799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 5686 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111800     filename _pref
111800   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
111801     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
111802     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
111803    +
111804    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
111805    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
111805   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
111806    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
111807    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
111808    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
111809    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
111810    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
111811     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
111812     quit;
111813     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
111814     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
111815     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
111816     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
111817     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
111818     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111819     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
111820     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111821     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111822     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
111823     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111824     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111825     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
111826     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
111827     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
111828     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111829     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
111830     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111831     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
111832     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111833     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111834     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
111835     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
111836     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111837     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111838     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
111839     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
111839   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
111840     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111841     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
111842     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 5725 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111843     filename _pref
111843   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
111844     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
111845     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
111846    +
111847    +
111848    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
111849    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
111850    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
111851    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
111852    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
111853    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
111854    +
111855    +
111856    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
111857    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
111858    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
111859    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
111860    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
111861    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
111862    +
111863    +
111864    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
111865    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
111866    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
111867    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
111868    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
111869    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
111870    +
111871    +
111872    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
111873    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
111874    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
111875    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
111876    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
111877    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
111878    +
111879    +
111880    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
111881    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
111882    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
111883    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
111884    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
111885    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
111886    +
111887    +
111888    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
111889    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
111890    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
111891    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
111892    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
111893    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
111894    +
111895    +
111896    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
111897    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
111898    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
111899    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
111900    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
111901    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
111902    +
111903    +
111904    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
111905    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
111906    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
111907    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
111908    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
111909    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
111910    +if
111911    +_FILTERNORM1 not in ( '.')
111912    + and
111913    +_FILTERNORM2 not in ( '.')
111914    + and
111915    +_FILTERNORM3 not in ( '.')
111916    + and
111917    +_FILTERNORM4 not in ( '.')
111918    + and
111919    +_FILTERNORM5 not in ( '.')
111920    + and
111921    +_FILTERNORM6 not in ( '.')
111922    + and
111923    +_FILTERNORM7 not in ( ' ')
111924    + and
111925    +_FILTERNORM8 not in ( ' ')
111926    +and
111927    +( Dt_Customer ne .)
111928    +and ( Income ne . and (Income<=107000))
111929    +and ( Kidhome ne .)
111930    +and ( MntFishProducts ne .)
111931    +and ( MntFruits ne .)
111932    +and ( MntGoldProds ne .)
111933    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
111934    +and ( MntSweetProducts ne .)
111935    +and ( MntWines ne .)
111936    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
111937    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
111938    +and ( NumStorePurchases ne .)
111939    +and ( NumWebPurchases ne .)
111940    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
111941    +and ( Recency ne .)
111942    +and ( Teenhome ne .)
111943    +and ( Year_Birth ne .)
111944    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
111945    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
111946    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
111947    +end;
MPRINT(EM_DIAGRAM):   end;
111948    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
111949    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
111950     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
111951     quit;
111952     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
111953     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
111954     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
111955     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
111956     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
111957     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111958     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
111959     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111961     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
111962     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111963     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111964     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
111965     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
111966     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
111967     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111968     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
111969     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
111970     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
111971     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111972     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111973     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
111974     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
111975     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
111976     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111977     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
111978     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
111978   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
111979     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111980     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
111981     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 5791 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
111982     %macro varDept(fcmpdata=,id=);
111983     %global nobs&id scoreFlag&id;
111984     %let scoreFlag&id = 0;
111985     %if &id=1 or ^&fcmpStart %then %do;
111986     proc sort data=&fcmpdata out=_temp&id nodupkey;
111987     by NAME;
111988     where id=&id and LHS in( %let j=1;
111989     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
111990     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
111991     "&var" %let j = %eval(&j+1);
111992     %end;
111993     );
111994     run;
111995     %let dsid = %sysfunc(open(_temp&id));
111996     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
111997     %let dsid = %sysfunc(close(&dsid));
111998     %if &&nobs&id %then %do;
111999     %let scoreFlag&id = 1;
112000     %let fcmpStart = 1;
112001     %end;
112002     %else %let fcmpStart = 0;
112003     %end;
112004     %else %do;
112005     proc sort data=&fcmpdata out=_tempid;
112006     where id=&id;
112007     by LHS;
112008     run;
112009     %let dsid = %sysfunc(open(_tempid));
112010     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
112011     %let dsid = %sysfunc(close(&dsid));
112012     %if ^&&nobs&id %then %do;
112013     proc datasets lib=work nolist;
112014     delete _tempid;
112015     run;
112016     quit;
112017     %end;
112018     %else %do;
112019     data _tempAll;
112020     set %let j=%eval(&id-1);
112021     %do x=1 %to &j;
112022     %if &&nobs&x %then %do;
112023     _temp&x %end;
112024     %end;
112025     ;
112026     run;
112027     proc sql;
112028     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
112028   ! work._tempid p2 where p.name=p2.lhs;
112029     quit;
112030     data _temp&id;
112031     set _temp&id;
112032     where LHS ne '' and NAME ne '' and Node ne '';
112033     run;
112034     proc datasets lib=work nolist;
112035     delete _tempAll;
112036     run;
112037     %let dsid = %sysfunc(open(_temp&id));
112038     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
112039     %let dsid = %sysfunc(close(&dsid));
112040     %if ^&&nobs&id %then %do;
112041     proc datasets lib=work nolist;
112042     delete _temp&id;
112043     run;
112044     quit;
112045     %end;
112046     %else %do;
112047     %let scoreFlag&id = 1;
112048     data _temp&id;
112049     set _temp&id;
112050     where LHS ne NAME and node ne '';
112051     run;
112052     %let dsid = %sysfunc(open(_temp&id));
112053     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
112054     %let dsid = %sysfunc(close(&dsid));
112055     %if ^&&nobs&id %then %do;
112056     proc datasets lib=work nolist;
112057     delete _temp&id;
112058     run;
112059     quit;
112060     %end;
112061     %else %do;
112062     proc sort data=_temp&id nodupkey;
112063     by LHS NAME;
112064     run;
112065     %end;
112066     %end;
112067     %end;
112068     %end;
112069     %mend varDept;
112070     %macro optCode(outdata=fcmpdata);
112071     %global fcmpStart;
112072     %let fcmpStart = 0;
112073     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
112074     %let NumNodes=9;
112075     %do k=1 %to &NumNodes;
112076     %vardept(fcmpdata=&outdata, id=&k);
112077     %end;
112078     %mend optCode;
112079     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 188 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 130 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 58 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 58 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 58 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 58 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 58 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 58 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 84 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
112080     filename _pref
112080   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
112081     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
112082     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas.
112083    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
112084    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
112085    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
112086    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
112087    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
112088    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
112089    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
112090    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
112091    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
112092    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
112093    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
112094    +LENGTH _WARN_ $4
112095    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
112096    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
112097    +
112098    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
112099    +
112100    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
112101    +
112102    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
112103    +
112104    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
112105    +
112106    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
112107    +
112108    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
112109    +
112110    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
112111    +
112112    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
112113    +
112114    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
112115    +
112116    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
112117    +
112118    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
112119    +
112120    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
112121    +
The SAS System
 
112122    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
112123    +
112124    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
112125    +
112126    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
112127    +
112128    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
112129    +
112130    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
112131    +
112132    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
112133    +
112134    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
112135    +
112136    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
112137    +
112138    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
112139    +
112140    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
112141    +
112142    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
112143    +
112144    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
112145    +
112146    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
112147    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
112148    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
112149    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
112150    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
112151    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
112152    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
112153    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
112154    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
112155    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
112156    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
112157    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
112158    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
112159    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
112160    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
112161    +end;
MPRINT(EM_DIAGRAM):   end;
112162    +else do;
MPRINT(EM_DIAGRAM):   else do;
112163    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
112164    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
112165    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
112166    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
112167    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
112168    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
112169    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
112170    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
112171    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
112172    +         end;
MPRINT(EM_DIAGRAM):   end;
112173    +         else do;
MPRINT(EM_DIAGRAM):   else do;
112174    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
112175    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
112176    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
112177    +            end;
MPRINT(EM_DIAGRAM):   end;
112178    +         end;
MPRINT(EM_DIAGRAM):   end;
112179    +      end;
MPRINT(EM_DIAGRAM):   end;
112180    +      else do;
MPRINT(EM_DIAGRAM):   else do;
112181    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
112182    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
112183    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
112184    +         end;
MPRINT(EM_DIAGRAM):   end;
112185    +      end;
MPRINT(EM_DIAGRAM):   end;
112186    +   end;
MPRINT(EM_DIAGRAM):   end;
112187    +   else do;
MPRINT(EM_DIAGRAM):   else do;
112188    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
112189    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
112190    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
112191    +      end;
MPRINT(EM_DIAGRAM):   end;
112192    +      else do;
MPRINT(EM_DIAGRAM):   else do;
112193    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
112194    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
112195    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
112196    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
112197    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
112198    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
112199    +         end;
MPRINT(EM_DIAGRAM):   end;
112200    +      end;
MPRINT(EM_DIAGRAM):   end;
112201    +   end;
MPRINT(EM_DIAGRAM):   end;
112202    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
112203    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
112204    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
112205    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
112206    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
112207    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
112208    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
112209    +   end;
MPRINT(EM_DIAGRAM):   end;
112210    +end;
MPRINT(EM_DIAGRAM):   end;
112211    +
112212    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112213    +*** Checking missing input Interval
112214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
112215    +
112216    +IF NMISS(
112217    +   AcceptedCmpTotal ,
112218    +   Frq ,
112219    +   Income ,
112220    +   Mnt ,
112221    +   MntGoldProds ,
112222    +   MntMeatProducts ,
112223    +   NumCatalogPurchases ,
112224    +   NumDealsPurchases ,
112225    +   NumWebVisitsMonth ,
112226    +   RFMstat ,
112227    +   Recency ,
112228    +   Teenhome ,
112229    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat ,
Recency , Teenhome , Year_Birth ) THEN DO;
112230    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
112231    +
112232    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
112233    +END;
MPRINT(EM_DIAGRAM):   END;
112234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112235    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
112236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112237    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
112238    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
112239    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
112240    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
112241    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
112242    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
112243    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
112244    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
112245    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
112246    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
112247    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
112248    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
112249    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
112250    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
112251    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
112252    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
112253    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
112254    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
112255    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
112256    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
112257    +END;
MPRINT(EM_DIAGRAM):   END;
112258    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
112259    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
112260    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
112261    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
112262    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
112263    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
112264    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
112265    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
112266    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
112267    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
112268    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
112269    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
112270    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
112271    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
112272    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
112273    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
112274    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
112275    +   ELSE S_NumCatalogPurchases
112276    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
112277    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
112278    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
112279    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
112280    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
112281    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
112282    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
112283    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
112284    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
112285    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
112286    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
112287    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
112288    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
112289    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
112290    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
112291    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
112292    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
112293    +END;
MPRINT(EM_DIAGRAM):   END;
112294    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112295    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
112296    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112297    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112298    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
112299    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112300    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
112301    +   H1x1_1  =    -0.10743056275421 * S_AcceptedCmpTotal
112302    +          +     0.03409888241348 * S_Frq  +    -0.00055974837068 * S_Income
112303    +          +       0.134341851096 * S_Mnt  +    -0.00857864409164 *
112304    +        S_MntGoldProds  +      0.4895390061827 * S_MntMeatProducts
112305    +          +    -0.01423451356563 * S_NumCatalogPurchases
112306    +          +     0.06006350655487 * S_NumDealsPurchases
112307    +          +    -0.20885493964335 * S_NumWebVisitsMonth
112308    +          +    -0.01173202621744 * S_RFMstat  +     0.25819909101611 *
112309    +        S_Recency  +    -0.03326479668652 * S_Teenhome
112310    +          +     0.03371888312814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10743056275421 * S_AcceptedCmpTotal + 0.03409888241348 *
S_Frq + -0.00055974837068 * S_Income + 0.134341851096 * S_Mnt + -0.00857864409164 *
S_MntGoldProds + 0.4895390061827 * S_MntMeatProducts + -0.01423451356563 *
S_NumCatalogPurchases + 0.06006350655487 * S_NumDealsPurchases + -0.20885493964335 *
S_NumWebVisitsMonth + -0.01173202621744 * S_RFMstat + 0.25819909101611 * S_Recency +
-0.03326479668652 * S_Teenhome + 0.03371888312814 * S_Year_Birth ;
112311    +   H1x1_2  =    -0.03078478134042 * S_AcceptedCmpTotal
112312    +          +    -0.12351766308972 * S_Frq  +     -0.1943406821731 * S_Income
112313    +          +    -0.36027326127049 * S_Mnt  +     0.05117597516658 *
112314    +        S_MntGoldProds  +     0.07931191953223 * S_MntMeatProducts
112315    +          +    -0.03109266966794 * S_NumCatalogPurchases
112316    +          +     0.05524435494328 * S_NumDealsPurchases
112317    +          +     -0.0105802056898 * S_NumWebVisitsMonth
112318    +          +     0.01793771049002 * S_RFMstat  +      0.0322880575902 *
112319    +        S_Recency  +       0.195010707702 * S_Teenhome
112320    +          +     -0.0351563039686 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03078478134042 * S_AcceptedCmpTotal + -0.12351766308972 *
S_Frq + -0.1943406821731 * S_Income + -0.36027326127049 * S_Mnt + 0.05117597516658 *
S_MntGoldProds + 0.07931191953223 * S_MntMeatProducts + -0.03109266966794 *
S_NumCatalogPurchases + 0.05524435494328 * S_NumDealsPurchases + -0.0105802056898 *
S_NumWebVisitsMonth + 0.01793771049002 * S_RFMstat + 0.0322880575902 * S_Recency +
0.195010707702 * S_Teenhome + -0.0351563039686 * S_Year_Birth ;
112321    +   H1x1_3  =     0.23990987498311 * S_AcceptedCmpTotal
112322    +          +     0.04052411845464 * S_Frq  +    -0.00302331972067 * S_Income
112323    +          +     0.39981531247427 * S_Mnt  +     0.01433011413993 *
112324    +        S_MntGoldProds  +    -0.19955782687502 * S_MntMeatProducts
112325    +          +     0.07777995109144 * S_NumCatalogPurchases
112326    +          +     0.08683394019767 * S_NumDealsPurchases
112327    +          +     0.27328366433987 * S_NumWebVisitsMonth
112328    +          +      0.0263930429288 * S_RFMstat  +    -0.38900647412136 *
112329    +        S_Recency  +      0.0640153287908 * S_Teenhome
112330    +          +     0.07587467002123 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.23990987498311 * S_AcceptedCmpTotal + 0.04052411845464 *
S_Frq + -0.00302331972067 * S_Income + 0.39981531247427 * S_Mnt + 0.01433011413993 *
S_MntGoldProds + -0.19955782687502 * S_MntMeatProducts + 0.07777995109144 *
S_NumCatalogPurchases + 0.08683394019767 * S_NumDealsPurchases + 0.27328366433987 *
S_NumWebVisitsMonth + 0.0263930429288 * S_RFMstat + -0.38900647412136 * S_Recency +
0.0640153287908 * S_Teenhome + 0.07587467002123 * S_Year_Birth ;
112331    +   H1x1_1  = H1x1_1  +    -0.05820552608682 * Marital_StatusDivorced
112332    +          +    -0.02695167777393 * Marital_StatusMarried
112333    +          +    -0.00733864032764 * Marital_StatusSingle
112334    +          +     0.03838747494293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.05820552608682 * Marital_StatusDivorced +
-0.02695167777393 * Marital_StatusMarried + -0.00733864032764 * Marital_StatusSingle +
0.03838747494293 * Marital_StatusTogether ;
112335    +   H1x1_2  = H1x1_2  +    -0.00853551919442 * Marital_StatusDivorced
112336    +          +     0.42249671001117 * Marital_StatusMarried
112337    +          +    -0.18515416581955 * Marital_StatusSingle
112338    +          +     0.25783473520826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.00853551919442 * Marital_StatusDivorced +
0.42249671001117 * Marital_StatusMarried + -0.18515416581955 * Marital_StatusSingle +
0.25783473520826 * Marital_StatusTogether ;
112339    +   H1x1_3  = H1x1_3  +      0.4175036565076 * Marital_StatusDivorced
112340    +          +     0.45127582934777 * Marital_StatusMarried
112341    +          +       0.358157766485 * Marital_StatusSingle
112342    +          +     0.42627185625497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.4175036565076 * Marital_StatusDivorced +
0.45127582934777 * Marital_StatusMarried + 0.358157766485 * Marital_StatusSingle +
0.42627185625497 * Marital_StatusTogether ;
112343    +   H1x1_1  =    -1.23226472635566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.23226472635566 + H1x1_1 ;
112344    +   H1x1_2  =      2.2313165328971 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.2313165328971 + H1x1_2 ;
112345    +   H1x1_3  =     0.09755782095138 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.09755782095138 + H1x1_3 ;
112346    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
112347    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
112348    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
112349    +END;
MPRINT(EM_DIAGRAM):   END;
112350    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
112351    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
112352    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
112353    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
112354    +END;
MPRINT(EM_DIAGRAM):   END;
112355    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112356    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
112357    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112358    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
112359    +   P_DepVar1  =     -68.075125441494 * H1x1_1  +    -72.7630361672259 * H1x1_2
112360    +          +    -71.6251597703755 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -68.075125441494 * H1x1_1 + -72.7630361672259 * H1x1_2 +
-71.6251597703755 * H1x1_3 ;
112361    +   P_DepVar1  =    -25.6080957302662 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -25.6080957302662 + P_DepVar1 ;
112362    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
112363    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
112364    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
112365    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
112366    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
112367    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
112368    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
112369    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
112370    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
112371    +END;
MPRINT(EM_DIAGRAM):   END;
112372    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
112373    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
112374    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
112375    +END;
MPRINT(EM_DIAGRAM):   END;
112376    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
112377    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
112378    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
112379    +END;
MPRINT(EM_DIAGRAM):   END;
112380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112381    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
112382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
112383    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
112384    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
112385    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
112386    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
112387    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
112388    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
112389    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
112390    +END;
MPRINT(EM_DIAGRAM):   END;
112391    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
112392    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
112393    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
112394    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
112395     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
112396     quit;
112397     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
112398     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
112399     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
112400     retain ID 2 Node "AutoNeural46";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural46";
112401     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
112402     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 956 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 956 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112403     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
112404     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112405     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 956 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 956 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
112406     proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME
CREATOR);
112407     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112408     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL46_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112409     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
112410     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
112411     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
112412     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112413     proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
112414     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
112415     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
112416     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112417     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112418     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
112419     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
112420     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112421     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112422     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
112423     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
112423   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 496 rows and 5 columns.
 
112424     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
112425     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
112426     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 496 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 496 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112427     filename _pref
112427   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
112428     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
112429     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
112430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
112431    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
112432    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
112433    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
112434    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
112435    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
112436     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
112437     quit;
112438     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
112439     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
112440     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
112441     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
112442     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
112443     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112444     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
112445     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112446     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112447     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
112448     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112449     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
112450     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
112451     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
112452     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
112453     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112454     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
112455     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
112456     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
112457     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112458     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112459     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
112460     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
112461     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112462     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112463     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
112464     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
112464   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
112465     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
112466     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
112467     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 500 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112468     filename _pref
112468   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
112469     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
112470     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
112471    +
112472    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
112473    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
112473   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
112474    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
112475    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
112476    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
112477    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
112478    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
112479     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
112480     quit;
112481     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
112482     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
112483     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
112484     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
112485     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
112486     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112487     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
112488     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112489     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112490     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
112491     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112492     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112493     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
112494     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
112495     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
112496     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
112497     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
112498     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112499     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
112500     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112501     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112502     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
112503     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
112504     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112505     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112506     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
112507     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
112507   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
112508     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112509     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
112510     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 539 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112511     filename _pref
112511   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
112512     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
112513     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
112514    +
112515    +
112516    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
112517    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
112518    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
112519    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
112520    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
112521    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
112522    +
112523    +
112524    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
112525    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
112526    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
112527    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
112528    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
112529    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
112530    +
112531    +
112532    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
112533    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
112534    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
112535    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
112536    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
112537    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
112538    +
112539    +
112540    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
112541    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
112542    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
112543    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
112544    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
112545    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
112546    +
112547    +
112548    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
112549    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
112550    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
112551    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
112552    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
112553    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
112554    +
112555    +
112556    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
112557    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
112558    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
112559    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
112560    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
112561    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
112562    +
112563    +
112564    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
112565    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
112566    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
112567    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
112568    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
112569    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
112570    +
112571    +
112572    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
112573    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
112574    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
112575    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
112576    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
112577    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
112578    +if
112579    +_FILTERNORM1 not in ( '.')
112580    + and
112581    +_FILTERNORM2 not in ( '.')
112582    + and
112583    +_FILTERNORM3 not in ( '.')
112584    + and
112585    +_FILTERNORM4 not in ( '.')
112586    + and
112587    +_FILTERNORM5 not in ( '.')
112588    + and
112589    +_FILTERNORM6 not in ( '.')
112590    + and
112591    +_FILTERNORM7 not in ( ' ')
112592    + and
112593    +_FILTERNORM8 not in ( ' ')
112594    +and
112595    +( Dt_Customer ne .)
112596    +and ( Income ne . and (Income<=107000))
112597    +and ( Kidhome ne .)
112598    +and ( MntFishProducts ne .)
112599    +and ( MntFruits ne .)
112600    +and ( MntGoldProds ne .)
112601    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
112602    +and ( MntSweetProducts ne .)
112603    +and ( MntWines ne .)
112604    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
112605    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
112606    +and ( NumStorePurchases ne .)
112607    +and ( NumWebPurchases ne .)
112608    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
112609    +and ( Recency ne .)
112610    +and ( Teenhome ne .)
112611    +and ( Year_Birth ne .)
112612    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
112613    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
112614    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
112615    +end;
MPRINT(EM_DIAGRAM):   end;
112616    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
112617    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
112618     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
112619     quit;
112620     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
112621     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
112622     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
112623     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
112624     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
112625     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112626     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
112627     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112628     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
112629     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
112630     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112631     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112632     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
112633     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
112634     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
112635     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112636     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
112637     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
112638     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
112639     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112641     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
112642     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
112643     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
112644     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112645     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
112646     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
112646   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
112647     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
112648     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
112649     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 605 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
112650     %macro varDept(fcmpdata=,id=);
112651     %global nobs&id scoreFlag&id;
112652     %let scoreFlag&id = 0;
112653     %if &id=1 or ^&fcmpStart %then %do;
112654     proc sort data=&fcmpdata out=_temp&id nodupkey;
112655     by NAME;
112656     where id=&id and LHS in( %let j=1;
112657     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
112658     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
112659     "&var" %let j = %eval(&j+1);
112660     %end;
112661     );
112662     run;
112663     %let dsid = %sysfunc(open(_temp&id));
112664     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
112665     %let dsid = %sysfunc(close(&dsid));
112666     %if &&nobs&id %then %do;
112667     %let scoreFlag&id = 1;
112668     %let fcmpStart = 1;
112669     %end;
112670     %else %let fcmpStart = 0;
112671     %end;
112672     %else %do;
112673     proc sort data=&fcmpdata out=_tempid;
112674     where id=&id;
112675     by LHS;
112676     run;
112677     %let dsid = %sysfunc(open(_tempid));
112678     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
112679     %let dsid = %sysfunc(close(&dsid));
112680     %if ^&&nobs&id %then %do;
112681     proc datasets lib=work nolist;
112682     delete _tempid;
112683     run;
112684     quit;
112685     %end;
112686     %else %do;
112687     data _tempAll;
112688     set %let j=%eval(&id-1);
112689     %do x=1 %to &j;
112690     %if &&nobs&x %then %do;
112691     _temp&x %end;
112692     %end;
112693     ;
112694     run;
112695     proc sql;
112696     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
112696   ! work._tempid p2 where p.name=p2.lhs;
112697     quit;
112698     data _temp&id;
112699     set _temp&id;
112700     where LHS ne '' and NAME ne '' and Node ne '';
112701     run;
112702     proc datasets lib=work nolist;
112703     delete _tempAll;
112704     run;
112705     %let dsid = %sysfunc(open(_temp&id));
112706     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
112707     %let dsid = %sysfunc(close(&dsid));
112708     %if ^&&nobs&id %then %do;
112709     proc datasets lib=work nolist;
112710     delete _temp&id;
112711     run;
112712     quit;
112713     %end;
112714     %else %do;
112715     %let scoreFlag&id = 1;
112716     data _temp&id;
112717     set _temp&id;
112718     where LHS ne NAME and node ne '';
112719     run;
112720     %let dsid = %sysfunc(open(_temp&id));
112721     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
112722     %let dsid = %sysfunc(close(&dsid));
112723     %if ^&&nobs&id %then %do;
112724     proc datasets lib=work nolist;
112725     delete _temp&id;
112726     run;
112727     quit;
112728     %end;
112729     %else %do;
112730     proc sort data=_temp&id nodupkey;
112731     by LHS NAME;
112732     run;
112733     %end;
112734     %end;
112735     %end;
112736     %end;
112737     %mend varDept;
112738     %macro optCode(outdata=fcmpdata);
112739     %global fcmpStart;
112740     %let fcmpStart = 0;
112741     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
112742     %let NumNodes=9;
112743     %do k=1 %to &NumNodes;
112744     %vardept(fcmpdata=&outdata, id=&k);
112745     %end;
112746     %mend optCode;
112747     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 71 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 52 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 19 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 19 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 26 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 26 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMP2.
NOTE: There were 26 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
112748     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
112749     * Ensmbl59: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing metadata for TRAIN data;
112750     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL59_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl59_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl59_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl59_TRAIN out=WORK.M3WR6YNV noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WR6YNV;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WR6YNV(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WR6YNV;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WR6YNV;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M04TK28Q NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M04TK28Q;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M04TK28Q;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11WN8PS(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M04TK28Q;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M04TK28Q;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M04TK28Q;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M04TK28Q;
MPRINT(EMADVISECOLUMNS):   set WORK.M04TK28Q;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural44_TRAIN noprint
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural44_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl59";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl59";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
113070     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
113071     set EMWS8.Ensmbl59_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMINFO;
113072     where DATA='Ensmbl59' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl59' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
113073     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_EMINFO.
      WHERE (DATA='Ensmbl59') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113074     data EMWS8.Ensmbl59_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMINFO;
113075     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
113076     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
113077     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL59_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
113081     run;
113082     data EMWS8.Ensmbl59_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMINFO;
113083     set EMWS8.Ensmbl59_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMINFO WORK.MODELTEMP_INFO;
113084     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL59_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL59_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113085     proc sort data = EMWS8.Ensmbl59_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl59_EMINFO NOTHREADS;
113086     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
113087     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL59_EMINFO.
NOTE: The data set EMWS8.ENSMBL59_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
113088     proc sort data = EMWS8.AutoNeural44_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural44_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
113089     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
113090     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113091     proc sort data = EMWS8.Ensmbl59_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl59_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
113092     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
113093     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL59_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113094     data EMWS8.Ensmbl59_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMINFO;
113095     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
113096     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
113097     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL59_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
113098     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
113099     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
113100     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
113101     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.ENSMBL59_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL59_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                21.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1A7T5UY
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1A7T5UY new;
MPRINT(EM_DIAGRAM):   run;
113125     data EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMOUTFIT;
113126     set EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMOUTFIT;
113127     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
113128     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
113128   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
113129     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
113130     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL59_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL59_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113131     proc sort data=EMWS8.Ensmbl59_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl59_EMREPORTFIT nothreads;
113132     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
113133     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL59_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL59_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113134     %let _EMwarndup = 0;
113135     %let _EMtargetdup =;
113136     %let _EMASEtargetdup =;
113137     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
113138     set EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMOUTFIT;
113139     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
113140     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
113141     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
113142     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
113143     end;
MPRINT(EM_DIAGRAM):   end;
113144     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL59_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113145     proc sort data=EMWS8.AutoNeural43_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_CMeta_TRAIN out=WORK.SUBSETINMETA;
113146     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
113147     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 86 observations read from the data set EMWS8.AUTONEURAL43_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 86 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
113148     proc sort data=EMWS8.Ensmbl59_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl59_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
113149     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
113150     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 76 observations read from the data set EMWS8.ENSMBL59_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 76 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113151     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
113152     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
113153     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
113154     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 86 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 76 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 86 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113155     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
113156     set EMWS8.Ensmbl59_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_CMeta_TRAIN;
113157     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
113157   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
113158     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL59_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
113159     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
113160     set EMWS8.Ensmbl59_TRAIN(keep=
113161     F_DepVar
113162     I_DepVar
113163     P_DepVar0
113164     P_DepVar1
113165     R_DepVar0
113166     R_DepVar1
113167     U_DepVar
113168     _WARN_
113169     DepVar
113170     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
113171     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: View EMWS8.ENSMBL59_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL44_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL59_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl59_10S5TX9 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl59_10S5TX9;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_10S5TX9(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_10S5TX9;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_10S5TX9;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000252536 OVLMAX 0.9999589456 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
117437     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
117438     set EMWS8.Ensmbl59_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_CMeta_TRAIN;
117439     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
117439   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
117440     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL59_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
117441     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
117442     set EMWS8.Ensmbl59_VALIDATE(keep=
117443     F_DepVar
117444     I_DepVar
117445     P_DepVar0
117446     P_DepVar1
117447     R_DepVar0
117448     R_DepVar1
117449     U_DepVar
117450     _WARN_
117451     DepVar
117452     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
117453     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: View EMWS8.ENSMBL59_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL44_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL59_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl59_03U_0NU nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl59_03U_0NU;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_03U_0NU(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMCLASSIFICATION WORK.Ensmbl59_03U_0NU;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_03U_0NU;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000253253 OVLMAX 0.999955753 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
121728     %let _cn = %sysfunc(getoption(CENTER));
121729     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
121730     proc print data=EMWS8.Ensmbl59_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMREPORTFIT noobs label;
121731     var STAT LABEL TRAIN
121732     VALIDATE
121733     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
121734     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
121735     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
121736     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
121737     run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL59_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 23.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
121738     title10;
MPRINT(EM_DIAGRAM):   title10;
121739     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
121740     proc sort data=EMWS8.Ensmbl59_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl59_EMCLASSIFICATION nothreads;
121741     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
121742     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL59_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL59_EMCLASSIFICATION has 7 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
121743     %let _cn = %sysfunc(getoption(CENTER));
121744     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
121745     proc print data=EMWS8.Ensmbl59_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMCLASSIFICATION noobs label;
121746     var from into pct_row pct_col count percent
121747     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
121748     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
121749     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
121750     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
121751     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
121752     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
121753     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
121754     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
121755     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
121756     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
121757     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
121758     run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL59_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 24.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
121759     title9;
MPRINT(EM_DIAGRAM):   title9;
121760     title10;
MPRINT(EM_DIAGRAM):   title10;
121761     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
121762     %let _cn = %sysfunc(getoption(CENTER));
121763     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
121764     data EMWS8.Ensmbl59_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMEVENTREPORT;
121765     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
121765   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
121766     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
121766   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
121766   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
121766   ! FALSEEVENT
121767     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
121767   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
121767   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
121768        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
121769     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
121770     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
121771     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
121772     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
121773     set EMWS8.Ensmbl59_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMEVENTREPORT;
121774     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL59_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL59_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
121775     proc print data=EMWS8.Ensmbl59_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMEVENTREPORT noobs label;
121776     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
121777     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
121778     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
121779     run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL59_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 25.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
121780     title10;
MPRINT(EM_DIAGRAM):   title10;
121781     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
121782     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
121783     modify Ensmbl59_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl59_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
121784     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
121785     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
121785   ! ;
MPRINT(EM_DIAGRAM):   run;
121786     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL59_EMRANK.DATA.
121787     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
121788     %let _cn = %sysfunc(getoption(CENTER));
121789     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
121790     proc print data=EMWS8.Ensmbl59_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMRANK label noobs;
121791     var
121792     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
121793     by
121794     notsorted DATAROLE
121795     notsorted TARGET
121796     notsorted TARGETLABEL
121797     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
121798     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
121799     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
121800     run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL59_EMRANK.
NOTE: The PROCEDURE PRINT printed page 26.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
121801     title10;
MPRINT(EM_DIAGRAM):   title10;
121802     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
121803     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
121804     modify Ensmbl59_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl59_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
121805     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
121805   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
121806     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
121806   ! ;
MPRINT(EM_DIAGRAM):   run;
121807     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL59_EMSCOREDIST.DATA.
121808     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
