*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                12.03 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                12.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1CS2L5I
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1CS2L5I new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[92647] MAX=1 EXCEEDMAXVALUE='' )[92651] )[92645]
VALIDCHOICES=(CHOICE1='Y' )[92649] )[92933] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")'
DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[92655]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[92659] )[92657] )[92653] TARGET=(WHERE='ROLE =
"TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[92663]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[92669] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[92667] )[92665] )[92661] )[92643]
169199     proc freq data=EMWS8.Ensmbl59_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl59_VariableSet noprint;
169200     table ROLE*LEVEL/out=WORK.Ensmbl59META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl59META;
169201     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set EMWS8.ENSMBL59_VARIABLESET.
NOTE: The data set WORK.ENSMBL59META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169202     proc print data=WORK.Ensmbl59META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl59META label noobs;
169203     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
169204     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
169204   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
169204   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
169205     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
169206     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
169207     run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL59META.
NOTE: The PROCEDURE PRINT printed page 52.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169208     title10;
MPRINT(EM_DIAGRAM):   title10;
169209     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN EMWS8 AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN
EMWS8.AutoNeural43_TRAIN EMWS8.AutoNeural43_TRAIN EMWS8 AutoNeural43_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural43_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
169238     data WORK.Ensmbl59_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl59_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
169239     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
169240     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
169240   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
169240   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
169241        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
169241   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
169241   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
169242     set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL43_DEPVAR_DM( where=(_TYPE_="TARGET"));
169243     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
169244     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
169245     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
169246     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
169247     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
169248     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
169249     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
169250     end;
MPRINT(EM_DIAGRAM):   end;
169251     output;
MPRINT(EM_DIAGRAM):   output;
169252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL59_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169253     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
169254     proc print data=WORK.Ensmbl59_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl59_EVENT noobs label;
169255     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
169256     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
169257     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
169258     run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL59_EVENT.
NOTE: The PROCEDURE PRINT printed page 53.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169259     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
169260     proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural43_DepVar_DM noobs label;
169261     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
169262     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
169263     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
169263   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
169263   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
169264     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
169265     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
169266     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL43_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 54.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169267     title10;
MPRINT(EM_DIAGRAM):   title10;
169268     %let groupid =;
169269     %let endGroupid =;
169270     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
169271     set EMWS8.AutoNeural46_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_EMINFO;
169272     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
169272   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
169273     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
169274     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
169275     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169276     %let groupid =;
169277     %let endGroupid =;
169278     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
169279     set EMWS8.AutoNeural43_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_EMINFO;
169280     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
169280   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
169281     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
169282     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
169283     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL43_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169284     %let groupid =;
169285     %let endGroupid =;
169286     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
169287     set EMWS8.AutoNeural42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural42_EMINFO;
169288     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
169288   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
169289     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
169290     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
169291     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL42_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169292     %let groupid =;
169293     %let endGroupid =;
169294     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
169295     set EMWS8.AutoNeural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural41_EMINFO;
169296     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
169296   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
169297     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
169298     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
169299     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL41_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169300     %let groupid =;
169301     %let endGroupid =;
169302     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
169303     set EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural47_EMINFO;
169304     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
169304   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
169305     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
169306     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
169307     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169308     %let groupid =;
169309     %let endGroupid =;
169310     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
169311     set EMWS8.AutoNeural45_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural45_EMINFO;
169312     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
169312   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
169313     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
169314     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
169315     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL45_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169316     %let groupid =;
169317     %let endGroupid =;
169318     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
169319     set EMWS8.AutoNeural44_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural44_EMINFO;
169320     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
169320   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
169321     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
169322     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
169323     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL44_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169324     data WORK.Ensmbl59;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl59;
169325     length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
169326     label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
169326   ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
169327     nodeid="AUTONEURAL46";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL46";
169328     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
169329     output;
MPRINT(EM_DIAGRAM):   output;
169330     nodeid="AUTONEURAL43";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL43";
169331     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
169332     output;
MPRINT(EM_DIAGRAM):   output;
169333     nodeid="AUTONEURAL42";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL42";
169334     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
169335     output;
MPRINT(EM_DIAGRAM):   output;
169336     nodeid="AUTONEURAL41";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL41";
169337     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
169338     output;
MPRINT(EM_DIAGRAM):   output;
169339     nodeid="AUTONEURAL47";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL47";
169340     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
169341     output;
MPRINT(EM_DIAGRAM):   output;
169342     nodeid="AUTONEURAL45";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL45";
169343     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
169344     output;
MPRINT(EM_DIAGRAM):   output;
169345     nodeid="AUTONEURAL44";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL44";
169346     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
169347     output;
MPRINT(EM_DIAGRAM):   output;
169348     ;
MPRINT(EM_DIAGRAM):   ;
169349     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL59 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
169350     title;
MPRINT(EM_DIAGRAM):   title;
169351     proc print data=WORK.Ensmbl59 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl59 label noobs;
169352     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
169353     title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   run;
169354     run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL59.
NOTE: The PROCEDURE PRINT printed page 55.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
169355     title9;
MPRINT(EM_DIAGRAM):   title9;
169356     title10;
MPRINT(EM_DIAGRAM):   title10;
169357     data WORK.M2BONDV1;
MPRINT(EM_DIAGRAM):    data WORK.M2BONDV1;
169358     set WORK.M2BONDV1;
MPRINT(EM_DIAGRAM):   set WORK.M2BONDV1;
169359     where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
169360     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2BONDV1.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M2BONDV1 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
169361     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
169362     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
169363     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
169364     %macro DMDBClass;
169365         DepVar(DESC)
169366     %mend DMDBClass;
169367     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
169368     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
169369     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
169370     %macro DMDBVar;
169371
169372     %mend DMDBVar;
169373     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169374     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
169375     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169376     proc dmdb batch data=EMWS8.AutoNeural46_TRAIN
169377     dmdbcat=WORK.EM_DMDB
169378     maxlevel = 513
169379     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural46_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
169380     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
169381     target
169382     DepVar
169383     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
169384     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL46_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL46_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
169385     quit;
169386     *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0WO2SB7
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0WO2SB7 new;
MPRINT(EM_DIAGRAM):   run;
169488     filename emflow
169488   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring AUTONEURAL46_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169489     *------------------------------------------------------------*;
169490     * Ensmbl59: Scoring AUTONEURAL46_TRAIN data;
169491     *------------------------------------------------------------*;
169492     data EMWS8.Ensmbl59_TRAIN
169493     / view=EMWS8.Ensmbl59_TRAIN
169494     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_TRAIN / view=EMWS8.Ensmbl59_TRAIN ;
169495     set EMWS8.AutoNeural46_TRAIN
169496     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_TRAIN ;
169497     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas.
169498    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169499    +* Ensmbl59: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Combine model for DepVar;
169500    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169501    +* Ensmbl59: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 1 of 7;
169502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169503    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169504    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
169505    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
169506    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
169507    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169508    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169509    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
169510    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
169511    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
169512    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169513    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169514    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
169515    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
169516    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
169517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169518    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169519    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
169520    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
169521    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
169522    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169523    +
169524    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
169525    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
169525   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
169526    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
169527    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
169528    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
169529    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
169530    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
169531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169532    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
169533    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
169534    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
169535    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169536    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169537    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
169538    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169539    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
169540    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
169541    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
169542    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169543    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
169544    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
169545    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
169546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169547    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169548    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
169549    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
169550    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
169551    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169552    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169553    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
169554    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
169555    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
169556    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
169557    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169558    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
169559    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
169560    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
169561    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
169562    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
169563    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
169564    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
169565    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
169566    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
169567    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
169568    +LENGTH _WARN_ $4
169569    +      F_DepVar  $ 12
169570    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
169571    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
169572    +
169573    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
169574    +
169575    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
169576    +
169577    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
169578    +
169579    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
169580    +
169581    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
169582    +
169583    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
169584    +
169585    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
169586    +
169587    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
169588    +
169589    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
169590    +
169591    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
169592    +
169593    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
169594    +
169595    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
169596    +
169597    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
169598    +
169599    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
169600    +
169601    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
169602    +
169603    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
169604    +
169605    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
169606    +
169607    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
169608    +
169609    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
169610    +
169611    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
169612    +
169613    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
169614    +
169615    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
169616    +
169617    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
169618    +
169619    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
169620    +
169621    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
169622    +
169623    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
169624    +
169625    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
169626    +
169627    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
169628    +
169629    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
169630    +
169631    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
169632    +
169633    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
169634    +
169635    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
169636    +
169637    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
169638    +
169639    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
169640    +
169641    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
169642    +
169643    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
169644    +
169645    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
169646    +
169647    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
169648    +
169649    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
169650    +
169651    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
169652    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
169653    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
169654    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
169655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169657    +end;
MPRINT(EM_DIAGRAM):   end;
169658    +else do;
MPRINT(EM_DIAGRAM):   else do;
169659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169660    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
169661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169662    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169663    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
169664    +   end;
MPRINT(EM_DIAGRAM):   end;
169665    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169666    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
169667    +   end;
MPRINT(EM_DIAGRAM):   end;
169668    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169669    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
169670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169672    +   end;
MPRINT(EM_DIAGRAM):   end;
169673    +end;
MPRINT(EM_DIAGRAM):   end;
169674    +
169675    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
169676    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
169677    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
169678    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
169679    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169680    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169681    +end;
MPRINT(EM_DIAGRAM):   end;
169682    +else do;
MPRINT(EM_DIAGRAM):   else do;
169683    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169684    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
169685    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169686    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169687    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
169688    +   end;
MPRINT(EM_DIAGRAM):   end;
169689    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169690    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
169691    +   end;
MPRINT(EM_DIAGRAM):   end;
169692    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169693    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
169694    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169695    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169696    +   end;
MPRINT(EM_DIAGRAM):   end;
169697    +end;
MPRINT(EM_DIAGRAM):   end;
169698    +
169699    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
169700    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
169701    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
169702    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
169703    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169704    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169705    +end;
MPRINT(EM_DIAGRAM):   end;
169706    +else do;
MPRINT(EM_DIAGRAM):   else do;
169707    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169708    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
169709    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169710    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169711    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
169712    +   end;
MPRINT(EM_DIAGRAM):   end;
169713    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169714    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
169715    +   end;
MPRINT(EM_DIAGRAM):   end;
169716    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169717    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
169718    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169719    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169720    +   end;
MPRINT(EM_DIAGRAM):   end;
169721    +end;
MPRINT(EM_DIAGRAM):   end;
169722    +
169723    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
169724    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
169725    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
169726    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
169727    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169728    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169729    +end;
MPRINT(EM_DIAGRAM):   end;
169730    +else do;
MPRINT(EM_DIAGRAM):   else do;
169731    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169732    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
169733    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169734    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169735    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
169736    +   end;
MPRINT(EM_DIAGRAM):   end;
169737    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169738    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
169739    +   end;
MPRINT(EM_DIAGRAM):   end;
169740    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169741    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
169742    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169743    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169744    +   end;
MPRINT(EM_DIAGRAM):   end;
169745    +end;
MPRINT(EM_DIAGRAM):   end;
169746    +
169747    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
169748    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
169749    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
169750    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
169751    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169752    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169753    +end;
MPRINT(EM_DIAGRAM):   end;
169754    +else do;
MPRINT(EM_DIAGRAM):   else do;
169755    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169756    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
169757    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169758    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169759    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
169760    +   end;
MPRINT(EM_DIAGRAM):   end;
169761    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169762    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
169763    +   end;
MPRINT(EM_DIAGRAM):   end;
169764    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169765    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
169766    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169767    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169768    +   end;
MPRINT(EM_DIAGRAM):   end;
169769    +end;
MPRINT(EM_DIAGRAM):   end;
169770    +
169771    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
169772    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
169773    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
169774    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
169775    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169776    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169777    +end;
MPRINT(EM_DIAGRAM):   end;
169778    +else do;
MPRINT(EM_DIAGRAM):   else do;
169779    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
169780    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
169781    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169782    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
169783    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
169784    +   end;
MPRINT(EM_DIAGRAM):   end;
169785    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
169786    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
169787    +   end;
MPRINT(EM_DIAGRAM):   end;
169788    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169789    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
169790    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169791    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169792    +   end;
MPRINT(EM_DIAGRAM):   end;
169793    +end;
MPRINT(EM_DIAGRAM):   end;
169794    +
169795    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
169796    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
169797    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
169798    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
169799    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
169800    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
169801    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
169802    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
169803    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
169804    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
169805    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
169806    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
169807    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169808    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169809    +end;
MPRINT(EM_DIAGRAM):   end;
169810    +else do;
MPRINT(EM_DIAGRAM):   else do;
169811    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
169812    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
169813    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169814    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
169815    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
169816    +   end;
MPRINT(EM_DIAGRAM):   end;
169817    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
169818    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
169819    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
169820    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
169821    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
169822    +   end;
MPRINT(EM_DIAGRAM):   end;
169823    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
169824    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
169825    +   end;
MPRINT(EM_DIAGRAM):   end;
169826    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
169827    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
169828    +   end;
MPRINT(EM_DIAGRAM):   end;
169829    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
169830    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
169831    +   end;
MPRINT(EM_DIAGRAM):   end;
169832    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169833    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
169834    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
169835    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
169836    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
169837    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169838    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169839    +   end;
MPRINT(EM_DIAGRAM):   end;
169840    +end;
MPRINT(EM_DIAGRAM):   end;
169841    +
169842    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
169843    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
169844    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
169845    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
169846    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
169847    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
169848    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
169849    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
169850    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
169851    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
169852    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
169853    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
169854    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
169855    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
169856    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169857    +end;
MPRINT(EM_DIAGRAM):   end;
169858    +else do;
MPRINT(EM_DIAGRAM):   else do;
169859    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
169860    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
169861    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
169862    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
169863    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
169864    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
169865    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
169866    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
169867    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169868    +         end;
MPRINT(EM_DIAGRAM):   end;
169869    +         else do;
MPRINT(EM_DIAGRAM):   else do;
169870    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
169871    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
169872    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169873    +            end;
MPRINT(EM_DIAGRAM):   end;
169874    +         end;
MPRINT(EM_DIAGRAM):   end;
169875    +      end;
MPRINT(EM_DIAGRAM):   end;
169876    +      else do;
MPRINT(EM_DIAGRAM):   else do;
169877    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
169878    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
169879    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169880    +         end;
MPRINT(EM_DIAGRAM):   end;
169881    +      end;
MPRINT(EM_DIAGRAM):   end;
169882    +   end;
MPRINT(EM_DIAGRAM):   end;
169883    +   else do;
MPRINT(EM_DIAGRAM):   else do;
169884    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
169885    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
169886    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169887    +      end;
MPRINT(EM_DIAGRAM):   end;
169888    +      else do;
MPRINT(EM_DIAGRAM):   else do;
169889    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
169890    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
169891    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
169892    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
169893    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
169894    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
169895    +         end;
MPRINT(EM_DIAGRAM):   end;
169896    +      end;
MPRINT(EM_DIAGRAM):   end;
169897    +   end;
MPRINT(EM_DIAGRAM):   end;
169898    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
169899    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
169900    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
169901    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
169902    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
169903    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
169904    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169905    +   end;
MPRINT(EM_DIAGRAM):   end;
169906    +end;
MPRINT(EM_DIAGRAM):   end;
169907    +
169908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169909    +*** Checking missing input Interval
169910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
169911    +
169912    +IF NMISS(
169913    +   Income ,
169914    +   Kidhome ,
169915    +   MntFishProducts ,
169916    +   MntFruits ,
169917    +   MntGoldProds ,
169918    +   MntMeatProducts ,
169919    +   MntSweetProducts ,
169920    +   MntWines ,
169921    +   NumCatalogPurchases ,
169922    +   NumDealsPurchases ,
169923    +   NumStorePurchases ,
169924    +   NumWebPurchases ,
169925    +   NumWebVisitsMonth ,
169926    +   Recency ,
169927    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
169928    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
169929    +
169930    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
169931    +END;
MPRINT(EM_DIAGRAM):   END;
169932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169933    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
169934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
169935    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
169936    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
169937    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
169938    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
169939    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
169940    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
169941    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
169942    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
169943    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
169944    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
169945    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
169946    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
169947    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
169948    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
169949    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
169950    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
169951    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
169952    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
169953    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
169954    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
169955    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
169956    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
169957    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
169958    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
169959    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
169960    +END;
MPRINT(EM_DIAGRAM):   END;
169961    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
169962    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
169963    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
169964    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
169965    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
169966    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
169967    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
169968    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
169969    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
169970    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
169971    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
169972    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
169973    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
169974    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
169975    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
169976    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
169977    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
169978    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
169979    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
169980    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
169981    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
169982    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
169983    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
169984    +   ELSE S_NumCatalogPurchases
169985    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
169986    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
169987    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
169988    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
169989    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
169990    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
169991    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
169992    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
169993    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
169994    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
169995    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
169996    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
169997    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
169998    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
169999    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
170000    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
170001    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
170002    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
170003    +END;
MPRINT(EM_DIAGRAM):   END;
170004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170005    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
170006    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170008    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
170009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170011    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
170012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170013    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170014    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
170015    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
170016    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
170017    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
170018    +          +      0.0311909552218 * S_MntSweetProducts
170019    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
170020    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
170021    +          +     0.12294876865087 * S_NumStorePurchases
170022    +          +     0.11602382379314 * S_NumWebPurchases
170023    +          +    -0.23519567542635 * S_NumWebVisitsMonth
170024    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
170025    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome +
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 *
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 *
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency +
0.06912944740739 * S_Teenhome ;
170026    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
170027    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
170028    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
170029    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
170030    +          +     0.00133400054994 * S_MntSweetProducts
170031    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
170032    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
170033    +          +    -0.49595472235036 * S_NumStorePurchases
170034    +          +    -0.24747548015204 * S_NumWebPurchases
170035    +          +     0.12326047694811 * S_NumWebVisitsMonth
170036    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
170037    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome +
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 *
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 *
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency +
0.00568113597531 * S_Teenhome ;
170038    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
170039    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
170040    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
170041    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
170042    +          +    -0.03908755288099 * S_MntSweetProducts
170043    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
170044    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
170045    +          +    -0.20634630081435 * S_NumStorePurchases
170046    +          +    -0.06734935798888 * S_NumWebPurchases
170047    +          +     0.32288250215418 * S_NumWebVisitsMonth
170048    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
170049    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome +
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 *
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 *
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases +
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth +
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
170050    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
170051    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
170052    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
170053    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
170054    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 *
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 +
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
170055    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
170056    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
170057    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
170058    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
170059    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 *
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 +
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
170060    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
170061    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
170062    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
170063    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
170064    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 *
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 +
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
170065    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
170066    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
170067    +        EducationGraduation  +     0.07475697967073 * EducationMaster
170068    +          +    -0.04265434587882 * Marital_StatusDivorced
170069    +          +     0.17114014094758 * Marital_StatusMarried
170070    +          +     -0.1537035921296 * Marital_StatusSingle
170071    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle +
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 *
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 *
Marital_StatusTogether ;
170072    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
170073    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
170074    +        EducationGraduation  +     0.04507684017588 * EducationMaster
170075    +          +     0.25534272809394 * Marital_StatusDivorced
170076    +          +     0.20034903346804 * Marital_StatusMarried
170077    +          +    -0.38348393943797 * Marital_StatusSingle
170078    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle +
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 *
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 *
Marital_StatusTogether ;
170079    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
170080    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
170081    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
170082    +          +      0.1988416043876 * Marital_StatusDivorced
170083    +          +    -0.21663959478684 * Marital_StatusMarried
170084    +          +     0.06591480171547 * Marital_StatusSingle
170085    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle +
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 *
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 *
Marital_StatusTogether ;
170086    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
170087    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
170088    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
170089    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
170090    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
170091    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
170092    +END;
MPRINT(EM_DIAGRAM):   END;
170093    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170094    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
170095    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
170096    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
170097    +END;
MPRINT(EM_DIAGRAM):   END;
170098    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170099    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
170100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170101    +
170102    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
170103    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
170104    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
170105    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
170106    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
170107    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170108    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
170109    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
170110    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
170111    +end;
MPRINT(EM_DIAGRAM):   end;
170112    +else do;
MPRINT(EM_DIAGRAM):   else do;
170113    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
170114    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
170115    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
170116    +   end;
MPRINT(EM_DIAGRAM):   end;
170117    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
170118    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
170119    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
170120    +   end;
MPRINT(EM_DIAGRAM):   end;
170121    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170122    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
170123    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
170124    +   end;
MPRINT(EM_DIAGRAM):   end;
170125    +end;
MPRINT(EM_DIAGRAM):   end;
170126    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170127    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
170128    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 +
-60.7557666068018 * H1x1_3 ;
170129    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
170130    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
170131    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
170132    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
170133    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
170134    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
170135    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
170136    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
170137    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
170138    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
170139    +END;
MPRINT(EM_DIAGRAM):   END;
170140    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170141    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
170142    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
170143    +END;
MPRINT(EM_DIAGRAM):   END;
170144    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
170145    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
170146    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
170147    +END;
MPRINT(EM_DIAGRAM):   END;
170148    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
170149    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
170150    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
170151    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
170152    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
170153    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
170154    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
170155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170156    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
170157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170158    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
170159    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
170160    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
170161    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
170162    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
170163    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
170164    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
170165    +END;
MPRINT(EM_DIAGRAM):   END;
170166    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170167    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
170168    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170169    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
170170    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
170171    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170172    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
170173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170174    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
170175    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
170176    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
170177    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
170178    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170179    +* Renaming Into variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural46;
170180    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170181    +length AutoNeural46_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural46_I_DepVar $32;
170182    +drop AutoNeural46_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_I_DepVar;
170183    +AutoNeural46_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural46_I_DepVar = I_DepVar;
170184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170185    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
170186    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170187    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
170188    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
170189    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
170190    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170191    +* Ensmbl59: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 2 of 7;
170192    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170193    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170194    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
170195    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
170196    +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
170197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170198    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170199    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
170200    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170201    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
170202    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
170203    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
170204    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
170205    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
170206    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
170207    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
170208    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
170209    +LENGTH _WARN_ $4
170210    +      F_DepVar  $ 12
170211    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
170212    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
170213    +
170214    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
170215    +
170216    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
170217    +
170218    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
170219    +
170220    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
170221    +
170222    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
170223    +
170224    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
170225    +
170226    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
170227    +
170228    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
170229    +
170230    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
170231    +
170232    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
170233    +
170234    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
170235    +
170236    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
170237    +
170238    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
170239    +
170240    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
170241    +
170242    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
170243    +
170244    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
170245    +
170246    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
170247    +
170248    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
170249    +
170250    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
170251    +
170252    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
170253    +
170254    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
170255    +
170256    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
170257    +
170258    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
170259    +
170260    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
170261    +
170262    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
170263    +
170264    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
170265    +
170266    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
170267    +
170268    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
170269    +
170270    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
170271    +
170272    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
170273    +
170274    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
170275    +
170276    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
170277    +
170278    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
170279    +
170280    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
170281    +
170282    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
170283    +
170284    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
170285    +
170286    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
170287    +
170288    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
170289    +
170290    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
170291    +
170292    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
170293    +
170294    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
170295    +
170296    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
170297    +
170298    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
170299    +
170300    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
170301    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
170302    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
170303    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
170304    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170305    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170306    +end;
MPRINT(EM_DIAGRAM):   end;
170307    +else do;
MPRINT(EM_DIAGRAM):   else do;
170308    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170309    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
170310    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170311    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170312    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
170313    +   end;
MPRINT(EM_DIAGRAM):   end;
170314    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170315    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
170316    +   end;
MPRINT(EM_DIAGRAM):   end;
170317    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170318    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
170319    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170320    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170321    +   end;
MPRINT(EM_DIAGRAM):   end;
170322    +end;
MPRINT(EM_DIAGRAM):   end;
170323    +
170324    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
170325    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
170326    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
170327    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
170328    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170329    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170330    +end;
MPRINT(EM_DIAGRAM):   end;
170331    +else do;
MPRINT(EM_DIAGRAM):   else do;
170332    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170333    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
170334    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170335    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170336    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
170337    +   end;
MPRINT(EM_DIAGRAM):   end;
170338    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170339    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
170340    +   end;
MPRINT(EM_DIAGRAM):   end;
170341    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170342    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
170343    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170344    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170345    +   end;
MPRINT(EM_DIAGRAM):   end;
170346    +end;
MPRINT(EM_DIAGRAM):   end;
170347    +
170348    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
170349    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
170350    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
170351    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
170352    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170353    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170354    +end;
MPRINT(EM_DIAGRAM):   end;
170355    +else do;
MPRINT(EM_DIAGRAM):   else do;
170356    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170357    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
170358    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170359    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170360    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
170361    +   end;
MPRINT(EM_DIAGRAM):   end;
170362    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170363    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
170364    +   end;
MPRINT(EM_DIAGRAM):   end;
170365    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170366    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
170367    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170368    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170369    +   end;
MPRINT(EM_DIAGRAM):   end;
170370    +end;
MPRINT(EM_DIAGRAM):   end;
170371    +
170372    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
170373    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
170374    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
170375    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
170376    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170377    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170378    +end;
MPRINT(EM_DIAGRAM):   end;
170379    +else do;
MPRINT(EM_DIAGRAM):   else do;
170380    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170381    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
170382    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170383    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170384    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
170385    +   end;
MPRINT(EM_DIAGRAM):   end;
170386    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170387    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
170388    +   end;
MPRINT(EM_DIAGRAM):   end;
170389    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170390    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
170391    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170392    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170393    +   end;
MPRINT(EM_DIAGRAM):   end;
170394    +end;
MPRINT(EM_DIAGRAM):   end;
170395    +
170396    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
170397    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
170398    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
170399    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
170400    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170401    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170402    +end;
MPRINT(EM_DIAGRAM):   end;
170403    +else do;
MPRINT(EM_DIAGRAM):   else do;
170404    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170405    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
170406    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170407    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170408    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
170409    +   end;
MPRINT(EM_DIAGRAM):   end;
170410    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170411    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
170412    +   end;
MPRINT(EM_DIAGRAM):   end;
170413    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170414    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
170415    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170416    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170417    +   end;
MPRINT(EM_DIAGRAM):   end;
170418    +end;
MPRINT(EM_DIAGRAM):   end;
170419    +
170420    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
170421    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
170422    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
170423    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
170424    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170426    +end;
MPRINT(EM_DIAGRAM):   end;
170427    +else do;
MPRINT(EM_DIAGRAM):   else do;
170428    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
170429    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
170430    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170431    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
170432    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
170433    +   end;
MPRINT(EM_DIAGRAM):   end;
170434    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
170435    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
170436    +   end;
MPRINT(EM_DIAGRAM):   end;
170437    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170438    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
170439    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170440    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170441    +   end;
MPRINT(EM_DIAGRAM):   end;
170442    +end;
MPRINT(EM_DIAGRAM):   end;
170443    +
170444    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
170445    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
170446    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
170447    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
170448    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
170449    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
170450    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
170451    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
170452    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
170453    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
170454    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
170455    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
170456    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170457    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170458    +end;
MPRINT(EM_DIAGRAM):   end;
170459    +else do;
MPRINT(EM_DIAGRAM):   else do;
170460    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
170461    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
170462    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170463    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
170464    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
170465    +   end;
MPRINT(EM_DIAGRAM):   end;
170466    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
170467    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
170468    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
170469    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
170470    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
170471    +   end;
MPRINT(EM_DIAGRAM):   end;
170472    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
170473    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
170474    +   end;
MPRINT(EM_DIAGRAM):   end;
170475    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
170476    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
170477    +   end;
MPRINT(EM_DIAGRAM):   end;
170478    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
170479    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
170480    +   end;
MPRINT(EM_DIAGRAM):   end;
170481    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170482    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
170483    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
170484    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
170485    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
170486    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170487    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170488    +   end;
MPRINT(EM_DIAGRAM):   end;
170489    +end;
MPRINT(EM_DIAGRAM):   end;
170490    +
170491    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
170492    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
170493    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
170494    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
170495    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
170496    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
170497    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
170498    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
170499    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
170500    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
170501    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
170502    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
170503    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
170504    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
170505    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170506    +end;
MPRINT(EM_DIAGRAM):   end;
170507    +else do;
MPRINT(EM_DIAGRAM):   else do;
170508    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
170509    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
170510    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170511    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
170512    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
170513    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
170514    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
170515    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
170516    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170517    +         end;
MPRINT(EM_DIAGRAM):   end;
170518    +         else do;
MPRINT(EM_DIAGRAM):   else do;
170519    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
170520    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
170521    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170522    +            end;
MPRINT(EM_DIAGRAM):   end;
170523    +         end;
MPRINT(EM_DIAGRAM):   end;
170524    +      end;
MPRINT(EM_DIAGRAM):   end;
170525    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170526    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
170527    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
170528    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170529    +         end;
MPRINT(EM_DIAGRAM):   end;
170530    +      end;
MPRINT(EM_DIAGRAM):   end;
170531    +   end;
MPRINT(EM_DIAGRAM):   end;
170532    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170533    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
170534    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
170535    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170536    +      end;
MPRINT(EM_DIAGRAM):   end;
170537    +      else do;
MPRINT(EM_DIAGRAM):   else do;
170538    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
170539    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
170540    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
170541    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
170542    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
170543    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
170544    +         end;
MPRINT(EM_DIAGRAM):   end;
170545    +      end;
MPRINT(EM_DIAGRAM):   end;
170546    +   end;
MPRINT(EM_DIAGRAM):   end;
170547    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
170548    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
170549    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
170550    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
170551    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
170552    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
170553    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170554    +   end;
MPRINT(EM_DIAGRAM):   end;
170555    +end;
MPRINT(EM_DIAGRAM):   end;
170556    +
170557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170558    +*** Checking missing input Interval
170559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
170560    +
170561    +IF NMISS(
170562    +   Income ,
170563    +   Kidhome ,
170564    +   MntFishProducts ,
170565    +   MntFruits ,
170566    +   MntGoldProds ,
170567    +   MntMeatProducts ,
170568    +   MntSweetProducts ,
170569    +   MntWines ,
170570    +   NumCatalogPurchases ,
170571    +   NumDealsPurchases ,
170572    +   NumStorePurchases ,
170573    +   NumWebPurchases ,
170574    +   NumWebVisitsMonth ,
170575    +   Recency ,
170576    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
170577    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
170578    +
170579    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
170580    +END;
MPRINT(EM_DIAGRAM):   END;
170581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170582    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
170583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170584    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170585    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
170586    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
170587    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
170588    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
170589    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
170590    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
170591    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
170592    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
170593    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
170594    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
170595    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
170596    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
170597    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
170598    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
170599    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
170600    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
170601    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
170602    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
170603    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
170604    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
170605    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
170606    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
170607    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
170608    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
170609    +END;
MPRINT(EM_DIAGRAM):   END;
170610    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170611    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
170612    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
170613    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
170614    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
170615    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
170616    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
170617    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
170618    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
170619    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
170620    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
170621    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
170622    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
170623    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
170624    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
170625    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
170626    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
170627    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
170628    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
170629    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
170630    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
170631    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
170632    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
170633    +   ELSE S_NumCatalogPurchases
170634    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
170635    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
170636    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
170637    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
170638    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
170639    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
170640    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
170641    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
170642    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
170643    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
170644    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
170645    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
170646    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
170647    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
170648    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
170649    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
170650    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
170651    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
170652    +END;
MPRINT(EM_DIAGRAM):   END;
170653    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170654    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
170655    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170657    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
170658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170660    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
170661    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170662    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170663    +   H1x1_1  =       0.346744797535 * S_Income  +     1.31363556955711 *
170664    +        S_Kidhome  +    -0.79208756741143 * S_MntFishProducts
170665    +          +     0.68527811841342 * S_MntFruits  +     0.24664684629472 *
170666    +        S_MntGoldProds  +     0.85215044326148 * S_MntMeatProducts
170667    +          +    -0.05146617403327 * S_MntSweetProducts
170668    +          +     0.70199486255944 * S_MntWines  +    -1.00450471229357 *
170669    +        S_NumCatalogPurchases  +     0.20437829426231 * S_NumDealsPurchases
170670    +          +     0.62863110938217 * S_NumStorePurchases
170671    +          +    -0.38696149667878 * S_NumWebPurchases
170672    +          +    -0.64969312889347 * S_NumWebVisitsMonth
170673    +          +      1.3506790879911 * S_Recency  +    -0.14927581282921 *
170674    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.346744797535 * S_Income + 1.31363556955711 * S_Kidhome +
-0.79208756741143 * S_MntFishProducts + 0.68527811841342 * S_MntFruits + 0.24664684629472 *
S_MntGoldProds + 0.85215044326148 * S_MntMeatProducts + -0.05146617403327 * S_MntSweetProducts
+ 0.70199486255944 * S_MntWines + -1.00450471229357 * S_NumCatalogPurchases + 0.20437829426231
* S_NumDealsPurchases + 0.62863110938217 * S_NumStorePurchases + -0.38696149667878 *
S_NumWebPurchases + -0.64969312889347 * S_NumWebVisitsMonth + 1.3506790879911 * S_Recency +
-0.14927581282921 * S_Teenhome ;
170675    +   H1x1_2  =    -0.31812547665326 * S_Income  +    -0.44650104709618 *
170676    +        S_Kidhome  +     0.57229440722364 * S_MntFishProducts
170677    +          +     0.43482820937164 * S_MntFruits  +     -0.2031067703009 *
170678    +        S_MntGoldProds  +    -4.22959784007598 * S_MntMeatProducts
170679    +          +     -0.2837867994991 * S_MntSweetProducts
170680    +          +     0.53009243544309 * S_MntWines  +    -0.69827694726429 *
170681    +        S_NumCatalogPurchases  +    -0.21825886946472 * S_NumDealsPurchases
170682    +          +    -0.54369381190341 * S_NumStorePurchases
170683    +          +     0.67406669261545 * S_NumWebPurchases
170684    +          +     0.33996696883368 * S_NumWebVisitsMonth
170685    +          +    -0.25785000158296 * S_Recency  +     0.29059204886836 *
170686    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31812547665326 * S_Income + -0.44650104709618 * S_Kidhome +
0.57229440722364 * S_MntFishProducts + 0.43482820937164 * S_MntFruits + -0.2031067703009 *
S_MntGoldProds + -4.22959784007598 * S_MntMeatProducts + -0.2837867994991 * S_MntSweetProducts
+ 0.53009243544309 * S_MntWines + -0.69827694726429 * S_NumCatalogPurchases +
-0.21825886946472 * S_NumDealsPurchases + -0.54369381190341 * S_NumStorePurchases +
0.67406669261545 * S_NumWebPurchases + 0.33996696883368 * S_NumWebVisitsMonth +
-0.25785000158296 * S_Recency + 0.29059204886836 * S_Teenhome ;
170687    +   H1x1_3  =    -0.95497484937763 * S_Income  +     0.69843675975299 *
170688    +        S_Kidhome  +    -0.16297234253648 * S_MntFishProducts
170689    +          +    -0.79520871513787 * S_MntFruits  +    -0.29823724505093 *
170690    +        S_MntGoldProds  +    -0.15152860134108 * S_MntMeatProducts
170691    +          +    -0.03465749764322 * S_MntSweetProducts
170692    +          +     0.53127184040091 * S_MntWines  +     0.59135593751067 *
170693    +        S_NumCatalogPurchases  +     0.32132594137215 * S_NumDealsPurchases
170694    +          +      0.4404265130137 * S_NumStorePurchases
170695    +          +     0.34042541893429 * S_NumWebPurchases
170696    +          +    -1.21549916758761 * S_NumWebVisitsMonth
170697    +          +       1.154070329153 * S_Recency  +     0.48728201337678 *
170698    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.95497484937763 * S_Income + 0.69843675975299 * S_Kidhome +
-0.16297234253648 * S_MntFishProducts + -0.79520871513787 * S_MntFruits + -0.29823724505093 *
S_MntGoldProds + -0.15152860134108 * S_MntMeatProducts + -0.03465749764322 *
S_MntSweetProducts + 0.53127184040091 * S_MntWines + 0.59135593751067 * S_NumCatalogPurchases
+ 0.32132594137215 * S_NumDealsPurchases + 0.4404265130137 * S_NumStorePurchases +
0.34042541893429 * S_NumWebPurchases + -1.21549916758761 * S_NumWebVisitsMonth +
1.154070329153 * S_Recency + 0.48728201337678 * S_Teenhome ;
170699    +   H1x1_4  =    -1.18770065121934 * S_Income  +      0.3073609740511 *
170700    +        S_Kidhome  +     0.10352863720245 * S_MntFishProducts
170701    +          +      0.2833318237712 * S_MntFruits  +     0.03154921247745 *
170702    +        S_MntGoldProds  +    -0.21591651561727 * S_MntMeatProducts
170703    +          +    -0.00464679492565 * S_MntSweetProducts
170704    +          +     0.91421960675715 * S_MntWines  +    -1.26836416129835 *
170705    +        S_NumCatalogPurchases  +    -0.70058095897782 * S_NumDealsPurchases
170706    +          +     1.15839307615364 * S_NumStorePurchases
170707    +          +     0.62831972126136 * S_NumWebPurchases
170708    +          +    -1.61962107597882 * S_NumWebVisitsMonth
170709    +          +     1.12858496707441 * S_Recency  +     0.54281989992336 *
170710    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.18770065121934 * S_Income + 0.3073609740511 * S_Kidhome +
0.10352863720245 * S_MntFishProducts + 0.2833318237712 * S_MntFruits + 0.03154921247745 *
S_MntGoldProds + -0.21591651561727 * S_MntMeatProducts + -0.00464679492565 *
S_MntSweetProducts + 0.91421960675715 * S_MntWines + -1.26836416129835 * S_NumCatalogPurchases
+ -0.70058095897782 * S_NumDealsPurchases + 1.15839307615364 * S_NumStorePurchases +
0.62831972126136 * S_NumWebPurchases + -1.61962107597882 * S_NumWebVisitsMonth +
1.12858496707441 * S_Recency + 0.54281989992336 * S_Teenhome ;
170711    +   H1x1_5  =     0.05044786678162 * S_Income  +    -0.28010558310581 *
170712    +        S_Kidhome  +    -0.27691656261205 * S_MntFishProducts
170713    +          +    -0.39089831210828 * S_MntFruits  +    -0.08178998049926 *
170714    +        S_MntGoldProds  +     1.72104172406534 * S_MntMeatProducts
170715    +          +    -0.31125451894603 * S_MntSweetProducts
170716    +          +    -2.29170137059747 * S_MntWines  +     0.63730065528433 *
170717    +        S_NumCatalogPurchases  +     0.88249434950066 * S_NumDealsPurchases
170718    +          +    -1.44151914398807 * S_NumStorePurchases
170719    +          +     -0.5455286038748 * S_NumWebPurchases
170720    +          +     0.92543573664002 * S_NumWebVisitsMonth
170721    +          +    -0.94895006705107 * S_Recency  +     0.12419848895477 *
170722    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.05044786678162 * S_Income + -0.28010558310581 * S_Kidhome +
-0.27691656261205 * S_MntFishProducts + -0.39089831210828 * S_MntFruits + -0.08178998049926 *
S_MntGoldProds + 1.72104172406534 * S_MntMeatProducts + -0.31125451894603 * S_MntSweetProducts
+ -2.29170137059747 * S_MntWines + 0.63730065528433 * S_NumCatalogPurchases + 0.88249434950066
* S_NumDealsPurchases + -1.44151914398807 * S_NumStorePurchases + -0.5455286038748 *
S_NumWebPurchases + 0.92543573664002 * S_NumWebVisitsMonth + -0.94895006705107 * S_Recency +
0.12419848895477 * S_Teenhome ;
170723    +   H1x1_6  =      1.0379959912095 * S_Income  +    -0.86527104445929 *
170724    +        S_Kidhome  +    -0.34569179888564 * S_MntFishProducts
170725    +          +    -0.00109367242014 * S_MntFruits  +      0.1491727982835 *
170726    +        S_MntGoldProds  +     1.59142102470118 * S_MntMeatProducts
170727    +          +    -0.44310159680843 * S_MntSweetProducts
170728    +          +    -0.12978244847526 * S_MntWines  +     1.25298974430925 *
170729    +        S_NumCatalogPurchases  +      0.8343138844265 * S_NumDealsPurchases
170730    +          +    -0.06648303760561 * S_NumStorePurchases
170731    +          +    -0.65122349287903 * S_NumWebPurchases
170732    +          +     1.83555427093429 * S_NumWebVisitsMonth
170733    +          +    -2.44265045013513 * S_Recency  +    -0.96168611481099 *
170734    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0379959912095 * S_Income + -0.86527104445929 * S_Kidhome +
-0.34569179888564 * S_MntFishProducts + -0.00109367242014 * S_MntFruits + 0.1491727982835 *
S_MntGoldProds + 1.59142102470118 * S_MntMeatProducts + -0.44310159680843 * S_MntSweetProducts
+ -0.12978244847526 * S_MntWines + 1.25298974430925 * S_NumCatalogPurchases + 0.8343138844265
* S_NumDealsPurchases + -0.06648303760561 * S_NumStorePurchases + -0.65122349287903 *
S_NumWebPurchases + 1.83555427093429 * S_NumWebVisitsMonth + -2.44265045013513 * S_Recency +
-0.96168611481099 * S_Teenhome ;
170735    +   H1x1_1  = H1x1_1  +    -0.04697238730506 * AcceptedCmp10
170736    +          +     0.17124574303968 * AcceptedCmp20  +     0.24668651391243 *
170737    +        AcceptedCmp30  +    -0.17661157809394 * AcceptedCmp40
170738    +          +    -0.07986471073966 * AcceptedCmp50  +     0.39456441776971 *
170739    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04697238730506 * AcceptedCmp10 + 0.17124574303968 *
AcceptedCmp20 + 0.24668651391243 * AcceptedCmp30 + -0.17661157809394 * AcceptedCmp40 +
-0.07986471073966 * AcceptedCmp50 + 0.39456441776971 * Complain0 ;
170740    +   H1x1_2  = H1x1_2  +     0.82032499204552 * AcceptedCmp10
170741    +          +     0.34058590721793 * AcceptedCmp20  +    -0.05139100187265 *
170742    +        AcceptedCmp30  +     0.03047923325443 * AcceptedCmp40
170743    +          +     0.00472330466661 * AcceptedCmp50  +     0.17230692332464 *
170744    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.82032499204552 * AcceptedCmp10 + 0.34058590721793 *
AcceptedCmp20 + -0.05139100187265 * AcceptedCmp30 + 0.03047923325443 * AcceptedCmp40 +
0.00472330466661 * AcceptedCmp50 + 0.17230692332464 * Complain0 ;
170745    +   H1x1_3  = H1x1_3  +     0.28530146043163 * AcceptedCmp10
170746    +          +     0.42287366771085 * AcceptedCmp20  +     0.47373508298281 *
170747    +        AcceptedCmp30  +     0.55866504005454 * AcceptedCmp40
170748    +          +     0.82267729772563 * AcceptedCmp50  +     0.19702533550506 *
170749    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.28530146043163 * AcceptedCmp10 + 0.42287366771085 *
AcceptedCmp20 + 0.47373508298281 * AcceptedCmp30 + 0.55866504005454 * AcceptedCmp40 +
0.82267729772563 * AcceptedCmp50 + 0.19702533550506 * Complain0 ;
170750    +   H1x1_4  = H1x1_4  +     0.52781659896891 * AcceptedCmp10
170751    +          +     0.42920365778433 * AcceptedCmp20  +     1.17620912558163 *
170752    +        AcceptedCmp30  +     0.60548467992927 * AcceptedCmp40
170753    +          +     0.94474163621099 * AcceptedCmp50  +    -0.78069672963693 *
170754    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.52781659896891 * AcceptedCmp10 + 0.42920365778433 *
AcceptedCmp20 + 1.17620912558163 * AcceptedCmp30 + 0.60548467992927 * AcceptedCmp40 +
0.94474163621099 * AcceptedCmp50 + -0.78069672963693 * Complain0 ;
170755    +   H1x1_5  = H1x1_5  +    -0.57412668124255 * AcceptedCmp10
170756    +          +    -0.47940329920743 * AcceptedCmp20  +    -0.32110813917426 *
170757    +        AcceptedCmp30  +    -0.61486082641451 * AcceptedCmp40
170758    +          +    -0.69974277642424 * AcceptedCmp50  +     0.11676881614828 *
170759    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.57412668124255 * AcceptedCmp10 + -0.47940329920743
* AcceptedCmp20 + -0.32110813917426 * AcceptedCmp30 + -0.61486082641451 * AcceptedCmp40 +
-0.69974277642424 * AcceptedCmp50 + 0.11676881614828 * Complain0 ;
170760    +   H1x1_6  = H1x1_6  +    -0.84071985342593 * AcceptedCmp10
170761    +          +    -0.93448636634819 * AcceptedCmp20  +    -1.08375331325128 *
170762    +        AcceptedCmp30  +    -1.17713256753961 * AcceptedCmp40
170763    +          +    -1.19701619371219 * AcceptedCmp50  +     0.43593081503911 *
170764    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.84071985342593 * AcceptedCmp10 + -0.93448636634819
* AcceptedCmp20 + -1.08375331325128 * AcceptedCmp30 + -1.17713256753961 * AcceptedCmp40 +
-1.19701619371219 * AcceptedCmp50 + 0.43593081503911 * Complain0 ;
170765    +   H1x1_1  = H1x1_1  +     0.16696814950674 * Education2n_Cycle
170766    +          +    -0.44548398836024 * EducationBasic  +    -0.13816962229813 *
170767    +        EducationGraduation  +     0.15082660839612 * EducationMaster
170768    +          +    -0.86711066227375 * Marital_StatusDivorced
170769    +          +     0.40837974583757 * Marital_StatusMarried
170770    +          +    -0.36026722115525 * Marital_StatusSingle
170771    +          +     0.79004200065113 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.16696814950674 * Education2n_Cycle +
-0.44548398836024 * EducationBasic + -0.13816962229813 * EducationGraduation +
0.15082660839612 * EducationMaster + -0.86711066227375 * Marital_StatusDivorced +
0.40837974583757 * Marital_StatusMarried + -0.36026722115525 * Marital_StatusSingle +
0.79004200065113 * Marital_StatusTogether ;
170772    +   H1x1_2  = H1x1_2  +     0.16842509296504 * Education2n_Cycle
170773    +          +    -0.37448080566378 * EducationBasic  +     0.48861368388392 *
170774    +        EducationGraduation  +    -0.52159546239433 * EducationMaster
170775    +          +     0.32215787204894 * Marital_StatusDivorced
170776    +          +    -0.56445035445224 * Marital_StatusMarried
170777    +          +    -0.19089062631475 * Marital_StatusSingle
170778    +          +    -0.05879603306331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16842509296504 * Education2n_Cycle +
-0.37448080566378 * EducationBasic + 0.48861368388392 * EducationGraduation +
-0.52159546239433 * EducationMaster + 0.32215787204894 * Marital_StatusDivorced +
-0.56445035445224 * Marital_StatusMarried + -0.19089062631475 * Marital_StatusSingle +
-0.05879603306331 * Marital_StatusTogether ;
170779    +   H1x1_3  = H1x1_3  +    -0.60123226656743 * Education2n_Cycle
170780    +          +     0.60422871475083 * EducationBasic  +     1.03135359524948 *
170781    +        EducationGraduation  +     0.08569631133746 * EducationMaster
170782    +          +      0.0333599428728 * Marital_StatusDivorced
170783    +          +      0.2536992094527 * Marital_StatusMarried
170784    +          +     0.28814962122223 * Marital_StatusSingle
170785    +          +    -0.07291720333163 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.60123226656743 * Education2n_Cycle +
0.60422871475083 * EducationBasic + 1.03135359524948 * EducationGraduation + 0.08569631133746
* EducationMaster + 0.0333599428728 * Marital_StatusDivorced + 0.2536992094527 *
Marital_StatusMarried + 0.28814962122223 * Marital_StatusSingle + -0.07291720333163 *
Marital_StatusTogether ;
170786    +   H1x1_4  = H1x1_4  +    -0.31817779304591 * Education2n_Cycle
170787    +          +     0.41715850822951 * EducationBasic  +    -1.42142934931707 *
170788    +        EducationGraduation  +     0.67447448653035 * EducationMaster
170789    +          +    -0.47992692297474 * Marital_StatusDivorced
170790    +          +     1.37810632485566 * Marital_StatusMarried
170791    +          +    -1.37561982457408 * Marital_StatusSingle
170792    +          +     1.44711275454438 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.31817779304591 * Education2n_Cycle +
0.41715850822951 * EducationBasic + -1.42142934931707 * EducationGraduation + 0.67447448653035
* EducationMaster + -0.47992692297474 * Marital_StatusDivorced + 1.37810632485566 *
Marital_StatusMarried + -1.37561982457408 * Marital_StatusSingle + 1.44711275454438 *
Marital_StatusTogether ;
170793    +   H1x1_5  = H1x1_5  +     0.09777346458802 * Education2n_Cycle
170794    +          +    -0.45960393039978 * EducationBasic  +     0.51146196412307 *
170795    +        EducationGraduation  +    -0.24819773072524 * EducationMaster
170796    +          +     0.19162417091995 * Marital_StatusDivorced
170797    +          +    -0.36068364824761 * Marital_StatusMarried
170798    +          +    -0.12710669526743 * Marital_StatusSingle
170799    +          +    -0.01019314244777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.09777346458802 * Education2n_Cycle +
-0.45960393039978 * EducationBasic + 0.51146196412307 * EducationGraduation +
-0.24819773072524 * EducationMaster + 0.19162417091995 * Marital_StatusDivorced +
-0.36068364824761 * Marital_StatusMarried + -0.12710669526743 * Marital_StatusSingle +
-0.01019314244777 * Marital_StatusTogether ;
170800    +   H1x1_6  = H1x1_6  +     0.36097201590287 * Education2n_Cycle
170801    +          +     0.58682328743356 * EducationBasic  +    -0.70502301542305 *
170802    +        EducationGraduation  +    -0.64274217783062 * EducationMaster
170803    +          +     0.23760271729717 * Marital_StatusDivorced
170804    +          +    -1.21454188572959 * Marital_StatusMarried
170805    +          +     1.24284947007232 * Marital_StatusSingle
170806    +          +    -1.39754167839201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.36097201590287 * Education2n_Cycle +
0.58682328743356 * EducationBasic + -0.70502301542305 * EducationGraduation +
-0.64274217783062 * EducationMaster + 0.23760271729717 * Marital_StatusDivorced +
-1.21454188572959 * Marital_StatusMarried + 1.24284947007232 * Marital_StatusSingle +
-1.39754167839201 * Marital_StatusTogether ;
170807    +   H1x1_1  =    -0.37160255114665 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.37160255114665 + H1x1_1 ;
170808    +   H1x1_2  =    -0.79024897923326 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.79024897923326 + H1x1_2 ;
170809    +   H1x1_3  =    -1.07478535022413 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.07478535022413 + H1x1_3 ;
170810    +   H1x1_4  =    -0.83827859036654 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.83827859036654 + H1x1_4 ;
170811    +   H1x1_5  =      1.0917082111499 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0917082111499 + H1x1_5 ;
170812    +   H1x1_6  =     1.09202728340056 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.09202728340056 + H1x1_6 ;
170813    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
170814    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
170815    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
170816    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
170817    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
170818    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
170819    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
170820    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
170821    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
170822    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
170823    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
170824    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
170825    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
170826    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
170827    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
170828    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
170829    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
170830    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
170831    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
170832    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
170833    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
170834    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
170835    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
170836    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
170837    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
170838    +END;
MPRINT(EM_DIAGRAM):   END;
170839    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170840    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
170841    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
170842    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
170843    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
170844    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
170845    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
170846    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
170847    +END;
MPRINT(EM_DIAGRAM):   END;
170848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170849    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
170850    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170851    +
170852    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
170853    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
170854    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
170855    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
170856    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
170857    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
170858    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
170859    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
170860    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
170861    +end;
MPRINT(EM_DIAGRAM):   end;
170862    +else do;
MPRINT(EM_DIAGRAM):   else do;
170863    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
170864    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
170865    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
170866    +   end;
MPRINT(EM_DIAGRAM):   end;
170867    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
170868    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
170869    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
170870    +   end;
MPRINT(EM_DIAGRAM):   end;
170871    +   else do;
MPRINT(EM_DIAGRAM):   else do;
170872    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
170873    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
170874    +   end;
MPRINT(EM_DIAGRAM):   end;
170875    +end;
MPRINT(EM_DIAGRAM):   end;
170876    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
170877    +   P_DepVar1  =    -9.47780447141489 * H1x1_1  +    -8.06096671462069 * H1x1_2
170878    +          +    -4.21167567173811 * H1x1_3  +     -37.599240879379 * H1x1_4
170879    +          +     25.0531533838083 * H1x1_5  +     29.1428275636369 * H1x1_6
170880    +          +     4.90157629063847 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.47780447141489 * H1x1_1 + -8.06096671462069 * H1x1_2 +
-4.21167567173811 * H1x1_3 + -37.599240879379 * H1x1_4 + 25.0531533838083 * H1x1_5 +
29.1428275636369 * H1x1_6 + 4.90157629063847 * H1x1_7 ;
170881    +   P_DepVar1  =    -1.97718258496285 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97718258496285 + P_DepVar1 ;
170882    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
170883    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
170884    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
170885    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
170886    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
170887    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
170888    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
170889    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
170890    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
170891    +END;
MPRINT(EM_DIAGRAM):   END;
170892    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
170893    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
170894    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
170895    +END;
MPRINT(EM_DIAGRAM):   END;
170896    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
170897    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
170898    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
170899    +END;
MPRINT(EM_DIAGRAM):   END;
170900    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
170901    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
170902    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
170903    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
170904    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
170905    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
170906    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
170907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170908    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
170909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
170910    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
170911    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
170912    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
170913    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
170914    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
170915    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
170916    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
170917    +END;
MPRINT(EM_DIAGRAM):   END;
170918    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170919    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
170920    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
170921    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
170922    +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
170923    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170924    +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
170925    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170926    +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
170927    +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
170928    +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
170929    +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
170930    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170931    +* Renaming Into variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural43;
170932    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170933    +length AutoNeural43_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural43_I_DepVar $32;
170934    +drop AutoNeural43_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_I_DepVar;
170935    +AutoNeural43_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural43_I_DepVar = I_DepVar;
170936    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170937    +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
170938    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170939    +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
170940    +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
170941    +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
170942    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170943    +* Ensmbl59: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 3 of 7;
170944    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170945    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170946    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
170947    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
170948    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
170949    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
170950    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170951    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
170952    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
170953    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
170954    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
170955    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
170956    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
170957    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
170958    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
170959    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
170960    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
170961    +LENGTH _WARN_ $4
170962    +      F_DepVar  $ 12
170963    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
170964    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
170965    +
170966    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
170967    +
170968    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
170969    +
170970    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
170971    +
170972    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
170973    +
170974    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
170975    +
170976    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
170977    +
170978    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
170979    +
170980    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
170981    +
170982    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
170983    +
170984    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
170985    +
170986    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
170987    +
170988    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
170989    +
170990    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
170991    +
170992    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
170993    +
170994    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
170995    +
170996    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
170997    +
170998    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
170999    +
171000    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
171001    +
171002    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
171003    +
171004    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
171005    +
171006    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
171007    +
171008    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
171009    +
171010    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
171011    +
171012    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
171013    +
171014    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
171015    +
171016    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
171017    +
171018    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
171019    +
171020    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
171021    +
171022    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
171023    +
171024    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
171025    +
171026    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
171027    +
171028    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
171029    +
171030    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
171031    +
171032    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
171033    +
171034    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
171035    +
171036    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
171037    +
171038    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
171039    +
171040    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
171041    +
171042    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
171043    +
171044    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
171045    +
171046    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
171047    +
171048    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
171049    +
171050    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
171051    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
171052    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
171053    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
171054    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171055    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171056    +end;
MPRINT(EM_DIAGRAM):   end;
171057    +else do;
MPRINT(EM_DIAGRAM):   else do;
171058    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171059    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
171060    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171061    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171062    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
171063    +   end;
MPRINT(EM_DIAGRAM):   end;
171064    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171065    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
171066    +   end;
MPRINT(EM_DIAGRAM):   end;
171067    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171068    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
171069    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171070    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171071    +   end;
MPRINT(EM_DIAGRAM):   end;
171072    +end;
MPRINT(EM_DIAGRAM):   end;
171073    +
171074    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
171075    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
171076    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
171077    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
171078    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171079    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171080    +end;
MPRINT(EM_DIAGRAM):   end;
171081    +else do;
MPRINT(EM_DIAGRAM):   else do;
171082    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171083    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
171084    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171085    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171086    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
171087    +   end;
MPRINT(EM_DIAGRAM):   end;
171088    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171089    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
171090    +   end;
MPRINT(EM_DIAGRAM):   end;
171091    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171092    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
171093    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171094    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171095    +   end;
MPRINT(EM_DIAGRAM):   end;
171096    +end;
MPRINT(EM_DIAGRAM):   end;
171097    +
171098    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
171099    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
171100    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
171101    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
171102    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171103    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171104    +end;
MPRINT(EM_DIAGRAM):   end;
171105    +else do;
MPRINT(EM_DIAGRAM):   else do;
171106    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171107    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
171108    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171109    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171110    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
171111    +   end;
MPRINT(EM_DIAGRAM):   end;
171112    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171113    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
171114    +   end;
MPRINT(EM_DIAGRAM):   end;
171115    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171116    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
171117    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171118    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171119    +   end;
MPRINT(EM_DIAGRAM):   end;
171120    +end;
MPRINT(EM_DIAGRAM):   end;
171121    +
171122    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
171123    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
171124    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
171125    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
171126    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171127    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171128    +end;
MPRINT(EM_DIAGRAM):   end;
171129    +else do;
MPRINT(EM_DIAGRAM):   else do;
171130    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171131    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
171132    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171133    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171134    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
171135    +   end;
MPRINT(EM_DIAGRAM):   end;
171136    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171137    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
171138    +   end;
MPRINT(EM_DIAGRAM):   end;
171139    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171140    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
171141    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171142    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171143    +   end;
MPRINT(EM_DIAGRAM):   end;
171144    +end;
MPRINT(EM_DIAGRAM):   end;
171145    +
171146    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
171147    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
171148    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
171149    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
171150    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171151    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171152    +end;
MPRINT(EM_DIAGRAM):   end;
171153    +else do;
MPRINT(EM_DIAGRAM):   else do;
171154    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171155    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
171156    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171157    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171158    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
171159    +   end;
MPRINT(EM_DIAGRAM):   end;
171160    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171161    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
171162    +   end;
MPRINT(EM_DIAGRAM):   end;
171163    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171164    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
171165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171167    +   end;
MPRINT(EM_DIAGRAM):   end;
171168    +end;
MPRINT(EM_DIAGRAM):   end;
171169    +
171170    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
171171    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
171172    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
171173    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
171174    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171175    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171176    +end;
MPRINT(EM_DIAGRAM):   end;
171177    +else do;
MPRINT(EM_DIAGRAM):   else do;
171178    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171179    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
171180    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171181    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171182    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
171183    +   end;
MPRINT(EM_DIAGRAM):   end;
171184    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171185    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
171186    +   end;
MPRINT(EM_DIAGRAM):   end;
171187    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171188    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
171189    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171190    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171191    +   end;
MPRINT(EM_DIAGRAM):   end;
171192    +end;
MPRINT(EM_DIAGRAM):   end;
171193    +
171194    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
171195    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
171196    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
171197    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
171198    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
171199    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
171200    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
171201    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
171202    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
171203    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
171204    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
171205    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
171206    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171207    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171208    +end;
MPRINT(EM_DIAGRAM):   end;
171209    +else do;
MPRINT(EM_DIAGRAM):   else do;
171210    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
171211    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
171212    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171213    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
171214    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
171215    +   end;
MPRINT(EM_DIAGRAM):   end;
171216    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
171217    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
171218    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
171219    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
171220    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
171221    +   end;
MPRINT(EM_DIAGRAM):   end;
171222    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
171223    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
171224    +   end;
MPRINT(EM_DIAGRAM):   end;
171225    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
171226    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
171227    +   end;
MPRINT(EM_DIAGRAM):   end;
171228    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
171229    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
171230    +   end;
MPRINT(EM_DIAGRAM):   end;
171231    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171232    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
171233    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
171234    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
171235    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
171236    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171237    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171238    +   end;
MPRINT(EM_DIAGRAM):   end;
171239    +end;
MPRINT(EM_DIAGRAM):   end;
171240    +
171241    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
171242    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
171243    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
171244    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
171245    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
171246    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
171247    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
171248    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
171249    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
171250    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
171251    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
171252    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
171253    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
171254    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171255    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171256    +end;
MPRINT(EM_DIAGRAM):   end;
171257    +else do;
MPRINT(EM_DIAGRAM):   else do;
171258    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
171259    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
171260    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171261    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
171262    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
171263    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
171264    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
171265    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
171266    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171267    +         end;
MPRINT(EM_DIAGRAM):   end;
171268    +         else do;
MPRINT(EM_DIAGRAM):   else do;
171269    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
171270    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
171271    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171272    +            end;
MPRINT(EM_DIAGRAM):   end;
171273    +         end;
MPRINT(EM_DIAGRAM):   end;
171274    +      end;
MPRINT(EM_DIAGRAM):   end;
171275    +      else do;
MPRINT(EM_DIAGRAM):   else do;
171276    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
171277    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
171278    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171279    +         end;
MPRINT(EM_DIAGRAM):   end;
171280    +      end;
MPRINT(EM_DIAGRAM):   end;
171281    +   end;
MPRINT(EM_DIAGRAM):   end;
171282    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171283    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
171284    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
171285    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171286    +      end;
MPRINT(EM_DIAGRAM):   end;
171287    +      else do;
MPRINT(EM_DIAGRAM):   else do;
171288    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
171289    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
171290    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
171291    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
171292    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
171293    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171294    +         end;
MPRINT(EM_DIAGRAM):   end;
171295    +      end;
MPRINT(EM_DIAGRAM):   end;
171296    +   end;
MPRINT(EM_DIAGRAM):   end;
171297    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
171298    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
171299    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
171300    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
171301    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
171302    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171303    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171304    +   end;
MPRINT(EM_DIAGRAM):   end;
171305    +end;
MPRINT(EM_DIAGRAM):   end;
171306    +
171307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171308    +*** Checking missing input Interval
171309    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
171310    +
171311    +IF NMISS(
171312    +   Income ,
171313    +   Kidhome ,
171314    +   MntFishProducts ,
171315    +   MntFruits ,
171316    +   MntGoldProds ,
171317    +   MntMeatProducts ,
171318    +   MntSweetProducts ,
171319    +   MntWines ,
171320    +   NumCatalogPurchases ,
171321    +   NumDealsPurchases ,
171322    +   NumStorePurchases ,
171323    +   NumWebPurchases ,
171324    +   NumWebVisitsMonth ,
171325    +   Recency ,
171326    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
171327    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
171328    +
171329    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171330    +END;
MPRINT(EM_DIAGRAM):   END;
171331    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171332    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
171333    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171334    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171335    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
171336    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
171337    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
171338    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
171339    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
171340    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
171341    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
171342    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
171343    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
171344    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
171345    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
171346    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
171347    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
171348    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
171349    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
171350    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
171351    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
171352    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
171353    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
171354    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
171355    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
171356    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
171357    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
171358    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
171359    +END;
MPRINT(EM_DIAGRAM):   END;
171360    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171361    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
171362    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
171363    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
171364    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
171365    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
171366    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
171367    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
171368    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
171369    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
171370    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
171371    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
171372    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
171373    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
171374    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
171375    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
171376    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
171377    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
171378    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
171379    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
171380    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
171381    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
171382    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
171383    +   ELSE S_NumCatalogPurchases
171384    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
171385    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
171386    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
171387    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
171388    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
171389    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
171390    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
171391    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
171392    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
171393    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
171394    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
171395    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
171396    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
171397    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
171398    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
171399    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
171400    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
171401    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
171402    +END;
MPRINT(EM_DIAGRAM):   END;
171403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171404    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
171405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171406    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171407    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
171408    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171410    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
171411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171412    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171413    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
171414    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
171415    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
171416    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
171417    +          +     0.13203247258141 * S_MntSweetProducts
171418    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
171419    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
171420    +          +     1.48881174203434 * S_NumStorePurchases
171421    +          +     2.06403591844726 * S_NumWebPurchases
171422    +          +    -0.09535558759694 * S_NumWebVisitsMonth
171423    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
171424    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome +
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 *
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases +
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases +
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth +
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
171425    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
171426    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
171427    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
171428    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
171429    +          +      0.3852767951223 * S_MntSweetProducts
171430    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
171431    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
171432    +          +     0.87686526091024 * S_NumStorePurchases
171433    +          +     0.48807967312664 * S_NumWebPurchases
171434    +          +     2.42770807785792 * S_NumWebVisitsMonth
171435    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
171436    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome +
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 *
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts +
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 *
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 *
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency +
-0.38694456406673 * S_Teenhome ;
171437    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
171438    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
171439    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
171440    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
171441    +          +      0.4461192743946 * S_MntSweetProducts
171442    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
171443    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
171444    +          +     1.26831094932108 * S_NumStorePurchases
171445    +          +     0.50819627174451 * S_NumWebPurchases
171446    +          +      0.5463426309003 * S_NumWebVisitsMonth
171447    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
171448    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome +
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 *
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts +
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 *
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 *
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency +
-0.99155600458731 * S_Teenhome ;
171449    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
171450    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
171451    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
171452    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
171453    +          +     0.73630834236265 * S_MntSweetProducts
171454    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
171455    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
171456    +          +     2.08815797619397 * S_NumStorePurchases
171457    +          +     1.47250122683369 * S_NumWebPurchases
171458    +          +    -1.95745344341946 * S_NumWebVisitsMonth
171459    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
171460    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome +
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 *
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases +
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases +
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth +
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
171461    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
171462    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
171463    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
171464    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
171465    +          +    -0.23438993753342 * S_MntSweetProducts
171466    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
171467    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
171468    +          +    -0.49697408067153 * S_NumStorePurchases
171469    +          +     0.41091736049576 * S_NumWebPurchases
171470    +          +     1.61180593172142 * S_NumWebVisitsMonth
171471    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
171472    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome +
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 *
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 *
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 *
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency +
-0.30863432234672 * S_Teenhome ;
171473    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
171474    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
171475    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
171476    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
171477    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 *
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 +
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
171478    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
171479    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
171480    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
171481    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
171482    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 +
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
171483    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
171484    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
171485    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
171486    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
171487    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 *
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 +
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
171488    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
171489    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
171490    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
171491    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
171492    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 *
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 +
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
171493    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
171494    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
171495    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
171496    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
171497    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 +
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
171498    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
171499    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
171500    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
171501    +          +    -0.14951932081311 * Marital_StatusDivorced
171502    +          +     0.08343648358981 * Marital_StatusMarried
171503    +          +    -0.52143432598374 * Marital_StatusSingle
171504    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle +
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation +
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced +
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle +
-0.17799942229122 * Marital_StatusTogether ;
171505    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
171506    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
171507    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
171508    +          +    -0.34495973695408 * Marital_StatusDivorced
171509    +          +    -0.30910829853532 * Marital_StatusMarried
171510    +          +     0.14431404541055 * Marital_StatusSingle
171511    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle +
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation +
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced +
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle +
-0.62673029935295 * Marital_StatusTogether ;
171512    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
171513    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
171514    +        EducationGraduation  +     0.05582780345024 * EducationMaster
171515    +          +     0.81191732290197 * Marital_StatusDivorced
171516    +          +    -2.53108753227171 * Marital_StatusMarried
171517    +          +     2.21769123178832 * Marital_StatusSingle
171518    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle +
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation +
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced +
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle +
-0.90613443546426 * Marital_StatusTogether ;
171519    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
171520    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
171521    +        EducationGraduation  +     0.52527957409681 * EducationMaster
171522    +          +    -1.26246836163545 * Marital_StatusDivorced
171523    +          +     0.73147045162506 * Marital_StatusMarried
171524    +          +     0.04252836823306 * Marital_StatusSingle
171525    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle +
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 *
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 *
Marital_StatusTogether ;
171526    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
171527    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
171528    +        EducationGraduation  +      0.0979905405754 * EducationMaster
171529    +          +    -0.25571808514992 * Marital_StatusDivorced
171530    +          +     0.20684027342845 * Marital_StatusMarried
171531    +          +    -0.36983627747986 * Marital_StatusSingle
171532    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle +
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 *
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 *
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 *
Marital_StatusTogether ;
171533    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
171534    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
171535    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
171536    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
171537    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
171538    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
171539    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
171540    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
171541    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
171542    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
171543    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
171544    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
171545    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
171546    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
171547    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
171548    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
171549    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
171550    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
171551    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
171552    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
171553    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
171554    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
171555    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
171556    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
171557    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
171558    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
171559    +END;
MPRINT(EM_DIAGRAM):   END;
171560    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171561    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
171562    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
171563    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
171564    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
171565    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
171566    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
171567    +END;
MPRINT(EM_DIAGRAM):   END;
171568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171569    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
171570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171571    +
171572    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
171573    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
171574    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
171575    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
171576    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
171577    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171578    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
171579    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
171580    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
171581    +end;
MPRINT(EM_DIAGRAM):   end;
171582    +else do;
MPRINT(EM_DIAGRAM):   else do;
171583    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
171584    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
171585    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
171586    +   end;
MPRINT(EM_DIAGRAM):   end;
171587    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
171588    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
171589    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
171590    +   end;
MPRINT(EM_DIAGRAM):   end;
171591    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171592    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
171593    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
171594    +   end;
MPRINT(EM_DIAGRAM):   end;
171595    +end;
MPRINT(EM_DIAGRAM):   end;
171596    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
171597    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
171598    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
171599    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 +
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 +
0.14986282100716 * H1x1_6 ;
171600    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
171601    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
171602    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
171603    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
171604    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
171605    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
171606    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
171607    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
171608    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
171609    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
171610    +END;
MPRINT(EM_DIAGRAM):   END;
171611    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
171612    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
171613    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
171614    +END;
MPRINT(EM_DIAGRAM):   END;
171615    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
171616    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
171617    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
171618    +END;
MPRINT(EM_DIAGRAM):   END;
171619    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
171620    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
171621    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
171622    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
171623    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
171624    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
171625    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
171626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171627    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
171628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
171629    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
171630    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
171631    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
171632    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
171633    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
171634    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
171635    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
171636    +END;
MPRINT(EM_DIAGRAM):   END;
171637    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
171638    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
171639    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
171640    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
171641    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
171642    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171643    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
171644    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171645    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
171646    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
171647    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
171648    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
171649    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171650    +* Renaming Into variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural42;
171651    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171652    +length AutoNeural42_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural42_I_DepVar $32;
171653    +drop AutoNeural42_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_I_DepVar;
171654    +AutoNeural42_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural42_I_DepVar = I_DepVar;
171655    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171656    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
171657    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171658    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
171659    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
171660    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
171661    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171662    +* Ensmbl59: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 4 of 7;
171663    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171664    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171665    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
171666    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
171667    +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
171668    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
171669    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
171670    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
171671    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
171672    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
171673    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
171674    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
171675    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
171676    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
171677    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
171678    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
171679    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
171680    +LENGTH _WARN_ $4
171681    +      F_DepVar  $ 12
171682    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
171683    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
171684    +
171685    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
171686    +
171687    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
171688    +
171689    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
171690    +
171691    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
171692    +
171693    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
171694    +
171695    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
171696    +
171697    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
171698    +
171699    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
171700    +
171701    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
171702    +
171703    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
171704    +
171705    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
171706    +
171707    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
171708    +
171709    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
171710    +
171711    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
171712    +
171713    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
171714    +
171715    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
171716    +
171717    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
171718    +
171719    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
171720    +
171721    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
171722    +
171723    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
171724    +
171725    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
171726    +
171727    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
171728    +
171729    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
171730    +
171731    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
171732    +
171733    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
171734    +
171735    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
171736    +
171737    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
171738    +
171739    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
171740    +
171741    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
171742    +
171743    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
171744    +
171745    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
171746    +
171747    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
171748    +
171749    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
171750    +
171751    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
171752    +
171753    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
171754    +
171755    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
171756    +
171757    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
171758    +
171759    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
171760    +
171761    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
171762    +
171763    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
171764    +
171765    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
171766    +
171767    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
171768    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
171769    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
171770    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
171771    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171772    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171773    +end;
MPRINT(EM_DIAGRAM):   end;
171774    +else do;
MPRINT(EM_DIAGRAM):   else do;
171775    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171776    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
171777    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171778    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171779    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
171780    +   end;
MPRINT(EM_DIAGRAM):   end;
171781    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171782    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
171783    +   end;
MPRINT(EM_DIAGRAM):   end;
171784    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171785    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
171786    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171787    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171788    +   end;
MPRINT(EM_DIAGRAM):   end;
171789    +end;
MPRINT(EM_DIAGRAM):   end;
171790    +
171791    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
171792    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
171793    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
171794    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
171795    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171796    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171797    +end;
MPRINT(EM_DIAGRAM):   end;
171798    +else do;
MPRINT(EM_DIAGRAM):   else do;
171799    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171800    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
171801    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171802    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171803    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
171804    +   end;
MPRINT(EM_DIAGRAM):   end;
171805    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171806    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
171807    +   end;
MPRINT(EM_DIAGRAM):   end;
171808    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171809    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
171810    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171811    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171812    +   end;
MPRINT(EM_DIAGRAM):   end;
171813    +end;
MPRINT(EM_DIAGRAM):   end;
171814    +
171815    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
171816    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
171817    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
171818    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
171819    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171820    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171821    +end;
MPRINT(EM_DIAGRAM):   end;
171822    +else do;
MPRINT(EM_DIAGRAM):   else do;
171823    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171824    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
171825    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171826    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171827    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
171828    +   end;
MPRINT(EM_DIAGRAM):   end;
171829    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171830    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
171831    +   end;
MPRINT(EM_DIAGRAM):   end;
171832    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171833    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
171834    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171835    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171836    +   end;
MPRINT(EM_DIAGRAM):   end;
171837    +end;
MPRINT(EM_DIAGRAM):   end;
171838    +
171839    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
171840    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
171841    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
171842    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
171843    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171844    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171845    +end;
MPRINT(EM_DIAGRAM):   end;
171846    +else do;
MPRINT(EM_DIAGRAM):   else do;
171847    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171848    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
171849    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171850    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171851    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
171852    +   end;
MPRINT(EM_DIAGRAM):   end;
171853    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171854    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
171855    +   end;
MPRINT(EM_DIAGRAM):   end;
171856    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171857    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
171858    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171859    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171860    +   end;
MPRINT(EM_DIAGRAM):   end;
171861    +end;
MPRINT(EM_DIAGRAM):   end;
171862    +
171863    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
171864    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
171865    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
171866    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
171867    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171868    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171869    +end;
MPRINT(EM_DIAGRAM):   end;
171870    +else do;
MPRINT(EM_DIAGRAM):   else do;
171871    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171872    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
171873    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171874    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171875    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
171876    +   end;
MPRINT(EM_DIAGRAM):   end;
171877    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171878    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
171879    +   end;
MPRINT(EM_DIAGRAM):   end;
171880    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171881    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
171882    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171883    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171884    +   end;
MPRINT(EM_DIAGRAM):   end;
171885    +end;
MPRINT(EM_DIAGRAM):   end;
171886    +
171887    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
171888    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
171889    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
171890    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
171891    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171892    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171893    +end;
MPRINT(EM_DIAGRAM):   end;
171894    +else do;
MPRINT(EM_DIAGRAM):   else do;
171895    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
171896    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
171897    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171898    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
171899    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
171900    +   end;
MPRINT(EM_DIAGRAM):   end;
171901    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
171902    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
171903    +   end;
MPRINT(EM_DIAGRAM):   end;
171904    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171905    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
171906    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171907    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171908    +   end;
MPRINT(EM_DIAGRAM):   end;
171909    +end;
MPRINT(EM_DIAGRAM):   end;
171910    +
171911    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
171912    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
171913    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
171914    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
171915    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
171916    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
171917    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
171918    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
171919    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
171920    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
171921    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
171922    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
171923    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171924    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171925    +end;
MPRINT(EM_DIAGRAM):   end;
171926    +else do;
MPRINT(EM_DIAGRAM):   else do;
171927    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
171928    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
171929    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171930    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
171931    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
171932    +   end;
MPRINT(EM_DIAGRAM):   end;
171933    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
171934    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
171935    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
171936    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
171937    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
171938    +   end;
MPRINT(EM_DIAGRAM):   end;
171939    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
171940    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
171941    +   end;
MPRINT(EM_DIAGRAM):   end;
171942    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
171943    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
171944    +   end;
MPRINT(EM_DIAGRAM):   end;
171945    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
171946    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
171947    +   end;
MPRINT(EM_DIAGRAM):   end;
171948    +   else do;
MPRINT(EM_DIAGRAM):   else do;
171949    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
171950    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
171951    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
171952    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
171953    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
171954    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171955    +   end;
MPRINT(EM_DIAGRAM):   end;
171956    +end;
MPRINT(EM_DIAGRAM):   end;
171957    +
171958    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
171959    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
171960    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
171961    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
171962    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
171963    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
171964    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
171965    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
171966    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
171967    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
171968    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
171969    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
171970    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
171971    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
171972    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
171973    +end;
MPRINT(EM_DIAGRAM):   end;
171974    +else do;
MPRINT(EM_DIAGRAM):   else do;
171975    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
171976    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
171977    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
171978    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
171979    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
171980    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
171981    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
171982    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
171983    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171984    +         end;
MPRINT(EM_DIAGRAM):   end;
171985    +         else do;
MPRINT(EM_DIAGRAM):   else do;
171986    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
171987    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
171988    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171989    +            end;
MPRINT(EM_DIAGRAM):   end;
171990    +         end;
MPRINT(EM_DIAGRAM):   end;
171991    +      end;
MPRINT(EM_DIAGRAM):   end;
171992    +      else do;
MPRINT(EM_DIAGRAM):   else do;
171993    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
171994    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
171995    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
171996    +         end;
MPRINT(EM_DIAGRAM):   end;
171997    +      end;
MPRINT(EM_DIAGRAM):   end;
171998    +   end;
MPRINT(EM_DIAGRAM):   end;
171999    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172000    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
172001    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
172002    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
172003    +      end;
MPRINT(EM_DIAGRAM):   end;
172004    +      else do;
MPRINT(EM_DIAGRAM):   else do;
172005    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
172006    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
172007    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
172008    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
172009    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
172010    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
172011    +         end;
MPRINT(EM_DIAGRAM):   end;
172012    +      end;
MPRINT(EM_DIAGRAM):   end;
172013    +   end;
MPRINT(EM_DIAGRAM):   end;
172014    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
172015    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
172016    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
172017    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
172018    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
172019    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
172020    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172021    +   end;
MPRINT(EM_DIAGRAM):   end;
172022    +end;
MPRINT(EM_DIAGRAM):   end;
172023    +
172024    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172025    +*** Checking missing input Interval
172026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
172027    +
172028    +IF NMISS(
172029    +   Income ,
172030    +   Kidhome ,
172031    +   MntFishProducts ,
172032    +   MntFruits ,
172033    +   MntGoldProds ,
172034    +   MntMeatProducts ,
172035    +   MntSweetProducts ,
172036    +   MntWines ,
172037    +   NumCatalogPurchases ,
172038    +   NumDealsPurchases ,
172039    +   NumStorePurchases ,
172040    +   NumWebPurchases ,
172041    +   NumWebVisitsMonth ,
172042    +   Recency ,
172043    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
172044    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
172045    +
172046    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172047    +END;
MPRINT(EM_DIAGRAM):   END;
172048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172049    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
172050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172051    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
172052    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
172053    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
172054    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
172055    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
172056    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
172057    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
172058    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
172059    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
172060    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
172061    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
172062    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
172063    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
172064    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
172065    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
172066    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
172067    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
172068    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
172069    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
172070    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
172071    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
172072    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
172073    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
172074    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
172075    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
172076    +END;
MPRINT(EM_DIAGRAM):   END;
172077    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
172078    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
172079    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
172080    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
172081    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
172082    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
172083    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
172084    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
172085    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
172086    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
172087    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
172088    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
172089    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
172090    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
172091    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
172092    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
172093    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
172094    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
172095    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
172096    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
172097    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
172098    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
172099    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
172100    +   ELSE S_NumCatalogPurchases
172101    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
172102    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
172103    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
172104    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
172105    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
172106    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
172107    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
172108    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
172109    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
172110    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
172111    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
172112    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
172113    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
172114    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
172115    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
172116    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
172117    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
172118    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
172119    +END;
MPRINT(EM_DIAGRAM):   END;
172120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172121    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
172122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172123    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172124    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
172125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172127    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
172128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172129    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
172130    +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
172131    +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
172132    +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
172133    +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
172134    +          +     -0.2030617183738 * S_MntSweetProducts
172135    +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
172136    +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
172137    +          +    -2.67074303965293 * S_NumStorePurchases
172138    +          +    -0.84694619593676 * S_NumWebPurchases
172139    +          +     1.78464945757548 * S_NumWebVisitsMonth
172140    +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
172141    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome +
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 *
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts +
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 *
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 *
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency +
0.12484193160086 * S_Teenhome ;
172142    +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
172143    +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
172144    +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
172145    +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
172146    +          +    -0.48853587268985 * S_MntSweetProducts
172147    +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
172148    +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
172149    +          +    -1.10593499185395 * S_NumStorePurchases
172150    +          +     -1.3003228821842 * S_NumWebPurchases
172151    +          +     2.87047131261901 * S_NumWebVisitsMonth
172152    +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
172153    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome +
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 *
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 *
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 *
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency +
-1.2351049603093 * S_Teenhome ;
172154    +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
172155    +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
172156    +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
172157    +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
172158    +          +    -0.27795094909244 * S_MntSweetProducts
172159    +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
172160    +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
172161    +          +    -0.41332499072246 * S_NumStorePurchases
172162    +          +     0.76626053410817 * S_NumWebPurchases
172163    +          +     0.81795211037296 * S_NumWebVisitsMonth
172164    +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
172165    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome +
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 *
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 *
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases +
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth +
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
172166    +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
172167    +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
172168    +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
172169    +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
172170    +          +    -0.08285620819867 * S_MntSweetProducts
172171    +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
172172    +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
172173    +          +    -0.17691098721908 * S_NumStorePurchases
172174    +          +     0.46246892093576 * S_NumWebPurchases
172175    +          +     2.06272832836908 * S_NumWebVisitsMonth
172176    +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
172177    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome +
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 *
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases +
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases +
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth +
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
172178    +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
172179    +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
172180    +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
172181    +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
172182    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 +
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
172183    +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
172184    +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
172185    +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
172186    +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
172187    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 +
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
172188    +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
172189    +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
172190    +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
172191    +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
172192    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 *
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 +
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
172193    +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
172194    +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
172195    +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
172196    +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
172197    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 *
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 +
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
172198    +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
172199    +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
172200    +        EducationGraduation  +    -0.51132563359945 * EducationMaster
172201    +          +     1.59526812226707 * Marital_StatusDivorced
172202    +          +    -0.74331656724296 * Marital_StatusMarried
172203    +          +     0.74316614019998 * Marital_StatusSingle
172204    +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle +
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation +
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced +
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle +
-1.36761487171479 * Marital_StatusTogether ;
172205    +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
172206    +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
172207    +        EducationGraduation  +     0.07596142730184 * EducationMaster
172208    +          +     0.94291322065497 * Marital_StatusDivorced
172209    +          +    -1.64331597630127 * Marital_StatusMarried
172210    +          +     2.21526196736604 * Marital_StatusSingle
172211    +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle +
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 *
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 *
Marital_StatusTogether ;
172212    +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
172213    +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
172214    +        EducationGraduation  +    -0.59791003195469 * EducationMaster
172215    +          +     1.63906979191221 * Marital_StatusDivorced
172216    +          +    -1.00497354965718 * Marital_StatusMarried
172217    +          +     0.70485207953497 * Marital_StatusSingle
172218    +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle +
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation +
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced +
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle +
-1.55917756143873 * Marital_StatusTogether ;
172219    +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
172220    +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
172221    +        EducationGraduation  +     -0.1847363034021 * EducationMaster
172222    +          +     0.75038128420756 * Marital_StatusDivorced
172223    +          +    -1.93055855198469 * Marital_StatusMarried
172224    +          +     0.73816798380254 * Marital_StatusSingle
172225    +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle +
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 *
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 *
Marital_StatusTogether ;
172226    +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
172227    +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
172228    +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
172229    +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
172230    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
172231    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
172232    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
172233    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
172234    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
172235    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
172236    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
172237    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
172238    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
172239    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
172240    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
172241    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
172242    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
172243    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
172244    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
172245    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
172246    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
172247    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
172248    +END;
MPRINT(EM_DIAGRAM):   END;
172249    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
172250    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
172251    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
172252    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
172253    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
172254    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
172255    +END;
MPRINT(EM_DIAGRAM):   END;
172256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172257    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
172258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172259    +
172260    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
172261    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
172262    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
172263    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
172264    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
172265    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
172266    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
172267    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
172268    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
172269    +end;
MPRINT(EM_DIAGRAM):   end;
172270    +else do;
MPRINT(EM_DIAGRAM):   else do;
172271    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
172272    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
172273    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
172274    +   end;
MPRINT(EM_DIAGRAM):   end;
172275    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
172276    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
172277    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
172278    +   end;
MPRINT(EM_DIAGRAM):   end;
172279    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172280    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
172281    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
172282    +   end;
MPRINT(EM_DIAGRAM):   end;
172283    +end;
MPRINT(EM_DIAGRAM):   end;
172284    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
172285    +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
172286    +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
172287    +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 +
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
172288    +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
172289    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
172290    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
172291    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
172292    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
172293    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
172294    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
172295    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
172296    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
172297    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
172298    +END;
MPRINT(EM_DIAGRAM):   END;
172299    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
172300    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
172301    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
172302    +END;
MPRINT(EM_DIAGRAM):   END;
172303    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
172304    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
172305    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
172306    +END;
MPRINT(EM_DIAGRAM):   END;
172307    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
172308    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
172309    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
172310    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
172311    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
172312    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
172313    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
172314    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172315    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
172316    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172317    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
172318    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
172319    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
172320    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
172321    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
172322    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
172323    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
172324    +END;
MPRINT(EM_DIAGRAM):   END;
172325    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
172326    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
172327    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
172328    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
172329    +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
172330    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172331    +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
172332    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172333    +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
172334    +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
172335    +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
172336    +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
172337    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172338    +* Renaming Into variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural41;
172339    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172340    +length AutoNeural41_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural41_I_DepVar $32;
172341    +drop AutoNeural41_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_I_DepVar;
172342    +AutoNeural41_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural41_I_DepVar = I_DepVar;
172343    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172344    +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
172345    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172346    +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
172347    +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
172348    +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
172349    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172350    +* Ensmbl59: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 5 of 7;
172351    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172352    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172353    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
172354    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
172355    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
172356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
172357    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
172358    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
172359    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
172360    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
172361    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
172362    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
172363    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
172364    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
172365    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
172366    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
172367    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
172368    +LENGTH _WARN_ $4
172369    +      F_DepVar  $ 12
172370    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
172371    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
172372    +
172373    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
172374    +
172375    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
172376    +
172377    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
172378    +
172379    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
172380    +
172381    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
172382    +
172383    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
172384    +
172385    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
172386    +
172387    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
172388    +
172389    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
172390    +
172391    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
172392    +
172393    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
172394    +
172395    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
172396    +
172397    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
172398    +
172399    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
172400    +
172401    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
172402    +
172403    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
172404    +
172405    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
172406    +
172407    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
172408    +
172409    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
172410    +
172411    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
172412    +
172413    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
172414    +
172415    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
172416    +
172417    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
172418    +
172419    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
172420    +
172421    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
172422    +
172423    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
172424    +
172425    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
172426    +
172427    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
172428    +
172429    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
172430    +
172431    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
172432    +
172433    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
172434    +
172435    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
172436    +
172437    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
172438    +
172439    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
172440    +
172441    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
172442    +
172443    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
172444    +
172445    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
172446    +
172447    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
172448    +
172449    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
172450    +
172451    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
172452    +
172453    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
172454    +
172455    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
172456    +
172457    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
172458    +
172459    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
172460    +
172461    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
172462    +
172463    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
172464    +
172465    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
172466    +
172467    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
172468    +
172469    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
172470    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
172471    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
172472    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
172473    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
172474    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172475    +end;
MPRINT(EM_DIAGRAM):   end;
172476    +else do;
MPRINT(EM_DIAGRAM):   else do;
172477    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
172478    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
172479    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
172480    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
172481    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
172482    +   end;
MPRINT(EM_DIAGRAM):   end;
172483    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
172484    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
172485    +   end;
MPRINT(EM_DIAGRAM):   end;
172486    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172487    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
172488    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
172489    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172490    +   end;
MPRINT(EM_DIAGRAM):   end;
172491    +end;
MPRINT(EM_DIAGRAM):   end;
172492    +
172493    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
172494    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
172495    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
172496    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
172497    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
172498    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172499    +end;
MPRINT(EM_DIAGRAM):   end;
172500    +else do;
MPRINT(EM_DIAGRAM):   else do;
172501    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
172502    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
172503    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
172504    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
172505    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
172506    +   end;
MPRINT(EM_DIAGRAM):   end;
172507    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
172508    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
172509    +   end;
MPRINT(EM_DIAGRAM):   end;
172510    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172511    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
172512    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
172513    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172514    +   end;
MPRINT(EM_DIAGRAM):   end;
172515    +end;
MPRINT(EM_DIAGRAM):   end;
172516    +
172517    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
172518    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
172519    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
172520    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
172521    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
172522    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172523    +end;
MPRINT(EM_DIAGRAM):   end;
172524    +else do;
MPRINT(EM_DIAGRAM):   else do;
172525    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
172526    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
172527    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
172528    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
172529    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
172530    +   end;
MPRINT(EM_DIAGRAM):   end;
172531    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
172532    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
172533    +   end;
MPRINT(EM_DIAGRAM):   end;
172534    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172535    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
172536    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
172537    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172538    +   end;
MPRINT(EM_DIAGRAM):   end;
172539    +end;
MPRINT(EM_DIAGRAM):   end;
172540    +
172541    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
172542    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
172543    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
172544    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
172545    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
172546    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172547    +end;
MPRINT(EM_DIAGRAM):   end;
172548    +else do;
MPRINT(EM_DIAGRAM):   else do;
172549    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
172550    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
172551    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
172552    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
172553    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
172554    +   end;
MPRINT(EM_DIAGRAM):   end;
172555    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
172556    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
172557    +   end;
MPRINT(EM_DIAGRAM):   end;
172558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172559    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
172560    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
172561    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172562    +   end;
MPRINT(EM_DIAGRAM):   end;
172563    +end;
MPRINT(EM_DIAGRAM):   end;
172564    +
172565    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
172566    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
172567    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
172568    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
172569    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
172570    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172571    +end;
MPRINT(EM_DIAGRAM):   end;
172572    +else do;
MPRINT(EM_DIAGRAM):   else do;
172573    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
172574    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
172575    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
172576    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
172577    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
172578    +   end;
MPRINT(EM_DIAGRAM):   end;
172579    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
172580    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
172581    +   end;
MPRINT(EM_DIAGRAM):   end;
172582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172583    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
172584    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
172585    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172586    +   end;
MPRINT(EM_DIAGRAM):   end;
172587    +end;
MPRINT(EM_DIAGRAM):   end;
172588    +
172589    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
172590    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
172591    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
172592    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
172593    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
172594    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172595    +end;
MPRINT(EM_DIAGRAM):   end;
172596    +else do;
MPRINT(EM_DIAGRAM):   else do;
172597    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
172598    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
172599    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
172600    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
172601    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
172602    +   end;
MPRINT(EM_DIAGRAM):   end;
172603    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
172604    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
172605    +   end;
MPRINT(EM_DIAGRAM):   end;
172606    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172607    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
172608    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
172609    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172610    +   end;
MPRINT(EM_DIAGRAM):   end;
172611    +end;
MPRINT(EM_DIAGRAM):   end;
172612    +
172613    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
172614    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
172615    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
172616    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
172617    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
172618    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
172619    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
172620    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
172621    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
172622    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
172623    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
172624    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
172625    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
172626    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172627    +end;
MPRINT(EM_DIAGRAM):   end;
172628    +else do;
MPRINT(EM_DIAGRAM):   else do;
172629    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
172630    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
172631    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
172632    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
172633    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
172634    +   end;
MPRINT(EM_DIAGRAM):   end;
172635    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
172636    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
172637    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
172638    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
172639    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
172640    +   end;
MPRINT(EM_DIAGRAM):   end;
172641    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
172642    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
172643    +   end;
MPRINT(EM_DIAGRAM):   end;
172644    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
172645    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
172646    +   end;
MPRINT(EM_DIAGRAM):   end;
172647    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
172648    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
172649    +   end;
MPRINT(EM_DIAGRAM):   end;
172650    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172651    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
172652    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
172653    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
172654    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
172655    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
172656    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172657    +   end;
MPRINT(EM_DIAGRAM):   end;
172658    +end;
MPRINT(EM_DIAGRAM):   end;
172659    +
172660    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
172661    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
172662    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
172663    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
172664    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
172665    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
172666    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
172667    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
172668    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
172669    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
172670    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
172671    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
172672    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
172673    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
172674    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172675    +end;
MPRINT(EM_DIAGRAM):   end;
172676    +else do;
MPRINT(EM_DIAGRAM):   else do;
172677    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
172678    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
172679    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
172680    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
172681    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
172682    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
172683    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
172684    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
172685    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
172686    +         end;
MPRINT(EM_DIAGRAM):   end;
172687    +         else do;
MPRINT(EM_DIAGRAM):   else do;
172688    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
172689    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
172690    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
172691    +            end;
MPRINT(EM_DIAGRAM):   end;
172692    +         end;
MPRINT(EM_DIAGRAM):   end;
172693    +      end;
MPRINT(EM_DIAGRAM):   end;
172694    +      else do;
MPRINT(EM_DIAGRAM):   else do;
172695    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
172696    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
172697    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
172698    +         end;
MPRINT(EM_DIAGRAM):   end;
172699    +      end;
MPRINT(EM_DIAGRAM):   end;
172700    +   end;
MPRINT(EM_DIAGRAM):   end;
172701    +   else do;
MPRINT(EM_DIAGRAM):   else do;
172702    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
172703    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
172704    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
172705    +      end;
MPRINT(EM_DIAGRAM):   end;
172706    +      else do;
MPRINT(EM_DIAGRAM):   else do;
172707    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
172708    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
172709    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
172710    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
172711    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
172712    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
172713    +         end;
MPRINT(EM_DIAGRAM):   end;
172714    +      end;
MPRINT(EM_DIAGRAM):   end;
172715    +   end;
MPRINT(EM_DIAGRAM):   end;
172716    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
172717    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
172718    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
172719    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
172720    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
172721    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
172722    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172723    +   end;
MPRINT(EM_DIAGRAM):   end;
172724    +end;
MPRINT(EM_DIAGRAM):   end;
172725    +
172726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172727    +*** Checking missing input Interval
172728    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
172729    +
172730    +IF NMISS(
172731    +   Income ,
172732    +   Kidhome ,
172733    +   MntFishProducts ,
172734    +   MntFruits ,
172735    +   MntGoldProds ,
172736    +   MntMeatProducts ,
172737    +   MntSweetProducts ,
172738    +   MntWines ,
172739    +   NumCatalogPurchases ,
172740    +   NumDealsPurchases ,
172741    +   NumStorePurchases ,
172742    +   NumWebPurchases ,
172743    +   NumWebVisitsMonth ,
172744    +   Recency ,
172745    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
172746    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
172747    +
172748    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
172749    +END;
MPRINT(EM_DIAGRAM):   END;
172750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172751    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
172752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172753    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
172754    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
172755    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
172756    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
172757    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
172758    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
172759    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
172760    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
172761    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
172762    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
172763    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
172764    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
172765    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
172766    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
172767    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
172768    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
172769    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
172770    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
172771    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
172772    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
172773    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
172774    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
172775    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
172776    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
172777    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
172778    +END;
MPRINT(EM_DIAGRAM):   END;
172779    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
172780    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
172781    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
172782    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
172783    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
172784    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
172785    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
172786    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
172787    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
172788    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
172789    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
172790    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
172791    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
172792    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
172793    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
172794    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
172795    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
172796    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
172797    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
172798    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
172799    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
172800    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
172801    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
172802    +   ELSE S_NumCatalogPurchases
172803    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
172804    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
172805    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
172806    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
172807    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
172808    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
172809    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
172810    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
172811    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
172812    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
172813    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
172814    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
172815    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
172816    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
172817    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
172818    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
172819    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
172820    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
172821    +END;
MPRINT(EM_DIAGRAM):   END;
172822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172823    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
172824    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172825    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172826    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
172827    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172828    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172829    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
172830    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172831    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
172832    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
172833    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
172834    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
172835    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
172836    +          +    -2.37073629008864 * S_MntSweetProducts
172837    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
172838    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
172839    +          +    -1.29021742502316 * S_NumStorePurchases
172840    +          +    -0.00949168969466 * S_NumWebPurchases
172841    +          +    -0.32248137192321 * S_NumWebVisitsMonth
172842    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
172843    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome +
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 *
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 *
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency +
-0.22439654268554 * S_Teenhome ;
172844    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
172845    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
172846    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
172847    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
172848    +          +     0.41126087093412 * S_MntSweetProducts
172849    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
172850    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
172851    +          +      0.2319226227964 * S_NumStorePurchases
172852    +          +     0.31190969795517 * S_NumWebPurchases
172853    +          +      -1.987305550542 * S_NumWebVisitsMonth
172854    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
172855    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome +
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 *
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases +
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases +
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth +
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
172856    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
172857    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
172858    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
172859    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
172860    +          +    -0.73991431726966 * S_MntSweetProducts
172861    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
172862    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
172863    +          +    -2.50826402419251 * S_NumStorePurchases
172864    +          +    -0.30764477738015 * S_NumWebPurchases
172865    +          +     1.21240794582671 * S_NumWebVisitsMonth
172866    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
172867    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome +
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 *
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 *
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases +
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth +
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
172868    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
172869    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
172870    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
172871    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
172872    +          +     1.07674028011002 * S_MntSweetProducts
172873    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
172874    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
172875    +          +    -0.47776935727231 * S_NumStorePurchases
172876    +          +     -0.5890810666834 * S_NumWebPurchases
172877    +          +      1.3845716796855 * S_NumWebVisitsMonth
172878    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
172879    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome +
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 *
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 *
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency +
-0.32813220931783 * S_Teenhome ;
172880    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
172881    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
172882    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
172883    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
172884    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 *
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 +
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
172885    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
172886    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
172887    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
172888    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
172889    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 *
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 +
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
172890    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
172891    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
172892    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
172893    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
172894    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 *
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 +
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
172895    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
172896    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
172897    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
172898    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
172899    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 *
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 +
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
172900    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
172901    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
172902    +        EducationGraduation  +     0.68592368666749 * EducationMaster
172903    +          +     0.38999748028122 * Marital_StatusDivorced
172904    +          +     0.44180844463279 * Marital_StatusMarried
172905    +          +     0.63824884669155 * Marital_StatusSingle
172906    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle +
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 *
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 *
Marital_StatusTogether ;
172907    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
172908    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
172909    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
172910    +          +    -0.95537871859519 * Marital_StatusDivorced
172911    +          +     2.55061153921286 * Marital_StatusMarried
172912    +          +    -1.78007154396711 * Marital_StatusSingle
172913    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle +
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 *
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 *
Marital_StatusTogether ;
172914    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
172915    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
172916    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
172917    +          +     1.29930912124343 * Marital_StatusDivorced
172918    +          +    -1.63037830924789 * Marital_StatusMarried
172919    +          +     0.19040732776086 * Marital_StatusSingle
172920    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle +
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation +
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced +
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle +
-3.9038060950259 * Marital_StatusTogether ;
172921    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
172922    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
172923    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
172924    +          +     -0.3129003025095 * Marital_StatusDivorced
172925    +          +     0.00843550425239 * Marital_StatusMarried
172926    +          +    -0.20416436114776 * Marital_StatusSingle
172927    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle +
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation +
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced +
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle +
1.08624823622502 * Marital_StatusTogether ;
172928    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
172929    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
172930    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
172931    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
172932    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
172933    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
172934    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
172935    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
172936    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
172937    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
172938    +END;
MPRINT(EM_DIAGRAM):   END;
172939    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
172940    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
172941    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
172942    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
172943    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
172944    +END;
MPRINT(EM_DIAGRAM):   END;
172945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172946    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
172947    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
172948    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
172949    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
172950    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
172951    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
172952    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
172953    +          +    -0.90866858123806 * S_MntSweetProducts
172954    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
172955    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
172956    +          +     1.45805686107789 * S_NumStorePurchases
172957    +          +     1.48794767642409 * S_NumWebPurchases
172958    +          +    -1.24357395997191 * S_NumWebVisitsMonth
172959    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
172960    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome +
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 *
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 *
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases +
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth +
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
172961    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
172962    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
172963    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
172964    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
172965    +          +     1.05010358762976 * S_MntSweetProducts
172966    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
172967    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
172968    +          +    -2.04318529474165 * S_NumStorePurchases
172969    +          +     1.64478964728594 * S_NumWebPurchases
172970    +          +    -0.74790322980646 * S_NumWebVisitsMonth
172971    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
172972    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome +
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 *
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 *
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency +
-1.17558204887145 * S_Teenhome ;
172973    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
172974    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
172975    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
172976    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
172977    +          +     0.39974532423377 * S_MntSweetProducts
172978    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
172979    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
172980    +          +     0.70805557348415 * S_NumStorePurchases
172981    +          +     2.40362900277228 * S_NumWebPurchases
172982    +          +    -0.84521247676043 * S_NumWebVisitsMonth
172983    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
172984    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome +
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 *
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases +
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases +
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth +
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
172985    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
172986    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
172987    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
172988    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
172989    +          +     1.67907268159197 * S_MntSweetProducts
172990    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
172991    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
172992    +          +      0.0818178054474 * S_NumStorePurchases
172993    +          +     0.21533198164279 * S_NumWebPurchases
172994    +          +     2.13590425604302 * S_NumWebVisitsMonth
172995    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
172996    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome +
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 *
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 *
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency +
-0.82288425478762 * S_Teenhome ;
172997    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
172998    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
172999    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
173000    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
173001    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 *
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 +
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
173002    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
173003    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
173004    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
173005    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
173006    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 *
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 +
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
173007    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
173008    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
173009    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
173010    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
173011    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 *
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 +
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
173012    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
173013    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
173014    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
173015    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
173016    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 *
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 +
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
173017    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
173018    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
173019    +        EducationGraduation  +     0.78238700450794 * EducationMaster
173020    +          +     0.09735596304222 * Marital_StatusDivorced
173021    +          +    -0.41892050812825 * Marital_StatusMarried
173022    +          +    -1.42753782654911 * Marital_StatusSingle
173023    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle +
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 *
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 *
Marital_StatusTogether ;
173024    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
173025    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
173026    +        EducationGraduation  +     1.03407121736627 * EducationMaster
173027    +          +    -0.32415267410507 * Marital_StatusDivorced
173028    +          +     0.49045578856782 * Marital_StatusMarried
173029    +          +    -1.95612005933176 * Marital_StatusSingle
173030    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle +
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 *
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 *
Marital_StatusTogether ;
173031    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
173032    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
173033    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
173034    +          +    -1.25715350788627 * Marital_StatusDivorced
173035    +          +     0.74269511935299 * Marital_StatusMarried
173036    +          +    -0.27394822792771 * Marital_StatusSingle
173037    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle +
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 *
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 *
Marital_StatusTogether ;
173038    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
173039    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
173040    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
173041    +          +    -1.42754006114782 * Marital_StatusDivorced
173042    +          +    -0.13979120103654 * Marital_StatusMarried
173043    +          +    -1.66244370644258 * Marital_StatusSingle
173044    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle +
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 *
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 *
Marital_StatusTogether ;
173045    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
173046    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
173047    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
173048    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
173049    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
173050    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
173051    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
173052    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
173053    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
173054    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
173055    +END;
MPRINT(EM_DIAGRAM):   END;
173056    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
173057    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
173058    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
173059    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
173060    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
173061    +END;
MPRINT(EM_DIAGRAM):   END;
173062    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173063    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
173064    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173065    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
173066    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
173067    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 +
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
173068    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
173069    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 +
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
173070    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
173071    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 +
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
173072    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
173073    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 +
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
173074    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
173075    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
173076    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
173077    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
173078    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
173079    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
173080    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
173081    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
173082    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
173083    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
173084    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
173085    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
173086    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
173087    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
173088    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
173089    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
173090    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
173091    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
173092    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
173093    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
173094    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
173095    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
173096    +END;
MPRINT(EM_DIAGRAM):   END;
173097    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
173098    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
173099    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
173100    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
173101    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
173102    +END;
MPRINT(EM_DIAGRAM):   END;
173103    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173104    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
173105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173106    +
173107    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
173108    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
173109    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
173110    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
173111    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
173112    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173113    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
173114    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
173115    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
173116    +end;
MPRINT(EM_DIAGRAM):   end;
173117    +else do;
MPRINT(EM_DIAGRAM):   else do;
173118    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
173119    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
173120    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
173121    +   end;
MPRINT(EM_DIAGRAM):   end;
173122    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
173123    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
173124    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
173125    +   end;
MPRINT(EM_DIAGRAM):   end;
173126    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173127    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
173128    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
173129    +   end;
MPRINT(EM_DIAGRAM):   end;
173130    +end;
MPRINT(EM_DIAGRAM):   end;
173131    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
173132    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
173133    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 +
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
173134    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
173135    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
173136    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
173137    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
173138    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
173139    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
173140    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
173141    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
173142    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
173143    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
173144    +END;
MPRINT(EM_DIAGRAM):   END;
173145    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
173146    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
173147    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
173148    +END;
MPRINT(EM_DIAGRAM):   END;
173149    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
173150    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
173151    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
173152    +END;
MPRINT(EM_DIAGRAM):   END;
173153    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
173154    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
173155    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
173156    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
173157    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
173158    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
173159    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
173160    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173161    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
173162    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173163    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
173164    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
173165    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
173166    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
173167    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
173168    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
173169    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
173170    +END;
MPRINT(EM_DIAGRAM):   END;
173171    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
173172    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
173173    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
173174    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
173175    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
173176    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173177    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
173178    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173179    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
173180    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
173181    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
173182    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
173183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173184    +* Renaming Into variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural47;
173185    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173186    +length AutoNeural47_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural47_I_DepVar $32;
173187    +drop AutoNeural47_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_I_DepVar;
173188    +AutoNeural47_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural47_I_DepVar = I_DepVar;
173189    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173190    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
173191    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173192    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
173193    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
173194    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
173195    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173196    +* Ensmbl59: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 6 of 7;
173197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173198    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173199    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
173200    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
173201    +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
173202    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173203    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
173204    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
173205    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
173206    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
173207    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
173208    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
173209    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
173210    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
173211    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
173212    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
173213    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
173214    +LENGTH _WARN_ $4
173215    +      F_DepVar  $ 12
173216    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
173217    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
173218    +
173219    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
173220    +
173221    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
173222    +
173223    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
173224    +
173225    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
173226    +
173227    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
173228    +
173229    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
173230    +
173231    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
173232    +
173233    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
173234    +
173235    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
173236    +
173237    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
173238    +
173239    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
173240    +
173241    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
173242    +
173243    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
173244    +
173245    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
173246    +
173247    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
173248    +
173249    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
173250    +
173251    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
173252    +
173253    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
173254    +
173255    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
173256    +
173257    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
173258    +
173259    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
173260    +
173261    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
173262    +
173263    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
173264    +
173265    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
173266    +
173267    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
173268    +
173269    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
173270    +
173271    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
173272    +
173273    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
173274    +
173275    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
173276    +
173277    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
173278    +
173279    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
173280    +
173281    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
173282    +
173283    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
173284    +
173285    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
173286    +
173287    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
173288    +
173289    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
173290    +
173291    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
173292    +
173293    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
173294    +
173295    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
173296    +
173297    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
173298    +
173299    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
173300    +
173301    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
173302    +
173303    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
173304    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
173305    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
173306    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
173307    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
173308    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173309    +end;
MPRINT(EM_DIAGRAM):   end;
173310    +else do;
MPRINT(EM_DIAGRAM):   else do;
173311    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
173312    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
173313    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173314    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
173315    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
173316    +   end;
MPRINT(EM_DIAGRAM):   end;
173317    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
173318    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
173319    +   end;
MPRINT(EM_DIAGRAM):   end;
173320    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173321    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
173322    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
173323    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173324    +   end;
MPRINT(EM_DIAGRAM):   end;
173325    +end;
MPRINT(EM_DIAGRAM):   end;
173326    +
173327    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
173328    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
173329    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
173330    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
173331    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
173332    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173333    +end;
MPRINT(EM_DIAGRAM):   end;
173334    +else do;
MPRINT(EM_DIAGRAM):   else do;
173335    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
173336    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
173337    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173338    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
173339    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
173340    +   end;
MPRINT(EM_DIAGRAM):   end;
173341    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
173342    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
173343    +   end;
MPRINT(EM_DIAGRAM):   end;
173344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173345    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
173346    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
173347    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173348    +   end;
MPRINT(EM_DIAGRAM):   end;
173349    +end;
MPRINT(EM_DIAGRAM):   end;
173350    +
173351    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
173352    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
173353    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
173354    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
173355    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
173356    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173357    +end;
MPRINT(EM_DIAGRAM):   end;
173358    +else do;
MPRINT(EM_DIAGRAM):   else do;
173359    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
173360    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
173361    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173362    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
173363    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
173364    +   end;
MPRINT(EM_DIAGRAM):   end;
173365    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
173366    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
173367    +   end;
MPRINT(EM_DIAGRAM):   end;
173368    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173369    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
173370    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
173371    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173372    +   end;
MPRINT(EM_DIAGRAM):   end;
173373    +end;
MPRINT(EM_DIAGRAM):   end;
173374    +
173375    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
173376    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
173377    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
173378    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
173379    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
173380    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173381    +end;
MPRINT(EM_DIAGRAM):   end;
173382    +else do;
MPRINT(EM_DIAGRAM):   else do;
173383    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
173384    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
173385    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173386    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
173387    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
173388    +   end;
MPRINT(EM_DIAGRAM):   end;
173389    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
173390    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
173391    +   end;
MPRINT(EM_DIAGRAM):   end;
173392    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173393    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
173394    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
173395    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173396    +   end;
MPRINT(EM_DIAGRAM):   end;
173397    +end;
MPRINT(EM_DIAGRAM):   end;
173398    +
173399    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
173400    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
173401    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
173402    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
173403    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
173404    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173405    +end;
MPRINT(EM_DIAGRAM):   end;
173406    +else do;
MPRINT(EM_DIAGRAM):   else do;
173407    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
173408    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
173409    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173410    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
173411    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
173412    +   end;
MPRINT(EM_DIAGRAM):   end;
173413    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
173414    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
173415    +   end;
MPRINT(EM_DIAGRAM):   end;
173416    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173417    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
173418    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
173419    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173420    +   end;
MPRINT(EM_DIAGRAM):   end;
173421    +end;
MPRINT(EM_DIAGRAM):   end;
173422    +
173423    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
173424    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
173425    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
173426    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
173427    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
173428    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173429    +end;
MPRINT(EM_DIAGRAM):   end;
173430    +else do;
MPRINT(EM_DIAGRAM):   else do;
173431    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
173432    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
173433    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173434    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
173435    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
173436    +   end;
MPRINT(EM_DIAGRAM):   end;
173437    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
173438    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
173439    +   end;
MPRINT(EM_DIAGRAM):   end;
173440    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173441    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
173442    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
173443    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173444    +   end;
MPRINT(EM_DIAGRAM):   end;
173445    +end;
MPRINT(EM_DIAGRAM):   end;
173446    +
173447    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
173448    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
173449    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
173450    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
173451    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
173452    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
173453    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
173454    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
173455    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
173456    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
173457    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
173458    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
173459    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
173460    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173461    +end;
MPRINT(EM_DIAGRAM):   end;
173462    +else do;
MPRINT(EM_DIAGRAM):   else do;
173463    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
173464    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
173465    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173466    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
173467    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
173468    +   end;
MPRINT(EM_DIAGRAM):   end;
173469    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
173470    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
173471    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
173472    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
173473    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
173474    +   end;
MPRINT(EM_DIAGRAM):   end;
173475    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
173476    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
173477    +   end;
MPRINT(EM_DIAGRAM):   end;
173478    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
173479    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
173480    +   end;
MPRINT(EM_DIAGRAM):   end;
173481    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
173482    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
173483    +   end;
MPRINT(EM_DIAGRAM):   end;
173484    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173485    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
173486    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
173487    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
173488    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
173489    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
173490    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173491    +   end;
MPRINT(EM_DIAGRAM):   end;
173492    +end;
MPRINT(EM_DIAGRAM):   end;
173493    +
173494    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
173495    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
173496    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
173497    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
173498    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
173499    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
173500    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
173501    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
173502    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
173503    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
173504    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
173505    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
173506    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
173507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
173508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173509    +end;
MPRINT(EM_DIAGRAM):   end;
173510    +else do;
MPRINT(EM_DIAGRAM):   else do;
173511    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
173512    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
173513    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173514    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
173515    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
173516    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
173517    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
173518    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
173519    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
173520    +         end;
MPRINT(EM_DIAGRAM):   end;
173521    +         else do;
MPRINT(EM_DIAGRAM):   else do;
173522    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
173523    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
173524    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
173525    +            end;
MPRINT(EM_DIAGRAM):   end;
173526    +         end;
MPRINT(EM_DIAGRAM):   end;
173527    +      end;
MPRINT(EM_DIAGRAM):   end;
173528    +      else do;
MPRINT(EM_DIAGRAM):   else do;
173529    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
173530    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
173531    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
173532    +         end;
MPRINT(EM_DIAGRAM):   end;
173533    +      end;
MPRINT(EM_DIAGRAM):   end;
173534    +   end;
MPRINT(EM_DIAGRAM):   end;
173535    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173536    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
173537    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
173538    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
173539    +      end;
MPRINT(EM_DIAGRAM):   end;
173540    +      else do;
MPRINT(EM_DIAGRAM):   else do;
173541    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
173542    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
173543    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
173544    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
173545    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
173546    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
173547    +         end;
MPRINT(EM_DIAGRAM):   end;
173548    +      end;
MPRINT(EM_DIAGRAM):   end;
173549    +   end;
MPRINT(EM_DIAGRAM):   end;
173550    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
173551    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
173552    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
173553    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
173554    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
173555    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
173556    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173557    +   end;
MPRINT(EM_DIAGRAM):   end;
173558    +end;
MPRINT(EM_DIAGRAM):   end;
173559    +
173560    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173561    +*** Checking missing input Interval
173562    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
173563    +
173564    +IF NMISS(
173565    +   Income ,
173566    +   Kidhome ,
173567    +   MntFishProducts ,
173568    +   MntFruits ,
173569    +   MntGoldProds ,
173570    +   MntMeatProducts ,
173571    +   MntSweetProducts ,
173572    +   MntWines ,
173573    +   NumCatalogPurchases ,
173574    +   NumDealsPurchases ,
173575    +   NumStorePurchases ,
173576    +   NumWebPurchases ,
173577    +   NumWebVisitsMonth ,
173578    +   Recency ,
173579    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
173580    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
173581    +
173582    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
173583    +END;
MPRINT(EM_DIAGRAM):   END;
173584    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173585    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
173586    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173587    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
173588    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
173589    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
173590    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
173591    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
173592    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
173593    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
173594    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
173595    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
173596    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
173597    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
173598    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
173599    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
173600    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
173601    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
173602    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
173603    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
173604    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
173605    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
173606    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
173607    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
173608    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
173609    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
173610    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
173611    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
173612    +END;
MPRINT(EM_DIAGRAM):   END;
173613    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
173614    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
173615    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
173616    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
173617    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
173618    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
173619    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
173620    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
173621    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
173622    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
173623    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
173624    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
173625    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
173626    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
173627    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
173628    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
173629    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
173630    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
173631    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
173632    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
173633    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
173634    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
173635    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
173636    +   ELSE S_NumCatalogPurchases
173637    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
173638    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
173639    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
173640    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
173641    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
173642    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
173643    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
173644    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
173645    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
173646    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
173647    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
173648    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
173649    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
173650    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
173651    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
173652    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
173653    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
173654    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
173655    +END;
MPRINT(EM_DIAGRAM):   END;
173656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173657    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
173658    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173660    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
173661    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173663    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
173664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173665    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
173666    +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
173667    +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
173668    +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
173669    +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
173670    +          +    -0.44570165516063 * S_MntSweetProducts
173671    +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
173672    +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
173673    +          +    -1.76291210288234 * S_NumStorePurchases
173674    +          +    -2.02392782824649 * S_NumWebPurchases
173675    +          +     1.28490910676992 * S_NumWebVisitsMonth
173676    +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
173677    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome +
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 *
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts +
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 *
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 *
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency +
-0.59235237740193 * S_Teenhome ;
173678    +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
173679    +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
173680    +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
173681    +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
173682    +          +     0.29239311560831 * S_MntSweetProducts
173683    +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
173684    +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
173685    +          +     0.94246962588327 * S_NumStorePurchases
173686    +          +      0.9680353780544 * S_NumWebPurchases
173687    +          +    -2.21882487627334 * S_NumWebVisitsMonth
173688    +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
173689    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome +
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 *
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 *
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency +
0.6539185986418 * S_Teenhome ;
173690    +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
173691    +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
173692    +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
173693    +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
173694    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 +
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
173695    +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
173696    +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
173697    +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
173698    +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
173699    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 *
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 +
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
173700    +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
173701    +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
173702    +        EducationGraduation  +     0.44122744485667 * EducationMaster
173703    +          +    -0.37907342816265 * Marital_StatusDivorced
173704    +          +     0.12610640291685 * Marital_StatusMarried
173705    +          +     0.51984913420219 * Marital_StatusSingle
173706    +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle +
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 *
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 *
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 *
Marital_StatusTogether ;
173707    +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
173708    +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
173709    +        EducationGraduation  +    -0.26642525612671 * EducationMaster
173710    +          +    -1.03351623479699 * Marital_StatusDivorced
173711    +          +     1.44541386522162 * Marital_StatusMarried
173712    +          +    -1.03636573521294 * Marital_StatusSingle
173713    +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle +
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation +
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced +
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle +
1.72091885709893 * Marital_StatusTogether ;
173714    +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
173715    +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
173716    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
173717    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
173718    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
173719    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
173720    +END;
MPRINT(EM_DIAGRAM):   END;
173721    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
173722    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
173723    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
173724    +END;
MPRINT(EM_DIAGRAM):   END;
173725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173726    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
173727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173728    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
173729    +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
173730    +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
173731    +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
173732    +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
173733    +          +    -0.56491281055157 * S_MntSweetProducts
173734    +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
173735    +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
173736    +          +    -0.90340706582786 * S_NumStorePurchases
173737    +          +    -1.91501626179453 * S_NumWebPurchases
173738    +          +     0.10121028558369 * S_NumWebVisitsMonth
173739    +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
173740    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome +
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 *
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases +
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases +
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth +
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
173741    +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
173742    +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
173743    +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
173744    +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
173745    +          +    -0.23001625322332 * S_MntSweetProducts
173746    +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
173747    +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
173748    +          +    -2.13716920911877 * S_NumStorePurchases
173749    +          +    -0.33508808117738 * S_NumWebPurchases
173750    +          +     -2.0809737926136 * S_NumWebVisitsMonth
173751    +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
173752    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome +
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 *
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 *
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases +
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth +
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
173753    +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
173754    +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
173755    +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
173756    +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
173757    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 *
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 +
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
173758    +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
173759    +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
173760    +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
173761    +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
173762    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 +
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
173763    +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
173764    +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
173765    +        EducationGraduation  +     0.48964474451872 * EducationMaster
173766    +          +     1.22462877499103 * Marital_StatusDivorced
173767    +          +     0.55976057621985 * Marital_StatusMarried
173768    +          +     -0.3198252517086 * Marital_StatusSingle
173769    +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle +
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 *
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 *
Marital_StatusTogether ;
173770    +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
173771    +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
173772    +        EducationGraduation  +    -1.59533016160829 * EducationMaster
173773    +          +     0.32730811728353 * Marital_StatusDivorced
173774    +          +     1.61519773132998 * Marital_StatusMarried
173775    +          +    -1.42728303824254 * Marital_StatusSingle
173776    +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle +
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation +
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced +
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle +
1.39334432128351 * Marital_StatusTogether ;
173777    +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
173778    +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
173779    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
173780    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
173781    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
173782    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
173783    +END;
MPRINT(EM_DIAGRAM):   END;
173784    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
173785    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
173786    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
173787    +END;
MPRINT(EM_DIAGRAM):   END;
173788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173789    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
173790    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173791    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
173792    +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
173793    +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
173794    +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
173795    +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2
;
173796    +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
173797    +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
173798    +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
173799    +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
173800    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
173801    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
173802    +END;
MPRINT(EM_DIAGRAM):   END;
173803    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
173804    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
173805    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
173806    +END;
MPRINT(EM_DIAGRAM):   END;
173807    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173808    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
173809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173810    +
173811    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
173812    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
173813    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
173814    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
173815    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
173816    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
173817    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
173818    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
173819    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
173820    +end;
MPRINT(EM_DIAGRAM):   end;
173821    +else do;
MPRINT(EM_DIAGRAM):   else do;
173822    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
173823    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
173824    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
173825    +   end;
MPRINT(EM_DIAGRAM):   end;
173826    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
173827    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
173828    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
173829    +   end;
MPRINT(EM_DIAGRAM):   end;
173830    +   else do;
MPRINT(EM_DIAGRAM):   else do;
173831    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
173832    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
173833    +   end;
MPRINT(EM_DIAGRAM):   end;
173834    +end;
MPRINT(EM_DIAGRAM):   end;
173835    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
173836    +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
173837    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
173838    +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
173839    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
173840    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
173841    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
173842    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
173843    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
173844    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
173845    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
173846    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
173847    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
173848    +END;
MPRINT(EM_DIAGRAM):   END;
173849    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
173850    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
173851    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
173852    +END;
MPRINT(EM_DIAGRAM):   END;
173853    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
173854    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
173855    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
173856    +END;
MPRINT(EM_DIAGRAM):   END;
173857    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
173858    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
173859    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
173860    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
173861    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
173862    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
173863    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
173864    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173865    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
173866    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
173867    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
173868    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
173869    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
173870    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
173871    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
173872    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
173873    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
173874    +END;
MPRINT(EM_DIAGRAM):   END;
173875    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
173876    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
173877    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
173878    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
173879    +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
173880    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173881    +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
173882    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173883    +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
173884    +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
173885    +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
173886    +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
173887    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173888    +* Renaming Into variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural45;
173889    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173890    +length AutoNeural45_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural45_I_DepVar $32;
173891    +drop AutoNeural45_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_I_DepVar;
173892    +AutoNeural45_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural45_I_DepVar = I_DepVar;
173893    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173894    +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
173895    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173896    +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
173897    +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
173898    +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
173899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173900    +* Ensmbl59: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 7 of 7;
173901    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173902    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173903    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
173904    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
173905    +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
173906    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
173907    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
173908    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
173909    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
173910    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
173911    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
173912    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
173913    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
173914    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
173915    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
173916    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
173917    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
173918    +LENGTH _WARN_ $4
173919    +      F_DepVar  $ 12
173920    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
173921    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
173922    +
173923    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
173924    +
173925    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
173926    +
173927    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
173928    +
173929    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
173930    +
173931    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
173932    +
173933    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
173934    +
173935    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
173936    +
173937    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
173938    +
173939    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
173940    +
173941    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
173942    +
173943    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
173944    +
173945    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
173946    +
173947    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
173948    +
173949    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
173950    +
173951    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
173952    +
173953    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
173954    +
173955    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
173956    +
173957    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
173958    +
173959    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
173960    +
173961    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
173962    +
173963    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
173964    +
173965    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
173966    +
173967    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
173968    +
173969    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
173970    +
173971    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
173972    +
173973    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
173974    +
173975    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
173976    +
173977    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
173978    +
173979    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
173980    +
173981    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
173982    +
173983    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
173984    +
173985    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
173986    +
173987    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
173988    +
173989    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
173990    +
173991    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
173992    +
173993    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
173994    +
173995    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
173996    +
173997    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
173998    +
173999    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
174000    +
174001    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
The SAS System
 
174002    +
174003    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
174004    +
174005    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
174006    +
174007    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
174008    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
174009    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
174010    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
174011    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174012    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174013    +end;
MPRINT(EM_DIAGRAM):   end;
174014    +else do;
MPRINT(EM_DIAGRAM):   else do;
174015    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174016    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
174017    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174018    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174019    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
174020    +   end;
MPRINT(EM_DIAGRAM):   end;
174021    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174022    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
174023    +   end;
MPRINT(EM_DIAGRAM):   end;
174024    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174025    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
174026    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174027    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174028    +   end;
MPRINT(EM_DIAGRAM):   end;
174029    +end;
MPRINT(EM_DIAGRAM):   end;
174030    +
174031    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
174032    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
174033    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
174034    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
174035    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174036    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174037    +end;
MPRINT(EM_DIAGRAM):   end;
174038    +else do;
MPRINT(EM_DIAGRAM):   else do;
174039    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174040    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
174041    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174042    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174043    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
174044    +   end;
MPRINT(EM_DIAGRAM):   end;
174045    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174046    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
174047    +   end;
MPRINT(EM_DIAGRAM):   end;
174048    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174049    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
174050    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174051    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174052    +   end;
MPRINT(EM_DIAGRAM):   end;
174053    +end;
MPRINT(EM_DIAGRAM):   end;
174054    +
174055    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
174056    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
174057    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
174058    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
174059    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174060    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174061    +end;
MPRINT(EM_DIAGRAM):   end;
174062    +else do;
MPRINT(EM_DIAGRAM):   else do;
174063    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174064    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
174065    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174066    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174067    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
174068    +   end;
MPRINT(EM_DIAGRAM):   end;
174069    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174070    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
174071    +   end;
MPRINT(EM_DIAGRAM):   end;
174072    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174073    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
174074    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174075    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174076    +   end;
MPRINT(EM_DIAGRAM):   end;
174077    +end;
MPRINT(EM_DIAGRAM):   end;
174078    +
174079    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
174080    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
174081    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
174082    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
174083    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174084    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174085    +end;
MPRINT(EM_DIAGRAM):   end;
174086    +else do;
MPRINT(EM_DIAGRAM):   else do;
174087    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174088    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
174089    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174090    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174091    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
174092    +   end;
MPRINT(EM_DIAGRAM):   end;
174093    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174094    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
174095    +   end;
MPRINT(EM_DIAGRAM):   end;
174096    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174097    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
174098    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174099    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174100    +   end;
MPRINT(EM_DIAGRAM):   end;
174101    +end;
MPRINT(EM_DIAGRAM):   end;
174102    +
174103    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
174104    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
174105    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
174106    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
174107    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174108    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174109    +end;
MPRINT(EM_DIAGRAM):   end;
174110    +else do;
MPRINT(EM_DIAGRAM):   else do;
174111    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174112    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
174113    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174114    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174115    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
174116    +   end;
MPRINT(EM_DIAGRAM):   end;
174117    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174118    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
174119    +   end;
MPRINT(EM_DIAGRAM):   end;
174120    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174121    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
174122    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174123    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174124    +   end;
MPRINT(EM_DIAGRAM):   end;
174125    +end;
MPRINT(EM_DIAGRAM):   end;
174126    +
174127    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
174128    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
174129    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
174130    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
174131    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174132    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174133    +end;
MPRINT(EM_DIAGRAM):   end;
174134    +else do;
MPRINT(EM_DIAGRAM):   else do;
174135    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174136    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
174137    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174138    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174139    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
174140    +   end;
MPRINT(EM_DIAGRAM):   end;
174141    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174142    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
174143    +   end;
MPRINT(EM_DIAGRAM):   end;
174144    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174145    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
174146    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174147    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174148    +   end;
MPRINT(EM_DIAGRAM):   end;
174149    +end;
MPRINT(EM_DIAGRAM):   end;
174150    +
174151    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
174152    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
174153    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
174154    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
174155    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
174156    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
174157    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
174158    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
174159    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
174160    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
174161    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
174162    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
174163    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174164    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174165    +end;
MPRINT(EM_DIAGRAM):   end;
174166    +else do;
MPRINT(EM_DIAGRAM):   else do;
174167    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
174168    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
174169    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174170    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
174171    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
174172    +   end;
MPRINT(EM_DIAGRAM):   end;
174173    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
174174    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
174175    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
174176    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
174177    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
174178    +   end;
MPRINT(EM_DIAGRAM):   end;
174179    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
174180    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
174181    +   end;
MPRINT(EM_DIAGRAM):   end;
174182    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
174183    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
174184    +   end;
MPRINT(EM_DIAGRAM):   end;
174185    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
174186    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
174187    +   end;
MPRINT(EM_DIAGRAM):   end;
174188    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174189    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
174190    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
174191    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
174192    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
174193    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174194    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174195    +   end;
MPRINT(EM_DIAGRAM):   end;
174196    +end;
MPRINT(EM_DIAGRAM):   end;
174197    +
174198    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
174199    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
174200    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
174201    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
174202    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
174203    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
174204    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
174205    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
174206    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
174207    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
174208    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
174209    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
174210    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
174211    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174212    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174213    +end;
MPRINT(EM_DIAGRAM):   end;
174214    +else do;
MPRINT(EM_DIAGRAM):   else do;
174215    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
174216    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
174217    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174218    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
174219    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
174220    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
174221    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
174222    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
174223    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174224    +         end;
MPRINT(EM_DIAGRAM):   end;
174225    +         else do;
MPRINT(EM_DIAGRAM):   else do;
174226    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
174227    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
174228    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174229    +            end;
MPRINT(EM_DIAGRAM):   end;
174230    +         end;
MPRINT(EM_DIAGRAM):   end;
174231    +      end;
MPRINT(EM_DIAGRAM):   end;
174232    +      else do;
MPRINT(EM_DIAGRAM):   else do;
174233    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
174234    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
174235    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174236    +         end;
MPRINT(EM_DIAGRAM):   end;
174237    +      end;
MPRINT(EM_DIAGRAM):   end;
174238    +   end;
MPRINT(EM_DIAGRAM):   end;
174239    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174240    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
174241    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
174242    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174243    +      end;
MPRINT(EM_DIAGRAM):   end;
174244    +      else do;
MPRINT(EM_DIAGRAM):   else do;
174245    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
174246    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
174247    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
174248    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
174249    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
174250    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
174251    +         end;
MPRINT(EM_DIAGRAM):   end;
174252    +      end;
MPRINT(EM_DIAGRAM):   end;
174253    +   end;
MPRINT(EM_DIAGRAM):   end;
174254    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
174255    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
174256    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
174257    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
174258    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
174259    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174260    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174261    +   end;
MPRINT(EM_DIAGRAM):   end;
174262    +end;
MPRINT(EM_DIAGRAM):   end;
174263    +
174264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174265    +*** Checking missing input Interval
174266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
174267    +
174268    +IF NMISS(
174269    +   Income ,
174270    +   Kidhome ,
174271    +   MntFishProducts ,
174272    +   MntFruits ,
174273    +   MntGoldProds ,
174274    +   MntMeatProducts ,
174275    +   MntSweetProducts ,
174276    +   MntWines ,
174277    +   NumCatalogPurchases ,
174278    +   NumDealsPurchases ,
174279    +   NumStorePurchases ,
174280    +   NumWebPurchases ,
174281    +   NumWebVisitsMonth ,
174282    +   Recency ,
174283    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
174284    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
174285    +
174286    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174287    +END;
MPRINT(EM_DIAGRAM):   END;
174288    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174289    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
174290    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174291    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174292    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
174293    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
174294    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
174295    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
174296    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
174297    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
174298    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
174299    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
174300    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
174301    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
174302    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
174303    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
174304    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
174305    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
174306    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
174307    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
174308    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
174309    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
174310    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
174311    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
174312    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
174313    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
174314    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
174315    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
174316    +END;
MPRINT(EM_DIAGRAM):   END;
174317    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174318    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
174319    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
174320    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
174321    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
174322    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
174323    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
174324    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
174325    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
174326    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
174327    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
174328    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
174329    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
174330    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
174331    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
174332    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
174333    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
174334    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
174335    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
174336    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
174337    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
174338    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
174339    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
174340    +   ELSE S_NumCatalogPurchases
174341    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
174342    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
174343    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
174344    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
174345    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
174346    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
174347    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
174348    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
174349    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
174350    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
174351    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
174352    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
174353    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
174354    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
174355    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
174356    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
174357    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
174358    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
174359    +END;
MPRINT(EM_DIAGRAM):   END;
174360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174361    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
174362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174363    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174364    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
174365    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174367    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
174368    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174369    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174370    +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
174371    +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
174372    +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
174373    +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
174374    +          +     2.41993296129914 * S_MntSweetProducts
174375    +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
174376    +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
174377    +          +     7.59231492380468 * S_NumStorePurchases
174378    +          +    -0.47095655313121 * S_NumWebPurchases
174379    +          +     2.65669932372712 * S_NumWebVisitsMonth
174380    +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
174381    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome +
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 *
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases +
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases +
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth +
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
174382    +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
174383    +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
174384    +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
174385    +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
174386    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 *
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 +
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
174387    +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
174388    +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
174389    +        EducationGraduation  +    -3.89600865490994 * EducationMaster
174390    +          +     0.44728218776544 * Marital_StatusDivorced
174391    +          +    -1.62458831276183 * Marital_StatusMarried
174392    +          +    -0.42858616367237 * Marital_StatusSingle
174393    +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle +
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation +
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced +
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle +
-0.29553796445711 * Marital_StatusTogether ;
174394    +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
174395    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
174396    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
174397    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
174398    +END;
MPRINT(EM_DIAGRAM):   END;
174399    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174400    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
174401    +END;
MPRINT(EM_DIAGRAM):   END;
174402    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174403    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
174404    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174405    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174406    +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
174407    +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
174408    +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
174409    +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
174410    +          +    -1.37098390846164 * S_MntSweetProducts
174411    +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
174412    +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
174413    +          +     0.58246769316602 * S_NumStorePurchases
174414    +          +     2.72780243156581 * S_NumWebPurchases
174415    +          +    -1.73896446530763 * S_NumWebVisitsMonth
174416    +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
174417    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome +
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 *
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 *
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 *
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 *
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 *
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
174418    +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
174419    +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
174420    +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
174421    +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
174422    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 *
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 +
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
174423    +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
174424    +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
174425    +        EducationGraduation  +     1.01072132252596 * EducationMaster
174426    +          +     0.08221095774854 * Marital_StatusDivorced
174427    +          +    -0.13062113450086 * Marital_StatusMarried
174428    +          +      0.1912119500185 * Marital_StatusSingle
174429    +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle +
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 *
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 *
Marital_StatusTogether ;
174430    +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
174431    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
174432    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
174433    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
174434    +END;
MPRINT(EM_DIAGRAM):   END;
174435    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174436    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
174437    +END;
MPRINT(EM_DIAGRAM):   END;
174438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174439    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
174440    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174441    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174442    +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
174443    +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
174444    +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
174445    +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
174446    +          +     -0.4771357321143 * S_MntSweetProducts
174447    +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
174448    +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
174449    +          +     0.38755002642582 * S_NumStorePurchases
174450    +          +     0.65178643881164 * S_NumWebPurchases
174451    +          +    -0.83170832622452 * S_NumWebVisitsMonth
174452    +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
174453    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome +
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 *
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 *
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency +
1.27228948382376 * S_Teenhome ;
174454    +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
174455    +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
174456    +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
174457    +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
174458    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 *
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 +
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
174459    +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
174460    +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
174461    +        EducationGraduation  +      0.9696976240987 * EducationMaster
174462    +          +    -0.13574340372484 * Marital_StatusDivorced
174463    +          +     1.26001446384238 * Marital_StatusMarried
174464    +          +    -0.16294618258246 * Marital_StatusSingle
174465    +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle +
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 *
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 *
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 *
Marital_StatusTogether ;
174466    +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
174467    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
174468    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
174469    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
174470    +END;
MPRINT(EM_DIAGRAM):   END;
174471    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174472    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
174473    +END;
MPRINT(EM_DIAGRAM):   END;
174474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174475    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
174476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174477    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174478    +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
174479    +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
174480    +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
174481    +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
174482    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
174483    +END;
MPRINT(EM_DIAGRAM):   END;
174484    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174485    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
174486    +END;
MPRINT(EM_DIAGRAM):   END;
174487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174488    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
174489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174490    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174491    +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
174492    +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
174493    +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
174494    +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
174495    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
174496    +END;
MPRINT(EM_DIAGRAM):   END;
174497    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174498    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
174499    +END;
MPRINT(EM_DIAGRAM):   END;
174500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174501    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
174502    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174503    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174504    +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
174505    +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
174506    +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
174507    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
174508    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
174509    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
174510    +END;
MPRINT(EM_DIAGRAM):   END;
174511    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174512    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
174513    +END;
MPRINT(EM_DIAGRAM):   END;
174514    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174515    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
174516    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174517    +
174518    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
174519    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
174520    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
174521    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
174522    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
174523    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174524    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
174525    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
174526    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
174527    +end;
MPRINT(EM_DIAGRAM):   end;
174528    +else do;
MPRINT(EM_DIAGRAM):   else do;
174529    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
174530    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
174531    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
174532    +   end;
MPRINT(EM_DIAGRAM):   end;
174533    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
174534    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
174535    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
174536    +   end;
MPRINT(EM_DIAGRAM):   end;
174537    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174538    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
174539    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
174540    +   end;
MPRINT(EM_DIAGRAM):   end;
174541    +end;
MPRINT(EM_DIAGRAM):   end;
174542    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
174543    +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
174544    +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
174545    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
174546    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
174547    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
174548    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
174549    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
174550    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
174551    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
174552    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
174553    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
174554    +END;
MPRINT(EM_DIAGRAM):   END;
174555    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
174556    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
174557    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
174558    +END;
MPRINT(EM_DIAGRAM):   END;
174559    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
174560    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
174561    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
174562    +END;
MPRINT(EM_DIAGRAM):   END;
174563    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
174564    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
174565    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
174566    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
174567    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
174568    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
174569    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
174570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174571    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
174572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
174573    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
174574    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
174575    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
174576    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
174577    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
174578    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
174579    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
174580    +END;
MPRINT(EM_DIAGRAM):   END;
174581    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
174582    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
174583    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
174584    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
174585    +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
174586    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174587    +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
174588    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174589    +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
174590    +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
174591    +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
174592    +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
174593    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174594    +* Renaming Into variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural44;
174595    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174596    +length AutoNeural44_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural44_I_DepVar $32;
174597    +drop AutoNeural44_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_I_DepVar;
174598    +AutoNeural44_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural44_I_DepVar = I_DepVar;
174599    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174600    +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
174601    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174602    +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
174603    +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
174604    +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
174605    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174606    +* Ensmbl59: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Voting to produce predicted target;
174607    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174608    +array Ensmbl59_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl59_post{2} _temporary_;
174609    +array Ensmbl59_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl59_count{2} _temporary_;
174610    +array Ensmbl59_level{2} $32 _temporary_ (
174611    +"1"
174612    +"0"
174613    +);
MPRINT(EM_DIAGRAM):   array Ensmbl59_level{2} $32 _temporary_ ( "1" "0" );
174614    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
174615    +Ensmbl59_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{i} = 0;
174616    +Ensmbl59_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{i} = 0;
174617    +end;
MPRINT(EM_DIAGRAM):   end;
174618    +if AutoNeural46_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural46_I_DepVar = Ensmbl59_level{1} then do;
174619    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
174620    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural46_P_DepVar1;
174621    +end;
MPRINT(EM_DIAGRAM):   end;
174622    +if AutoNeural43_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural43_I_DepVar = Ensmbl59_level{1} then do;
174623    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
174624    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural43_P_DepVar1;
174625    +end;
MPRINT(EM_DIAGRAM):   end;
174626    +if AutoNeural42_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural42_I_DepVar = Ensmbl59_level{1} then do;
174627    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
174628    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural42_P_DepVar1;
174629    +end;
MPRINT(EM_DIAGRAM):   end;
174630    +if AutoNeural41_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural41_I_DepVar = Ensmbl59_level{1} then do;
174631    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
174632    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural41_P_DepVar1;
174633    +end;
MPRINT(EM_DIAGRAM):   end;
174634    +if AutoNeural47_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural47_I_DepVar = Ensmbl59_level{1} then do;
174635    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
174636    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural47_P_DepVar1;
174637    +end;
MPRINT(EM_DIAGRAM):   end;
174638    +if AutoNeural45_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural45_I_DepVar = Ensmbl59_level{1} then do;
174639    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
174640    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural45_P_DepVar1;
174641    +end;
MPRINT(EM_DIAGRAM):   end;
174642    +if AutoNeural44_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural44_I_DepVar = Ensmbl59_level{1} then do;
174643    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
174644    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural44_P_DepVar1;
174645    +end;
MPRINT(EM_DIAGRAM):   end;
174646    +if AutoNeural46_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural46_I_DepVar = Ensmbl59_level{2} then do;
174647    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
174648    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural46_P_DepVar0;
174649    +end;
MPRINT(EM_DIAGRAM):   end;
174650    +if AutoNeural43_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural43_I_DepVar = Ensmbl59_level{2} then do;
174651    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
174652    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural43_P_DepVar0;
174653    +end;
MPRINT(EM_DIAGRAM):   end;
174654    +if AutoNeural42_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural42_I_DepVar = Ensmbl59_level{2} then do;
174655    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
174656    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural42_P_DepVar0;
174657    +end;
MPRINT(EM_DIAGRAM):   end;
174658    +if AutoNeural41_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural41_I_DepVar = Ensmbl59_level{2} then do;
174659    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
174660    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural41_P_DepVar0;
174661    +end;
MPRINT(EM_DIAGRAM):   end;
174662    +if AutoNeural47_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural47_I_DepVar = Ensmbl59_level{2} then do;
174663    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
174664    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural47_P_DepVar0;
174665    +end;
MPRINT(EM_DIAGRAM):   end;
174666    +if AutoNeural45_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural45_I_DepVar = Ensmbl59_level{2} then do;
174667    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
174668    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural45_P_DepVar0;
174669    +end;
MPRINT(EM_DIAGRAM):   end;
174670    +if AutoNeural44_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural44_I_DepVar = Ensmbl59_level{2} then do;
174671    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
174672    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural44_P_DepVar0;
174673    +end;
MPRINT(EM_DIAGRAM):   end;
174674    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174675    +* Ensmbl59: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Determine Into Variable;
174676    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174677    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
174678    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
174679    +vote_count = max(
174680    +Ensmbl59_count{1} ,
174681    +Ensmbl59_count{2}
174682    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl59_count{1} , Ensmbl59_count{2} );
174683    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
174684    +if Ensmbl59_count{i}=vote_count and Ensmbl59_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl59_count{i}=vote_count and Ensmbl59_post{i}>vote_post then do;
174685    +I_DepVar = Ensmbl59_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl59_level{i};
174686    +vote_post = Ensmbl59_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl59_count{i};
174687    +end;
MPRINT(EM_DIAGRAM):   end;
174688    +end;
MPRINT(EM_DIAGRAM):   end;
174689    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174690    +* Ensmbl59: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Compute posterior vars using models predicting the chosen
level;
174691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174692    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
174693    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
174694    +if I_DepVar = AutoNeural46_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural46_I_DepVar then do;
174695    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural46_P_DepVar1;
174696    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural46_P_DepVar0;
174697    +end;
MPRINT(EM_DIAGRAM):   end;
174698    +if I_DepVar = AutoNeural43_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural43_I_DepVar then do;
174699    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural43_P_DepVar1;
174700    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural43_P_DepVar0;
174701    +end;
MPRINT(EM_DIAGRAM):   end;
174702    +if I_DepVar = AutoNeural42_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural42_I_DepVar then do;
174703    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural42_P_DepVar1;
174704    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural42_P_DepVar0;
174705    +end;
MPRINT(EM_DIAGRAM):   end;
174706    +if I_DepVar = AutoNeural41_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural41_I_DepVar then do;
174707    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural41_P_DepVar1;
174708    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural41_P_DepVar0;
174709    +end;
MPRINT(EM_DIAGRAM):   end;
174710    +if I_DepVar = AutoNeural47_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural47_I_DepVar then do;
174711    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural47_P_DepVar1;
174712    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural47_P_DepVar0;
174713    +end;
MPRINT(EM_DIAGRAM):   end;
174714    +if I_DepVar = AutoNeural45_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural45_I_DepVar then do;
174715    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural45_P_DepVar1;
174716    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural45_P_DepVar0;
174717    +end;
MPRINT(EM_DIAGRAM):   end;
174718    +if I_DepVar = AutoNeural44_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural44_I_DepVar then do;
174719    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural44_P_DepVar1;
174720    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural44_P_DepVar0;
174721    +end;
MPRINT(EM_DIAGRAM):   end;
174722    +* Ensmbl59: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Averaging posterior;
174723    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
174724    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
174725    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174726    +* Ensmbl59: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Producing Unformatted variable;
174727    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174728    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
174729    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
174730    +else
174731    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
174732    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174733    +* Ensmbl59: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing _WARN_ Variable;
174734    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174735    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
174736    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
174737    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
174738    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
174738   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
174739    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
174739   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
174740    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
174740   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
174741    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
174741   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
174742    +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
174742   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
174743    +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
174743   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
174744    +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
174744   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
174745    +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
174745   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
174746    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
174746   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
174747    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
174747   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
174748    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
174748   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
174749    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
174749   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
174750    +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
174750   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
174751    +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
174751   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
174752    +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
174752   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
174753    +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
174753   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
174754    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
174754   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
174755    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
174755   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
174756    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
174756   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
174757    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
174757   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
174758    +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
174758   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
174759    +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
174759   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
174760    +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
174760   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
174761    +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
174761   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
174762    +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
174762   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
174763    +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
174763   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
174764    +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
174764   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
174765    +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
174765   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
174766    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174767    +* Ensmbl59: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing Residual Vars;
174768    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174769    +if
174770    +F_DepVar NE '1'
174771    +AND F_DepVar NE '0'
174772    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
174773    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
174774    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
174775    +end;
MPRINT(EM_DIAGRAM):   end;
174776    +else do;
MPRINT(EM_DIAGRAM):   else do;
174777    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
174778    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
174779    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
174780    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
174781    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
174782    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
174783    +END;
MPRINT(EM_DIAGRAM):   END;
174784    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
174785     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL59_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL46_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
174786     quit;
174787     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
174788     filename emflow
174788   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring AUTONEURAL46_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174789     *------------------------------------------------------------*;
174790     * Ensmbl59: Scoring AUTONEURAL46_VALIDATE data;
174791     *------------------------------------------------------------*;
174792     data EMWS8.Ensmbl59_VALIDATE
174793     / view=EMWS8.Ensmbl59_VALIDATE
174794     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_VALIDATE / view=EMWS8.Ensmbl59_VALIDATE ;
174795     set EMWS8.AutoNeural46_VALIDATE
174796     ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural46_VALIDATE ;
174797     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMFLOWSCORE.sas.
174798    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174799    +* Ensmbl59: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Combine model for DepVar;
174800    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174801    +* Ensmbl59: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 1 of 7;
174802    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174803    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174804    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
174805    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
174806    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
174807    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174808    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174809    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
174810    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
174811    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
174812    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174813    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174814    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
174815    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
174816    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
174817    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174818    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174819    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
174820    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
174821    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
174822    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174823    +
174824    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
174825    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
174825   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
174826    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
174827    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
174828    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
174829    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
174830    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
174831    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174832    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
174833    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
174834    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
174835    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174836    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174837    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
174838    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174839    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
174840    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
174841    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
174842    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174843    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
174844    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
174845    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
174846    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174847    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174848    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
174849    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
174850    +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
174851    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174852    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174853    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
174854    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
174855    +* NODE: AutoNeural46;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural46;
174856    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
174857    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
174858    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
174859    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
174860    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
174861    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
174862    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
174863    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
174864    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
174865    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
174866    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
174867    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
174868    +LENGTH _WARN_ $4
174869    +      F_DepVar  $ 12
174870    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
174871    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
174872    +
174873    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
174874    +
174875    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
174876    +
174877    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
174878    +
174879    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
174880    +
174881    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
174882    +
174883    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
174884    +
174885    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
174886    +
174887    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
174888    +
174889    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
174890    +
174891    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
174892    +
174893    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
174894    +
174895    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
174896    +
174897    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
174898    +
174899    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
174900    +
174901    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
174902    +
174903    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
174904    +
174905    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
174906    +
174907    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
174908    +
174909    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
174910    +
174911    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
174912    +
174913    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
174914    +
174915    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
174916    +
174917    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
174918    +
174919    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
174920    +
174921    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
174922    +
174923    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
174924    +
174925    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
174926    +
174927    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
174928    +
174929    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
174930    +
174931    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
174932    +
174933    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
174934    +
174935    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
174936    +
174937    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
174938    +
174939    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
174940    +
174941    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
174942    +
174943    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
174944    +
174945    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
174946    +
174947    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
174948    +
174949    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
174950    +
174951    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
174952    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
174953    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
174954    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
174955    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174956    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174957    +end;
MPRINT(EM_DIAGRAM):   end;
174958    +else do;
MPRINT(EM_DIAGRAM):   else do;
174959    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174960    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
174961    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174962    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174963    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
174964    +   end;
MPRINT(EM_DIAGRAM):   end;
174965    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174966    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
174967    +   end;
MPRINT(EM_DIAGRAM):   end;
174968    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174969    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
174970    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174971    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174972    +   end;
MPRINT(EM_DIAGRAM):   end;
174973    +end;
MPRINT(EM_DIAGRAM):   end;
174974    +
174975    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
174976    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
174977    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
174978    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
174979    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
174980    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174981    +end;
MPRINT(EM_DIAGRAM):   end;
174982    +else do;
MPRINT(EM_DIAGRAM):   else do;
174983    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
174984    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
174985    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
174986    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
174987    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
174988    +   end;
MPRINT(EM_DIAGRAM):   end;
174989    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
174990    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
174991    +   end;
MPRINT(EM_DIAGRAM):   end;
174992    +   else do;
MPRINT(EM_DIAGRAM):   else do;
174993    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
174994    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
174995    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
174996    +   end;
MPRINT(EM_DIAGRAM):   end;
174997    +end;
MPRINT(EM_DIAGRAM):   end;
174998    +
174999    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
175000    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
175001    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
175002    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
175003    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175004    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175005    +end;
MPRINT(EM_DIAGRAM):   end;
175006    +else do;
MPRINT(EM_DIAGRAM):   else do;
175007    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175008    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
175009    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175010    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175011    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
175012    +   end;
MPRINT(EM_DIAGRAM):   end;
175013    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175014    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
175015    +   end;
MPRINT(EM_DIAGRAM):   end;
175016    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175017    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
175018    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175019    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175020    +   end;
MPRINT(EM_DIAGRAM):   end;
175021    +end;
MPRINT(EM_DIAGRAM):   end;
175022    +
175023    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
175024    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
175025    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
175026    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
175027    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175028    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175029    +end;
MPRINT(EM_DIAGRAM):   end;
175030    +else do;
MPRINT(EM_DIAGRAM):   else do;
175031    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175032    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
175033    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175034    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175035    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
175036    +   end;
MPRINT(EM_DIAGRAM):   end;
175037    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175038    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
175039    +   end;
MPRINT(EM_DIAGRAM):   end;
175040    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175041    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
175042    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175043    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175044    +   end;
MPRINT(EM_DIAGRAM):   end;
175045    +end;
MPRINT(EM_DIAGRAM):   end;
175046    +
175047    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
175048    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
175049    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
175050    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
175051    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175052    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175053    +end;
MPRINT(EM_DIAGRAM):   end;
175054    +else do;
MPRINT(EM_DIAGRAM):   else do;
175055    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175056    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
175057    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175058    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175059    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
175060    +   end;
MPRINT(EM_DIAGRAM):   end;
175061    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175062    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
175063    +   end;
MPRINT(EM_DIAGRAM):   end;
175064    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175065    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
175066    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175067    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175068    +   end;
MPRINT(EM_DIAGRAM):   end;
175069    +end;
MPRINT(EM_DIAGRAM):   end;
175070    +
175071    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
175072    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
175073    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
175074    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
175075    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175076    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175077    +end;
MPRINT(EM_DIAGRAM):   end;
175078    +else do;
MPRINT(EM_DIAGRAM):   else do;
175079    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175080    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
175081    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175082    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175083    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
175084    +   end;
MPRINT(EM_DIAGRAM):   end;
175085    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175086    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
175087    +   end;
MPRINT(EM_DIAGRAM):   end;
175088    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175089    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
175090    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175091    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175092    +   end;
MPRINT(EM_DIAGRAM):   end;
175093    +end;
MPRINT(EM_DIAGRAM):   end;
175094    +
175095    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
175096    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
175097    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
175098    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
175099    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
175100    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
175101    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
175102    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
175103    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
175104    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
175105    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
175106    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
175107    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175108    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175109    +end;
MPRINT(EM_DIAGRAM):   end;
175110    +else do;
MPRINT(EM_DIAGRAM):   else do;
175111    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
175112    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
175113    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175114    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
175115    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
175116    +   end;
MPRINT(EM_DIAGRAM):   end;
175117    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
175118    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
175119    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
175120    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
175121    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
175122    +   end;
MPRINT(EM_DIAGRAM):   end;
175123    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
175124    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
175125    +   end;
MPRINT(EM_DIAGRAM):   end;
175126    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
175127    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
175128    +   end;
MPRINT(EM_DIAGRAM):   end;
175129    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
175130    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
175131    +   end;
MPRINT(EM_DIAGRAM):   end;
175132    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175133    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
175134    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
175135    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
175136    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
175137    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175138    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175139    +   end;
MPRINT(EM_DIAGRAM):   end;
175140    +end;
MPRINT(EM_DIAGRAM):   end;
175141    +
175142    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
175143    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
175144    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
175145    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
175146    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
175147    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
175148    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
175149    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
175150    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
175151    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
175152    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
175153    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
175154    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
175155    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175156    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175157    +end;
MPRINT(EM_DIAGRAM):   end;
175158    +else do;
MPRINT(EM_DIAGRAM):   else do;
175159    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
175160    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
175161    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175162    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
175163    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
175164    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
175165    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
175166    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
175167    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175168    +         end;
MPRINT(EM_DIAGRAM):   end;
175169    +         else do;
MPRINT(EM_DIAGRAM):   else do;
175170    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
175171    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
175172    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175173    +            end;
MPRINT(EM_DIAGRAM):   end;
175174    +         end;
MPRINT(EM_DIAGRAM):   end;
175175    +      end;
MPRINT(EM_DIAGRAM):   end;
175176    +      else do;
MPRINT(EM_DIAGRAM):   else do;
175177    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
175178    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
175179    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175180    +         end;
MPRINT(EM_DIAGRAM):   end;
175181    +      end;
MPRINT(EM_DIAGRAM):   end;
175182    +   end;
MPRINT(EM_DIAGRAM):   end;
175183    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175184    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
175185    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
175186    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175187    +      end;
MPRINT(EM_DIAGRAM):   end;
175188    +      else do;
MPRINT(EM_DIAGRAM):   else do;
175189    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
175190    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
175191    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
175192    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
175193    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
175194    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175195    +         end;
MPRINT(EM_DIAGRAM):   end;
175196    +      end;
MPRINT(EM_DIAGRAM):   end;
175197    +   end;
MPRINT(EM_DIAGRAM):   end;
175198    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
175199    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
175200    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
175201    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
175202    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
175203    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175204    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175205    +   end;
MPRINT(EM_DIAGRAM):   end;
175206    +end;
MPRINT(EM_DIAGRAM):   end;
175207    +
175208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175209    +*** Checking missing input Interval
175210    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
175211    +
175212    +IF NMISS(
175213    +   Income ,
175214    +   Kidhome ,
175215    +   MntFishProducts ,
175216    +   MntFruits ,
175217    +   MntGoldProds ,
175218    +   MntMeatProducts ,
175219    +   MntSweetProducts ,
175220    +   MntWines ,
175221    +   NumCatalogPurchases ,
175222    +   NumDealsPurchases ,
175223    +   NumStorePurchases ,
175224    +   NumWebPurchases ,
175225    +   NumWebVisitsMonth ,
175226    +   Recency ,
175227    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
175228    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
175229    +
175230    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175231    +END;
MPRINT(EM_DIAGRAM):   END;
175232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175233    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
175234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175235    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
175236    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
175237    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
175238    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
175239    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
175240    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
175241    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
175242    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
175243    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
175244    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
175245    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
175246    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
175247    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
175248    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
175249    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
175250    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
175251    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
175252    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
175253    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
175254    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
175255    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
175256    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
175257    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
175258    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
175259    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
175260    +END;
MPRINT(EM_DIAGRAM):   END;
175261    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175262    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
175263    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
175264    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
175265    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
175266    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
175267    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
175268    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
175269    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
175270    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
175271    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
175272    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
175273    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
175274    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
175275    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
175276    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
175277    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
175278    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
175279    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
175280    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
175281    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
175282    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
175283    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
175284    +   ELSE S_NumCatalogPurchases
175285    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
175286    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
175287    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
175288    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
175289    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
175290    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
175291    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
175292    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
175293    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
175294    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
175295    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
175296    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
175297    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
175298    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
175299    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
175300    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
175301    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
175302    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
175303    +END;
MPRINT(EM_DIAGRAM):   END;
175304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175305    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
175306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175308    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
175309    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175311    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
175312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175313    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
175314    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
175315    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
175316    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
175317    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
175318    +          +      0.0311909552218 * S_MntSweetProducts
175319    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
175320    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
175321    +          +     0.12294876865087 * S_NumStorePurchases
175322    +          +     0.11602382379314 * S_NumWebPurchases
175323    +          +    -0.23519567542635 * S_NumWebVisitsMonth
175324    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
175325    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome +
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 *
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 *
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency +
0.06912944740739 * S_Teenhome ;
175326    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
175327    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
175328    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
175329    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
175330    +          +     0.00133400054994 * S_MntSweetProducts
175331    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
175332    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
175333    +          +    -0.49595472235036 * S_NumStorePurchases
175334    +          +    -0.24747548015204 * S_NumWebPurchases
175335    +          +     0.12326047694811 * S_NumWebVisitsMonth
175336    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
175337    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome +
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 *
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 *
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency +
0.00568113597531 * S_Teenhome ;
175338    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
175339    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
175340    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
175341    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
175342    +          +    -0.03908755288099 * S_MntSweetProducts
175343    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
175344    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
175345    +          +    -0.20634630081435 * S_NumStorePurchases
175346    +          +    -0.06734935798888 * S_NumWebPurchases
175347    +          +     0.32288250215418 * S_NumWebVisitsMonth
175348    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
175349    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome +
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 *
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 *
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases +
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth +
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
175350    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
175351    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
175352    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
175353    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
175354    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 *
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 +
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
175355    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
175356    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
175357    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
175358    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
175359    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 *
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 +
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
175360    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
175361    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
175362    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
175363    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
175364    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 *
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 +
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
175365    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
175366    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
175367    +        EducationGraduation  +     0.07475697967073 * EducationMaster
175368    +          +    -0.04265434587882 * Marital_StatusDivorced
175369    +          +     0.17114014094758 * Marital_StatusMarried
175370    +          +     -0.1537035921296 * Marital_StatusSingle
175371    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle +
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 *
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 *
Marital_StatusTogether ;
175372    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
175373    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
175374    +        EducationGraduation  +     0.04507684017588 * EducationMaster
175375    +          +     0.25534272809394 * Marital_StatusDivorced
175376    +          +     0.20034903346804 * Marital_StatusMarried
175377    +          +    -0.38348393943797 * Marital_StatusSingle
175378    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle +
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 *
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 *
Marital_StatusTogether ;
175379    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
175380    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
175381    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
175382    +          +      0.1988416043876 * Marital_StatusDivorced
175383    +          +    -0.21663959478684 * Marital_StatusMarried
175384    +          +     0.06591480171547 * Marital_StatusSingle
175385    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle +
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 *
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 *
Marital_StatusTogether ;
175386    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
175387    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
175388    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
175389    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
175390    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
175391    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
175392    +END;
MPRINT(EM_DIAGRAM):   END;
175393    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175394    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
175395    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
175396    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
175397    +END;
MPRINT(EM_DIAGRAM):   END;
175398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175399    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
175400    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175401    +
175402    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
175403    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
175404    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
175405    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
175406    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
175407    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175408    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
175409    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
175410    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
175411    +end;
MPRINT(EM_DIAGRAM):   end;
175412    +else do;
MPRINT(EM_DIAGRAM):   else do;
175413    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
175414    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
175415    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
175416    +   end;
MPRINT(EM_DIAGRAM):   end;
175417    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
175418    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
175419    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
175420    +   end;
MPRINT(EM_DIAGRAM):   end;
175421    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175422    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
175423    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
175424    +   end;
MPRINT(EM_DIAGRAM):   end;
175425    +end;
MPRINT(EM_DIAGRAM):   end;
175426    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
175427    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
175428    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 +
-60.7557666068018 * H1x1_3 ;
175429    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
175430    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
175431    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
175432    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
175433    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
175434    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
175435    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
175436    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
175437    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
175438    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
175439    +END;
MPRINT(EM_DIAGRAM):   END;
175440    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175441    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
175442    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
175443    +END;
MPRINT(EM_DIAGRAM):   END;
175444    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
175445    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
175446    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
175447    +END;
MPRINT(EM_DIAGRAM):   END;
175448    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
175449    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
175450    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
175451    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
175452    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
175453    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
175454    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
175455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175456    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
175457    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175458    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
175459    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
175460    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
175461    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
175462    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
175463    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
175464    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
175465    +END;
MPRINT(EM_DIAGRAM):   END;
175466    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
175467    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
175468    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
175469    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
175470    +* Renaming variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural46;
175471    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175472    +* Renaming Posterior variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural46;
175473    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175474    +drop AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar1;
175475    +AutoNeural46_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar1 = P_DepVar1;
175476    +drop AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_P_DepVar0;
175477    +AutoNeural46_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural46_P_DepVar0 = P_DepVar0;
175478    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175479    +* Renaming Into variables for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural46;
175480    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175481    +length AutoNeural46_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural46_I_DepVar $32;
175482    +drop AutoNeural46_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_I_DepVar;
175483    +AutoNeural46_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural46_I_DepVar = I_DepVar;
175484    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175485    +* Renaming _WARN_ variable for AutoNeural46;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural46;
175486    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175487    +length AutoNeural46_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural46_WARN_ $4;
175488    +drop AutoNeural46_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural46_WARN_;
175489    +AutoNeural46_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural46_WARN_ = _WARN_;
175490    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175491    +* Ensmbl59: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 2 of 7;
175492    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175493    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175494    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
175495    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
175496    +* NODE: AutoNeural43;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural43;
175497    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
175498    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
175499    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
175500    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
175501    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
175502    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
175503    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
175504    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
175505    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
175506    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
175507    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
175508    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
175509    +LENGTH _WARN_ $4
175510    +      F_DepVar  $ 12
175511    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
175512    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
175513    +
175514    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
175515    +
175516    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
175517    +
175518    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
175519    +
175520    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
175521    +
175522    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
175523    +
175524    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
175525    +
175526    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
175527    +
175528    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
175529    +
175530    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
175531    +
175532    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
175533    +
175534    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
175535    +
175536    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
175537    +
175538    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
175539    +
175540    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
175541    +
175542    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
175543    +
175544    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
175545    +
175546    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
175547    +
175548    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
175549    +
175550    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
175551    +
175552    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
175553    +
175554    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
175555    +
175556    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
175557    +
175558    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
175559    +
175560    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
175561    +
175562    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
175563    +
175564    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
175565    +
175566    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
175567    +
175568    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
175569    +
175570    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
175571    +
175572    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
175573    +
175574    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
175575    +
175576    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
175577    +
175578    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
175579    +
175580    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
175581    +
175582    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
175583    +
175584    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
175585    +
175586    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
175587    +
175588    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
175589    +
175590    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
175591    +
175592    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
175593    +
175594    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
175595    +
175596    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
175597    +
175598    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
175599    +
175600    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
175601    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
175602    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
175603    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
175604    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175605    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175606    +end;
MPRINT(EM_DIAGRAM):   end;
175607    +else do;
MPRINT(EM_DIAGRAM):   else do;
175608    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175609    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
175610    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175611    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175612    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
175613    +   end;
MPRINT(EM_DIAGRAM):   end;
175614    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175615    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
175616    +   end;
MPRINT(EM_DIAGRAM):   end;
175617    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175618    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
175619    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175620    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175621    +   end;
MPRINT(EM_DIAGRAM):   end;
175622    +end;
MPRINT(EM_DIAGRAM):   end;
175623    +
175624    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
175625    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
175626    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
175627    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
175628    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175629    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175630    +end;
MPRINT(EM_DIAGRAM):   end;
175631    +else do;
MPRINT(EM_DIAGRAM):   else do;
175632    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175633    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
175634    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175635    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175636    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
175637    +   end;
MPRINT(EM_DIAGRAM):   end;
175638    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175639    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
175640    +   end;
MPRINT(EM_DIAGRAM):   end;
175641    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175642    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
175643    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175644    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175645    +   end;
MPRINT(EM_DIAGRAM):   end;
175646    +end;
MPRINT(EM_DIAGRAM):   end;
175647    +
175648    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
175649    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
175650    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
175651    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
175652    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175653    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175654    +end;
MPRINT(EM_DIAGRAM):   end;
175655    +else do;
MPRINT(EM_DIAGRAM):   else do;
175656    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175657    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
175658    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175659    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175660    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
175661    +   end;
MPRINT(EM_DIAGRAM):   end;
175662    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175663    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
175664    +   end;
MPRINT(EM_DIAGRAM):   end;
175665    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175666    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
175667    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175668    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175669    +   end;
MPRINT(EM_DIAGRAM):   end;
175670    +end;
MPRINT(EM_DIAGRAM):   end;
175671    +
175672    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
175673    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
175674    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
175675    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
175676    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175677    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175678    +end;
MPRINT(EM_DIAGRAM):   end;
175679    +else do;
MPRINT(EM_DIAGRAM):   else do;
175680    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175681    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
175682    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175683    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175684    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
175685    +   end;
MPRINT(EM_DIAGRAM):   end;
175686    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175687    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
175688    +   end;
MPRINT(EM_DIAGRAM):   end;
175689    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175690    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
175691    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175692    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175693    +   end;
MPRINT(EM_DIAGRAM):   end;
175694    +end;
MPRINT(EM_DIAGRAM):   end;
175695    +
175696    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
175697    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
175698    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
175699    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
175700    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175701    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175702    +end;
MPRINT(EM_DIAGRAM):   end;
175703    +else do;
MPRINT(EM_DIAGRAM):   else do;
175704    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175705    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
175706    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175707    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175708    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
175709    +   end;
MPRINT(EM_DIAGRAM):   end;
175710    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175711    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
175712    +   end;
MPRINT(EM_DIAGRAM):   end;
175713    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175714    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
175715    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175716    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175717    +   end;
MPRINT(EM_DIAGRAM):   end;
175718    +end;
MPRINT(EM_DIAGRAM):   end;
175719    +
175720    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
175721    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
175722    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
175723    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
175724    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175725    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175726    +end;
MPRINT(EM_DIAGRAM):   end;
175727    +else do;
MPRINT(EM_DIAGRAM):   else do;
175728    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
175729    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
175730    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175731    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
175732    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
175733    +   end;
MPRINT(EM_DIAGRAM):   end;
175734    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
175735    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
175736    +   end;
MPRINT(EM_DIAGRAM):   end;
175737    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175738    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
175739    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175740    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175741    +   end;
MPRINT(EM_DIAGRAM):   end;
175742    +end;
MPRINT(EM_DIAGRAM):   end;
175743    +
175744    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
175745    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
175746    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
175747    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
175748    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
175749    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
175750    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
175751    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
175752    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
175753    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
175754    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
175755    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
175756    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175757    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175758    +end;
MPRINT(EM_DIAGRAM):   end;
175759    +else do;
MPRINT(EM_DIAGRAM):   else do;
175760    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
175761    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
175762    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175763    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
175764    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
175765    +   end;
MPRINT(EM_DIAGRAM):   end;
175766    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
175767    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
175768    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
175769    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
175770    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
175771    +   end;
MPRINT(EM_DIAGRAM):   end;
175772    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
175773    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
175774    +   end;
MPRINT(EM_DIAGRAM):   end;
175775    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
175776    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
175777    +   end;
MPRINT(EM_DIAGRAM):   end;
175778    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
175779    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
175780    +   end;
MPRINT(EM_DIAGRAM):   end;
175781    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175782    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
175783    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
175784    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
175785    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
175786    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175787    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175788    +   end;
MPRINT(EM_DIAGRAM):   end;
175789    +end;
MPRINT(EM_DIAGRAM):   end;
175790    +
175791    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
175792    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
175793    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
175794    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
175795    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
175796    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
175797    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
175798    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
175799    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
175800    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
175801    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
175802    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
175803    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
175804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
175805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175806    +end;
MPRINT(EM_DIAGRAM):   end;
175807    +else do;
MPRINT(EM_DIAGRAM):   else do;
175808    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
175809    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
175810    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
175811    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
175812    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
175813    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
175814    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
175815    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
175816    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175817    +         end;
MPRINT(EM_DIAGRAM):   end;
175818    +         else do;
MPRINT(EM_DIAGRAM):   else do;
175819    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
175820    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
175821    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175822    +            end;
MPRINT(EM_DIAGRAM):   end;
175823    +         end;
MPRINT(EM_DIAGRAM):   end;
175824    +      end;
MPRINT(EM_DIAGRAM):   end;
175825    +      else do;
MPRINT(EM_DIAGRAM):   else do;
175826    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
175827    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
175828    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175829    +         end;
MPRINT(EM_DIAGRAM):   end;
175830    +      end;
MPRINT(EM_DIAGRAM):   end;
175831    +   end;
MPRINT(EM_DIAGRAM):   end;
175832    +   else do;
MPRINT(EM_DIAGRAM):   else do;
175833    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
175834    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
175835    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175836    +      end;
MPRINT(EM_DIAGRAM):   end;
175837    +      else do;
MPRINT(EM_DIAGRAM):   else do;
175838    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
175839    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
175840    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
175841    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
175842    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
175843    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
175844    +         end;
MPRINT(EM_DIAGRAM):   end;
175845    +      end;
MPRINT(EM_DIAGRAM):   end;
175846    +   end;
MPRINT(EM_DIAGRAM):   end;
175847    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
175848    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
175849    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
175850    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
175851    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
175852    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
175853    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175854    +   end;
MPRINT(EM_DIAGRAM):   end;
175855    +end;
MPRINT(EM_DIAGRAM):   end;
175856    +
175857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175858    +*** Checking missing input Interval
175859    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
175860    +
175861    +IF NMISS(
175862    +   Income ,
175863    +   Kidhome ,
175864    +   MntFishProducts ,
175865    +   MntFruits ,
175866    +   MntGoldProds ,
175867    +   MntMeatProducts ,
175868    +   MntSweetProducts ,
175869    +   MntWines ,
175870    +   NumCatalogPurchases ,
175871    +   NumDealsPurchases ,
175872    +   NumStorePurchases ,
175873    +   NumWebPurchases ,
175874    +   NumWebVisitsMonth ,
175875    +   Recency ,
175876    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
175877    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
175878    +
175879    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
175880    +END;
MPRINT(EM_DIAGRAM):   END;
175881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175882    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
175883    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175884    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
175885    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
175886    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
175887    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
175888    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
175889    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
175890    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
175891    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
175892    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
175893    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
175894    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
175895    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
175896    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
175897    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
175898    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
175899    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
175900    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
175901    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
175902    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
175903    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
175904    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
175905    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
175906    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
175907    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
175908    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
175909    +END;
MPRINT(EM_DIAGRAM):   END;
175910    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
175911    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
175912    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
175913    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
175914    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
175915    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
175916    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
175917    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
175918    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
175919    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
175920    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
175921    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
175922    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
175923    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
175924    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
175925    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
175926    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
175927    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
175928    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
175929    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
175930    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
175931    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
175932    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
175933    +   ELSE S_NumCatalogPurchases
175934    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
175935    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
175936    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
175937    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
175938    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
175939    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
175940    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
175941    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
175942    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
175943    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
175944    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
175945    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
175946    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
175947    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
175948    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
175949    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
175950    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
175951    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
175952    +END;
MPRINT(EM_DIAGRAM):   END;
175953    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175954    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
175955    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175957    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
175958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175960    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
175961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
175962    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
175963    +   H1x1_1  =       0.346744797535 * S_Income  +     1.31363556955711 *
175964    +        S_Kidhome  +    -0.79208756741143 * S_MntFishProducts
175965    +          +     0.68527811841342 * S_MntFruits  +     0.24664684629472 *
175966    +        S_MntGoldProds  +     0.85215044326148 * S_MntMeatProducts
175967    +          +    -0.05146617403327 * S_MntSweetProducts
175968    +          +     0.70199486255944 * S_MntWines  +    -1.00450471229357 *
175969    +        S_NumCatalogPurchases  +     0.20437829426231 * S_NumDealsPurchases
175970    +          +     0.62863110938217 * S_NumStorePurchases
175971    +          +    -0.38696149667878 * S_NumWebPurchases
175972    +          +    -0.64969312889347 * S_NumWebVisitsMonth
175973    +          +      1.3506790879911 * S_Recency  +    -0.14927581282921 *
175974    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.346744797535 * S_Income + 1.31363556955711 * S_Kidhome +
-0.79208756741143 * S_MntFishProducts + 0.68527811841342 * S_MntFruits + 0.24664684629472 *
S_MntGoldProds + 0.85215044326148 * S_MntMeatProducts + -0.05146617403327 * S_MntSweetProducts
+ 0.70199486255944 * S_MntWines + -1.00450471229357 * S_NumCatalogPurchases + 0.20437829426231
* S_NumDealsPurchases + 0.62863110938217 * S_NumStorePurchases + -0.38696149667878 *
S_NumWebPurchases + -0.64969312889347 * S_NumWebVisitsMonth + 1.3506790879911 * S_Recency +
-0.14927581282921 * S_Teenhome ;
175975    +   H1x1_2  =    -0.31812547665326 * S_Income  +    -0.44650104709618 *
175976    +        S_Kidhome  +     0.57229440722364 * S_MntFishProducts
175977    +          +     0.43482820937164 * S_MntFruits  +     -0.2031067703009 *
175978    +        S_MntGoldProds  +    -4.22959784007598 * S_MntMeatProducts
175979    +          +     -0.2837867994991 * S_MntSweetProducts
175980    +          +     0.53009243544309 * S_MntWines  +    -0.69827694726429 *
175981    +        S_NumCatalogPurchases  +    -0.21825886946472 * S_NumDealsPurchases
175982    +          +    -0.54369381190341 * S_NumStorePurchases
175983    +          +     0.67406669261545 * S_NumWebPurchases
175984    +          +     0.33996696883368 * S_NumWebVisitsMonth
175985    +          +    -0.25785000158296 * S_Recency  +     0.29059204886836 *
175986    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31812547665326 * S_Income + -0.44650104709618 * S_Kidhome +
0.57229440722364 * S_MntFishProducts + 0.43482820937164 * S_MntFruits + -0.2031067703009 *
S_MntGoldProds + -4.22959784007598 * S_MntMeatProducts + -0.2837867994991 * S_MntSweetProducts
+ 0.53009243544309 * S_MntWines + -0.69827694726429 * S_NumCatalogPurchases +
-0.21825886946472 * S_NumDealsPurchases + -0.54369381190341 * S_NumStorePurchases +
0.67406669261545 * S_NumWebPurchases + 0.33996696883368 * S_NumWebVisitsMonth +
-0.25785000158296 * S_Recency + 0.29059204886836 * S_Teenhome ;
175987    +   H1x1_3  =    -0.95497484937763 * S_Income  +     0.69843675975299 *
175988    +        S_Kidhome  +    -0.16297234253648 * S_MntFishProducts
175989    +          +    -0.79520871513787 * S_MntFruits  +    -0.29823724505093 *
175990    +        S_MntGoldProds  +    -0.15152860134108 * S_MntMeatProducts
175991    +          +    -0.03465749764322 * S_MntSweetProducts
175992    +          +     0.53127184040091 * S_MntWines  +     0.59135593751067 *
175993    +        S_NumCatalogPurchases  +     0.32132594137215 * S_NumDealsPurchases
175994    +          +      0.4404265130137 * S_NumStorePurchases
175995    +          +     0.34042541893429 * S_NumWebPurchases
175996    +          +    -1.21549916758761 * S_NumWebVisitsMonth
175997    +          +       1.154070329153 * S_Recency  +     0.48728201337678 *
175998    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.95497484937763 * S_Income + 0.69843675975299 * S_Kidhome +
-0.16297234253648 * S_MntFishProducts + -0.79520871513787 * S_MntFruits + -0.29823724505093 *
S_MntGoldProds + -0.15152860134108 * S_MntMeatProducts + -0.03465749764322 *
S_MntSweetProducts + 0.53127184040091 * S_MntWines + 0.59135593751067 * S_NumCatalogPurchases
+ 0.32132594137215 * S_NumDealsPurchases + 0.4404265130137 * S_NumStorePurchases +
0.34042541893429 * S_NumWebPurchases + -1.21549916758761 * S_NumWebVisitsMonth +
1.154070329153 * S_Recency + 0.48728201337678 * S_Teenhome ;
175999    +   H1x1_4  =    -1.18770065121934 * S_Income  +      0.3073609740511 *
176000    +        S_Kidhome  +     0.10352863720245 * S_MntFishProducts
176001    +          +      0.2833318237712 * S_MntFruits  +     0.03154921247745 *
176002    +        S_MntGoldProds  +    -0.21591651561727 * S_MntMeatProducts
176003    +          +    -0.00464679492565 * S_MntSweetProducts
176004    +          +     0.91421960675715 * S_MntWines  +    -1.26836416129835 *
176005    +        S_NumCatalogPurchases  +    -0.70058095897782 * S_NumDealsPurchases
176006    +          +     1.15839307615364 * S_NumStorePurchases
176007    +          +     0.62831972126136 * S_NumWebPurchases
176008    +          +    -1.61962107597882 * S_NumWebVisitsMonth
176009    +          +     1.12858496707441 * S_Recency  +     0.54281989992336 *
176010    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.18770065121934 * S_Income + 0.3073609740511 * S_Kidhome +
0.10352863720245 * S_MntFishProducts + 0.2833318237712 * S_MntFruits + 0.03154921247745 *
S_MntGoldProds + -0.21591651561727 * S_MntMeatProducts + -0.00464679492565 *
S_MntSweetProducts + 0.91421960675715 * S_MntWines + -1.26836416129835 * S_NumCatalogPurchases
+ -0.70058095897782 * S_NumDealsPurchases + 1.15839307615364 * S_NumStorePurchases +
0.62831972126136 * S_NumWebPurchases + -1.61962107597882 * S_NumWebVisitsMonth +
1.12858496707441 * S_Recency + 0.54281989992336 * S_Teenhome ;
176011    +   H1x1_5  =     0.05044786678162 * S_Income  +    -0.28010558310581 *
176012    +        S_Kidhome  +    -0.27691656261205 * S_MntFishProducts
176013    +          +    -0.39089831210828 * S_MntFruits  +    -0.08178998049926 *
176014    +        S_MntGoldProds  +     1.72104172406534 * S_MntMeatProducts
176015    +          +    -0.31125451894603 * S_MntSweetProducts
176016    +          +    -2.29170137059747 * S_MntWines  +     0.63730065528433 *
176017    +        S_NumCatalogPurchases  +     0.88249434950066 * S_NumDealsPurchases
176018    +          +    -1.44151914398807 * S_NumStorePurchases
176019    +          +     -0.5455286038748 * S_NumWebPurchases
176020    +          +     0.92543573664002 * S_NumWebVisitsMonth
176021    +          +    -0.94895006705107 * S_Recency  +     0.12419848895477 *
176022    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.05044786678162 * S_Income + -0.28010558310581 * S_Kidhome +
-0.27691656261205 * S_MntFishProducts + -0.39089831210828 * S_MntFruits + -0.08178998049926 *
S_MntGoldProds + 1.72104172406534 * S_MntMeatProducts + -0.31125451894603 * S_MntSweetProducts
+ -2.29170137059747 * S_MntWines + 0.63730065528433 * S_NumCatalogPurchases + 0.88249434950066
* S_NumDealsPurchases + -1.44151914398807 * S_NumStorePurchases + -0.5455286038748 *
S_NumWebPurchases + 0.92543573664002 * S_NumWebVisitsMonth + -0.94895006705107 * S_Recency +
0.12419848895477 * S_Teenhome ;
176023    +   H1x1_6  =      1.0379959912095 * S_Income  +    -0.86527104445929 *
176024    +        S_Kidhome  +    -0.34569179888564 * S_MntFishProducts
176025    +          +    -0.00109367242014 * S_MntFruits  +      0.1491727982835 *
176026    +        S_MntGoldProds  +     1.59142102470118 * S_MntMeatProducts
176027    +          +    -0.44310159680843 * S_MntSweetProducts
176028    +          +    -0.12978244847526 * S_MntWines  +     1.25298974430925 *
176029    +        S_NumCatalogPurchases  +      0.8343138844265 * S_NumDealsPurchases
176030    +          +    -0.06648303760561 * S_NumStorePurchases
176031    +          +    -0.65122349287903 * S_NumWebPurchases
176032    +          +     1.83555427093429 * S_NumWebVisitsMonth
176033    +          +    -2.44265045013513 * S_Recency  +    -0.96168611481099 *
176034    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0379959912095 * S_Income + -0.86527104445929 * S_Kidhome +
-0.34569179888564 * S_MntFishProducts + -0.00109367242014 * S_MntFruits + 0.1491727982835 *
S_MntGoldProds + 1.59142102470118 * S_MntMeatProducts + -0.44310159680843 * S_MntSweetProducts
+ -0.12978244847526 * S_MntWines + 1.25298974430925 * S_NumCatalogPurchases + 0.8343138844265
* S_NumDealsPurchases + -0.06648303760561 * S_NumStorePurchases + -0.65122349287903 *
S_NumWebPurchases + 1.83555427093429 * S_NumWebVisitsMonth + -2.44265045013513 * S_Recency +
-0.96168611481099 * S_Teenhome ;
176035    +   H1x1_1  = H1x1_1  +    -0.04697238730506 * AcceptedCmp10
176036    +          +     0.17124574303968 * AcceptedCmp20  +     0.24668651391243 *
176037    +        AcceptedCmp30  +    -0.17661157809394 * AcceptedCmp40
176038    +          +    -0.07986471073966 * AcceptedCmp50  +     0.39456441776971 *
176039    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04697238730506 * AcceptedCmp10 + 0.17124574303968 *
AcceptedCmp20 + 0.24668651391243 * AcceptedCmp30 + -0.17661157809394 * AcceptedCmp40 +
-0.07986471073966 * AcceptedCmp50 + 0.39456441776971 * Complain0 ;
176040    +   H1x1_2  = H1x1_2  +     0.82032499204552 * AcceptedCmp10
176041    +          +     0.34058590721793 * AcceptedCmp20  +    -0.05139100187265 *
176042    +        AcceptedCmp30  +     0.03047923325443 * AcceptedCmp40
176043    +          +     0.00472330466661 * AcceptedCmp50  +     0.17230692332464 *
176044    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.82032499204552 * AcceptedCmp10 + 0.34058590721793 *
AcceptedCmp20 + -0.05139100187265 * AcceptedCmp30 + 0.03047923325443 * AcceptedCmp40 +
0.00472330466661 * AcceptedCmp50 + 0.17230692332464 * Complain0 ;
176045    +   H1x1_3  = H1x1_3  +     0.28530146043163 * AcceptedCmp10
176046    +          +     0.42287366771085 * AcceptedCmp20  +     0.47373508298281 *
176047    +        AcceptedCmp30  +     0.55866504005454 * AcceptedCmp40
176048    +          +     0.82267729772563 * AcceptedCmp50  +     0.19702533550506 *
176049    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.28530146043163 * AcceptedCmp10 + 0.42287366771085 *
AcceptedCmp20 + 0.47373508298281 * AcceptedCmp30 + 0.55866504005454 * AcceptedCmp40 +
0.82267729772563 * AcceptedCmp50 + 0.19702533550506 * Complain0 ;
176050    +   H1x1_4  = H1x1_4  +     0.52781659896891 * AcceptedCmp10
176051    +          +     0.42920365778433 * AcceptedCmp20  +     1.17620912558163 *
176052    +        AcceptedCmp30  +     0.60548467992927 * AcceptedCmp40
176053    +          +     0.94474163621099 * AcceptedCmp50  +    -0.78069672963693 *
176054    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.52781659896891 * AcceptedCmp10 + 0.42920365778433 *
AcceptedCmp20 + 1.17620912558163 * AcceptedCmp30 + 0.60548467992927 * AcceptedCmp40 +
0.94474163621099 * AcceptedCmp50 + -0.78069672963693 * Complain0 ;
176055    +   H1x1_5  = H1x1_5  +    -0.57412668124255 * AcceptedCmp10
176056    +          +    -0.47940329920743 * AcceptedCmp20  +    -0.32110813917426 *
176057    +        AcceptedCmp30  +    -0.61486082641451 * AcceptedCmp40
176058    +          +    -0.69974277642424 * AcceptedCmp50  +     0.11676881614828 *
176059    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.57412668124255 * AcceptedCmp10 + -0.47940329920743
* AcceptedCmp20 + -0.32110813917426 * AcceptedCmp30 + -0.61486082641451 * AcceptedCmp40 +
-0.69974277642424 * AcceptedCmp50 + 0.11676881614828 * Complain0 ;
176060    +   H1x1_6  = H1x1_6  +    -0.84071985342593 * AcceptedCmp10
176061    +          +    -0.93448636634819 * AcceptedCmp20  +    -1.08375331325128 *
176062    +        AcceptedCmp30  +    -1.17713256753961 * AcceptedCmp40
176063    +          +    -1.19701619371219 * AcceptedCmp50  +     0.43593081503911 *
176064    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.84071985342593 * AcceptedCmp10 + -0.93448636634819
* AcceptedCmp20 + -1.08375331325128 * AcceptedCmp30 + -1.17713256753961 * AcceptedCmp40 +
-1.19701619371219 * AcceptedCmp50 + 0.43593081503911 * Complain0 ;
176065    +   H1x1_1  = H1x1_1  +     0.16696814950674 * Education2n_Cycle
176066    +          +    -0.44548398836024 * EducationBasic  +    -0.13816962229813 *
176067    +        EducationGraduation  +     0.15082660839612 * EducationMaster
176068    +          +    -0.86711066227375 * Marital_StatusDivorced
176069    +          +     0.40837974583757 * Marital_StatusMarried
176070    +          +    -0.36026722115525 * Marital_StatusSingle
176071    +          +     0.79004200065113 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.16696814950674 * Education2n_Cycle +
-0.44548398836024 * EducationBasic + -0.13816962229813 * EducationGraduation +
0.15082660839612 * EducationMaster + -0.86711066227375 * Marital_StatusDivorced +
0.40837974583757 * Marital_StatusMarried + -0.36026722115525 * Marital_StatusSingle +
0.79004200065113 * Marital_StatusTogether ;
176072    +   H1x1_2  = H1x1_2  +     0.16842509296504 * Education2n_Cycle
176073    +          +    -0.37448080566378 * EducationBasic  +     0.48861368388392 *
176074    +        EducationGraduation  +    -0.52159546239433 * EducationMaster
176075    +          +     0.32215787204894 * Marital_StatusDivorced
176076    +          +    -0.56445035445224 * Marital_StatusMarried
176077    +          +    -0.19089062631475 * Marital_StatusSingle
176078    +          +    -0.05879603306331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16842509296504 * Education2n_Cycle +
-0.37448080566378 * EducationBasic + 0.48861368388392 * EducationGraduation +
-0.52159546239433 * EducationMaster + 0.32215787204894 * Marital_StatusDivorced +
-0.56445035445224 * Marital_StatusMarried + -0.19089062631475 * Marital_StatusSingle +
-0.05879603306331 * Marital_StatusTogether ;
176079    +   H1x1_3  = H1x1_3  +    -0.60123226656743 * Education2n_Cycle
176080    +          +     0.60422871475083 * EducationBasic  +     1.03135359524948 *
176081    +        EducationGraduation  +     0.08569631133746 * EducationMaster
176082    +          +      0.0333599428728 * Marital_StatusDivorced
176083    +          +      0.2536992094527 * Marital_StatusMarried
176084    +          +     0.28814962122223 * Marital_StatusSingle
176085    +          +    -0.07291720333163 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.60123226656743 * Education2n_Cycle +
0.60422871475083 * EducationBasic + 1.03135359524948 * EducationGraduation + 0.08569631133746
* EducationMaster + 0.0333599428728 * Marital_StatusDivorced + 0.2536992094527 *
Marital_StatusMarried + 0.28814962122223 * Marital_StatusSingle + -0.07291720333163 *
Marital_StatusTogether ;
176086    +   H1x1_4  = H1x1_4  +    -0.31817779304591 * Education2n_Cycle
176087    +          +     0.41715850822951 * EducationBasic  +    -1.42142934931707 *
176088    +        EducationGraduation  +     0.67447448653035 * EducationMaster
176089    +          +    -0.47992692297474 * Marital_StatusDivorced
176090    +          +     1.37810632485566 * Marital_StatusMarried
176091    +          +    -1.37561982457408 * Marital_StatusSingle
176092    +          +     1.44711275454438 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.31817779304591 * Education2n_Cycle +
0.41715850822951 * EducationBasic + -1.42142934931707 * EducationGraduation + 0.67447448653035
* EducationMaster + -0.47992692297474 * Marital_StatusDivorced + 1.37810632485566 *
Marital_StatusMarried + -1.37561982457408 * Marital_StatusSingle + 1.44711275454438 *
Marital_StatusTogether ;
176093    +   H1x1_5  = H1x1_5  +     0.09777346458802 * Education2n_Cycle
176094    +          +    -0.45960393039978 * EducationBasic  +     0.51146196412307 *
176095    +        EducationGraduation  +    -0.24819773072524 * EducationMaster
176096    +          +     0.19162417091995 * Marital_StatusDivorced
176097    +          +    -0.36068364824761 * Marital_StatusMarried
176098    +          +    -0.12710669526743 * Marital_StatusSingle
176099    +          +    -0.01019314244777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.09777346458802 * Education2n_Cycle +
-0.45960393039978 * EducationBasic + 0.51146196412307 * EducationGraduation +
-0.24819773072524 * EducationMaster + 0.19162417091995 * Marital_StatusDivorced +
-0.36068364824761 * Marital_StatusMarried + -0.12710669526743 * Marital_StatusSingle +
-0.01019314244777 * Marital_StatusTogether ;
176100    +   H1x1_6  = H1x1_6  +     0.36097201590287 * Education2n_Cycle
176101    +          +     0.58682328743356 * EducationBasic  +    -0.70502301542305 *
176102    +        EducationGraduation  +    -0.64274217783062 * EducationMaster
176103    +          +     0.23760271729717 * Marital_StatusDivorced
176104    +          +    -1.21454188572959 * Marital_StatusMarried
176105    +          +     1.24284947007232 * Marital_StatusSingle
176106    +          +    -1.39754167839201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.36097201590287 * Education2n_Cycle +
0.58682328743356 * EducationBasic + -0.70502301542305 * EducationGraduation +
-0.64274217783062 * EducationMaster + 0.23760271729717 * Marital_StatusDivorced +
-1.21454188572959 * Marital_StatusMarried + 1.24284947007232 * Marital_StatusSingle +
-1.39754167839201 * Marital_StatusTogether ;
176107    +   H1x1_1  =    -0.37160255114665 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.37160255114665 + H1x1_1 ;
176108    +   H1x1_2  =    -0.79024897923326 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.79024897923326 + H1x1_2 ;
176109    +   H1x1_3  =    -1.07478535022413 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.07478535022413 + H1x1_3 ;
176110    +   H1x1_4  =    -0.83827859036654 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.83827859036654 + H1x1_4 ;
176111    +   H1x1_5  =      1.0917082111499 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0917082111499 + H1x1_5 ;
176112    +   H1x1_6  =     1.09202728340056 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.09202728340056 + H1x1_6 ;
176113    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
176114    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
176115    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
176116    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
176117    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
176118    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
176119    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
176120    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
176121    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
176122    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
176123    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
176124    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
176125    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
176126    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
176127    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
176128    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
176129    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
176130    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
176131    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
176132    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
176133    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
176134    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
176135    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
176136    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
176137    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
176138    +END;
MPRINT(EM_DIAGRAM):   END;
176139    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176140    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
176141    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
176142    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
176143    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
176144    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
176145    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
176146    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
176147    +END;
MPRINT(EM_DIAGRAM):   END;
176148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176149    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
176150    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176151    +
176152    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
176153    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
176154    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
176155    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
176156    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
176157    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176158    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
176159    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
176160    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
176161    +end;
MPRINT(EM_DIAGRAM):   end;
176162    +else do;
MPRINT(EM_DIAGRAM):   else do;
176163    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
176164    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
176165    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
176166    +   end;
MPRINT(EM_DIAGRAM):   end;
176167    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
176168    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
176169    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
176170    +   end;
MPRINT(EM_DIAGRAM):   end;
176171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176172    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
176173    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
176174    +   end;
MPRINT(EM_DIAGRAM):   end;
176175    +end;
MPRINT(EM_DIAGRAM):   end;
176176    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
176177    +   P_DepVar1  =    -9.47780447141489 * H1x1_1  +    -8.06096671462069 * H1x1_2
176178    +          +    -4.21167567173811 * H1x1_3  +     -37.599240879379 * H1x1_4
176179    +          +     25.0531533838083 * H1x1_5  +     29.1428275636369 * H1x1_6
176180    +          +     4.90157629063847 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.47780447141489 * H1x1_1 + -8.06096671462069 * H1x1_2 +
-4.21167567173811 * H1x1_3 + -37.599240879379 * H1x1_4 + 25.0531533838083 * H1x1_5 +
29.1428275636369 * H1x1_6 + 4.90157629063847 * H1x1_7 ;
176181    +   P_DepVar1  =    -1.97718258496285 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97718258496285 + P_DepVar1 ;
176182    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
176183    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
176184    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
176185    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
176186    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
176187    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
176188    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
176189    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
176190    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
176191    +END;
MPRINT(EM_DIAGRAM):   END;
176192    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176193    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
176194    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
176195    +END;
MPRINT(EM_DIAGRAM):   END;
176196    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
176197    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
176198    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
176199    +END;
MPRINT(EM_DIAGRAM):   END;
176200    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
176201    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
176202    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
176203    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
176204    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
176205    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
176206    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
176207    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176208    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
176209    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176210    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
176211    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
176212    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
176213    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
176214    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
176215    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
176216    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
176217    +END;
MPRINT(EM_DIAGRAM):   END;
176218    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
176219    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
176220    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
176221    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
176222    +* Renaming variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural43;
176223    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176224    +* Renaming Posterior variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural43;
176225    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176226    +drop AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar1;
176227    +AutoNeural43_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar1 = P_DepVar1;
176228    +drop AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_P_DepVar0;
176229    +AutoNeural43_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural43_P_DepVar0 = P_DepVar0;
176230    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176231    +* Renaming Into variables for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural43;
176232    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176233    +length AutoNeural43_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural43_I_DepVar $32;
176234    +drop AutoNeural43_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_I_DepVar;
176235    +AutoNeural43_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural43_I_DepVar = I_DepVar;
176236    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176237    +* Renaming _WARN_ variable for AutoNeural43;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural43;
176238    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176239    +length AutoNeural43_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural43_WARN_ $4;
176240    +drop AutoNeural43_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural43_WARN_;
176241    +AutoNeural43_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural43_WARN_ = _WARN_;
176242    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176243    +* Ensmbl59: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 3 of 7;
176244    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176245    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176246    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
176247    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
176248    +* NODE: AutoNeural42;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural42;
176249    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176250    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
176251    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
176252    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
176253    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
176254    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
176255    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
176256    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
176257    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
176258    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
176259    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
176260    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
176261    +LENGTH _WARN_ $4
176262    +      F_DepVar  $ 12
176263    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
176264    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
176265    +
176266    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
176267    +
176268    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
176269    +
176270    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
176271    +
176272    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
176273    +
176274    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
176275    +
176276    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
176277    +
176278    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
176279    +
176280    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
176281    +
176282    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
176283    +
176284    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
176285    +
176286    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
176287    +
176288    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
176289    +
176290    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
176291    +
176292    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
176293    +
176294    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
176295    +
176296    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
176297    +
176298    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
176299    +
176300    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
176301    +
176302    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
176303    +
176304    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
176305    +
176306    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
176307    +
176308    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
176309    +
176310    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
176311    +
176312    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
176313    +
176314    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
176315    +
176316    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
176317    +
176318    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
176319    +
176320    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
176321    +
176322    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
176323    +
176324    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
176325    +
176326    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
176327    +
176328    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
176329    +
176330    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
176331    +
176332    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
176333    +
176334    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
176335    +
176336    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
176337    +
176338    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
176339    +
176340    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
176341    +
176342    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
176343    +
176344    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
176345    +
176346    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
176347    +
176348    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
176349    +
176350    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
176351    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
176352    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
176353    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
176354    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
176355    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176356    +end;
MPRINT(EM_DIAGRAM):   end;
176357    +else do;
MPRINT(EM_DIAGRAM):   else do;
176358    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
176359    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
176360    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176361    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
176362    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
176363    +   end;
MPRINT(EM_DIAGRAM):   end;
176364    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
176365    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
176366    +   end;
MPRINT(EM_DIAGRAM):   end;
176367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176368    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
176369    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
176370    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176371    +   end;
MPRINT(EM_DIAGRAM):   end;
176372    +end;
MPRINT(EM_DIAGRAM):   end;
176373    +
176374    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
176375    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
176376    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
176377    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
176378    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
176379    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176380    +end;
MPRINT(EM_DIAGRAM):   end;
176381    +else do;
MPRINT(EM_DIAGRAM):   else do;
176382    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
176383    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
176384    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176385    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
176386    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
176387    +   end;
MPRINT(EM_DIAGRAM):   end;
176388    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
176389    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
176390    +   end;
MPRINT(EM_DIAGRAM):   end;
176391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176392    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
176393    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
176394    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176395    +   end;
MPRINT(EM_DIAGRAM):   end;
176396    +end;
MPRINT(EM_DIAGRAM):   end;
176397    +
176398    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
176399    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
176400    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
176401    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
176402    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
176403    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176404    +end;
MPRINT(EM_DIAGRAM):   end;
176405    +else do;
MPRINT(EM_DIAGRAM):   else do;
176406    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
176407    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
176408    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176409    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
176410    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
176411    +   end;
MPRINT(EM_DIAGRAM):   end;
176412    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
176413    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
176414    +   end;
MPRINT(EM_DIAGRAM):   end;
176415    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176416    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
176417    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
176418    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176419    +   end;
MPRINT(EM_DIAGRAM):   end;
176420    +end;
MPRINT(EM_DIAGRAM):   end;
176421    +
176422    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
176423    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
176424    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
176425    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
176426    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
176427    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176428    +end;
MPRINT(EM_DIAGRAM):   end;
176429    +else do;
MPRINT(EM_DIAGRAM):   else do;
176430    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
176431    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
176432    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176433    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
176434    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
176435    +   end;
MPRINT(EM_DIAGRAM):   end;
176436    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
176437    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
176438    +   end;
MPRINT(EM_DIAGRAM):   end;
176439    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176440    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
176441    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
176442    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176443    +   end;
MPRINT(EM_DIAGRAM):   end;
176444    +end;
MPRINT(EM_DIAGRAM):   end;
176445    +
176446    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
176447    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
176448    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
176449    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
176450    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
176451    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176452    +end;
MPRINT(EM_DIAGRAM):   end;
176453    +else do;
MPRINT(EM_DIAGRAM):   else do;
176454    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
176455    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
176456    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176457    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
176458    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
176459    +   end;
MPRINT(EM_DIAGRAM):   end;
176460    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
176461    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
176462    +   end;
MPRINT(EM_DIAGRAM):   end;
176463    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176464    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
176465    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
176466    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176467    +   end;
MPRINT(EM_DIAGRAM):   end;
176468    +end;
MPRINT(EM_DIAGRAM):   end;
176469    +
176470    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
176471    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
176472    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
176473    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
176474    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
176475    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176476    +end;
MPRINT(EM_DIAGRAM):   end;
176477    +else do;
MPRINT(EM_DIAGRAM):   else do;
176478    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
176479    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
176480    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176481    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
176482    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
176483    +   end;
MPRINT(EM_DIAGRAM):   end;
176484    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
176485    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
176486    +   end;
MPRINT(EM_DIAGRAM):   end;
176487    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176488    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
176489    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
176490    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176491    +   end;
MPRINT(EM_DIAGRAM):   end;
176492    +end;
MPRINT(EM_DIAGRAM):   end;
176493    +
176494    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
176495    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
176496    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
176497    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
176498    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
176499    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
176500    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
176501    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
176502    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
176503    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
176504    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
176505    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
176506    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
176507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176508    +end;
MPRINT(EM_DIAGRAM):   end;
176509    +else do;
MPRINT(EM_DIAGRAM):   else do;
176510    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
176511    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
176512    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176513    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
176514    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
176515    +   end;
MPRINT(EM_DIAGRAM):   end;
176516    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
176517    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
176518    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
176519    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
176520    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
176521    +   end;
MPRINT(EM_DIAGRAM):   end;
176522    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
176523    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
176524    +   end;
MPRINT(EM_DIAGRAM):   end;
176525    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
176526    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
176527    +   end;
MPRINT(EM_DIAGRAM):   end;
176528    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
176529    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
176530    +   end;
MPRINT(EM_DIAGRAM):   end;
176531    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176532    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
176533    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
176534    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
176535    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
176536    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
176537    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176538    +   end;
MPRINT(EM_DIAGRAM):   end;
176539    +end;
MPRINT(EM_DIAGRAM):   end;
176540    +
176541    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
176542    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
176543    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
176544    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
176545    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
176546    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
176547    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
176548    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
176549    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
176550    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
176551    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
176552    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
176553    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
176554    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
176555    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176556    +end;
MPRINT(EM_DIAGRAM):   end;
176557    +else do;
MPRINT(EM_DIAGRAM):   else do;
176558    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
176559    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
176560    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176561    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
176562    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
176563    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
176564    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
176565    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
176566    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
176567    +         end;
MPRINT(EM_DIAGRAM):   end;
176568    +         else do;
MPRINT(EM_DIAGRAM):   else do;
176569    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
176570    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
176571    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
176572    +            end;
MPRINT(EM_DIAGRAM):   end;
176573    +         end;
MPRINT(EM_DIAGRAM):   end;
176574    +      end;
MPRINT(EM_DIAGRAM):   end;
176575    +      else do;
MPRINT(EM_DIAGRAM):   else do;
176576    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
176577    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
176578    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
176579    +         end;
MPRINT(EM_DIAGRAM):   end;
176580    +      end;
MPRINT(EM_DIAGRAM):   end;
176581    +   end;
MPRINT(EM_DIAGRAM):   end;
176582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176583    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
176584    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
176585    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
176586    +      end;
MPRINT(EM_DIAGRAM):   end;
176587    +      else do;
MPRINT(EM_DIAGRAM):   else do;
176588    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
176589    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
176590    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
176591    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
176592    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
176593    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
176594    +         end;
MPRINT(EM_DIAGRAM):   end;
176595    +      end;
MPRINT(EM_DIAGRAM):   end;
176596    +   end;
MPRINT(EM_DIAGRAM):   end;
176597    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
176598    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
176599    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
176600    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
176601    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
176602    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
176603    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176604    +   end;
MPRINT(EM_DIAGRAM):   end;
176605    +end;
MPRINT(EM_DIAGRAM):   end;
176606    +
176607    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176608    +*** Checking missing input Interval
176609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
176610    +
176611    +IF NMISS(
176612    +   Income ,
176613    +   Kidhome ,
176614    +   MntFishProducts ,
176615    +   MntFruits ,
176616    +   MntGoldProds ,
176617    +   MntMeatProducts ,
176618    +   MntSweetProducts ,
176619    +   MntWines ,
176620    +   NumCatalogPurchases ,
176621    +   NumDealsPurchases ,
176622    +   NumStorePurchases ,
176623    +   NumWebPurchases ,
176624    +   NumWebVisitsMonth ,
176625    +   Recency ,
176626    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
176627    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
176628    +
176629    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
176630    +END;
MPRINT(EM_DIAGRAM):   END;
176631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176632    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
176633    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176634    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
176635    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
176636    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
176637    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
176638    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
176639    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
176640    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
176641    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
176642    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
176643    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
176644    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
176645    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
176646    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
176647    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
176648    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
176649    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
176650    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
176651    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
176652    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
176653    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
176654    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
176655    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
176656    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
176657    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
176658    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
176659    +END;
MPRINT(EM_DIAGRAM):   END;
176660    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176661    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
176662    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
176663    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
176664    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
176665    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
176666    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
176667    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
176668    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
176669    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
176670    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
176671    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
176672    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
176673    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
176674    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
176675    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
176676    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
176677    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
176678    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
176679    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
176680    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
176681    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
176682    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
176683    +   ELSE S_NumCatalogPurchases
176684    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
176685    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
176686    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
176687    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
176688    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
176689    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
176690    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
176691    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
176692    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
176693    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
176694    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
176695    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
176696    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
176697    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
176698    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
176699    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
176700    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
176701    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
176702    +END;
MPRINT(EM_DIAGRAM):   END;
176703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176704    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
176705    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176706    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176707    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
176708    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176710    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
176711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176712    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
176713    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
176714    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
176715    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
176716    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
176717    +          +     0.13203247258141 * S_MntSweetProducts
176718    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
176719    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
176720    +          +     1.48881174203434 * S_NumStorePurchases
176721    +          +     2.06403591844726 * S_NumWebPurchases
176722    +          +    -0.09535558759694 * S_NumWebVisitsMonth
176723    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
176724    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome +
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 *
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases +
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases +
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth +
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
176725    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
176726    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
176727    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
176728    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
176729    +          +      0.3852767951223 * S_MntSweetProducts
176730    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
176731    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
176732    +          +     0.87686526091024 * S_NumStorePurchases
176733    +          +     0.48807967312664 * S_NumWebPurchases
176734    +          +     2.42770807785792 * S_NumWebVisitsMonth
176735    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
176736    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome +
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 *
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts +
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 *
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 *
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency +
-0.38694456406673 * S_Teenhome ;
176737    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
176738    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
176739    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
176740    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
176741    +          +      0.4461192743946 * S_MntSweetProducts
176742    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
176743    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
176744    +          +     1.26831094932108 * S_NumStorePurchases
176745    +          +     0.50819627174451 * S_NumWebPurchases
176746    +          +      0.5463426309003 * S_NumWebVisitsMonth
176747    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
176748    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome +
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 *
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts +
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 *
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 *
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency +
-0.99155600458731 * S_Teenhome ;
176749    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
176750    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
176751    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
176752    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
176753    +          +     0.73630834236265 * S_MntSweetProducts
176754    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
176755    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
176756    +          +     2.08815797619397 * S_NumStorePurchases
176757    +          +     1.47250122683369 * S_NumWebPurchases
176758    +          +    -1.95745344341946 * S_NumWebVisitsMonth
176759    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
176760    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome +
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 *
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases +
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases +
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth +
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
176761    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
176762    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
176763    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
176764    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
176765    +          +    -0.23438993753342 * S_MntSweetProducts
176766    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
176767    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
176768    +          +    -0.49697408067153 * S_NumStorePurchases
176769    +          +     0.41091736049576 * S_NumWebPurchases
176770    +          +     1.61180593172142 * S_NumWebVisitsMonth
176771    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
176772    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome +
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 *
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 *
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 *
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency +
-0.30863432234672 * S_Teenhome ;
176773    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
176774    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
176775    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
176776    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
176777    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 *
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 +
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
176778    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
176779    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
176780    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
176781    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
176782    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 +
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
176783    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
176784    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
176785    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
176786    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
176787    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 *
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 +
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
176788    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
176789    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
176790    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
176791    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
176792    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 *
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 +
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
176793    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
176794    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
176795    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
176796    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
176797    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 +
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
176798    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
176799    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
176800    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
176801    +          +    -0.14951932081311 * Marital_StatusDivorced
176802    +          +     0.08343648358981 * Marital_StatusMarried
176803    +          +    -0.52143432598374 * Marital_StatusSingle
176804    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle +
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation +
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced +
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle +
-0.17799942229122 * Marital_StatusTogether ;
176805    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
176806    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
176807    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
176808    +          +    -0.34495973695408 * Marital_StatusDivorced
176809    +          +    -0.30910829853532 * Marital_StatusMarried
176810    +          +     0.14431404541055 * Marital_StatusSingle
176811    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle +
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation +
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced +
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle +
-0.62673029935295 * Marital_StatusTogether ;
176812    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
176813    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
176814    +        EducationGraduation  +     0.05582780345024 * EducationMaster
176815    +          +     0.81191732290197 * Marital_StatusDivorced
176816    +          +    -2.53108753227171 * Marital_StatusMarried
176817    +          +     2.21769123178832 * Marital_StatusSingle
176818    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle +
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation +
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced +
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle +
-0.90613443546426 * Marital_StatusTogether ;
176819    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
176820    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
176821    +        EducationGraduation  +     0.52527957409681 * EducationMaster
176822    +          +    -1.26246836163545 * Marital_StatusDivorced
176823    +          +     0.73147045162506 * Marital_StatusMarried
176824    +          +     0.04252836823306 * Marital_StatusSingle
176825    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle +
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 *
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 *
Marital_StatusTogether ;
176826    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
176827    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
176828    +        EducationGraduation  +      0.0979905405754 * EducationMaster
176829    +          +    -0.25571808514992 * Marital_StatusDivorced
176830    +          +     0.20684027342845 * Marital_StatusMarried
176831    +          +    -0.36983627747986 * Marital_StatusSingle
176832    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle +
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 *
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 *
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 *
Marital_StatusTogether ;
176833    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
176834    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
176835    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
176836    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
176837    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
176838    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
176839    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
176840    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
176841    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
176842    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
176843    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
176844    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
176845    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
176846    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
176847    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
176848    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
176849    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
176850    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
176851    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
176852    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
176853    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
176854    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
176855    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
176856    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
176857    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
176858    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
176859    +END;
MPRINT(EM_DIAGRAM):   END;
176860    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176861    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
176862    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
176863    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
176864    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
176865    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
176866    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
176867    +END;
MPRINT(EM_DIAGRAM):   END;
176868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176869    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
176870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176871    +
176872    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
176873    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
176874    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
176875    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
176876    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
176877    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
176878    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
176879    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
176880    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
176881    +end;
MPRINT(EM_DIAGRAM):   end;
176882    +else do;
MPRINT(EM_DIAGRAM):   else do;
176883    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
176884    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
176885    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
176886    +   end;
MPRINT(EM_DIAGRAM):   end;
176887    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
176888    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
176889    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
176890    +   end;
MPRINT(EM_DIAGRAM):   end;
176891    +   else do;
MPRINT(EM_DIAGRAM):   else do;
176892    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
176893    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
176894    +   end;
MPRINT(EM_DIAGRAM):   end;
176895    +end;
MPRINT(EM_DIAGRAM):   end;
176896    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
176897    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
176898    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
176899    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 +
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 +
0.14986282100716 * H1x1_6 ;
176900    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
176901    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
176902    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
176903    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
176904    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
176905    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
176906    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
176907    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
176908    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
176909    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
176910    +END;
MPRINT(EM_DIAGRAM):   END;
176911    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
176912    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
176913    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
176914    +END;
MPRINT(EM_DIAGRAM):   END;
176915    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
176916    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
176917    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
176918    +END;
MPRINT(EM_DIAGRAM):   END;
176919    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
176920    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
176921    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
176922    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
176923    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
176924    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
176925    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
176926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176927    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
176928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
176929    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
176930    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
176931    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
176932    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
176933    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
176934    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
176935    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
176936    +END;
MPRINT(EM_DIAGRAM):   END;
176937    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
176938    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
176939    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
176940    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
176941    +* Renaming variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural42;
176942    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176943    +* Renaming Posterior variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural42;
176944    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176945    +drop AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar1;
176946    +AutoNeural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar1 = P_DepVar1;
176947    +drop AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_P_DepVar0;
176948    +AutoNeural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural42_P_DepVar0 = P_DepVar0;
176949    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176950    +* Renaming Into variables for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural42;
176951    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176952    +length AutoNeural42_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural42_I_DepVar $32;
176953    +drop AutoNeural42_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_I_DepVar;
176954    +AutoNeural42_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural42_I_DepVar = I_DepVar;
176955    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176956    +* Renaming _WARN_ variable for AutoNeural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural42;
176957    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176958    +length AutoNeural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural42_WARN_ $4;
176959    +drop AutoNeural42_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural42_WARN_;
176960    +AutoNeural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural42_WARN_ = _WARN_;
176961    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176962    +* Ensmbl59: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 4 of 7;
176963    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176964    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176965    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
176966    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
176967    +* NODE: AutoNeural41;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural41;
176968    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
176969    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
176970    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
176971    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
176972    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
176973    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
176974    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
176975    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
176976    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
176977    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
176978    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
176979    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
176980    +LENGTH _WARN_ $4
176981    +      F_DepVar  $ 12
176982    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
176983    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
176984    +
176985    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
176986    +
176987    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
176988    +
176989    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
176990    +
176991    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
176992    +
176993    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
176994    +
176995    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
176996    +
176997    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
176998    +
176999    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
177000    +
177001    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
177002    +
177003    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
177004    +
177005    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
177006    +
177007    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
177008    +
177009    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
177010    +
177011    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
177012    +
177013    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
177014    +
177015    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
177016    +
177017    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
177018    +
177019    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
177020    +
177021    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
177022    +
177023    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
177024    +
177025    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
177026    +
177027    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
177028    +
177029    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
177030    +
177031    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
177032    +
177033    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
177034    +
177035    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
177036    +
177037    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
177038    +
177039    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
177040    +
177041    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
177042    +
177043    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
177044    +
177045    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
177046    +
177047    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
177048    +
177049    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
177050    +
177051    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
177052    +
177053    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
177054    +
177055    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
177056    +
177057    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
177058    +
177059    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
177060    +
177061    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
177062    +
177063    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
177064    +
177065    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
177066    +
177067    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
177068    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
177069    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
177070    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
177071    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177072    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177073    +end;
MPRINT(EM_DIAGRAM):   end;
177074    +else do;
MPRINT(EM_DIAGRAM):   else do;
177075    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177076    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
177077    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177078    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177079    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
177080    +   end;
MPRINT(EM_DIAGRAM):   end;
177081    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177082    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
177083    +   end;
MPRINT(EM_DIAGRAM):   end;
177084    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177085    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
177086    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177087    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177088    +   end;
MPRINT(EM_DIAGRAM):   end;
177089    +end;
MPRINT(EM_DIAGRAM):   end;
177090    +
177091    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
177092    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
177093    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
177094    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
177095    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177096    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177097    +end;
MPRINT(EM_DIAGRAM):   end;
177098    +else do;
MPRINT(EM_DIAGRAM):   else do;
177099    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177100    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
177101    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177102    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177103    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
177104    +   end;
MPRINT(EM_DIAGRAM):   end;
177105    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177106    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
177107    +   end;
MPRINT(EM_DIAGRAM):   end;
177108    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177109    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
177110    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177111    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177112    +   end;
MPRINT(EM_DIAGRAM):   end;
177113    +end;
MPRINT(EM_DIAGRAM):   end;
177114    +
177115    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
177116    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
177117    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
177118    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
177119    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177120    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177121    +end;
MPRINT(EM_DIAGRAM):   end;
177122    +else do;
MPRINT(EM_DIAGRAM):   else do;
177123    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177124    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
177125    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177126    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177127    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
177128    +   end;
MPRINT(EM_DIAGRAM):   end;
177129    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177130    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
177131    +   end;
MPRINT(EM_DIAGRAM):   end;
177132    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177133    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
177134    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177135    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177136    +   end;
MPRINT(EM_DIAGRAM):   end;
177137    +end;
MPRINT(EM_DIAGRAM):   end;
177138    +
177139    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
177140    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
177141    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
177142    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
177143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177145    +end;
MPRINT(EM_DIAGRAM):   end;
177146    +else do;
MPRINT(EM_DIAGRAM):   else do;
177147    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177148    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
177149    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177150    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177151    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
177152    +   end;
MPRINT(EM_DIAGRAM):   end;
177153    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177154    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
177155    +   end;
MPRINT(EM_DIAGRAM):   end;
177156    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177157    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
177158    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177159    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177160    +   end;
MPRINT(EM_DIAGRAM):   end;
177161    +end;
MPRINT(EM_DIAGRAM):   end;
177162    +
177163    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
177164    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
177165    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
177166    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
177167    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177168    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177169    +end;
MPRINT(EM_DIAGRAM):   end;
177170    +else do;
MPRINT(EM_DIAGRAM):   else do;
177171    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177172    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
177173    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177174    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177175    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
177176    +   end;
MPRINT(EM_DIAGRAM):   end;
177177    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177178    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
177179    +   end;
MPRINT(EM_DIAGRAM):   end;
177180    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177181    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
177182    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177183    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177184    +   end;
MPRINT(EM_DIAGRAM):   end;
177185    +end;
MPRINT(EM_DIAGRAM):   end;
177186    +
177187    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
177188    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
177189    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
177190    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
177191    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177192    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177193    +end;
MPRINT(EM_DIAGRAM):   end;
177194    +else do;
MPRINT(EM_DIAGRAM):   else do;
177195    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177196    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
177197    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177198    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177199    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
177200    +   end;
MPRINT(EM_DIAGRAM):   end;
177201    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177202    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
177203    +   end;
MPRINT(EM_DIAGRAM):   end;
177204    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177205    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
177206    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177207    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177208    +   end;
MPRINT(EM_DIAGRAM):   end;
177209    +end;
MPRINT(EM_DIAGRAM):   end;
177210    +
177211    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
177212    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
177213    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
177214    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
177215    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
177216    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
177217    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
177218    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
177219    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
177220    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
177221    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
177222    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
177223    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177224    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177225    +end;
MPRINT(EM_DIAGRAM):   end;
177226    +else do;
MPRINT(EM_DIAGRAM):   else do;
177227    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
177228    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
177229    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177230    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
177231    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
177232    +   end;
MPRINT(EM_DIAGRAM):   end;
177233    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
177234    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
177235    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
177236    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
177237    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
177238    +   end;
MPRINT(EM_DIAGRAM):   end;
177239    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
177240    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
177241    +   end;
MPRINT(EM_DIAGRAM):   end;
177242    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
177243    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
177244    +   end;
MPRINT(EM_DIAGRAM):   end;
177245    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
177246    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
177247    +   end;
MPRINT(EM_DIAGRAM):   end;
177248    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177249    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
177250    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
177251    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
177252    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
177253    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177254    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177255    +   end;
MPRINT(EM_DIAGRAM):   end;
177256    +end;
MPRINT(EM_DIAGRAM):   end;
177257    +
177258    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
177259    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
177260    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
177261    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
177262    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
177263    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
177264    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
177265    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
177266    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
177267    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
177268    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
177269    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
177270    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
177271    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177272    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177273    +end;
MPRINT(EM_DIAGRAM):   end;
177274    +else do;
MPRINT(EM_DIAGRAM):   else do;
177275    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
177276    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
177277    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177278    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
177279    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
177280    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
177281    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
177282    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
177283    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
177284    +         end;
MPRINT(EM_DIAGRAM):   end;
177285    +         else do;
MPRINT(EM_DIAGRAM):   else do;
177286    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
177287    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
177288    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
177289    +            end;
MPRINT(EM_DIAGRAM):   end;
177290    +         end;
MPRINT(EM_DIAGRAM):   end;
177291    +      end;
MPRINT(EM_DIAGRAM):   end;
177292    +      else do;
MPRINT(EM_DIAGRAM):   else do;
177293    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
177294    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
177295    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
177296    +         end;
MPRINT(EM_DIAGRAM):   end;
177297    +      end;
MPRINT(EM_DIAGRAM):   end;
177298    +   end;
MPRINT(EM_DIAGRAM):   end;
177299    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177300    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
177301    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
177302    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
177303    +      end;
MPRINT(EM_DIAGRAM):   end;
177304    +      else do;
MPRINT(EM_DIAGRAM):   else do;
177305    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
177306    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
177307    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
177308    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
177309    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
177310    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
177311    +         end;
MPRINT(EM_DIAGRAM):   end;
177312    +      end;
MPRINT(EM_DIAGRAM):   end;
177313    +   end;
MPRINT(EM_DIAGRAM):   end;
177314    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
177315    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
177316    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
177317    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
177318    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
177319    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177320    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177321    +   end;
MPRINT(EM_DIAGRAM):   end;
177322    +end;
MPRINT(EM_DIAGRAM):   end;
177323    +
177324    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177325    +*** Checking missing input Interval
177326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
177327    +
177328    +IF NMISS(
177329    +   Income ,
177330    +   Kidhome ,
177331    +   MntFishProducts ,
177332    +   MntFruits ,
177333    +   MntGoldProds ,
177334    +   MntMeatProducts ,
177335    +   MntSweetProducts ,
177336    +   MntWines ,
177337    +   NumCatalogPurchases ,
177338    +   NumDealsPurchases ,
177339    +   NumStorePurchases ,
177340    +   NumWebPurchases ,
177341    +   NumWebVisitsMonth ,
177342    +   Recency ,
177343    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
177344    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
177345    +
177346    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177347    +END;
MPRINT(EM_DIAGRAM):   END;
177348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177349    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
177350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177351    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
177352    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
177353    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
177354    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
177355    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
177356    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
177357    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
177358    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
177359    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
177360    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
177361    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
177362    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
177363    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
177364    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
177365    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
177366    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
177367    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
177368    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
177369    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
177370    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
177371    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
177372    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
177373    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
177374    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
177375    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
177376    +END;
MPRINT(EM_DIAGRAM):   END;
177377    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
177378    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
177379    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
177380    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
177381    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
177382    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
177383    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
177384    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
177385    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
177386    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
177387    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
177388    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
177389    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
177390    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
177391    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
177392    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
177393    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
177394    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
177395    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
177396    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
177397    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
177398    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
177399    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
177400    +   ELSE S_NumCatalogPurchases
177401    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
177402    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
177403    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
177404    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
177405    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
177406    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
177407    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
177408    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
177409    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
177410    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
177411    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
177412    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
177413    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
177414    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
177415    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
177416    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
177417    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
177418    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
177419    +END;
MPRINT(EM_DIAGRAM):   END;
177420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177421    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
177422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177423    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177424    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
177425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177427    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
177428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177429    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
177430    +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
177431    +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
177432    +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
177433    +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
177434    +          +     -0.2030617183738 * S_MntSweetProducts
177435    +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
177436    +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
177437    +          +    -2.67074303965293 * S_NumStorePurchases
177438    +          +    -0.84694619593676 * S_NumWebPurchases
177439    +          +     1.78464945757548 * S_NumWebVisitsMonth
177440    +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
177441    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome +
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 *
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts +
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 *
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 *
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency +
0.12484193160086 * S_Teenhome ;
177442    +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
177443    +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
177444    +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
177445    +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
177446    +          +    -0.48853587268985 * S_MntSweetProducts
177447    +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
177448    +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
177449    +          +    -1.10593499185395 * S_NumStorePurchases
177450    +          +     -1.3003228821842 * S_NumWebPurchases
177451    +          +     2.87047131261901 * S_NumWebVisitsMonth
177452    +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
177453    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome +
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 *
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 *
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 *
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency +
-1.2351049603093 * S_Teenhome ;
177454    +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
177455    +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
177456    +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
177457    +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
177458    +          +    -0.27795094909244 * S_MntSweetProducts
177459    +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
177460    +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
177461    +          +    -0.41332499072246 * S_NumStorePurchases
177462    +          +     0.76626053410817 * S_NumWebPurchases
177463    +          +     0.81795211037296 * S_NumWebVisitsMonth
177464    +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
177465    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome +
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 *
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 *
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases +
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth +
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
177466    +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
177467    +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
177468    +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
177469    +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
177470    +          +    -0.08285620819867 * S_MntSweetProducts
177471    +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
177472    +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
177473    +          +    -0.17691098721908 * S_NumStorePurchases
177474    +          +     0.46246892093576 * S_NumWebPurchases
177475    +          +     2.06272832836908 * S_NumWebVisitsMonth
177476    +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
177477    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome +
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 *
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases +
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases +
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth +
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
177478    +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
177479    +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
177480    +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
177481    +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
177482    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 +
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
177483    +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
177484    +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
177485    +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
177486    +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
177487    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 +
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
177488    +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
177489    +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
177490    +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
177491    +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
177492    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 *
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 +
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
177493    +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
177494    +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
177495    +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
177496    +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
177497    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 *
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 +
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
177498    +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
177499    +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
177500    +        EducationGraduation  +    -0.51132563359945 * EducationMaster
177501    +          +     1.59526812226707 * Marital_StatusDivorced
177502    +          +    -0.74331656724296 * Marital_StatusMarried
177503    +          +     0.74316614019998 * Marital_StatusSingle
177504    +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle +
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation +
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced +
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle +
-1.36761487171479 * Marital_StatusTogether ;
177505    +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
177506    +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
177507    +        EducationGraduation  +     0.07596142730184 * EducationMaster
177508    +          +     0.94291322065497 * Marital_StatusDivorced
177509    +          +    -1.64331597630127 * Marital_StatusMarried
177510    +          +     2.21526196736604 * Marital_StatusSingle
177511    +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle +
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 *
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 *
Marital_StatusTogether ;
177512    +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
177513    +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
177514    +        EducationGraduation  +    -0.59791003195469 * EducationMaster
177515    +          +     1.63906979191221 * Marital_StatusDivorced
177516    +          +    -1.00497354965718 * Marital_StatusMarried
177517    +          +     0.70485207953497 * Marital_StatusSingle
177518    +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle +
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation +
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced +
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle +
-1.55917756143873 * Marital_StatusTogether ;
177519    +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
177520    +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
177521    +        EducationGraduation  +     -0.1847363034021 * EducationMaster
177522    +          +     0.75038128420756 * Marital_StatusDivorced
177523    +          +    -1.93055855198469 * Marital_StatusMarried
177524    +          +     0.73816798380254 * Marital_StatusSingle
177525    +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle +
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 *
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 *
Marital_StatusTogether ;
177526    +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
177527    +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
177528    +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
177529    +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
177530    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
177531    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
177532    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
177533    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
177534    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
177535    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
177536    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
177537    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
177538    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
177539    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
177540    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
177541    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
177542    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
177543    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
177544    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
177545    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
177546    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
177547    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
177548    +END;
MPRINT(EM_DIAGRAM):   END;
177549    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
177550    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
177551    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
177552    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
177553    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
177554    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
177555    +END;
MPRINT(EM_DIAGRAM):   END;
177556    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177557    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
177558    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177559    +
177560    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
177561    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
177562    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
177563    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
177564    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
177565    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177566    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
177567    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
177568    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
177569    +end;
MPRINT(EM_DIAGRAM):   end;
177570    +else do;
MPRINT(EM_DIAGRAM):   else do;
177571    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
177572    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
177573    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
177574    +   end;
MPRINT(EM_DIAGRAM):   end;
177575    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
177576    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
177577    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
177578    +   end;
MPRINT(EM_DIAGRAM):   end;
177579    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177580    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
177581    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
177582    +   end;
MPRINT(EM_DIAGRAM):   end;
177583    +end;
MPRINT(EM_DIAGRAM):   end;
177584    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
177585    +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
177586    +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
177587    +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 +
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
177588    +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
177589    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
177590    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
177591    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
177592    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
177593    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
177594    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
177595    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
177596    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
177597    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
177598    +END;
MPRINT(EM_DIAGRAM):   END;
177599    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
177600    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
177601    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
177602    +END;
MPRINT(EM_DIAGRAM):   END;
177603    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
177604    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
177605    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
177606    +END;
MPRINT(EM_DIAGRAM):   END;
177607    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
177608    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
177609    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
177610    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
177611    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
177612    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
177613    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
177614    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177615    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
177616    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
177617    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
177618    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
177619    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
177620    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
177621    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
177622    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
177623    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
177624    +END;
MPRINT(EM_DIAGRAM):   END;
177625    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
177626    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
177627    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
177628    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
177629    +* Renaming variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural41;
177630    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177631    +* Renaming Posterior variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural41;
177632    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177633    +drop AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar1;
177634    +AutoNeural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar1 = P_DepVar1;
177635    +drop AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_P_DepVar0;
177636    +AutoNeural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural41_P_DepVar0 = P_DepVar0;
177637    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177638    +* Renaming Into variables for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural41;
177639    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177640    +length AutoNeural41_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural41_I_DepVar $32;
177641    +drop AutoNeural41_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_I_DepVar;
177642    +AutoNeural41_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural41_I_DepVar = I_DepVar;
177643    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177644    +* Renaming _WARN_ variable for AutoNeural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural41;
177645    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177646    +length AutoNeural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural41_WARN_ $4;
177647    +drop AutoNeural41_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural41_WARN_;
177648    +AutoNeural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural41_WARN_ = _WARN_;
177649    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177650    +* Ensmbl59: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 5 of 7;
177651    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177652    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177653    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
177654    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
177655    +* NODE: AutoNeural47;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural47;
177656    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177657    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
177658    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
177659    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
177660    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
177661    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
177662    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
177663    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
177664    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
177665    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
177666    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
177667    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
177668    +LENGTH _WARN_ $4
177669    +      F_DepVar  $ 12
177670    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
177671    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
177672    +
177673    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
177674    +
177675    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
177676    +
177677    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
177678    +
177679    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
177680    +
177681    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
177682    +
177683    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
177684    +
177685    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
177686    +
177687    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
177688    +
177689    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
177690    +
177691    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
177692    +
177693    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
177694    +
177695    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
177696    +
177697    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
177698    +
177699    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
177700    +
177701    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
177702    +
177703    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
177704    +
177705    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
177706    +
177707    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
177708    +
177709    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
177710    +
177711    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
177712    +
177713    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
177714    +
177715    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
177716    +
177717    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
177718    +
177719    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
177720    +
177721    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
177722    +
177723    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
177724    +
177725    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
177726    +
177727    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
177728    +
177729    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
177730    +
177731    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
177732    +
177733    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
177734    +
177735    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
177736    +
177737    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
177738    +
177739    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
177740    +
177741    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
177742    +
177743    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
177744    +
177745    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
177746    +
177747    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
177748    +
177749    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
177750    +
177751    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
177752    +
177753    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
177754    +
177755    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
177756    +
177757    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
177758    +
177759    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
177760    +
177761    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
177762    +
177763    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
177764    +
177765    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
177766    +
177767    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
177768    +
177769    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
177770    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
177771    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
177772    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
177773    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177774    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177775    +end;
MPRINT(EM_DIAGRAM):   end;
177776    +else do;
MPRINT(EM_DIAGRAM):   else do;
177777    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177778    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
177779    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177780    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177781    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
177782    +   end;
MPRINT(EM_DIAGRAM):   end;
177783    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177784    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
177785    +   end;
MPRINT(EM_DIAGRAM):   end;
177786    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177787    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
177788    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177789    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177790    +   end;
MPRINT(EM_DIAGRAM):   end;
177791    +end;
MPRINT(EM_DIAGRAM):   end;
177792    +
177793    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
177794    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
177795    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
177796    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
177797    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177798    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177799    +end;
MPRINT(EM_DIAGRAM):   end;
177800    +else do;
MPRINT(EM_DIAGRAM):   else do;
177801    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177802    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
177803    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177804    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177805    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
177806    +   end;
MPRINT(EM_DIAGRAM):   end;
177807    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177808    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
177809    +   end;
MPRINT(EM_DIAGRAM):   end;
177810    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177811    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
177812    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177813    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177814    +   end;
MPRINT(EM_DIAGRAM):   end;
177815    +end;
MPRINT(EM_DIAGRAM):   end;
177816    +
177817    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
177818    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
177819    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
177820    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
177821    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177822    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177823    +end;
MPRINT(EM_DIAGRAM):   end;
177824    +else do;
MPRINT(EM_DIAGRAM):   else do;
177825    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177826    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
177827    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177828    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177829    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
177830    +   end;
MPRINT(EM_DIAGRAM):   end;
177831    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177832    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
177833    +   end;
MPRINT(EM_DIAGRAM):   end;
177834    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177835    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
177836    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177837    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177838    +   end;
MPRINT(EM_DIAGRAM):   end;
177839    +end;
MPRINT(EM_DIAGRAM):   end;
177840    +
177841    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
177842    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
177843    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
177844    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
177845    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177846    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177847    +end;
MPRINT(EM_DIAGRAM):   end;
177848    +else do;
MPRINT(EM_DIAGRAM):   else do;
177849    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177850    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
177851    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177852    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177853    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
177854    +   end;
MPRINT(EM_DIAGRAM):   end;
177855    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177856    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
177857    +   end;
MPRINT(EM_DIAGRAM):   end;
177858    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177859    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
177860    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177861    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177862    +   end;
MPRINT(EM_DIAGRAM):   end;
177863    +end;
MPRINT(EM_DIAGRAM):   end;
177864    +
177865    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
177866    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
177867    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
177868    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
177869    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177870    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177871    +end;
MPRINT(EM_DIAGRAM):   end;
177872    +else do;
MPRINT(EM_DIAGRAM):   else do;
177873    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177874    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
177875    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177876    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177877    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
177878    +   end;
MPRINT(EM_DIAGRAM):   end;
177879    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177880    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
177881    +   end;
MPRINT(EM_DIAGRAM):   end;
177882    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177883    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
177884    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177885    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177886    +   end;
MPRINT(EM_DIAGRAM):   end;
177887    +end;
MPRINT(EM_DIAGRAM):   end;
177888    +
177889    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
177890    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
177891    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
177892    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
177893    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177894    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177895    +end;
MPRINT(EM_DIAGRAM):   end;
177896    +else do;
MPRINT(EM_DIAGRAM):   else do;
177897    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
177898    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
177899    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177900    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
177901    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
177902    +   end;
MPRINT(EM_DIAGRAM):   end;
177903    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
177904    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
177905    +   end;
MPRINT(EM_DIAGRAM):   end;
177906    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177907    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
177908    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177909    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177910    +   end;
MPRINT(EM_DIAGRAM):   end;
177911    +end;
MPRINT(EM_DIAGRAM):   end;
177912    +
177913    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
177914    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
177915    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
177916    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
177917    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
177918    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
177919    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
177920    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
177921    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
177922    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
177923    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
177924    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
177925    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177926    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177927    +end;
MPRINT(EM_DIAGRAM):   end;
177928    +else do;
MPRINT(EM_DIAGRAM):   else do;
177929    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
177930    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
177931    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177932    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
177933    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
177934    +   end;
MPRINT(EM_DIAGRAM):   end;
177935    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
177936    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
177937    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
177938    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
177939    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
177940    +   end;
MPRINT(EM_DIAGRAM):   end;
177941    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
177942    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
177943    +   end;
MPRINT(EM_DIAGRAM):   end;
177944    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
177945    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
177946    +   end;
MPRINT(EM_DIAGRAM):   end;
177947    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
177948    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
177949    +   end;
MPRINT(EM_DIAGRAM):   end;
177950    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177951    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
177952    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
177953    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
177954    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
177955    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177956    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177957    +   end;
MPRINT(EM_DIAGRAM):   end;
177958    +end;
MPRINT(EM_DIAGRAM):   end;
177959    +
177960    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
177961    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
177962    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
177963    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
177964    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
177965    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
177966    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
177967    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
177968    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
177969    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
177970    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
177971    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
177972    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
177973    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177974    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177975    +end;
MPRINT(EM_DIAGRAM):   end;
177976    +else do;
MPRINT(EM_DIAGRAM):   else do;
177977    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
177978    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
177979    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
177980    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
177981    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
177982    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
177983    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
177984    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
177985    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
177986    +         end;
MPRINT(EM_DIAGRAM):   end;
177987    +         else do;
MPRINT(EM_DIAGRAM):   else do;
177988    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
177989    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
177990    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
177991    +            end;
MPRINT(EM_DIAGRAM):   end;
177992    +         end;
MPRINT(EM_DIAGRAM):   end;
177993    +      end;
MPRINT(EM_DIAGRAM):   end;
177994    +      else do;
MPRINT(EM_DIAGRAM):   else do;
177995    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
177996    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
177997    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
177998    +         end;
MPRINT(EM_DIAGRAM):   end;
177999    +      end;
MPRINT(EM_DIAGRAM):   end;
178000    +   end;
MPRINT(EM_DIAGRAM):   end;
178001    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178002    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
178003    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
178004    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178005    +      end;
MPRINT(EM_DIAGRAM):   end;
178006    +      else do;
MPRINT(EM_DIAGRAM):   else do;
178007    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
178008    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
178009    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
178010    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
178011    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
178012    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178013    +         end;
MPRINT(EM_DIAGRAM):   end;
178014    +      end;
MPRINT(EM_DIAGRAM):   end;
178015    +   end;
MPRINT(EM_DIAGRAM):   end;
178016    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
178017    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
178018    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
178019    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
178020    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
178021    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178022    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178023    +   end;
MPRINT(EM_DIAGRAM):   end;
178024    +end;
MPRINT(EM_DIAGRAM):   end;
178025    +
178026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178027    +*** Checking missing input Interval
178028    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
178029    +
178030    +IF NMISS(
178031    +   Income ,
178032    +   Kidhome ,
178033    +   MntFishProducts ,
178034    +   MntFruits ,
178035    +   MntGoldProds ,
178036    +   MntMeatProducts ,
178037    +   MntSweetProducts ,
178038    +   MntWines ,
178039    +   NumCatalogPurchases ,
178040    +   NumDealsPurchases ,
178041    +   NumStorePurchases ,
178042    +   NumWebPurchases ,
178043    +   NumWebVisitsMonth ,
178044    +   Recency ,
178045    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
178046    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
178047    +
178048    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178049    +END;
MPRINT(EM_DIAGRAM):   END;
178050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178051    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
178052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178053    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178054    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
178055    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
178056    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
178057    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
178058    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
178059    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
178060    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
178061    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
178062    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
178063    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
178064    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
178065    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
178066    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
178067    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
178068    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
178069    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
178070    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
178071    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
178072    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
178073    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
178074    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
178075    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
178076    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
178077    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
178078    +END;
MPRINT(EM_DIAGRAM):   END;
178079    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178080    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
178081    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
178082    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
178083    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
178084    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
178085    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
178086    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
178087    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
178088    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
178089    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
178090    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
178091    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
178092    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
178093    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
178094    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
178095    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
178096    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
178097    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
178098    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
178099    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
178100    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
178101    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
178102    +   ELSE S_NumCatalogPurchases
178103    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
178104    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
178105    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
178106    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
178107    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
178108    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
178109    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
178110    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
178111    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
178112    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
178113    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
178114    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
178115    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
178116    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
178117    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
178118    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
178119    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
178120    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
178121    +END;
MPRINT(EM_DIAGRAM):   END;
178122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178123    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
178124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178126    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
178127    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178129    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
178130    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178131    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178132    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
178133    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
178134    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
178135    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
178136    +          +    -2.37073629008864 * S_MntSweetProducts
178137    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
178138    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
178139    +          +    -1.29021742502316 * S_NumStorePurchases
178140    +          +    -0.00949168969466 * S_NumWebPurchases
178141    +          +    -0.32248137192321 * S_NumWebVisitsMonth
178142    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
178143    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome +
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 *
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 *
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency +
-0.22439654268554 * S_Teenhome ;
178144    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
178145    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
178146    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
178147    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
178148    +          +     0.41126087093412 * S_MntSweetProducts
178149    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
178150    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
178151    +          +      0.2319226227964 * S_NumStorePurchases
178152    +          +     0.31190969795517 * S_NumWebPurchases
178153    +          +      -1.987305550542 * S_NumWebVisitsMonth
178154    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
178155    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome +
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 *
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases +
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases +
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth +
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
178156    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
178157    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
178158    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
178159    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
178160    +          +    -0.73991431726966 * S_MntSweetProducts
178161    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
178162    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
178163    +          +    -2.50826402419251 * S_NumStorePurchases
178164    +          +    -0.30764477738015 * S_NumWebPurchases
178165    +          +     1.21240794582671 * S_NumWebVisitsMonth
178166    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
178167    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome +
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 *
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 *
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases +
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth +
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
178168    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
178169    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
178170    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
178171    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
178172    +          +     1.07674028011002 * S_MntSweetProducts
178173    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
178174    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
178175    +          +    -0.47776935727231 * S_NumStorePurchases
178176    +          +     -0.5890810666834 * S_NumWebPurchases
178177    +          +      1.3845716796855 * S_NumWebVisitsMonth
178178    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
178179    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome +
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 *
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 *
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency +
-0.32813220931783 * S_Teenhome ;
178180    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
178181    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
178182    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
178183    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
178184    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 *
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 +
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
178185    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
178186    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
178187    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
178188    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
178189    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 *
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 +
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
178190    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
178191    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
178192    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
178193    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
178194    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 *
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 +
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
178195    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
178196    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
178197    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
178198    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
178199    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 *
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 +
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
178200    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
178201    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
178202    +        EducationGraduation  +     0.68592368666749 * EducationMaster
178203    +          +     0.38999748028122 * Marital_StatusDivorced
178204    +          +     0.44180844463279 * Marital_StatusMarried
178205    +          +     0.63824884669155 * Marital_StatusSingle
178206    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle +
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 *
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 *
Marital_StatusTogether ;
178207    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
178208    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
178209    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
178210    +          +    -0.95537871859519 * Marital_StatusDivorced
178211    +          +     2.55061153921286 * Marital_StatusMarried
178212    +          +    -1.78007154396711 * Marital_StatusSingle
178213    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle +
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 *
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 *
Marital_StatusTogether ;
178214    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
178215    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
178216    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
178217    +          +     1.29930912124343 * Marital_StatusDivorced
178218    +          +    -1.63037830924789 * Marital_StatusMarried
178219    +          +     0.19040732776086 * Marital_StatusSingle
178220    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle +
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation +
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced +
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle +
-3.9038060950259 * Marital_StatusTogether ;
178221    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
178222    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
178223    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
178224    +          +     -0.3129003025095 * Marital_StatusDivorced
178225    +          +     0.00843550425239 * Marital_StatusMarried
178226    +          +    -0.20416436114776 * Marital_StatusSingle
178227    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle +
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation +
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced +
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle +
1.08624823622502 * Marital_StatusTogether ;
178228    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
178229    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
178230    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
178231    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
178232    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
178233    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
178234    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
178235    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
178236    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
178237    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
178238    +END;
MPRINT(EM_DIAGRAM):   END;
178239    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178240    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
178241    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
178242    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
178243    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
178244    +END;
MPRINT(EM_DIAGRAM):   END;
178245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178246    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
178247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178248    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178249    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
178250    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
178251    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
178252    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
178253    +          +    -0.90866858123806 * S_MntSweetProducts
178254    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
178255    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
178256    +          +     1.45805686107789 * S_NumStorePurchases
178257    +          +     1.48794767642409 * S_NumWebPurchases
178258    +          +    -1.24357395997191 * S_NumWebVisitsMonth
178259    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
178260    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome +
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 *
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 *
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases +
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth +
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
178261    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
178262    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
178263    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
178264    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
178265    +          +     1.05010358762976 * S_MntSweetProducts
178266    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
178267    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
178268    +          +    -2.04318529474165 * S_NumStorePurchases
178269    +          +     1.64478964728594 * S_NumWebPurchases
178270    +          +    -0.74790322980646 * S_NumWebVisitsMonth
178271    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
178272    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome +
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 *
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 *
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency +
-1.17558204887145 * S_Teenhome ;
178273    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
178274    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
178275    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
178276    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
178277    +          +     0.39974532423377 * S_MntSweetProducts
178278    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
178279    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
178280    +          +     0.70805557348415 * S_NumStorePurchases
178281    +          +     2.40362900277228 * S_NumWebPurchases
178282    +          +    -0.84521247676043 * S_NumWebVisitsMonth
178283    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
178284    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome +
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 *
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases +
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases +
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth +
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
178285    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
178286    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
178287    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
178288    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
178289    +          +     1.67907268159197 * S_MntSweetProducts
178290    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
178291    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
178292    +          +      0.0818178054474 * S_NumStorePurchases
178293    +          +     0.21533198164279 * S_NumWebPurchases
178294    +          +     2.13590425604302 * S_NumWebVisitsMonth
178295    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
178296    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome +
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 *
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 *
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency +
-0.82288425478762 * S_Teenhome ;
178297    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
178298    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
178299    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
178300    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
178301    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 *
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 +
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
178302    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
178303    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
178304    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
178305    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
178306    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 *
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 +
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
178307    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
178308    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
178309    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
178310    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
178311    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 *
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 +
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
178312    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
178313    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
178314    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
178315    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
178316    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 *
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 +
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
178317    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
178318    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
178319    +        EducationGraduation  +     0.78238700450794 * EducationMaster
178320    +          +     0.09735596304222 * Marital_StatusDivorced
178321    +          +    -0.41892050812825 * Marital_StatusMarried
178322    +          +    -1.42753782654911 * Marital_StatusSingle
178323    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle +
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 *
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 *
Marital_StatusTogether ;
178324    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
178325    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
178326    +        EducationGraduation  +     1.03407121736627 * EducationMaster
178327    +          +    -0.32415267410507 * Marital_StatusDivorced
178328    +          +     0.49045578856782 * Marital_StatusMarried
178329    +          +    -1.95612005933176 * Marital_StatusSingle
178330    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle +
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 *
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 *
Marital_StatusTogether ;
178331    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
178332    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
178333    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
178334    +          +    -1.25715350788627 * Marital_StatusDivorced
178335    +          +     0.74269511935299 * Marital_StatusMarried
178336    +          +    -0.27394822792771 * Marital_StatusSingle
178337    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle +
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 *
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 *
Marital_StatusTogether ;
178338    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
178339    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
178340    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
178341    +          +    -1.42754006114782 * Marital_StatusDivorced
178342    +          +    -0.13979120103654 * Marital_StatusMarried
178343    +          +    -1.66244370644258 * Marital_StatusSingle
178344    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle +
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 *
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 *
Marital_StatusTogether ;
178345    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
178346    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
178347    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
178348    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
178349    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
178350    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
178351    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
178352    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
178353    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
178354    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
178355    +END;
MPRINT(EM_DIAGRAM):   END;
178356    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178357    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
178358    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
178359    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
178360    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
178361    +END;
MPRINT(EM_DIAGRAM):   END;
178362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178363    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
178364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178365    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178366    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
178367    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 +
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
178368    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
178369    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 +
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
178370    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
178371    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 +
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
178372    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
178373    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 +
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
178374    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
178375    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
178376    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
178377    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
178378    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
178379    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
178380    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
178381    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
178382    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
178383    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
178384    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
178385    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
178386    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
178387    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
178388    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
178389    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
178390    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
178391    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
178392    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
178393    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
178394    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
178395    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
178396    +END;
MPRINT(EM_DIAGRAM):   END;
178397    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178398    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
178399    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
178400    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
178401    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
178402    +END;
MPRINT(EM_DIAGRAM):   END;
178403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178404    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
178405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178406    +
178407    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
178408    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
178409    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
178410    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
178411    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
178412    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
178413    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
178414    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
178415    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
178416    +end;
MPRINT(EM_DIAGRAM):   end;
178417    +else do;
MPRINT(EM_DIAGRAM):   else do;
178418    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
178419    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
178420    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
178421    +   end;
MPRINT(EM_DIAGRAM):   end;
178422    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
178423    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
178424    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
178425    +   end;
MPRINT(EM_DIAGRAM):   end;
178426    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178427    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
178428    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
178429    +   end;
MPRINT(EM_DIAGRAM):   end;
178430    +end;
MPRINT(EM_DIAGRAM):   end;
178431    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178432    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
178433    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 +
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
178434    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
178435    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
178436    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
178437    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
178438    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
178439    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
178440    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
178441    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
178442    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
178443    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
178444    +END;
MPRINT(EM_DIAGRAM):   END;
178445    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178446    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
178447    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
178448    +END;
MPRINT(EM_DIAGRAM):   END;
178449    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
178450    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
178451    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
178452    +END;
MPRINT(EM_DIAGRAM):   END;
178453    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
178454    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
178455    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
178456    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
178457    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
178458    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
178459    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
178460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178461    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
178462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178463    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
178464    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
178465    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
178466    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
178467    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
178468    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
178469    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
178470    +END;
MPRINT(EM_DIAGRAM):   END;
178471    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
178472    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
178473    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
178474    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
178475    +* Renaming variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural47;
178476    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178477    +* Renaming Posterior variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural47;
178478    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178479    +drop AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar1;
178480    +AutoNeural47_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar1 = P_DepVar1;
178481    +drop AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_P_DepVar0;
178482    +AutoNeural47_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural47_P_DepVar0 = P_DepVar0;
178483    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178484    +* Renaming Into variables for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural47;
178485    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178486    +length AutoNeural47_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural47_I_DepVar $32;
178487    +drop AutoNeural47_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_I_DepVar;
178488    +AutoNeural47_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural47_I_DepVar = I_DepVar;
178489    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178490    +* Renaming _WARN_ variable for AutoNeural47;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural47;
178491    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178492    +length AutoNeural47_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural47_WARN_ $4;
178493    +drop AutoNeural47_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural47_WARN_;
178494    +AutoNeural47_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural47_WARN_ = _WARN_;
178495    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178496    +* Ensmbl59: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 6 of 7;
178497    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178498    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178499    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
178500    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
178501    +* NODE: AutoNeural45;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural45;
178502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178503    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
178504    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
178505    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
178506    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
178507    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
178508    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
178509    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
178510    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
178511    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
178512    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
178513    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
178514    +LENGTH _WARN_ $4
178515    +      F_DepVar  $ 12
178516    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
178517    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
178518    +
178519    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
178520    +
178521    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
178522    +
178523    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
178524    +
178525    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
178526    +
178527    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
178528    +
178529    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
178530    +
178531    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
178532    +
178533    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
178534    +
178535    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
178536    +
178537    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
178538    +
178539    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
178540    +
178541    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
178542    +
178543    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
178544    +
178545    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
178546    +
178547    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
178548    +
178549    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
178550    +
178551    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
178552    +
178553    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
178554    +
178555    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
178556    +
178557    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
178558    +
178559    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
178560    +
178561    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
178562    +
178563    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
178564    +
178565    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
178566    +
178567    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
178568    +
178569    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
178570    +
178571    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
178572    +
178573    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
178574    +
178575    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
178576    +
178577    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
178578    +
178579    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
178580    +
178581    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
178582    +
178583    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
178584    +
178585    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
178586    +
178587    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
178588    +
178589    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
178590    +
178591    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
178592    +
178593    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
178594    +
178595    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
178596    +
178597    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
178598    +
178599    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
178600    +
178601    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
178602    +
178603    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
178604    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
178605    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
178606    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
178607    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178608    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178609    +end;
MPRINT(EM_DIAGRAM):   end;
178610    +else do;
MPRINT(EM_DIAGRAM):   else do;
178611    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
178612    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
178613    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
178614    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
178615    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
178616    +   end;
MPRINT(EM_DIAGRAM):   end;
178617    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
178618    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
178619    +   end;
MPRINT(EM_DIAGRAM):   end;
178620    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178621    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
178622    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178623    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178624    +   end;
MPRINT(EM_DIAGRAM):   end;
178625    +end;
MPRINT(EM_DIAGRAM):   end;
178626    +
178627    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
178628    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
178629    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
178630    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
178631    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178632    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178633    +end;
MPRINT(EM_DIAGRAM):   end;
178634    +else do;
MPRINT(EM_DIAGRAM):   else do;
178635    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
178636    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
178637    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
178638    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
178639    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
178640    +   end;
MPRINT(EM_DIAGRAM):   end;
178641    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
178642    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
178643    +   end;
MPRINT(EM_DIAGRAM):   end;
178644    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178645    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
178646    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178647    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178648    +   end;
MPRINT(EM_DIAGRAM):   end;
178649    +end;
MPRINT(EM_DIAGRAM):   end;
178650    +
178651    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
178652    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
178653    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
178654    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
178655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178657    +end;
MPRINT(EM_DIAGRAM):   end;
178658    +else do;
MPRINT(EM_DIAGRAM):   else do;
178659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
178660    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
178661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
178662    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
178663    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
178664    +   end;
MPRINT(EM_DIAGRAM):   end;
178665    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
178666    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
178667    +   end;
MPRINT(EM_DIAGRAM):   end;
178668    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178669    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
178670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178672    +   end;
MPRINT(EM_DIAGRAM):   end;
178673    +end;
MPRINT(EM_DIAGRAM):   end;
178674    +
178675    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
178676    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
178677    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
178678    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
178679    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178680    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178681    +end;
MPRINT(EM_DIAGRAM):   end;
178682    +else do;
MPRINT(EM_DIAGRAM):   else do;
178683    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
178684    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
178685    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
178686    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
178687    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
178688    +   end;
MPRINT(EM_DIAGRAM):   end;
178689    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
178690    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
178691    +   end;
MPRINT(EM_DIAGRAM):   end;
178692    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178693    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
178694    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178695    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178696    +   end;
MPRINT(EM_DIAGRAM):   end;
178697    +end;
MPRINT(EM_DIAGRAM):   end;
178698    +
178699    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
178700    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
178701    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
178702    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
178703    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178704    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178705    +end;
MPRINT(EM_DIAGRAM):   end;
178706    +else do;
MPRINT(EM_DIAGRAM):   else do;
178707    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
178708    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
178709    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
178710    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
178711    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
178712    +   end;
MPRINT(EM_DIAGRAM):   end;
178713    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
178714    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
178715    +   end;
MPRINT(EM_DIAGRAM):   end;
178716    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178717    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
178718    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178719    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178720    +   end;
MPRINT(EM_DIAGRAM):   end;
178721    +end;
MPRINT(EM_DIAGRAM):   end;
178722    +
178723    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
178724    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
178725    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
178726    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
178727    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178728    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178729    +end;
MPRINT(EM_DIAGRAM):   end;
178730    +else do;
MPRINT(EM_DIAGRAM):   else do;
178731    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
178732    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
178733    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
178734    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
178735    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
178736    +   end;
MPRINT(EM_DIAGRAM):   end;
178737    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
178738    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
178739    +   end;
MPRINT(EM_DIAGRAM):   end;
178740    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178741    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
178742    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178743    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178744    +   end;
MPRINT(EM_DIAGRAM):   end;
178745    +end;
MPRINT(EM_DIAGRAM):   end;
178746    +
178747    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
178748    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
178749    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
178750    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
178751    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
178752    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
178753    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
178754    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
178755    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
178756    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
178757    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
178758    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
178759    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178760    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178761    +end;
MPRINT(EM_DIAGRAM):   end;
178762    +else do;
MPRINT(EM_DIAGRAM):   else do;
178763    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
178764    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
178765    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
178766    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
178767    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
178768    +   end;
MPRINT(EM_DIAGRAM):   end;
178769    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
178770    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
178771    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
178772    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
178773    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
178774    +   end;
MPRINT(EM_DIAGRAM):   end;
178775    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
178776    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
178777    +   end;
MPRINT(EM_DIAGRAM):   end;
178778    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
178779    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
178780    +   end;
MPRINT(EM_DIAGRAM):   end;
178781    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
178782    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
178783    +   end;
MPRINT(EM_DIAGRAM):   end;
178784    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178785    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
178786    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
178787    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
178788    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
178789    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178790    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178791    +   end;
MPRINT(EM_DIAGRAM):   end;
178792    +end;
MPRINT(EM_DIAGRAM):   end;
178793    +
178794    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
178795    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
178796    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
178797    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
178798    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
178799    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
178800    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
178801    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
178802    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
178803    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
178804    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
178805    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
178806    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
178807    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178808    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178809    +end;
MPRINT(EM_DIAGRAM):   end;
178810    +else do;
MPRINT(EM_DIAGRAM):   else do;
178811    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
178812    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
178813    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
178814    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
178815    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
178816    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
178817    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
178818    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
178819    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178820    +         end;
MPRINT(EM_DIAGRAM):   end;
178821    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178822    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
178823    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
178824    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178825    +            end;
MPRINT(EM_DIAGRAM):   end;
178826    +         end;
MPRINT(EM_DIAGRAM):   end;
178827    +      end;
MPRINT(EM_DIAGRAM):   end;
178828    +      else do;
MPRINT(EM_DIAGRAM):   else do;
178829    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
178830    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
178831    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178832    +         end;
MPRINT(EM_DIAGRAM):   end;
178833    +      end;
MPRINT(EM_DIAGRAM):   end;
178834    +   end;
MPRINT(EM_DIAGRAM):   end;
178835    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178836    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
178837    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
178838    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178839    +      end;
MPRINT(EM_DIAGRAM):   end;
178840    +      else do;
MPRINT(EM_DIAGRAM):   else do;
178841    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
178842    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
178843    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
178844    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
178845    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
178846    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178847    +         end;
MPRINT(EM_DIAGRAM):   end;
178848    +      end;
MPRINT(EM_DIAGRAM):   end;
178849    +   end;
MPRINT(EM_DIAGRAM):   end;
178850    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
178851    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
178852    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
178853    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
178854    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
178855    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178856    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178857    +   end;
MPRINT(EM_DIAGRAM):   end;
178858    +end;
MPRINT(EM_DIAGRAM):   end;
178859    +
178860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178861    +*** Checking missing input Interval
178862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
178863    +
178864    +IF NMISS(
178865    +   Income ,
178866    +   Kidhome ,
178867    +   MntFishProducts ,
178868    +   MntFruits ,
178869    +   MntGoldProds ,
178870    +   MntMeatProducts ,
178871    +   MntSweetProducts ,
178872    +   MntWines ,
178873    +   NumCatalogPurchases ,
178874    +   NumDealsPurchases ,
178875    +   NumStorePurchases ,
178876    +   NumWebPurchases ,
178877    +   NumWebVisitsMonth ,
178878    +   Recency ,
178879    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
178880    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
178881    +
178882    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178883    +END;
MPRINT(EM_DIAGRAM):   END;
178884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178885    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
178886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178887    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178888    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
178889    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
178890    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
178891    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
178892    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
178893    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
178894    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
178895    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
178896    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
178897    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
178898    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
178899    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
178900    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
178901    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
178902    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
178903    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
178904    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
178905    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
178906    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
178907    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
178908    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
178909    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
178910    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
178911    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
178912    +END;
MPRINT(EM_DIAGRAM):   END;
178913    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178914    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
178915    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
178916    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
178917    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
178918    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
178919    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
178920    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
178921    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
178922    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
178923    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
178924    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
178925    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
178926    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
178927    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
178928    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
178929    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
178930    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
178931    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
178932    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
178933    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
178934    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
178935    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
178936    +   ELSE S_NumCatalogPurchases
178937    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
178938    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
178939    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
178940    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
178941    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
178942    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
178943    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
178944    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
178945    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
178946    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
178947    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
178948    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
178949    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
178950    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
178951    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
178952    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
178953    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
178954    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
178955    +END;
MPRINT(EM_DIAGRAM):   END;
178956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178957    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
178958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178960    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
178961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178963    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
178964    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178965    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178966    +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
178967    +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
178968    +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
178969    +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
178970    +          +    -0.44570165516063 * S_MntSweetProducts
178971    +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
178972    +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
178973    +          +    -1.76291210288234 * S_NumStorePurchases
178974    +          +    -2.02392782824649 * S_NumWebPurchases
178975    +          +     1.28490910676992 * S_NumWebVisitsMonth
178976    +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
178977    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome +
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 *
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts +
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 *
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 *
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency +
-0.59235237740193 * S_Teenhome ;
178978    +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
178979    +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
178980    +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
178981    +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
178982    +          +     0.29239311560831 * S_MntSweetProducts
178983    +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
178984    +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
178985    +          +     0.94246962588327 * S_NumStorePurchases
178986    +          +      0.9680353780544 * S_NumWebPurchases
178987    +          +    -2.21882487627334 * S_NumWebVisitsMonth
178988    +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
178989    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome +
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 *
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 *
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency +
0.6539185986418 * S_Teenhome ;
178990    +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
178991    +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
178992    +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
178993    +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
178994    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 +
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
178995    +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
178996    +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
178997    +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
178998    +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
178999    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 *
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 +
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
179000    +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
179001    +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
179002    +        EducationGraduation  +     0.44122744485667 * EducationMaster
179003    +          +    -0.37907342816265 * Marital_StatusDivorced
179004    +          +     0.12610640291685 * Marital_StatusMarried
179005    +          +     0.51984913420219 * Marital_StatusSingle
179006    +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle +
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 *
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 *
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 *
Marital_StatusTogether ;
179007    +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
179008    +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
179009    +        EducationGraduation  +    -0.26642525612671 * EducationMaster
179010    +          +    -1.03351623479699 * Marital_StatusDivorced
179011    +          +     1.44541386522162 * Marital_StatusMarried
179012    +          +    -1.03636573521294 * Marital_StatusSingle
179013    +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle +
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation +
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced +
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle +
1.72091885709893 * Marital_StatusTogether ;
179014    +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
179015    +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
179016    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
179017    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
179018    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
179019    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
179020    +END;
MPRINT(EM_DIAGRAM):   END;
179021    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179022    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
179023    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
179024    +END;
MPRINT(EM_DIAGRAM):   END;
179025    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179026    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
179027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179028    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179029    +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
179030    +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
179031    +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
179032    +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
179033    +          +    -0.56491281055157 * S_MntSweetProducts
179034    +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
179035    +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
179036    +          +    -0.90340706582786 * S_NumStorePurchases
179037    +          +    -1.91501626179453 * S_NumWebPurchases
179038    +          +     0.10121028558369 * S_NumWebVisitsMonth
179039    +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
179040    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome +
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 *
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases +
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases +
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth +
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
179041    +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
179042    +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
179043    +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
179044    +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
179045    +          +    -0.23001625322332 * S_MntSweetProducts
179046    +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
179047    +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
179048    +          +    -2.13716920911877 * S_NumStorePurchases
179049    +          +    -0.33508808117738 * S_NumWebPurchases
179050    +          +     -2.0809737926136 * S_NumWebVisitsMonth
179051    +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
179052    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome +
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 *
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 *
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases +
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth +
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
179053    +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
179054    +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
179055    +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
179056    +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
179057    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 *
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 +
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
179058    +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
179059    +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
179060    +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
179061    +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
179062    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 +
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
179063    +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
179064    +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
179065    +        EducationGraduation  +     0.48964474451872 * EducationMaster
179066    +          +     1.22462877499103 * Marital_StatusDivorced
179067    +          +     0.55976057621985 * Marital_StatusMarried
179068    +          +     -0.3198252517086 * Marital_StatusSingle
179069    +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle +
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 *
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 *
Marital_StatusTogether ;
179070    +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
179071    +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
179072    +        EducationGraduation  +    -1.59533016160829 * EducationMaster
179073    +          +     0.32730811728353 * Marital_StatusDivorced
179074    +          +     1.61519773132998 * Marital_StatusMarried
179075    +          +    -1.42728303824254 * Marital_StatusSingle
179076    +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle +
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation +
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced +
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle +
1.39334432128351 * Marital_StatusTogether ;
179077    +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
179078    +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
179079    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
179080    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
179081    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
179082    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
179083    +END;
MPRINT(EM_DIAGRAM):   END;
179084    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179085    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
179086    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
179087    +END;
MPRINT(EM_DIAGRAM):   END;
179088    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179089    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
179090    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179091    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179092    +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
179093    +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
179094    +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
179095    +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2
;
179096    +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
179097    +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
179098    +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
179099    +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
179100    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
179101    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
179102    +END;
MPRINT(EM_DIAGRAM):   END;
179103    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179104    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
179105    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
179106    +END;
MPRINT(EM_DIAGRAM):   END;
179107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179108    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
179109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179110    +
179111    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
179112    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
179113    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
179114    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
179115    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
179116    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179117    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
179118    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
179119    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
179120    +end;
MPRINT(EM_DIAGRAM):   end;
179121    +else do;
MPRINT(EM_DIAGRAM):   else do;
179122    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
179123    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
179124    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
179125    +   end;
MPRINT(EM_DIAGRAM):   end;
179126    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
179127    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
179128    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
179129    +   end;
MPRINT(EM_DIAGRAM):   end;
179130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179131    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
179132    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
179133    +   end;
MPRINT(EM_DIAGRAM):   end;
179134    +end;
MPRINT(EM_DIAGRAM):   end;
179135    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179136    +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
179137    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
179138    +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
179139    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
179140    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
179141    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
179142    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
179143    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
179144    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
179145    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
179146    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
179147    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
179148    +END;
MPRINT(EM_DIAGRAM):   END;
179149    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179150    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
179151    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
179152    +END;
MPRINT(EM_DIAGRAM):   END;
179153    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
179154    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
179155    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
179156    +END;
MPRINT(EM_DIAGRAM):   END;
179157    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
179158    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
179159    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
179160    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
179161    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
179162    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
179163    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
179164    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179165    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
179166    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179167    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
179168    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
179169    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
179170    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
179171    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
179172    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
179173    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
179174    +END;
MPRINT(EM_DIAGRAM):   END;
179175    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
179176    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
179177    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
179178    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
179179    +* Renaming variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural45;
179180    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179181    +* Renaming Posterior variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural45;
179182    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179183    +drop AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar1;
179184    +AutoNeural45_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar1 = P_DepVar1;
179185    +drop AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_P_DepVar0;
179186    +AutoNeural45_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural45_P_DepVar0 = P_DepVar0;
179187    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179188    +* Renaming Into variables for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural45;
179189    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179190    +length AutoNeural45_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural45_I_DepVar $32;
179191    +drop AutoNeural45_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_I_DepVar;
179192    +AutoNeural45_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural45_I_DepVar = I_DepVar;
179193    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179194    +* Renaming _WARN_ variable for AutoNeural45;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural45;
179195    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179196    +length AutoNeural45_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural45_WARN_ $4;
179197    +drop AutoNeural45_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural45_WARN_;
179198    +AutoNeural45_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural45_WARN_ = _WARN_;
179199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179200    +* Ensmbl59: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Scoring Code of model 7 of 7;
179201    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179202    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179203    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
179204    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
179205    +* NODE: AutoNeural44;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural44;
179206    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179207    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
179208    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
179209    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
179210    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
179211    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
179212    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
179213    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
179214    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
179215    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
179216    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
179217    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
179218    +LENGTH _WARN_ $4
179219    +      F_DepVar  $ 12
179220    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
179221    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
179222    +
179223    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
179224    +
179225    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
179226    +
179227    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
179228    +
179229    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
179230    +
179231    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
179232    +
179233    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
179234    +
179235    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
179236    +
179237    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
179238    +
179239    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
179240    +
179241    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
179242    +
179243    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
179244    +
179245    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
179246    +
179247    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
179248    +
179249    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
179250    +
179251    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
179252    +
179253    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
179254    +
179255    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
179256    +
179257    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
179258    +
179259    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
179260    +
179261    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
179262    +
179263    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
179264    +
179265    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
179266    +
179267    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
179268    +
179269    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
179270    +
179271    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
The SAS System
 
179272    +
179273    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
179274    +
179275    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
179276    +
179277    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
179278    +
179279    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
179280    +
179281    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
179282    +
179283    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
179284    +
179285    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
179286    +
179287    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
179288    +
179289    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
179290    +
179291    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
179292    +
179293    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
179294    +
179295    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
179296    +
179297    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
179298    +
179299    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
179300    +
179301    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
179302    +
179303    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
179304    +
179305    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
179306    +
179307    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
179308    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
179309    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
179310    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
179311    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
179312    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179313    +end;
MPRINT(EM_DIAGRAM):   end;
179314    +else do;
MPRINT(EM_DIAGRAM):   else do;
179315    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
179316    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
179317    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179318    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
179319    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
179320    +   end;
MPRINT(EM_DIAGRAM):   end;
179321    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
179322    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
179323    +   end;
MPRINT(EM_DIAGRAM):   end;
179324    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179325    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
179326    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
179327    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179328    +   end;
MPRINT(EM_DIAGRAM):   end;
179329    +end;
MPRINT(EM_DIAGRAM):   end;
179330    +
179331    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
179332    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
179333    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
179334    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
179335    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
179336    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179337    +end;
MPRINT(EM_DIAGRAM):   end;
179338    +else do;
MPRINT(EM_DIAGRAM):   else do;
179339    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
179340    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
179341    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179342    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
179343    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
179344    +   end;
MPRINT(EM_DIAGRAM):   end;
179345    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
179346    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
179347    +   end;
MPRINT(EM_DIAGRAM):   end;
179348    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179349    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
179350    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
179351    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179352    +   end;
MPRINT(EM_DIAGRAM):   end;
179353    +end;
MPRINT(EM_DIAGRAM):   end;
179354    +
179355    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
179356    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
179357    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
179358    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
179359    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
179360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179361    +end;
MPRINT(EM_DIAGRAM):   end;
179362    +else do;
MPRINT(EM_DIAGRAM):   else do;
179363    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
179364    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
179365    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179366    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
179367    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
179368    +   end;
MPRINT(EM_DIAGRAM):   end;
179369    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
179370    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
179371    +   end;
MPRINT(EM_DIAGRAM):   end;
179372    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179373    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
179374    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
179375    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179376    +   end;
MPRINT(EM_DIAGRAM):   end;
179377    +end;
MPRINT(EM_DIAGRAM):   end;
179378    +
179379    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
179380    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
179381    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
179382    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
179383    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
179384    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179385    +end;
MPRINT(EM_DIAGRAM):   end;
179386    +else do;
MPRINT(EM_DIAGRAM):   else do;
179387    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
179388    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
179389    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179390    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
179391    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
179392    +   end;
MPRINT(EM_DIAGRAM):   end;
179393    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
179394    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
179395    +   end;
MPRINT(EM_DIAGRAM):   end;
179396    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179397    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
179398    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
179399    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179400    +   end;
MPRINT(EM_DIAGRAM):   end;
179401    +end;
MPRINT(EM_DIAGRAM):   end;
179402    +
179403    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
179404    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
179405    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
179406    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
179407    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
179408    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179409    +end;
MPRINT(EM_DIAGRAM):   end;
179410    +else do;
MPRINT(EM_DIAGRAM):   else do;
179411    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
179412    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
179413    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179414    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
179415    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
179416    +   end;
MPRINT(EM_DIAGRAM):   end;
179417    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
179418    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
179419    +   end;
MPRINT(EM_DIAGRAM):   end;
179420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179421    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
179422    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
179423    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179424    +   end;
MPRINT(EM_DIAGRAM):   end;
179425    +end;
MPRINT(EM_DIAGRAM):   end;
179426    +
179427    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
179428    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
179429    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
179430    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
179431    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
179432    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179433    +end;
MPRINT(EM_DIAGRAM):   end;
179434    +else do;
MPRINT(EM_DIAGRAM):   else do;
179435    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
179436    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
179437    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179438    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
179439    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
179440    +   end;
MPRINT(EM_DIAGRAM):   end;
179441    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
179442    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
179443    +   end;
MPRINT(EM_DIAGRAM):   end;
179444    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179445    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
179446    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
179447    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179448    +   end;
MPRINT(EM_DIAGRAM):   end;
179449    +end;
MPRINT(EM_DIAGRAM):   end;
179450    +
179451    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
179452    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
179453    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
179454    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
179455    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
179456    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
179457    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
179458    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
179459    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
179460    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
179461    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
179462    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
179463    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
179464    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179465    +end;
MPRINT(EM_DIAGRAM):   end;
179466    +else do;
MPRINT(EM_DIAGRAM):   else do;
179467    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
179468    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
179469    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179470    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
179471    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
179472    +   end;
MPRINT(EM_DIAGRAM):   end;
179473    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
179474    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
179475    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
179476    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
179477    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
179478    +   end;
MPRINT(EM_DIAGRAM):   end;
179479    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
179480    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
179481    +   end;
MPRINT(EM_DIAGRAM):   end;
179482    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
179483    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
179484    +   end;
MPRINT(EM_DIAGRAM):   end;
179485    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
179486    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
179487    +   end;
MPRINT(EM_DIAGRAM):   end;
179488    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179489    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
179490    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
179491    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
179492    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
179493    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
179494    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179495    +   end;
MPRINT(EM_DIAGRAM):   end;
179496    +end;
MPRINT(EM_DIAGRAM):   end;
179497    +
179498    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
179499    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
179500    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
179501    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
179502    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
179503    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
179504    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
179505    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
179506    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
179507    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
179508    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
179509    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
179510    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
179511    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
179512    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179513    +end;
MPRINT(EM_DIAGRAM):   end;
179514    +else do;
MPRINT(EM_DIAGRAM):   else do;
179515    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
179516    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
179517    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179518    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
179519    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
179520    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
179521    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
179522    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
179523    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
179524    +         end;
MPRINT(EM_DIAGRAM):   end;
179525    +         else do;
MPRINT(EM_DIAGRAM):   else do;
179526    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
179527    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
179528    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
179529    +            end;
MPRINT(EM_DIAGRAM):   end;
179530    +         end;
MPRINT(EM_DIAGRAM):   end;
179531    +      end;
MPRINT(EM_DIAGRAM):   end;
179532    +      else do;
MPRINT(EM_DIAGRAM):   else do;
179533    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
179534    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
179535    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
179536    +         end;
MPRINT(EM_DIAGRAM):   end;
179537    +      end;
MPRINT(EM_DIAGRAM):   end;
179538    +   end;
MPRINT(EM_DIAGRAM):   end;
179539    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179540    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
179541    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
179542    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
179543    +      end;
MPRINT(EM_DIAGRAM):   end;
179544    +      else do;
MPRINT(EM_DIAGRAM):   else do;
179545    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
179546    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
179547    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
179548    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
179549    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
179550    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
179551    +         end;
MPRINT(EM_DIAGRAM):   end;
179552    +      end;
MPRINT(EM_DIAGRAM):   end;
179553    +   end;
MPRINT(EM_DIAGRAM):   end;
179554    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
179555    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
179556    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
179557    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
179558    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
179559    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
179560    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179561    +   end;
MPRINT(EM_DIAGRAM):   end;
179562    +end;
MPRINT(EM_DIAGRAM):   end;
179563    +
179564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179565    +*** Checking missing input Interval
179566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
179567    +
179568    +IF NMISS(
179569    +   Income ,
179570    +   Kidhome ,
179571    +   MntFishProducts ,
179572    +   MntFruits ,
179573    +   MntGoldProds ,
179574    +   MntMeatProducts ,
179575    +   MntSweetProducts ,
179576    +   MntWines ,
179577    +   NumCatalogPurchases ,
179578    +   NumDealsPurchases ,
179579    +   NumStorePurchases ,
179580    +   NumWebPurchases ,
179581    +   NumWebVisitsMonth ,
179582    +   Recency ,
179583    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
179584    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
179585    +
179586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179587    +END;
MPRINT(EM_DIAGRAM):   END;
179588    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179589    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
179590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179591    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179592    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
179593    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
179594    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
179595    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
179596    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
179597    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
179598    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
179599    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
179600    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
179601    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
179602    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
179603    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
179604    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
179605    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
179606    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
179607    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
179608    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
179609    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
179610    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
179611    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
179612    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
179613    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
179614    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
179615    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
179616    +END;
MPRINT(EM_DIAGRAM):   END;
179617    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179618    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
179619    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
179620    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
179621    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
179622    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
179623    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
179624    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
179625    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
179626    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
179627    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
179628    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
179629    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
179630    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
179631    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
179632    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
179633    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
179634    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
179635    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
179636    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
179637    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
179638    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
179639    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
179640    +   ELSE S_NumCatalogPurchases
179641    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
179642    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
179643    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
179644    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
179645    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
179646    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
179647    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
179648    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
179649    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
179650    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
179651    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
179652    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
179653    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
179654    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
179655    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
179656    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
179657    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
179658    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
179659    +END;
MPRINT(EM_DIAGRAM):   END;
179660    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179661    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
179662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179663    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179664    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
179665    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179667    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
179668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179669    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179670    +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
179671    +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
179672    +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
179673    +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
179674    +          +     2.41993296129914 * S_MntSweetProducts
179675    +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
179676    +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
179677    +          +     7.59231492380468 * S_NumStorePurchases
179678    +          +    -0.47095655313121 * S_NumWebPurchases
179679    +          +     2.65669932372712 * S_NumWebVisitsMonth
179680    +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
179681    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome +
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 *
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases +
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases +
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth +
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
179682    +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
179683    +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
179684    +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
179685    +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
179686    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 *
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 +
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
179687    +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
179688    +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
179689    +        EducationGraduation  +    -3.89600865490994 * EducationMaster
179690    +          +     0.44728218776544 * Marital_StatusDivorced
179691    +          +    -1.62458831276183 * Marital_StatusMarried
179692    +          +    -0.42858616367237 * Marital_StatusSingle
179693    +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle +
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation +
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced +
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle +
-0.29553796445711 * Marital_StatusTogether ;
179694    +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
179695    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
179696    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
179697    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
179698    +END;
MPRINT(EM_DIAGRAM):   END;
179699    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179700    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
179701    +END;
MPRINT(EM_DIAGRAM):   END;
179702    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179703    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
179704    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179705    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179706    +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
179707    +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
179708    +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
179709    +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
179710    +          +    -1.37098390846164 * S_MntSweetProducts
179711    +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
179712    +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
179713    +          +     0.58246769316602 * S_NumStorePurchases
179714    +          +     2.72780243156581 * S_NumWebPurchases
179715    +          +    -1.73896446530763 * S_NumWebVisitsMonth
179716    +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
179717    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome +
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 *
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 *
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 *
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 *
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 *
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
179718    +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
179719    +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
179720    +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
179721    +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
179722    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 *
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 +
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
179723    +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
179724    +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
179725    +        EducationGraduation  +     1.01072132252596 * EducationMaster
179726    +          +     0.08221095774854 * Marital_StatusDivorced
179727    +          +    -0.13062113450086 * Marital_StatusMarried
179728    +          +      0.1912119500185 * Marital_StatusSingle
179729    +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle +
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 *
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 *
Marital_StatusTogether ;
179730    +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
179731    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
179732    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
179733    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
179734    +END;
MPRINT(EM_DIAGRAM):   END;
179735    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179736    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
179737    +END;
MPRINT(EM_DIAGRAM):   END;
179738    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179739    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
179740    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179741    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179742    +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
179743    +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
179744    +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
179745    +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
179746    +          +     -0.4771357321143 * S_MntSweetProducts
179747    +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
179748    +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
179749    +          +     0.38755002642582 * S_NumStorePurchases
179750    +          +     0.65178643881164 * S_NumWebPurchases
179751    +          +    -0.83170832622452 * S_NumWebVisitsMonth
179752    +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
179753    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome +
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 *
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 *
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency +
1.27228948382376 * S_Teenhome ;
179754    +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
179755    +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
179756    +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
179757    +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
179758    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 *
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 +
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
179759    +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
179760    +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
179761    +        EducationGraduation  +      0.9696976240987 * EducationMaster
179762    +          +    -0.13574340372484 * Marital_StatusDivorced
179763    +          +     1.26001446384238 * Marital_StatusMarried
179764    +          +    -0.16294618258246 * Marital_StatusSingle
179765    +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle +
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 *
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 *
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 *
Marital_StatusTogether ;
179766    +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
179767    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
179768    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
179769    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
179770    +END;
MPRINT(EM_DIAGRAM):   END;
179771    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179772    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
179773    +END;
MPRINT(EM_DIAGRAM):   END;
179774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179775    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
179776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179777    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179778    +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
179779    +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
179780    +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
179781    +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
179782    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
179783    +END;
MPRINT(EM_DIAGRAM):   END;
179784    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179785    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
179786    +END;
MPRINT(EM_DIAGRAM):   END;
179787    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179788    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
179789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179790    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179791    +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
179792    +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
179793    +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
179794    +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
179795    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
179796    +END;
MPRINT(EM_DIAGRAM):   END;
179797    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179798    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
179799    +END;
MPRINT(EM_DIAGRAM):   END;
179800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179801    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
179802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179803    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179804    +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
179805    +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
179806    +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
179807    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
179808    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
179809    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
179810    +END;
MPRINT(EM_DIAGRAM):   END;
179811    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179812    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
179813    +END;
MPRINT(EM_DIAGRAM):   END;
179814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179815    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
179816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179817    +
179818    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
179819    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
179820    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
179821    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
179822    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
179823    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
179824    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
179825    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
179826    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
179827    +end;
MPRINT(EM_DIAGRAM):   end;
179828    +else do;
MPRINT(EM_DIAGRAM):   else do;
179829    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
179830    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
179831    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
179832    +   end;
MPRINT(EM_DIAGRAM):   end;
179833    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
179834    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
179835    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
179836    +   end;
MPRINT(EM_DIAGRAM):   end;
179837    +   else do;
MPRINT(EM_DIAGRAM):   else do;
179838    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
179839    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
179840    +   end;
MPRINT(EM_DIAGRAM):   end;
179841    +end;
MPRINT(EM_DIAGRAM):   end;
179842    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179843    +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
179844    +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
179845    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
179846    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
179847    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
179848    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
179849    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
179850    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
179851    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
179852    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
179853    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
179854    +END;
MPRINT(EM_DIAGRAM):   END;
179855    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179856    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
179857    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
179858    +END;
MPRINT(EM_DIAGRAM):   END;
179859    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
179860    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
179861    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
179862    +END;
MPRINT(EM_DIAGRAM):   END;
179863    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
179864    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
179865    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
179866    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
179867    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
179868    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
179869    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
179870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179871    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
179872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179873    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
179874    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
179875    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
179876    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
179877    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
179878    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
179879    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
179880    +END;
MPRINT(EM_DIAGRAM):   END;
179881    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
179882    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
179883    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
179884    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
179885    +* Renaming variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural44;
179886    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179887    +* Renaming Posterior variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural44;
179888    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179889    +drop AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar1;
179890    +AutoNeural44_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar1 = P_DepVar1;
179891    +drop AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_P_DepVar0;
179892    +AutoNeural44_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural44_P_DepVar0 = P_DepVar0;
179893    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179894    +* Renaming Into variables for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural44;
179895    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179896    +length AutoNeural44_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural44_I_DepVar $32;
179897    +drop AutoNeural44_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_I_DepVar;
179898    +AutoNeural44_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural44_I_DepVar = I_DepVar;
179899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179900    +* Renaming _WARN_ variable for AutoNeural44;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural44;
179901    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179902    +length AutoNeural44_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural44_WARN_ $4;
179903    +drop AutoNeural44_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural44_WARN_;
179904    +AutoNeural44_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural44_WARN_ = _WARN_;
179905    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179906    +* Ensmbl59: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Voting to produce predicted target;
179907    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179908    +array Ensmbl59_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl59_post{2} _temporary_;
179909    +array Ensmbl59_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl59_count{2} _temporary_;
179910    +array Ensmbl59_level{2} $32 _temporary_ (
179911    +"1"
179912    +"0"
179913    +);
MPRINT(EM_DIAGRAM):   array Ensmbl59_level{2} $32 _temporary_ ( "1" "0" );
179914    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
179915    +Ensmbl59_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{i} = 0;
179916    +Ensmbl59_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{i} = 0;
179917    +end;
MPRINT(EM_DIAGRAM):   end;
179918    +if AutoNeural46_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural46_I_DepVar = Ensmbl59_level{1} then do;
179919    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
179920    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural46_P_DepVar1;
179921    +end;
MPRINT(EM_DIAGRAM):   end;
179922    +if AutoNeural43_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural43_I_DepVar = Ensmbl59_level{1} then do;
179923    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
179924    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural43_P_DepVar1;
179925    +end;
MPRINT(EM_DIAGRAM):   end;
179926    +if AutoNeural42_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural42_I_DepVar = Ensmbl59_level{1} then do;
179927    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
179928    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural42_P_DepVar1;
179929    +end;
MPRINT(EM_DIAGRAM):   end;
179930    +if AutoNeural41_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural41_I_DepVar = Ensmbl59_level{1} then do;
179931    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
179932    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural41_P_DepVar1;
179933    +end;
MPRINT(EM_DIAGRAM):   end;
179934    +if AutoNeural47_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural47_I_DepVar = Ensmbl59_level{1} then do;
179935    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
179936    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural47_P_DepVar1;
179937    +end;
MPRINT(EM_DIAGRAM):   end;
179938    +if AutoNeural45_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural45_I_DepVar = Ensmbl59_level{1} then do;
179939    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
179940    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural45_P_DepVar1;
179941    +end;
MPRINT(EM_DIAGRAM):   end;
179942    +if AutoNeural44_I_DepVar = Ensmbl59_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural44_I_DepVar = Ensmbl59_level{1} then do;
179943    +Ensmbl59_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{1} + 1;
179944    +Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{1}=Ensmbl59_post{1}+ AutoNeural44_P_DepVar1;
179945    +end;
MPRINT(EM_DIAGRAM):   end;
179946    +if AutoNeural46_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural46_I_DepVar = Ensmbl59_level{2} then do;
179947    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
179948    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural46_P_DepVar0;
179949    +end;
MPRINT(EM_DIAGRAM):   end;
179950    +if AutoNeural43_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural43_I_DepVar = Ensmbl59_level{2} then do;
179951    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
179952    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural43_P_DepVar0;
179953    +end;
MPRINT(EM_DIAGRAM):   end;
179954    +if AutoNeural42_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural42_I_DepVar = Ensmbl59_level{2} then do;
179955    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
179956    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural42_P_DepVar0;
179957    +end;
MPRINT(EM_DIAGRAM):   end;
179958    +if AutoNeural41_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural41_I_DepVar = Ensmbl59_level{2} then do;
179959    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
179960    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural41_P_DepVar0;
179961    +end;
MPRINT(EM_DIAGRAM):   end;
179962    +if AutoNeural47_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural47_I_DepVar = Ensmbl59_level{2} then do;
179963    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
179964    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural47_P_DepVar0;
179965    +end;
MPRINT(EM_DIAGRAM):   end;
179966    +if AutoNeural45_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural45_I_DepVar = Ensmbl59_level{2} then do;
179967    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
179968    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural45_P_DepVar0;
179969    +end;
MPRINT(EM_DIAGRAM):   end;
179970    +if AutoNeural44_I_DepVar = Ensmbl59_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural44_I_DepVar = Ensmbl59_level{2} then do;
179971    +Ensmbl59_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl59_count{2} + 1;
179972    +Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl59_post{2}=Ensmbl59_post{2}+ AutoNeural44_P_DepVar0;
179973    +end;
MPRINT(EM_DIAGRAM):   end;
179974    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179975    +* Ensmbl59: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Determine Into Variable;
179976    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179977    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
179978    +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
179979    +vote_count = max(
179980    +Ensmbl59_count{1} ,
179981    +Ensmbl59_count{2}
179982    +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl59_count{1} , Ensmbl59_count{2} );
179983    +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
179984    +if Ensmbl59_count{i}=vote_count and Ensmbl59_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl59_count{i}=vote_count and Ensmbl59_post{i}>vote_post then do;
179985    +I_DepVar = Ensmbl59_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl59_level{i};
179986    +vote_post = Ensmbl59_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl59_count{i};
179987    +end;
MPRINT(EM_DIAGRAM):   end;
179988    +end;
MPRINT(EM_DIAGRAM):   end;
179989    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179990    +* Ensmbl59: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Compute posterior vars using models predicting the chosen
level;
179991    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
179992    +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
179993    +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
179994    +if I_DepVar = AutoNeural46_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural46_I_DepVar then do;
179995    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural46_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural46_P_DepVar1;
179996    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural46_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural46_P_DepVar0;
179997    +end;
MPRINT(EM_DIAGRAM):   end;
179998    +if I_DepVar = AutoNeural43_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural43_I_DepVar then do;
179999    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural43_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural43_P_DepVar1;
180000    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural43_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural43_P_DepVar0;
180001    +end;
MPRINT(EM_DIAGRAM):   end;
180002    +if I_DepVar = AutoNeural42_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural42_I_DepVar then do;
180003    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural42_P_DepVar1;
180004    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural42_P_DepVar0;
180005    +end;
MPRINT(EM_DIAGRAM):   end;
180006    +if I_DepVar = AutoNeural41_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural41_I_DepVar then do;
180007    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural41_P_DepVar1;
180008    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural41_P_DepVar0;
180009    +end;
MPRINT(EM_DIAGRAM):   end;
180010    +if I_DepVar = AutoNeural47_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural47_I_DepVar then do;
180011    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural47_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural47_P_DepVar1;
180012    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural47_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural47_P_DepVar0;
180013    +end;
MPRINT(EM_DIAGRAM):   end;
180014    +if I_DepVar = AutoNeural45_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural45_I_DepVar then do;
180015    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural45_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural45_P_DepVar1;
180016    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural45_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural45_P_DepVar0;
180017    +end;
MPRINT(EM_DIAGRAM):   end;
180018    +if I_DepVar = AutoNeural44_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural44_I_DepVar then do;
180019    +P_DEPVAR1 = P_DEPVAR1 + AutoNeural44_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural44_P_DepVar1;
180020    +P_DEPVAR0 = P_DEPVAR0 + AutoNeural44_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural44_P_DepVar0;
180021    +end;
MPRINT(EM_DIAGRAM):   end;
180022    +* Ensmbl59: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Averaging posterior;
180023    +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
180024    +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
180025    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
180026    +* Ensmbl59: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Producing Unformatted variable;
180027    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
180028    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
180029    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
180030    +else
180031    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
180032    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
180033    +* Ensmbl59: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing _WARN_ Variable;
180034    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
180035    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
180036    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
180037    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
180038    +if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
180038   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
180039    +if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
180039   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
180040    +if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
180040   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
180041    +if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
180041   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL46_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
180042    +if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
180042   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
180043    +if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
180043   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
180044    +if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
180044   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
180045    +if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
180045   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL43_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
180046    +if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
180046   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
180047    +if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
180047   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
180048    +if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
180048   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
180049    +if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
180049   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
180050    +if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
180050   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
180051    +if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
180051   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
180052    +if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
180052   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
180053    +if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
180053   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
180054    +if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
180054   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
180055    +if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
180055   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
180056    +if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
180056   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
180057    +if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
180057   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL47_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
180058    +if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
180058   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
180059    +if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
180059   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
180060    +if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
180060   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
180061    +if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
180061   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL45_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
180062    +if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
180062   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
180063    +if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
180063   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
180064    +if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
180064   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
180065    +if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
180065   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL44_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
180066    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
180067    +* Ensmbl59: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing Residual Vars;
180068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
180069    +if
180070    +F_DepVar NE '1'
180071    +AND F_DepVar NE '0'
180072    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
180073    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
180074    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
180075    +end;
MPRINT(EM_DIAGRAM):   end;
180076    +else do;
MPRINT(EM_DIAGRAM):   else do;
180077    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
180078    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
180079    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
180080    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
180081    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
180082    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
180083    +END;
MPRINT(EM_DIAGRAM):   END;
180084    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
180085     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL59_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL46_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
180086     quit;
180087     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl59_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl59_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl59_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
180147     filename _pref
180147   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas";
180148     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
180149     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural46\EMPUBLISHSCORE.sas.
180150    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
180151    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
180152    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
180153    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
180154    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
180155    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
180156    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
180157    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
180158    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
180159    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
180160    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
180161    +LENGTH _WARN_ $4
180162    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
180163    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
180164    +
180165    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
180166    +
180167    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
180168    +
180169    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
180170    +
180171    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
180172    +
180173    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
180174    +
180175    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
180176    +
180177    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
180178    +
180179    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
180180    +
180181    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
180182    +
180183    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
180184    +
180185    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
180186    +
180187    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
180188    +
180189    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
180190    +
180191    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
180192    +
180193    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
180194    +
180195    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
180196    +
180197    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
180198    +
180199    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
180200    +
180201    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
180202    +
180203    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
180204    +
180205    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
180206    +
180207    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
180208    +
180209    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
180210    +
180211    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
180212    +
180213    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
180214    +
180215    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
180216    +
180217    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
180218    +
180219    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
180220    +
180221    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
180222    +
180223    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
180224    +
180225    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
180226    +
180227    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
180228    +
180229    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
180230    +
180231    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
180232    +
180233    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
180234    +
180235    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
180236    +
180237    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
180238    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
180239    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
180240    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
180241    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
180242    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180243    +end;
MPRINT(EM_DIAGRAM):   end;
180244    +else do;
MPRINT(EM_DIAGRAM):   else do;
180245    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
180246    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
180247    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
180248    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
180249    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
180250    +   end;
MPRINT(EM_DIAGRAM):   end;
180251    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
180252    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
180253    +   end;
MPRINT(EM_DIAGRAM):   end;
180254    +   else do;
MPRINT(EM_DIAGRAM):   else do;
180255    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
180256    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
180257    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180258    +   end;
MPRINT(EM_DIAGRAM):   end;
180259    +end;
MPRINT(EM_DIAGRAM):   end;
180260    +
180261    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
180262    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
180263    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
180264    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
180265    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
180266    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180267    +end;
MPRINT(EM_DIAGRAM):   end;
180268    +else do;
MPRINT(EM_DIAGRAM):   else do;
180269    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
180270    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
180271    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
180272    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
180273    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
180274    +   end;
MPRINT(EM_DIAGRAM):   end;
180275    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
180276    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
180277    +   end;
MPRINT(EM_DIAGRAM):   end;
180278    +   else do;
MPRINT(EM_DIAGRAM):   else do;
180279    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
180280    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
180281    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180282    +   end;
MPRINT(EM_DIAGRAM):   end;
180283    +end;
MPRINT(EM_DIAGRAM):   end;
180284    +
180285    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
180286    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
180287    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
180288    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
180289    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
180290    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180291    +end;
MPRINT(EM_DIAGRAM):   end;
180292    +else do;
MPRINT(EM_DIAGRAM):   else do;
180293    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
180294    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
180295    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
180296    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
180297    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
180298    +   end;
MPRINT(EM_DIAGRAM):   end;
180299    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
180300    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
180301    +   end;
MPRINT(EM_DIAGRAM):   end;
180302    +   else do;
MPRINT(EM_DIAGRAM):   else do;
180303    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
180304    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
180305    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180306    +   end;
MPRINT(EM_DIAGRAM):   end;
180307    +end;
MPRINT(EM_DIAGRAM):   end;
180308    +
180309    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
180310    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
180311    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
180312    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
180313    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
180314    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180315    +end;
MPRINT(EM_DIAGRAM):   end;
180316    +else do;
MPRINT(EM_DIAGRAM):   else do;
180317    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
180318    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
180319    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
180320    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
180321    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
180322    +   end;
MPRINT(EM_DIAGRAM):   end;
180323    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
180324    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
180325    +   end;
MPRINT(EM_DIAGRAM):   end;
180326    +   else do;
MPRINT(EM_DIAGRAM):   else do;
180327    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
180328    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
180329    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180330    +   end;
MPRINT(EM_DIAGRAM):   end;
180331    +end;
MPRINT(EM_DIAGRAM):   end;
180332    +
180333    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
180334    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
180335    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
180336    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
180337    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
180338    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180339    +end;
MPRINT(EM_DIAGRAM):   end;
180340    +else do;
MPRINT(EM_DIAGRAM):   else do;
180341    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
180342    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
180343    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
180344    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
180345    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
180346    +   end;
MPRINT(EM_DIAGRAM):   end;
180347    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
180348    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
180349    +   end;
MPRINT(EM_DIAGRAM):   end;
180350    +   else do;
MPRINT(EM_DIAGRAM):   else do;
180351    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
180352    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
180353    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180354    +   end;
MPRINT(EM_DIAGRAM):   end;
180355    +end;
MPRINT(EM_DIAGRAM):   end;
180356    +
180357    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
180358    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
180359    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
180360    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
180361    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
180362    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180363    +end;
MPRINT(EM_DIAGRAM):   end;
180364    +else do;
MPRINT(EM_DIAGRAM):   else do;
180365    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
180366    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
180367    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
180368    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
180369    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
180370    +   end;
MPRINT(EM_DIAGRAM):   end;
180371    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
180372    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
180373    +   end;
MPRINT(EM_DIAGRAM):   end;
180374    +   else do;
MPRINT(EM_DIAGRAM):   else do;
180375    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
180376    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
180377    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180378    +   end;
MPRINT(EM_DIAGRAM):   end;
180379    +end;
MPRINT(EM_DIAGRAM):   end;
180380    +
180381    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
180382    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
180383    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
180384    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
180385    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
180386    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
180387    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
180388    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
180389    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
180390    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
180391    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
180392    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
180393    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
180394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180395    +end;
MPRINT(EM_DIAGRAM):   end;
180396    +else do;
MPRINT(EM_DIAGRAM):   else do;
180397    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
180398    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
180399    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
180400    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
180401    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
180402    +   end;
MPRINT(EM_DIAGRAM):   end;
180403    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
180404    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
180405    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
180406    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
180407    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
180408    +   end;
MPRINT(EM_DIAGRAM):   end;
180409    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
180410    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
180411    +   end;
MPRINT(EM_DIAGRAM):   end;
180412    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
180413    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
180414    +   end;
MPRINT(EM_DIAGRAM):   end;
180415    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
180416    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
180417    +   end;
MPRINT(EM_DIAGRAM):   end;
180418    +   else do;
MPRINT(EM_DIAGRAM):   else do;
180419    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
180420    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
180421    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
180422    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
180423    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
180424    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180425    +   end;
MPRINT(EM_DIAGRAM):   end;
180426    +end;
MPRINT(EM_DIAGRAM):   end;
180427    +
180428    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
180429    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
180430    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
180431    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
180432    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
180433    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
180434    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
180435    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
180436    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
180437    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
180438    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
180439    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
180440    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
180441    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
180442    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180443    +end;
MPRINT(EM_DIAGRAM):   end;
180444    +else do;
MPRINT(EM_DIAGRAM):   else do;
180445    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
180446    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
180447    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
180448    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
180449    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
180450    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
180451    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
180452    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
180453    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
180454    +         end;
MPRINT(EM_DIAGRAM):   end;
180455    +         else do;
MPRINT(EM_DIAGRAM):   else do;
180456    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
180457    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
180458    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
180459    +            end;
MPRINT(EM_DIAGRAM):   end;
180460    +         end;
MPRINT(EM_DIAGRAM):   end;
180461    +      end;
MPRINT(EM_DIAGRAM):   end;
180462    +      else do;
MPRINT(EM_DIAGRAM):   else do;
180463    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
180464    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
180465    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
180466    +         end;
MPRINT(EM_DIAGRAM):   end;
180467    +      end;
MPRINT(EM_DIAGRAM):   end;
180468    +   end;
MPRINT(EM_DIAGRAM):   end;
180469    +   else do;
MPRINT(EM_DIAGRAM):   else do;
180470    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
180471    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
180472    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
180473    +      end;
MPRINT(EM_DIAGRAM):   end;
180474    +      else do;
MPRINT(EM_DIAGRAM):   else do;
180475    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
180476    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
180477    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
180478    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
180479    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
180480    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
180481    +         end;
MPRINT(EM_DIAGRAM):   end;
180482    +      end;
MPRINT(EM_DIAGRAM):   end;
180483    +   end;
MPRINT(EM_DIAGRAM):   end;
180484    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
180485    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
180486    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
180487    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
180488    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
180489    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
180490    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180491    +   end;
MPRINT(EM_DIAGRAM):   end;
180492    +end;
MPRINT(EM_DIAGRAM):   end;
180493    +
180494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180495    +*** Checking missing input Interval
180496    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
180497    +
180498    +IF NMISS(
180499    +   Income ,
180500    +   Kidhome ,
180501    +   MntFishProducts ,
180502    +   MntFruits ,
180503    +   MntGoldProds ,
180504    +   MntMeatProducts ,
180505    +   MntSweetProducts ,
180506    +   MntWines ,
180507    +   NumCatalogPurchases ,
180508    +   NumDealsPurchases ,
180509    +   NumStorePurchases ,
180510    +   NumWebPurchases ,
180511    +   NumWebVisitsMonth ,
180512    +   Recency ,
180513    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
180514    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
180515    +
180516    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
180517    +END;
MPRINT(EM_DIAGRAM):   END;
180518    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180519    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
180520    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180521    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
180522    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
180523    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
180524    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
180525    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
180526    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
180527    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
180528    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
180529    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
180530    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
180531    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
180532    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
180533    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
180534    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
180535    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
180536    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
180537    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
180538    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
180539    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
180540    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
180541    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
180542    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
180543    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
180544    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
180545    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
180546    +END;
MPRINT(EM_DIAGRAM):   END;
180547    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
180548    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
180549    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
180550    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
180551    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
180552    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
180553    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
180554    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
180555    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
180556    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
180557    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
180558    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
180559    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
180560    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
180561    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
180562    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
180563    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
180564    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
180565    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
180566    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
180567    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
180568    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
180569    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
180570    +   ELSE S_NumCatalogPurchases
180571    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
180572    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
180573    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
180574    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
180575    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
180576    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
180577    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
180578    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
180579    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
180580    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
180581    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
180582    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
180583    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
180584    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
180585    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
180586    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
180587    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
180588    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
180589    +END;
MPRINT(EM_DIAGRAM):   END;
180590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180591    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
180592    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180594    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
180595    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180596    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180597    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
180598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180599    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
180600    +   H1x1_1  =    -0.14779241211238 * S_Income  +     0.12406923960108 *
180601    +        S_Kidhome  +     0.07566108150758 * S_MntFishProducts
180602    +          +     0.04223936357442 * S_MntFruits  +    -0.01414396912246 *
180603    +        S_MntGoldProds  +    -0.43631543928923 * S_MntMeatProducts
180604    +          +      0.0311909552218 * S_MntSweetProducts
180605    +          +      0.1593908004139 * S_MntWines  +    -0.16331402526215 *
180606    +        S_NumCatalogPurchases  +    -0.08123579404919 * S_NumDealsPurchases
180607    +          +     0.12294876865087 * S_NumStorePurchases
180608    +          +     0.11602382379314 * S_NumWebPurchases
180609    +          +    -0.23519567542635 * S_NumWebVisitsMonth
180610    +          +     0.27617232496223 * S_Recency  +     0.06912944740739 *
180611    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14779241211238 * S_Income + 0.12406923960108 * S_Kidhome +
0.07566108150758 * S_MntFishProducts + 0.04223936357442 * S_MntFruits + -0.01414396912246 *
S_MntGoldProds + -0.43631543928923 * S_MntMeatProducts + 0.0311909552218 * S_MntSweetProducts
+ 0.1593908004139 * S_MntWines + -0.16331402526215 * S_NumCatalogPurchases + -0.08123579404919
* S_NumDealsPurchases + 0.12294876865087 * S_NumStorePurchases + 0.11602382379314 *
S_NumWebPurchases + -0.23519567542635 * S_NumWebVisitsMonth + 0.27617232496223 * S_Recency +
0.06912944740739 * S_Teenhome ;
180612    +   H1x1_2  =    -0.13491153011654 * S_Income  +     0.14656938917448 *
180613    +        S_Kidhome  +     0.04457005191996 * S_MntFishProducts
180614    +          +     0.00771761834647 * S_MntFruits  +    -0.11830651019438 *
180615    +        S_MntGoldProds  +     0.06464771115751 * S_MntMeatProducts
180616    +          +     0.00133400054994 * S_MntSweetProducts
180617    +          +    -0.63837598558931 * S_MntWines  +     0.09668222160749 *
180618    +        S_NumCatalogPurchases  +     0.23530173987642 * S_NumDealsPurchases
180619    +          +    -0.49595472235036 * S_NumStorePurchases
180620    +          +    -0.24747548015204 * S_NumWebPurchases
180621    +          +     0.12326047694811 * S_NumWebVisitsMonth
180622    +          +    -0.04929000435218 * S_Recency  +     0.00568113597531 *
180623    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13491153011654 * S_Income + 0.14656938917448 * S_Kidhome +
0.04457005191996 * S_MntFishProducts + 0.00771761834647 * S_MntFruits + -0.11830651019438 *
S_MntGoldProds + 0.06464771115751 * S_MntMeatProducts + 0.00133400054994 * S_MntSweetProducts
+ -0.63837598558931 * S_MntWines + 0.09668222160749 * S_NumCatalogPurchases + 0.23530173987642
* S_NumDealsPurchases + -0.49595472235036 * S_NumStorePurchases + -0.24747548015204 *
S_NumWebPurchases + 0.12326047694811 * S_NumWebVisitsMonth + -0.04929000435218 * S_Recency +
0.00568113597531 * S_Teenhome ;
180624    +   H1x1_3  =     0.13062973754666 * S_Income  +    -0.15311279667585 *
180625    +        S_Kidhome  +      0.0854652628099 * S_MntFishProducts
180626    +          +     0.02260695043189 * S_MntFruits  +    -0.06427354034325 *
180627    +        S_MntGoldProds  +    -0.51556004816788 * S_MntMeatProducts
180628    +          +    -0.03908755288099 * S_MntSweetProducts
180629    +          +    -0.24983513168561 * S_MntWines  +     0.11583370343483 *
180630    +        S_NumCatalogPurchases  +     0.05060583856766 * S_NumDealsPurchases
180631    +          +    -0.20634630081435 * S_NumStorePurchases
180632    +          +    -0.06734935798888 * S_NumWebPurchases
180633    +          +     0.32288250215418 * S_NumWebVisitsMonth
180634    +          +    -0.32978147839937 * S_Recency  +    -0.07420334428475 *
180635    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.13062973754666 * S_Income + -0.15311279667585 * S_Kidhome +
0.0854652628099 * S_MntFishProducts + 0.02260695043189 * S_MntFruits + -0.06427354034325 *
S_MntGoldProds + -0.51556004816788 * S_MntMeatProducts + -0.03908755288099 *
S_MntSweetProducts + -0.24983513168561 * S_MntWines + 0.11583370343483 * S_NumCatalogPurchases
+ 0.05060583856766 * S_NumDealsPurchases + -0.20634630081435 * S_NumStorePurchases +
-0.06734935798888 * S_NumWebPurchases + 0.32288250215418 * S_NumWebVisitsMonth +
-0.32978147839937 * S_Recency + -0.07420334428475 * S_Teenhome ;
180636    +   H1x1_1  = H1x1_1  +     0.14311220987159 * AcceptedCmp10
180637    +          +     0.25596748420576 * AcceptedCmp20  +     0.13199169114019 *
180638    +        AcceptedCmp30  +     0.14111066281846 * AcceptedCmp40
180639    +          +     0.16136804502708 * AcceptedCmp50  +     0.06340055511955 *
180640    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14311220987159 * AcceptedCmp10 + 0.25596748420576 *
AcceptedCmp20 + 0.13199169114019 * AcceptedCmp30 + 0.14111066281846 * AcceptedCmp40 +
0.16136804502708 * AcceptedCmp50 + 0.06340055511955 * Complain0 ;
180641    +   H1x1_2  = H1x1_2  +     0.07692946904386 * AcceptedCmp10
180642    +          +     0.10129736414747 * AcceptedCmp20  +    -0.08526063108983 *
180643    +        AcceptedCmp30  +     0.00391518443243 * AcceptedCmp40
180644    +          +    -0.11013908503956 * AcceptedCmp50  +     0.03814032229209 *
180645    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.07692946904386 * AcceptedCmp10 + 0.10129736414747 *
AcceptedCmp20 + -0.08526063108983 * AcceptedCmp30 + 0.00391518443243 * AcceptedCmp40 +
-0.11013908503956 * AcceptedCmp50 + 0.03814032229209 * Complain0 ;
180646    +   H1x1_3  = H1x1_3  +    -0.02206432573422 * AcceptedCmp10
180647    +          +     0.22410311196864 * AcceptedCmp20  +    -0.19387020375313 *
180648    +        AcceptedCmp30  +    -0.12058647992586 * AcceptedCmp40
180649    +          +    -0.09809197464918 * AcceptedCmp50  +    -0.09604584189983 *
180650    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02206432573422 * AcceptedCmp10 + 0.22410311196864 *
AcceptedCmp20 + -0.19387020375313 * AcceptedCmp30 + -0.12058647992586 * AcceptedCmp40 +
-0.09809197464918 * AcceptedCmp50 + -0.09604584189983 * Complain0 ;
180651    +   H1x1_1  = H1x1_1  +    -0.00017476927899 * Education2n_Cycle
180652    +          +    -0.15306731287208 * EducationBasic  +     0.04951359729631 *
180653    +        EducationGraduation  +     0.07475697967073 * EducationMaster
180654    +          +    -0.04265434587882 * Marital_StatusDivorced
180655    +          +     0.17114014094758 * Marital_StatusMarried
180656    +          +     -0.1537035921296 * Marital_StatusSingle
180657    +          +     0.15023718360478 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00017476927899 * Education2n_Cycle +
-0.15306731287208 * EducationBasic + 0.04951359729631 * EducationGraduation + 0.07475697967073
* EducationMaster + -0.04265434587882 * Marital_StatusDivorced + 0.17114014094758 *
Marital_StatusMarried + -0.1537035921296 * Marital_StatusSingle + 0.15023718360478 *
Marital_StatusTogether ;
180658    +   H1x1_2  = H1x1_2  +     0.10391719023548 * Education2n_Cycle
180659    +          +    -0.71597921887555 * EducationBasic  +     0.38732833028427 *
180660    +        EducationGraduation  +     0.04507684017588 * EducationMaster
180661    +          +     0.25534272809394 * Marital_StatusDivorced
180662    +          +     0.20034903346804 * Marital_StatusMarried
180663    +          +    -0.38348393943797 * Marital_StatusSingle
180664    +          +     0.15254304652439 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.10391719023548 * Education2n_Cycle +
-0.71597921887555 * EducationBasic + 0.38732833028427 * EducationGraduation + 0.04507684017588
* EducationMaster + 0.25534272809394 * Marital_StatusDivorced + 0.20034903346804 *
Marital_StatusMarried + -0.38348393943797 * Marital_StatusSingle + 0.15254304652439 *
Marital_StatusTogether ;
180665    +   H1x1_3  = H1x1_3  +     0.06104667656786 * Education2n_Cycle
180666    +          +     -0.0935234366994 * EducationBasic  +     0.09446977823229 *
180667    +        EducationGraduation  +    -0.11683780234266 * EducationMaster
180668    +          +      0.1988416043876 * Marital_StatusDivorced
180669    +          +    -0.21663959478684 * Marital_StatusMarried
180670    +          +     0.06591480171547 * Marital_StatusSingle
180671    +          +    -0.17108581516048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.06104667656786 * Education2n_Cycle +
-0.0935234366994 * EducationBasic + 0.09446977823229 * EducationGraduation + -0.11683780234266
* EducationMaster + 0.1988416043876 * Marital_StatusDivorced + -0.21663959478684 *
Marital_StatusMarried + 0.06591480171547 * Marital_StatusSingle + -0.17108581516048 *
Marital_StatusTogether ;
180672    +   H1x1_1  =     0.12085771569539 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12085771569539 + H1x1_1 ;
180673    +   H1x1_2  =     1.88026862462696 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.88026862462696 + H1x1_2 ;
180674    +   H1x1_3  =    -1.66768306479405 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66768306479405 + H1x1_3 ;
180675    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
180676    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
180677    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
180678    +END;
MPRINT(EM_DIAGRAM):   END;
180679    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
180680    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
180681    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
180682    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
180683    +END;
MPRINT(EM_DIAGRAM):   END;
180684    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180685    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
180686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180687    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
180688    +   P_DepVar1  =    -105.465737701328 * H1x1_1  +    -25.9919910307682 * H1x1_2
180689    +          +    -60.7557666068018 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -105.465737701328 * H1x1_1 + -25.9919910307682 * H1x1_2 +
-60.7557666068018 * H1x1_3 ;
180690    +   P_DepVar1  =     17.0796398396243 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.0796398396243 + P_DepVar1 ;
180691    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
180692    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
180693    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
180694    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
180695    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
180696    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
180697    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
180698    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
180699    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
180700    +END;
MPRINT(EM_DIAGRAM):   END;
180701    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
180702    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
180703    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
180704    +END;
MPRINT(EM_DIAGRAM):   END;
180705    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
180706    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
180707    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
180708    +END;
MPRINT(EM_DIAGRAM):   END;
180709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180710    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
180711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
180712    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
180713    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
180714    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
180715    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
180716    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
180717    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
180718    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
180719    +END;
MPRINT(EM_DIAGRAM):   END;
180720    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
180721    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
180722    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
180723    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
180724     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
180725     quit;
180726     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
180727     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
180728     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
180729     retain ID 2 Node "AutoNeural46";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural46";
180730     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
180731     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180732     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
180733     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180734     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180735     proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_variableset out=_temp2(keep=NAME
CREATOR);
180736     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180737     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL46_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180738     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
180739     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
180740     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
180741     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180742     proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_train out=_meta(keep=NAME) noprint;
180743     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180744     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
180745     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180746     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180747     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
180748     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
180749     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180750     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180751     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
180752     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
180752   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 868 rows and 5 columns.
 
180753     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180754     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
180755     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 868 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 868 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180756     filename _pref
180756   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
180757     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
180758     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
180759    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
180760    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
180761    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
180762    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
180763    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
180764    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
180765     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
180766     quit;
180767     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
180768     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
180769     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
180770     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
180771     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
180772     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180773     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
180774     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180775     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180776     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
180777     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180778     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180779     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
180780     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
180781     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
180782     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180783     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
180784     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180785     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
180786     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180788     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
180789     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
180790     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180791     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180792     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
180793     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
180793   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
180794     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180795     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
180796     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 872 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180797     filename _pref
180797   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
180798     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
180799     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
180800    +
180801    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
180802    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
180802   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
180803    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
180804    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
180805    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
180806    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
180807    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
180808     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
180809     quit;
180810     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
180811     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
180812     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
180813     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
180814     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
180815     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180816     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
180817     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180818     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180819     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
180820     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180821     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180822     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
180823     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
180824     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
180825     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180826     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
180827     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180828     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
180829     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180830     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180831     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
180832     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
180833     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180834     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180835     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
180836     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
180836   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
180837     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180838     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
180839     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 911 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180840     filename _pref
180840   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
180841     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
180842     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
180843    +
180844    +
180845    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
180846    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
180847    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
180848    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
180849    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
180850    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
180851    +
180852    +
180853    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
180854    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
180855    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
180856    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
180857    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
180858    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
180859    +
180860    +
180861    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
180862    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
180863    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
180864    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
180865    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
180866    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
180867    +
180868    +
180869    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
180870    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
180871    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
180872    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
180873    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
180874    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
180875    +
180876    +
180877    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
180878    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
180879    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
180880    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
180881    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
180882    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
180883    +
180884    +
180885    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
180886    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
180887    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
180888    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
180889    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
180890    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
180891    +
180892    +
180893    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
180894    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
180895    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
180896    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
180897    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
180898    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
180899    +
180900    +
180901    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
180902    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
180903    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
180904    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
180905    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
180906    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
180907    +if
180908    +_FILTERNORM1 not in ( '.')
180909    + and
180910    +_FILTERNORM2 not in ( '.')
180911    + and
180912    +_FILTERNORM3 not in ( '.')
180913    + and
180914    +_FILTERNORM4 not in ( '.')
180915    + and
180916    +_FILTERNORM5 not in ( '.')
180917    + and
180918    +_FILTERNORM6 not in ( '.')
180919    + and
180920    +_FILTERNORM7 not in ( ' ')
180921    + and
180922    +_FILTERNORM8 not in ( ' ')
180923    +and
180924    +( Dt_Customer ne .)
180925    +and ( Income ne . and (Income<=107000))
180926    +and ( Kidhome ne .)
180927    +and ( MntFishProducts ne .)
180928    +and ( MntFruits ne .)
180929    +and ( MntGoldProds ne .)
180930    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
180931    +and ( MntSweetProducts ne .)
180932    +and ( MntWines ne .)
180933    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
180934    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
180935    +and ( NumStorePurchases ne .)
180936    +and ( NumWebPurchases ne .)
180937    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
180938    +and ( Recency ne .)
180939    +and ( Teenhome ne .)
180940    +and ( Year_Birth ne .)
180941    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
180942    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
180943    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
180944    +end;
MPRINT(EM_DIAGRAM):   end;
180945    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
180946    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
180947     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
180948     quit;
180949     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
180950     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
180951     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
180952     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
180953     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
180954     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180955     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
180956     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180957     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180958     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
180959     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180961     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
180962     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
180963     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
180964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180965     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
180966     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180967     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
180968     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180969     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
180970     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
180971     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
180972     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
180973     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180974     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
180975     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
180975   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
180976     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180977     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
180978     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 977 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
180979     %macro varDept(fcmpdata=,id=);
180980     %global nobs&id scoreFlag&id;
180981     %let scoreFlag&id = 0;
180982     %if &id=1 or ^&fcmpStart %then %do;
180983     proc sort data=&fcmpdata out=_temp&id nodupkey;
180984     by NAME;
180985     where id=&id and LHS in( %let j=1;
180986     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
180987     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
180988     "&var" %let j = %eval(&j+1);
180989     %end;
180990     );
180991     run;
180992     %let dsid = %sysfunc(open(_temp&id));
180993     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
180994     %let dsid = %sysfunc(close(&dsid));
180995     %if &&nobs&id %then %do;
180996     %let scoreFlag&id = 1;
180997     %let fcmpStart = 1;
180998     %end;
180999     %else %let fcmpStart = 0;
181000     %end;
181001     %else %do;
181002     proc sort data=&fcmpdata out=_tempid;
181003     where id=&id;
181004     by LHS;
181005     run;
181006     %let dsid = %sysfunc(open(_tempid));
181007     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
181008     %let dsid = %sysfunc(close(&dsid));
181009     %if ^&&nobs&id %then %do;
181010     proc datasets lib=work nolist;
181011     delete _tempid;
181012     run;
181013     quit;
181014     %end;
181015     %else %do;
181016     data _tempAll;
181017     set %let j=%eval(&id-1);
181018     %do x=1 %to &j;
181019     %if &&nobs&x %then %do;
181020     _temp&x %end;
181021     %end;
181022     ;
181023     run;
181024     proc sql;
181025     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
181025   ! work._tempid p2 where p.name=p2.lhs;
181026     quit;
181027     data _temp&id;
181028     set _temp&id;
181029     where LHS ne '' and NAME ne '' and Node ne '';
181030     run;
181031     proc datasets lib=work nolist;
181032     delete _tempAll;
181033     run;
181034     %let dsid = %sysfunc(open(_temp&id));
181035     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
181036     %let dsid = %sysfunc(close(&dsid));
181037     %if ^&&nobs&id %then %do;
181038     proc datasets lib=work nolist;
181039     delete _temp&id;
181040     run;
181041     quit;
181042     %end;
181043     %else %do;
181044     %let scoreFlag&id = 1;
181045     data _temp&id;
181046     set _temp&id;
181047     where LHS ne NAME and node ne '';
181048     run;
181049     %let dsid = %sysfunc(open(_temp&id));
181050     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
181051     %let dsid = %sysfunc(close(&dsid));
181052     %if ^&&nobs&id %then %do;
181053     proc datasets lib=work nolist;
181054     delete _temp&id;
181055     run;
181056     quit;
181057     %end;
181058     %else %do;
181059     proc sort data=_temp&id nodupkey;
181060     by LHS NAME;
181061     run;
181062     %end;
181063     %end;
181064     %end;
181065     %end;
181066     %mend varDept;
181067     %macro optCode(outdata=fcmpdata);
181068     %global fcmpStart;
181069     %let fcmpStart = 0;
181070     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
181071     %let NumNodes=9;
181072     %do k=1 %to &NumNodes;
181073     %vardept(fcmpdata=&outdata, id=&k);
181074     %end;
181075     %mend optCode;
181076     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 107 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 28 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 28 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
181077     filename _pref
181077   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas";
181078     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
181079     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural43\EMPUBLISHSCORE.sas.
181080    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
181081    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
181082    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
181083    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
181084    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
181085    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
181086    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
181087    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
181088    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
181089    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
181090    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
181091    +LENGTH _WARN_ $4
181092    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
181093    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
181094    +
181095    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
181096    +
181097    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
181098    +
181099    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
181100    +
181101    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
181102    +
181103    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
181104    +
181105    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
181106    +
181107    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
181108    +
181109    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
181110    +
181111    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
181112    +
181113    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
181114    +
181115    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
181116    +
181117    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
181118    +
181119    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
181120    +
181121    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
181122    +
181123    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
181124    +
181125    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
181126    +
181127    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
181128    +
181129    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
181130    +
181131    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
181132    +
181133    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
181134    +
181135    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
181136    +
181137    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
181138    +
181139    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
181140    +
181141    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
181142    +
181143    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
181144    +
181145    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
181146    +
181147    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
181148    +
181149    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
181150    +
181151    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
181152    +
181153    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
181154    +
181155    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
181156    +
181157    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
181158    +
181159    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
181160    +
181161    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
181162    +
181163    +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
181164    +
181165    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
181166    +
181167    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
181168    +
181169    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
181170    +
181171    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
181172    +
181173    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
181174    +
181175    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
181176    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
181177    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
181178    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
181179    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
181180    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181181    +end;
MPRINT(EM_DIAGRAM):   end;
181182    +else do;
MPRINT(EM_DIAGRAM):   else do;
181183    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
181184    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
181185    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
181186    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
181187    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
181188    +   end;
MPRINT(EM_DIAGRAM):   end;
181189    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
181190    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
181191    +   end;
MPRINT(EM_DIAGRAM):   end;
181192    +   else do;
MPRINT(EM_DIAGRAM):   else do;
181193    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
181194    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
181195    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181196    +   end;
MPRINT(EM_DIAGRAM):   end;
181197    +end;
MPRINT(EM_DIAGRAM):   end;
181198    +
181199    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
181200    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
181201    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
181202    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
181203    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
181204    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181205    +end;
MPRINT(EM_DIAGRAM):   end;
181206    +else do;
MPRINT(EM_DIAGRAM):   else do;
181207    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
181208    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
181209    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
181210    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
181211    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
181212    +   end;
MPRINT(EM_DIAGRAM):   end;
181213    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
181214    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
181215    +   end;
MPRINT(EM_DIAGRAM):   end;
181216    +   else do;
MPRINT(EM_DIAGRAM):   else do;
181217    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
181218    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
181219    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181220    +   end;
MPRINT(EM_DIAGRAM):   end;
181221    +end;
MPRINT(EM_DIAGRAM):   end;
181222    +
181223    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
181224    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
181225    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
181226    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
181227    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
181228    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181229    +end;
MPRINT(EM_DIAGRAM):   end;
181230    +else do;
MPRINT(EM_DIAGRAM):   else do;
181231    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
181232    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
181233    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
181234    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
181235    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
181236    +   end;
MPRINT(EM_DIAGRAM):   end;
181237    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
181238    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
181239    +   end;
MPRINT(EM_DIAGRAM):   end;
181240    +   else do;
MPRINT(EM_DIAGRAM):   else do;
181241    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
181242    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
181243    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181244    +   end;
MPRINT(EM_DIAGRAM):   end;
181245    +end;
MPRINT(EM_DIAGRAM):   end;
181246    +
181247    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
181248    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
181249    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
181250    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
181251    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
181252    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181253    +end;
MPRINT(EM_DIAGRAM):   end;
181254    +else do;
MPRINT(EM_DIAGRAM):   else do;
181255    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
181256    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
181257    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
181258    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
181259    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
181260    +   end;
MPRINT(EM_DIAGRAM):   end;
181261    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
181262    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
181263    +   end;
MPRINT(EM_DIAGRAM):   end;
181264    +   else do;
MPRINT(EM_DIAGRAM):   else do;
181265    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
181266    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
181267    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181268    +   end;
MPRINT(EM_DIAGRAM):   end;
181269    +end;
MPRINT(EM_DIAGRAM):   end;
181270    +
181271    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
181272    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
181273    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
181274    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
181275    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
181276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181277    +end;
MPRINT(EM_DIAGRAM):   end;
181278    +else do;
MPRINT(EM_DIAGRAM):   else do;
181279    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
181280    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
181281    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
181282    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
181283    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
181284    +   end;
MPRINT(EM_DIAGRAM):   end;
181285    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
181286    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
181287    +   end;
MPRINT(EM_DIAGRAM):   end;
181288    +   else do;
MPRINT(EM_DIAGRAM):   else do;
181289    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
181290    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
181291    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181292    +   end;
MPRINT(EM_DIAGRAM):   end;
181293    +end;
MPRINT(EM_DIAGRAM):   end;
181294    +
181295    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
181296    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
181297    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
181298    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
181299    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
181300    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181301    +end;
MPRINT(EM_DIAGRAM):   end;
181302    +else do;
MPRINT(EM_DIAGRAM):   else do;
181303    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
181304    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
181305    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
181306    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
181307    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
181308    +   end;
MPRINT(EM_DIAGRAM):   end;
181309    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
181310    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
181311    +   end;
MPRINT(EM_DIAGRAM):   end;
181312    +   else do;
MPRINT(EM_DIAGRAM):   else do;
181313    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
181314    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
181315    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181316    +   end;
MPRINT(EM_DIAGRAM):   end;
181317    +end;
MPRINT(EM_DIAGRAM):   end;
181318    +
181319    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
181320    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
181321    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
181322    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
181323    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
181324    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
181325    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
181326    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
181327    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
181328    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
181329    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
181330    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
181331    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
181332    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181333    +end;
MPRINT(EM_DIAGRAM):   end;
181334    +else do;
MPRINT(EM_DIAGRAM):   else do;
181335    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
181336    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
181337    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
181338    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
181339    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
181340    +   end;
MPRINT(EM_DIAGRAM):   end;
181341    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
181342    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
181343    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
181344    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
181345    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
181346    +   end;
MPRINT(EM_DIAGRAM):   end;
181347    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
181348    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
181349    +   end;
MPRINT(EM_DIAGRAM):   end;
181350    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
181351    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
181352    +   end;
MPRINT(EM_DIAGRAM):   end;
181353    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
181354    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
181355    +   end;
MPRINT(EM_DIAGRAM):   end;
181356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
181357    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
181358    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
181359    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
181360    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
181361    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
181362    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181363    +   end;
MPRINT(EM_DIAGRAM):   end;
181364    +end;
MPRINT(EM_DIAGRAM):   end;
181365    +
181366    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
181367    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
181368    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
181369    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
181370    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
181371    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
181372    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
181373    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
181374    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
181375    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
181376    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
181377    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
181378    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
181379    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
181380    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181381    +end;
MPRINT(EM_DIAGRAM):   end;
181382    +else do;
MPRINT(EM_DIAGRAM):   else do;
181383    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
181384    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
181385    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
181386    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
181387    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
181388    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
181389    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
181390    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
181391    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
181392    +         end;
MPRINT(EM_DIAGRAM):   end;
181393    +         else do;
MPRINT(EM_DIAGRAM):   else do;
181394    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
181395    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
181396    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
181397    +            end;
MPRINT(EM_DIAGRAM):   end;
181398    +         end;
MPRINT(EM_DIAGRAM):   end;
181399    +      end;
MPRINT(EM_DIAGRAM):   end;
181400    +      else do;
MPRINT(EM_DIAGRAM):   else do;
181401    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
181402    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
181403    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
181404    +         end;
MPRINT(EM_DIAGRAM):   end;
181405    +      end;
MPRINT(EM_DIAGRAM):   end;
181406    +   end;
MPRINT(EM_DIAGRAM):   end;
181407    +   else do;
MPRINT(EM_DIAGRAM):   else do;
181408    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
181409    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
181410    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
181411    +      end;
MPRINT(EM_DIAGRAM):   end;
181412    +      else do;
MPRINT(EM_DIAGRAM):   else do;
181413    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
181414    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
181415    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
181416    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
181417    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
181418    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
181419    +         end;
MPRINT(EM_DIAGRAM):   end;
181420    +      end;
MPRINT(EM_DIAGRAM):   end;
181421    +   end;
MPRINT(EM_DIAGRAM):   end;
181422    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
181423    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
181424    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
181425    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
181426    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
181427    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
181428    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181429    +   end;
MPRINT(EM_DIAGRAM):   end;
181430    +end;
MPRINT(EM_DIAGRAM):   end;
181431    +
181432    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181433    +*** Checking missing input Interval
181434    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
181435    +
181436    +IF NMISS(
181437    +   Income ,
181438    +   Kidhome ,
181439    +   MntFishProducts ,
181440    +   MntFruits ,
181441    +   MntGoldProds ,
181442    +   MntMeatProducts ,
181443    +   MntSweetProducts ,
181444    +   MntWines ,
181445    +   NumCatalogPurchases ,
181446    +   NumDealsPurchases ,
181447    +   NumStorePurchases ,
181448    +   NumWebPurchases ,
181449    +   NumWebVisitsMonth ,
181450    +   Recency ,
181451    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
181452    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
181453    +
181454    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
181455    +END;
MPRINT(EM_DIAGRAM):   END;
181456    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181457    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
181458    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181459    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
181460    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
181461    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
181462    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
181463    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
181464    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
181465    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
181466    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
181467    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
181468    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
181469    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
181470    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
181471    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
181472    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
181473    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
181474    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
181475    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
181476    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
181477    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
181478    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
181479    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
181480    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
181481    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
181482    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
181483    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
181484    +END;
MPRINT(EM_DIAGRAM):   END;
181485    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
181486    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
181487    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
181488    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
181489    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
181490    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
181491    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
181492    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
181493    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
181494    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
181495    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
181496    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
181497    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
181498    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
181499    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
181500    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
181501    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
181502    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
181503    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
181504    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
181505    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
181506    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
181507    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
181508    +   ELSE S_NumCatalogPurchases
181509    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
181510    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
181511    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
181512    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
181513    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
181514    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
181515    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
181516    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
181517    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
181518    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
181519    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
181520    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
181521    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
181522    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
181523    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
181524    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
181525    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
181526    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
181527    +END;
MPRINT(EM_DIAGRAM):   END;
181528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181529    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
181530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181531    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181532    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
181533    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181534    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181535    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
181536    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181537    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
181538    +   H1x1_1  =       0.346744797535 * S_Income  +     1.31363556955711 *
181539    +        S_Kidhome  +    -0.79208756741143 * S_MntFishProducts
181540    +          +     0.68527811841342 * S_MntFruits  +     0.24664684629472 *
181541    +        S_MntGoldProds  +     0.85215044326148 * S_MntMeatProducts
181542    +          +    -0.05146617403327 * S_MntSweetProducts
181543    +          +     0.70199486255944 * S_MntWines  +    -1.00450471229357 *
181544    +        S_NumCatalogPurchases  +     0.20437829426231 * S_NumDealsPurchases
181545    +          +     0.62863110938217 * S_NumStorePurchases
181546    +          +    -0.38696149667878 * S_NumWebPurchases
181547    +          +    -0.64969312889347 * S_NumWebVisitsMonth
181548    +          +      1.3506790879911 * S_Recency  +    -0.14927581282921 *
181549    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.346744797535 * S_Income + 1.31363556955711 * S_Kidhome +
-0.79208756741143 * S_MntFishProducts + 0.68527811841342 * S_MntFruits + 0.24664684629472 *
S_MntGoldProds + 0.85215044326148 * S_MntMeatProducts + -0.05146617403327 * S_MntSweetProducts
+ 0.70199486255944 * S_MntWines + -1.00450471229357 * S_NumCatalogPurchases + 0.20437829426231
* S_NumDealsPurchases + 0.62863110938217 * S_NumStorePurchases + -0.38696149667878 *
S_NumWebPurchases + -0.64969312889347 * S_NumWebVisitsMonth + 1.3506790879911 * S_Recency +
-0.14927581282921 * S_Teenhome ;
181550    +   H1x1_2  =    -0.31812547665326 * S_Income  +    -0.44650104709618 *
181551    +        S_Kidhome  +     0.57229440722364 * S_MntFishProducts
181552    +          +     0.43482820937164 * S_MntFruits  +     -0.2031067703009 *
181553    +        S_MntGoldProds  +    -4.22959784007598 * S_MntMeatProducts
181554    +          +     -0.2837867994991 * S_MntSweetProducts
181555    +          +     0.53009243544309 * S_MntWines  +    -0.69827694726429 *
181556    +        S_NumCatalogPurchases  +    -0.21825886946472 * S_NumDealsPurchases
181557    +          +    -0.54369381190341 * S_NumStorePurchases
181558    +          +     0.67406669261545 * S_NumWebPurchases
181559    +          +     0.33996696883368 * S_NumWebVisitsMonth
181560    +          +    -0.25785000158296 * S_Recency  +     0.29059204886836 *
181561    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31812547665326 * S_Income + -0.44650104709618 * S_Kidhome +
0.57229440722364 * S_MntFishProducts + 0.43482820937164 * S_MntFruits + -0.2031067703009 *
S_MntGoldProds + -4.22959784007598 * S_MntMeatProducts + -0.2837867994991 * S_MntSweetProducts
+ 0.53009243544309 * S_MntWines + -0.69827694726429 * S_NumCatalogPurchases +
-0.21825886946472 * S_NumDealsPurchases + -0.54369381190341 * S_NumStorePurchases +
0.67406669261545 * S_NumWebPurchases + 0.33996696883368 * S_NumWebVisitsMonth +
-0.25785000158296 * S_Recency + 0.29059204886836 * S_Teenhome ;
181562    +   H1x1_3  =    -0.95497484937763 * S_Income  +     0.69843675975299 *
181563    +        S_Kidhome  +    -0.16297234253648 * S_MntFishProducts
181564    +          +    -0.79520871513787 * S_MntFruits  +    -0.29823724505093 *
181565    +        S_MntGoldProds  +    -0.15152860134108 * S_MntMeatProducts
181566    +          +    -0.03465749764322 * S_MntSweetProducts
181567    +          +     0.53127184040091 * S_MntWines  +     0.59135593751067 *
181568    +        S_NumCatalogPurchases  +     0.32132594137215 * S_NumDealsPurchases
181569    +          +      0.4404265130137 * S_NumStorePurchases
181570    +          +     0.34042541893429 * S_NumWebPurchases
181571    +          +    -1.21549916758761 * S_NumWebVisitsMonth
181572    +          +       1.154070329153 * S_Recency  +     0.48728201337678 *
181573    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.95497484937763 * S_Income + 0.69843675975299 * S_Kidhome +
-0.16297234253648 * S_MntFishProducts + -0.79520871513787 * S_MntFruits + -0.29823724505093 *
S_MntGoldProds + -0.15152860134108 * S_MntMeatProducts + -0.03465749764322 *
S_MntSweetProducts + 0.53127184040091 * S_MntWines + 0.59135593751067 * S_NumCatalogPurchases
+ 0.32132594137215 * S_NumDealsPurchases + 0.4404265130137 * S_NumStorePurchases +
0.34042541893429 * S_NumWebPurchases + -1.21549916758761 * S_NumWebVisitsMonth +
1.154070329153 * S_Recency + 0.48728201337678 * S_Teenhome ;
181574    +   H1x1_4  =    -1.18770065121934 * S_Income  +      0.3073609740511 *
181575    +        S_Kidhome  +     0.10352863720245 * S_MntFishProducts
181576    +          +      0.2833318237712 * S_MntFruits  +     0.03154921247745 *
181577    +        S_MntGoldProds  +    -0.21591651561727 * S_MntMeatProducts
181578    +          +    -0.00464679492565 * S_MntSweetProducts
181579    +          +     0.91421960675715 * S_MntWines  +    -1.26836416129835 *
181580    +        S_NumCatalogPurchases  +    -0.70058095897782 * S_NumDealsPurchases
181581    +          +     1.15839307615364 * S_NumStorePurchases
181582    +          +     0.62831972126136 * S_NumWebPurchases
181583    +          +    -1.61962107597882 * S_NumWebVisitsMonth
181584    +          +     1.12858496707441 * S_Recency  +     0.54281989992336 *
181585    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.18770065121934 * S_Income + 0.3073609740511 * S_Kidhome +
0.10352863720245 * S_MntFishProducts + 0.2833318237712 * S_MntFruits + 0.03154921247745 *
S_MntGoldProds + -0.21591651561727 * S_MntMeatProducts + -0.00464679492565 *
S_MntSweetProducts + 0.91421960675715 * S_MntWines + -1.26836416129835 * S_NumCatalogPurchases
+ -0.70058095897782 * S_NumDealsPurchases + 1.15839307615364 * S_NumStorePurchases +
0.62831972126136 * S_NumWebPurchases + -1.61962107597882 * S_NumWebVisitsMonth +
1.12858496707441 * S_Recency + 0.54281989992336 * S_Teenhome ;
181586    +   H1x1_5  =     0.05044786678162 * S_Income  +    -0.28010558310581 *
181587    +        S_Kidhome  +    -0.27691656261205 * S_MntFishProducts
181588    +          +    -0.39089831210828 * S_MntFruits  +    -0.08178998049926 *
181589    +        S_MntGoldProds  +     1.72104172406534 * S_MntMeatProducts
181590    +          +    -0.31125451894603 * S_MntSweetProducts
181591    +          +    -2.29170137059747 * S_MntWines  +     0.63730065528433 *
181592    +        S_NumCatalogPurchases  +     0.88249434950066 * S_NumDealsPurchases
181593    +          +    -1.44151914398807 * S_NumStorePurchases
181594    +          +     -0.5455286038748 * S_NumWebPurchases
181595    +          +     0.92543573664002 * S_NumWebVisitsMonth
181596    +          +    -0.94895006705107 * S_Recency  +     0.12419848895477 *
181597    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.05044786678162 * S_Income + -0.28010558310581 * S_Kidhome +
-0.27691656261205 * S_MntFishProducts + -0.39089831210828 * S_MntFruits + -0.08178998049926 *
S_MntGoldProds + 1.72104172406534 * S_MntMeatProducts + -0.31125451894603 * S_MntSweetProducts
+ -2.29170137059747 * S_MntWines + 0.63730065528433 * S_NumCatalogPurchases + 0.88249434950066
* S_NumDealsPurchases + -1.44151914398807 * S_NumStorePurchases + -0.5455286038748 *
S_NumWebPurchases + 0.92543573664002 * S_NumWebVisitsMonth + -0.94895006705107 * S_Recency +
0.12419848895477 * S_Teenhome ;
181598    +   H1x1_6  =      1.0379959912095 * S_Income  +    -0.86527104445929 *
181599    +        S_Kidhome  +    -0.34569179888564 * S_MntFishProducts
181600    +          +    -0.00109367242014 * S_MntFruits  +      0.1491727982835 *
181601    +        S_MntGoldProds  +     1.59142102470118 * S_MntMeatProducts
181602    +          +    -0.44310159680843 * S_MntSweetProducts
181603    +          +    -0.12978244847526 * S_MntWines  +     1.25298974430925 *
181604    +        S_NumCatalogPurchases  +      0.8343138844265 * S_NumDealsPurchases
181605    +          +    -0.06648303760561 * S_NumStorePurchases
181606    +          +    -0.65122349287903 * S_NumWebPurchases
181607    +          +     1.83555427093429 * S_NumWebVisitsMonth
181608    +          +    -2.44265045013513 * S_Recency  +    -0.96168611481099 *
181609    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0379959912095 * S_Income + -0.86527104445929 * S_Kidhome +
-0.34569179888564 * S_MntFishProducts + -0.00109367242014 * S_MntFruits + 0.1491727982835 *
S_MntGoldProds + 1.59142102470118 * S_MntMeatProducts + -0.44310159680843 * S_MntSweetProducts
+ -0.12978244847526 * S_MntWines + 1.25298974430925 * S_NumCatalogPurchases + 0.8343138844265
* S_NumDealsPurchases + -0.06648303760561 * S_NumStorePurchases + -0.65122349287903 *
S_NumWebPurchases + 1.83555427093429 * S_NumWebVisitsMonth + -2.44265045013513 * S_Recency +
-0.96168611481099 * S_Teenhome ;
181610    +   H1x1_1  = H1x1_1  +    -0.04697238730506 * AcceptedCmp10
181611    +          +     0.17124574303968 * AcceptedCmp20  +     0.24668651391243 *
181612    +        AcceptedCmp30  +    -0.17661157809394 * AcceptedCmp40
181613    +          +    -0.07986471073966 * AcceptedCmp50  +     0.39456441776971 *
181614    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04697238730506 * AcceptedCmp10 + 0.17124574303968 *
AcceptedCmp20 + 0.24668651391243 * AcceptedCmp30 + -0.17661157809394 * AcceptedCmp40 +
-0.07986471073966 * AcceptedCmp50 + 0.39456441776971 * Complain0 ;
181615    +   H1x1_2  = H1x1_2  +     0.82032499204552 * AcceptedCmp10
181616    +          +     0.34058590721793 * AcceptedCmp20  +    -0.05139100187265 *
181617    +        AcceptedCmp30  +     0.03047923325443 * AcceptedCmp40
181618    +          +     0.00472330466661 * AcceptedCmp50  +     0.17230692332464 *
181619    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.82032499204552 * AcceptedCmp10 + 0.34058590721793 *
AcceptedCmp20 + -0.05139100187265 * AcceptedCmp30 + 0.03047923325443 * AcceptedCmp40 +
0.00472330466661 * AcceptedCmp50 + 0.17230692332464 * Complain0 ;
181620    +   H1x1_3  = H1x1_3  +     0.28530146043163 * AcceptedCmp10
181621    +          +     0.42287366771085 * AcceptedCmp20  +     0.47373508298281 *
181622    +        AcceptedCmp30  +     0.55866504005454 * AcceptedCmp40
181623    +          +     0.82267729772563 * AcceptedCmp50  +     0.19702533550506 *
181624    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.28530146043163 * AcceptedCmp10 + 0.42287366771085 *
AcceptedCmp20 + 0.47373508298281 * AcceptedCmp30 + 0.55866504005454 * AcceptedCmp40 +
0.82267729772563 * AcceptedCmp50 + 0.19702533550506 * Complain0 ;
181625    +   H1x1_4  = H1x1_4  +     0.52781659896891 * AcceptedCmp10
181626    +          +     0.42920365778433 * AcceptedCmp20  +     1.17620912558163 *
181627    +        AcceptedCmp30  +     0.60548467992927 * AcceptedCmp40
181628    +          +     0.94474163621099 * AcceptedCmp50  +    -0.78069672963693 *
181629    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.52781659896891 * AcceptedCmp10 + 0.42920365778433 *
AcceptedCmp20 + 1.17620912558163 * AcceptedCmp30 + 0.60548467992927 * AcceptedCmp40 +
0.94474163621099 * AcceptedCmp50 + -0.78069672963693 * Complain0 ;
181630    +   H1x1_5  = H1x1_5  +    -0.57412668124255 * AcceptedCmp10
181631    +          +    -0.47940329920743 * AcceptedCmp20  +    -0.32110813917426 *
181632    +        AcceptedCmp30  +    -0.61486082641451 * AcceptedCmp40
181633    +          +    -0.69974277642424 * AcceptedCmp50  +     0.11676881614828 *
181634    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.57412668124255 * AcceptedCmp10 + -0.47940329920743
* AcceptedCmp20 + -0.32110813917426 * AcceptedCmp30 + -0.61486082641451 * AcceptedCmp40 +
-0.69974277642424 * AcceptedCmp50 + 0.11676881614828 * Complain0 ;
181635    +   H1x1_6  = H1x1_6  +    -0.84071985342593 * AcceptedCmp10
181636    +          +    -0.93448636634819 * AcceptedCmp20  +    -1.08375331325128 *
181637    +        AcceptedCmp30  +    -1.17713256753961 * AcceptedCmp40
181638    +          +    -1.19701619371219 * AcceptedCmp50  +     0.43593081503911 *
181639    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.84071985342593 * AcceptedCmp10 + -0.93448636634819
* AcceptedCmp20 + -1.08375331325128 * AcceptedCmp30 + -1.17713256753961 * AcceptedCmp40 +
-1.19701619371219 * AcceptedCmp50 + 0.43593081503911 * Complain0 ;
181640    +   H1x1_1  = H1x1_1  +     0.16696814950674 * Education2n_Cycle
181641    +          +    -0.44548398836024 * EducationBasic  +    -0.13816962229813 *
181642    +        EducationGraduation  +     0.15082660839612 * EducationMaster
181643    +          +    -0.86711066227375 * Marital_StatusDivorced
181644    +          +     0.40837974583757 * Marital_StatusMarried
181645    +          +    -0.36026722115525 * Marital_StatusSingle
181646    +          +     0.79004200065113 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.16696814950674 * Education2n_Cycle +
-0.44548398836024 * EducationBasic + -0.13816962229813 * EducationGraduation +
0.15082660839612 * EducationMaster + -0.86711066227375 * Marital_StatusDivorced +
0.40837974583757 * Marital_StatusMarried + -0.36026722115525 * Marital_StatusSingle +
0.79004200065113 * Marital_StatusTogether ;
181647    +   H1x1_2  = H1x1_2  +     0.16842509296504 * Education2n_Cycle
181648    +          +    -0.37448080566378 * EducationBasic  +     0.48861368388392 *
181649    +        EducationGraduation  +    -0.52159546239433 * EducationMaster
181650    +          +     0.32215787204894 * Marital_StatusDivorced
181651    +          +    -0.56445035445224 * Marital_StatusMarried
181652    +          +    -0.19089062631475 * Marital_StatusSingle
181653    +          +    -0.05879603306331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.16842509296504 * Education2n_Cycle +
-0.37448080566378 * EducationBasic + 0.48861368388392 * EducationGraduation +
-0.52159546239433 * EducationMaster + 0.32215787204894 * Marital_StatusDivorced +
-0.56445035445224 * Marital_StatusMarried + -0.19089062631475 * Marital_StatusSingle +
-0.05879603306331 * Marital_StatusTogether ;
181654    +   H1x1_3  = H1x1_3  +    -0.60123226656743 * Education2n_Cycle
181655    +          +     0.60422871475083 * EducationBasic  +     1.03135359524948 *
181656    +        EducationGraduation  +     0.08569631133746 * EducationMaster
181657    +          +      0.0333599428728 * Marital_StatusDivorced
181658    +          +      0.2536992094527 * Marital_StatusMarried
181659    +          +     0.28814962122223 * Marital_StatusSingle
181660    +          +    -0.07291720333163 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.60123226656743 * Education2n_Cycle +
0.60422871475083 * EducationBasic + 1.03135359524948 * EducationGraduation + 0.08569631133746
* EducationMaster + 0.0333599428728 * Marital_StatusDivorced + 0.2536992094527 *
Marital_StatusMarried + 0.28814962122223 * Marital_StatusSingle + -0.07291720333163 *
Marital_StatusTogether ;
181661    +   H1x1_4  = H1x1_4  +    -0.31817779304591 * Education2n_Cycle
181662    +          +     0.41715850822951 * EducationBasic  +    -1.42142934931707 *
181663    +        EducationGraduation  +     0.67447448653035 * EducationMaster
181664    +          +    -0.47992692297474 * Marital_StatusDivorced
181665    +          +     1.37810632485566 * Marital_StatusMarried
181666    +          +    -1.37561982457408 * Marital_StatusSingle
181667    +          +     1.44711275454438 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.31817779304591 * Education2n_Cycle +
0.41715850822951 * EducationBasic + -1.42142934931707 * EducationGraduation + 0.67447448653035
* EducationMaster + -0.47992692297474 * Marital_StatusDivorced + 1.37810632485566 *
Marital_StatusMarried + -1.37561982457408 * Marital_StatusSingle + 1.44711275454438 *
Marital_StatusTogether ;
181668    +   H1x1_5  = H1x1_5  +     0.09777346458802 * Education2n_Cycle
181669    +          +    -0.45960393039978 * EducationBasic  +     0.51146196412307 *
181670    +        EducationGraduation  +    -0.24819773072524 * EducationMaster
181671    +          +     0.19162417091995 * Marital_StatusDivorced
181672    +          +    -0.36068364824761 * Marital_StatusMarried
181673    +          +    -0.12710669526743 * Marital_StatusSingle
181674    +          +    -0.01019314244777 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.09777346458802 * Education2n_Cycle +
-0.45960393039978 * EducationBasic + 0.51146196412307 * EducationGraduation +
-0.24819773072524 * EducationMaster + 0.19162417091995 * Marital_StatusDivorced +
-0.36068364824761 * Marital_StatusMarried + -0.12710669526743 * Marital_StatusSingle +
-0.01019314244777 * Marital_StatusTogether ;
181675    +   H1x1_6  = H1x1_6  +     0.36097201590287 * Education2n_Cycle
181676    +          +     0.58682328743356 * EducationBasic  +    -0.70502301542305 *
181677    +        EducationGraduation  +    -0.64274217783062 * EducationMaster
181678    +          +     0.23760271729717 * Marital_StatusDivorced
181679    +          +    -1.21454188572959 * Marital_StatusMarried
181680    +          +     1.24284947007232 * Marital_StatusSingle
181681    +          +    -1.39754167839201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.36097201590287 * Education2n_Cycle +
0.58682328743356 * EducationBasic + -0.70502301542305 * EducationGraduation +
-0.64274217783062 * EducationMaster + 0.23760271729717 * Marital_StatusDivorced +
-1.21454188572959 * Marital_StatusMarried + 1.24284947007232 * Marital_StatusSingle +
-1.39754167839201 * Marital_StatusTogether ;
181682    +   H1x1_1  =    -0.37160255114665 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.37160255114665 + H1x1_1 ;
181683    +   H1x1_2  =    -0.79024897923326 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.79024897923326 + H1x1_2 ;
181684    +   H1x1_3  =    -1.07478535022413 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.07478535022413 + H1x1_3 ;
181685    +   H1x1_4  =    -0.83827859036654 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.83827859036654 + H1x1_4 ;
181686    +   H1x1_5  =      1.0917082111499 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0917082111499 + H1x1_5 ;
181687    +   H1x1_6  =     1.09202728340056 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.09202728340056 + H1x1_6 ;
181688    +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
181689    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
181690    +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
181691    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
181692    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
181693    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
181694    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
181695    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
181696    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
181697    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
181698    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
181699    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
181700    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
181701    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
181702    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
181703    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
181704    +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
181705    +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
181706    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
181707    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
181708    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
181709    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
181710    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
181711    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
181712    +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
181713    +END;
MPRINT(EM_DIAGRAM):   END;
181714    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
181715    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
181716    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
181717    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
181718    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
181719    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
181720    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
181721    +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
181722    +END;
MPRINT(EM_DIAGRAM):   END;
181723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181724    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
181725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181726    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
181727    +   P_DepVar1  =    -9.47780447141489 * H1x1_1  +    -8.06096671462069 * H1x1_2
181728    +          +    -4.21167567173811 * H1x1_3  +     -37.599240879379 * H1x1_4
181729    +          +     25.0531533838083 * H1x1_5  +     29.1428275636369 * H1x1_6
181730    +          +     4.90157629063847 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.47780447141489 * H1x1_1 + -8.06096671462069 * H1x1_2 +
-4.21167567173811 * H1x1_3 + -37.599240879379 * H1x1_4 + 25.0531533838083 * H1x1_5 +
29.1428275636369 * H1x1_6 + 4.90157629063847 * H1x1_7 ;
181731    +   P_DepVar1  =    -1.97718258496285 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97718258496285 + P_DepVar1 ;
181732    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
181733    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
181734    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
181735    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
181736    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
181737    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
181738    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
181739    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
181740    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
181741    +END;
MPRINT(EM_DIAGRAM):   END;
181742    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
181743    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
181744    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
181745    +END;
MPRINT(EM_DIAGRAM):   END;
181746    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
181747    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
181748    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
181749    +END;
MPRINT(EM_DIAGRAM):   END;
181750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181751    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
181752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
181753    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
181754    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
181755    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
181756    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
181757    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
181758    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
181759    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
181760    +END;
MPRINT(EM_DIAGRAM):   END;
181761    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
181762    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
181763    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
181764    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
181765     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
181766     quit;
181767     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
181768     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
181769     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
181770     retain ID 2 Node "AutoNeural43";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural43";
181771     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
181772     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181773     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
181774     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181775     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2420 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2420 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181776     proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural43_variableset out=_temp2(keep=NAME
CREATOR);
181777     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181778     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL43_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181779     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
181780     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
181781     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
181782     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181783     proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural43_train out=_meta(keep=NAME) noprint;
181784     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
181785     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
181786     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 60 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181788     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
181789     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
181790     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181791     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 60 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 60 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181792     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
181793     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
181793   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1212 rows and 5 columns.
 
181794     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181795     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
181796     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1212 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1212 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181797     filename _pref
181797   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
181798     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
181799     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
181800    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
181801    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
181802    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
181803    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
181804    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
181805    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
181806     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
181807     quit;
181808     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
181809     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
181810     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
181811     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
181812     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
181813     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181814     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
181815     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181816     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181817     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
181818     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181819     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181820     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
181821     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
181822     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
181823     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181824     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
181825     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181826     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
181827     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181828     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181829     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
181830     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
181831     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181832     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181833     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
181834     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
181834   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
181835     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181836     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
181837     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1216 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
181838     filename _pref
181838   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
181839     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
181840     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
181841    +
181842    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
181843    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
181843   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
181844    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
181845    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
181846    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
181847    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
181848    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
181849     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
181850     quit;
181851     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
181852     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
181853     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
181854     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
181855     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
181856     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181857     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
181858     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181859     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181860     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
181861     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181862     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181863     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
181864     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
181865     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
181866     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181867     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
181868     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181869     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
181870     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181871     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181872     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
181873     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
181874     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181875     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181876     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
181877     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
181877   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
181878     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181879     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
181880     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1255 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181881     filename _pref
181881   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
181882     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
181883     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
181884    +
181885    +
181886    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
181887    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
181888    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
181889    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
181890    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
181891    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
181892    +
181893    +
181894    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
181895    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
181896    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
181897    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
181898    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
181899    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
181900    +
181901    +
181902    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
181903    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
181904    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
181905    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
181906    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
181907    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
181908    +
181909    +
181910    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
181911    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
181912    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
181913    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
181914    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
181915    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
181916    +
181917    +
181918    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
181919    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
181920    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
181921    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
181922    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
181923    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
181924    +
181925    +
181926    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
181927    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
181928    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
181929    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
181930    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
181931    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
181932    +
181933    +
181934    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
181935    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
181936    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
181937    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
181938    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
181939    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
181940    +
181941    +
181942    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
181943    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
181944    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
181945    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
181946    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
181947    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
181948    +if
181949    +_FILTERNORM1 not in ( '.')
181950    + and
181951    +_FILTERNORM2 not in ( '.')
181952    + and
181953    +_FILTERNORM3 not in ( '.')
181954    + and
181955    +_FILTERNORM4 not in ( '.')
181956    + and
181957    +_FILTERNORM5 not in ( '.')
181958    + and
181959    +_FILTERNORM6 not in ( '.')
181960    + and
181961    +_FILTERNORM7 not in ( ' ')
181962    + and
181963    +_FILTERNORM8 not in ( ' ')
181964    +and
181965    +( Dt_Customer ne .)
181966    +and ( Income ne . and (Income<=107000))
181967    +and ( Kidhome ne .)
181968    +and ( MntFishProducts ne .)
181969    +and ( MntFruits ne .)
181970    +and ( MntGoldProds ne .)
181971    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
181972    +and ( MntSweetProducts ne .)
181973    +and ( MntWines ne .)
181974    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
181975    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
181976    +and ( NumStorePurchases ne .)
181977    +and ( NumWebPurchases ne .)
181978    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
181979    +and ( Recency ne .)
181980    +and ( Teenhome ne .)
181981    +and ( Year_Birth ne .)
181982    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
181983    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
181984    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
181985    +end;
MPRINT(EM_DIAGRAM):   end;
181986    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
181987    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
181988     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
181989     quit;
181990     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
181991     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
181992     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
181993     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
181994     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
181995     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
181996     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
181997     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
181998     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
181999     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
182000     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182001     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182002     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
182003     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
182004     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
182005     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182006     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
182007     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
182008     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
182009     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182010     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182011     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
182012     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
182013     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182014     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182015     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
182016     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
182016   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
182017     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182018     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
182019     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1321 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182020     %macro varDept(fcmpdata=,id=);
182021     %global nobs&id scoreFlag&id;
182022     %let scoreFlag&id = 0;
182023     %if &id=1 or ^&fcmpStart %then %do;
182024     proc sort data=&fcmpdata out=_temp&id nodupkey;
182025     by NAME;
182026     where id=&id and LHS in( %let j=1;
182027     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
182028     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
182029     "&var" %let j = %eval(&j+1);
182030     %end;
182031     );
182032     run;
182033     %let dsid = %sysfunc(open(_temp&id));
182034     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
182035     %let dsid = %sysfunc(close(&dsid));
182036     %if &&nobs&id %then %do;
182037     %let scoreFlag&id = 1;
182038     %let fcmpStart = 1;
182039     %end;
182040     %else %let fcmpStart = 0;
182041     %end;
182042     %else %do;
182043     proc sort data=&fcmpdata out=_tempid;
182044     where id=&id;
182045     by LHS;
182046     run;
182047     %let dsid = %sysfunc(open(_tempid));
182048     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
182049     %let dsid = %sysfunc(close(&dsid));
182050     %if ^&&nobs&id %then %do;
182051     proc datasets lib=work nolist;
182052     delete _tempid;
182053     run;
182054     quit;
182055     %end;
182056     %else %do;
182057     data _tempAll;
182058     set %let j=%eval(&id-1);
182059     %do x=1 %to &j;
182060     %if &&nobs&x %then %do;
182061     _temp&x %end;
182062     %end;
182063     ;
182064     run;
182065     proc sql;
182066     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
182066   ! work._tempid p2 where p.name=p2.lhs;
182067     quit;
182068     data _temp&id;
182069     set _temp&id;
182070     where LHS ne '' and NAME ne '' and Node ne '';
182071     run;
182072     proc datasets lib=work nolist;
182073     delete _tempAll;
182074     run;
182075     %let dsid = %sysfunc(open(_temp&id));
182076     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
182077     %let dsid = %sysfunc(close(&dsid));
182078     %if ^&&nobs&id %then %do;
182079     proc datasets lib=work nolist;
182080     delete _temp&id;
182081     run;
182082     quit;
182083     %end;
182084     %else %do;
182085     %let scoreFlag&id = 1;
182086     data _temp&id;
182087     set _temp&id;
182088     where LHS ne NAME and node ne '';
182089     run;
182090     %let dsid = %sysfunc(open(_temp&id));
182091     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
182092     %let dsid = %sysfunc(close(&dsid));
182093     %if ^&&nobs&id %then %do;
182094     proc datasets lib=work nolist;
182095     delete _temp&id;
182096     run;
182097     quit;
182098     %end;
182099     %else %do;
182100     proc sort data=_temp&id nodupkey;
182101     by LHS NAME;
182102     run;
182103     %end;
182104     %end;
182105     %end;
182106     %end;
182107     %mend varDept;
182108     %macro optCode(outdata=fcmpdata);
182109     %global fcmpStart;
182110     %let fcmpStart = 0;
182111     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
182112     %let NumNodes=9;
182113     %do k=1 %to &NumNodes;
182114     %vardept(fcmpdata=&outdata, id=&k);
182115     %end;
182116     %mend optCode;
182117     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 119 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 87 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 32 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
182118     filename _pref
182118   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas";
182119     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
182120     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural42\EMPUBLISHSCORE.sas.
182121    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
182122    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
182123    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
182124    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
182125    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
182126    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
182127    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
182128    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
182129    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
182130    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
182131    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
182132    +LENGTH _WARN_ $4
182133    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
182134    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
182135    +
182136    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
182137    +
182138    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
182139    +
182140    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
182141    +
182142    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
182143    +
182144    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
182145    +
182146    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
182147    +
182148    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
182149    +
182150    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
182151    +
182152    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
182153    +
182154    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
182155    +
182156    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
182157    +
182158    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
182159    +
182160    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
182161    +
182162    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
182163    +
182164    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
182165    +
182166    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
182167    +
182168    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
182169    +
182170    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
182171    +
182172    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
182173    +
182174    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
182175    +
182176    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
182177    +
182178    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
182179    +
182180    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
182181    +
182182    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
182183    +
182184    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
182185    +
182186    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
182187    +
182188    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
182189    +
182190    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
182191    +
182192    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
182193    +
182194    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
182195    +
182196    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
182197    +
182198    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
182199    +
182200    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
182201    +
182202    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
182203    +
182204    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
182205    +
182206    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
182207    +
182208    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
182209    +
182210    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
182211    +
182212    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
182213    +
182214    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
182215    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
182216    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
182217    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
182218    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
182219    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182220    +end;
MPRINT(EM_DIAGRAM):   end;
182221    +else do;
MPRINT(EM_DIAGRAM):   else do;
182222    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
182223    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
182224    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
182225    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
182226    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
182227    +   end;
MPRINT(EM_DIAGRAM):   end;
182228    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
182229    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
182230    +   end;
MPRINT(EM_DIAGRAM):   end;
182231    +   else do;
MPRINT(EM_DIAGRAM):   else do;
182232    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
182233    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
182234    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182235    +   end;
MPRINT(EM_DIAGRAM):   end;
182236    +end;
MPRINT(EM_DIAGRAM):   end;
182237    +
182238    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
182239    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
182240    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
182241    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
182242    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
182243    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182244    +end;
MPRINT(EM_DIAGRAM):   end;
182245    +else do;
MPRINT(EM_DIAGRAM):   else do;
182246    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
182247    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
182248    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
182249    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
182250    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
182251    +   end;
MPRINT(EM_DIAGRAM):   end;
182252    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
182253    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
182254    +   end;
MPRINT(EM_DIAGRAM):   end;
182255    +   else do;
MPRINT(EM_DIAGRAM):   else do;
182256    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
182257    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
182258    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182259    +   end;
MPRINT(EM_DIAGRAM):   end;
182260    +end;
MPRINT(EM_DIAGRAM):   end;
182261    +
182262    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
182263    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
182264    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
182265    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
182266    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
182267    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182268    +end;
MPRINT(EM_DIAGRAM):   end;
182269    +else do;
MPRINT(EM_DIAGRAM):   else do;
182270    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
182271    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
182272    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
182273    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
182274    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
182275    +   end;
MPRINT(EM_DIAGRAM):   end;
182276    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
182277    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
182278    +   end;
MPRINT(EM_DIAGRAM):   end;
182279    +   else do;
MPRINT(EM_DIAGRAM):   else do;
182280    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
182281    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
182282    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182283    +   end;
MPRINT(EM_DIAGRAM):   end;
182284    +end;
MPRINT(EM_DIAGRAM):   end;
182285    +
182286    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
182287    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
182288    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
182289    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
182290    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
182291    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182292    +end;
MPRINT(EM_DIAGRAM):   end;
182293    +else do;
MPRINT(EM_DIAGRAM):   else do;
182294    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
182295    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
182296    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
182297    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
182298    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
182299    +   end;
MPRINT(EM_DIAGRAM):   end;
182300    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
182301    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
182302    +   end;
MPRINT(EM_DIAGRAM):   end;
182303    +   else do;
MPRINT(EM_DIAGRAM):   else do;
182304    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
182305    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
182306    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182307    +   end;
MPRINT(EM_DIAGRAM):   end;
182308    +end;
MPRINT(EM_DIAGRAM):   end;
182309    +
182310    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
182311    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
182312    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
182313    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
182314    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
182315    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182316    +end;
MPRINT(EM_DIAGRAM):   end;
182317    +else do;
MPRINT(EM_DIAGRAM):   else do;
182318    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
182319    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
182320    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
182321    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
182322    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
182323    +   end;
MPRINT(EM_DIAGRAM):   end;
182324    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
182325    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
182326    +   end;
MPRINT(EM_DIAGRAM):   end;
182327    +   else do;
MPRINT(EM_DIAGRAM):   else do;
182328    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
182329    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
182330    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182331    +   end;
MPRINT(EM_DIAGRAM):   end;
182332    +end;
MPRINT(EM_DIAGRAM):   end;
182333    +
182334    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
182335    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
182336    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
182337    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
182338    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
182339    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182340    +end;
MPRINT(EM_DIAGRAM):   end;
182341    +else do;
MPRINT(EM_DIAGRAM):   else do;
182342    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
182343    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
182344    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
182345    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
182346    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
182347    +   end;
MPRINT(EM_DIAGRAM):   end;
182348    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
182349    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
182350    +   end;
MPRINT(EM_DIAGRAM):   end;
182351    +   else do;
MPRINT(EM_DIAGRAM):   else do;
182352    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
182353    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
182354    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182355    +   end;
MPRINT(EM_DIAGRAM):   end;
182356    +end;
MPRINT(EM_DIAGRAM):   end;
182357    +
182358    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
182359    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
182360    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
182361    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
182362    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
182363    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
182364    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
182365    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
182366    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
182367    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
182368    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
182369    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
182370    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
182371    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182372    +end;
MPRINT(EM_DIAGRAM):   end;
182373    +else do;
MPRINT(EM_DIAGRAM):   else do;
182374    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
182375    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
182376    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
182377    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
182378    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
182379    +   end;
MPRINT(EM_DIAGRAM):   end;
182380    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
182381    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
182382    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
182383    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
182384    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
182385    +   end;
MPRINT(EM_DIAGRAM):   end;
182386    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
182387    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
182388    +   end;
MPRINT(EM_DIAGRAM):   end;
182389    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
182390    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
182391    +   end;
MPRINT(EM_DIAGRAM):   end;
182392    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
182393    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
182394    +   end;
MPRINT(EM_DIAGRAM):   end;
182395    +   else do;
MPRINT(EM_DIAGRAM):   else do;
182396    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
182397    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
182398    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
182399    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
182400    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
182401    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182402    +   end;
MPRINT(EM_DIAGRAM):   end;
182403    +end;
MPRINT(EM_DIAGRAM):   end;
182404    +
182405    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
182406    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
182407    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
182408    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
182409    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
182410    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
182411    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
182412    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
182413    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
182414    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
182415    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
182416    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
182417    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
182418    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
182419    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182420    +end;
MPRINT(EM_DIAGRAM):   end;
182421    +else do;
MPRINT(EM_DIAGRAM):   else do;
182422    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
182423    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
182424    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
182425    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
182426    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
182427    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
182428    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
182429    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
182430    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
182431    +         end;
MPRINT(EM_DIAGRAM):   end;
182432    +         else do;
MPRINT(EM_DIAGRAM):   else do;
182433    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
182434    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
182435    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
182436    +            end;
MPRINT(EM_DIAGRAM):   end;
182437    +         end;
MPRINT(EM_DIAGRAM):   end;
182438    +      end;
MPRINT(EM_DIAGRAM):   end;
182439    +      else do;
MPRINT(EM_DIAGRAM):   else do;
182440    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
182441    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
182442    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
182443    +         end;
MPRINT(EM_DIAGRAM):   end;
182444    +      end;
MPRINT(EM_DIAGRAM):   end;
182445    +   end;
MPRINT(EM_DIAGRAM):   end;
182446    +   else do;
MPRINT(EM_DIAGRAM):   else do;
182447    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
182448    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
182449    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
182450    +      end;
MPRINT(EM_DIAGRAM):   end;
182451    +      else do;
MPRINT(EM_DIAGRAM):   else do;
182452    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
182453    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
182454    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
182455    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
182456    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
182457    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
182458    +         end;
MPRINT(EM_DIAGRAM):   end;
182459    +      end;
MPRINT(EM_DIAGRAM):   end;
182460    +   end;
MPRINT(EM_DIAGRAM):   end;
182461    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
182462    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
182463    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
182464    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
182465    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
182466    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
182467    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182468    +   end;
MPRINT(EM_DIAGRAM):   end;
182469    +end;
MPRINT(EM_DIAGRAM):   end;
182470    +
182471    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182472    +*** Checking missing input Interval
182473    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
182474    +
182475    +IF NMISS(
182476    +   Income ,
182477    +   Kidhome ,
182478    +   MntFishProducts ,
182479    +   MntFruits ,
182480    +   MntGoldProds ,
182481    +   MntMeatProducts ,
182482    +   MntSweetProducts ,
182483    +   MntWines ,
182484    +   NumCatalogPurchases ,
182485    +   NumDealsPurchases ,
182486    +   NumStorePurchases ,
182487    +   NumWebPurchases ,
182488    +   NumWebVisitsMonth ,
182489    +   Recency ,
182490    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
182491    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
182492    +
182493    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
182494    +END;
MPRINT(EM_DIAGRAM):   END;
182495    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182496    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
182497    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182498    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
182499    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
182500    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
182501    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
182502    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
182503    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
182504    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
182505    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
182506    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
182507    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
182508    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
182509    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
182510    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
182511    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
182512    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
182513    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
182514    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
182515    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
182516    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
182517    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
182518    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
182519    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
182520    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
182521    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
182522    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
182523    +END;
MPRINT(EM_DIAGRAM):   END;
182524    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
182525    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
182526    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
182527    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
182528    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
182529    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
182530    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
182531    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
182532    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
182533    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
182534    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
182535    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
182536    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
182537    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
182538    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
182539    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
182540    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
182541    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
182542    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
182543    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
182544    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
182545    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
182546    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
182547    +   ELSE S_NumCatalogPurchases
182548    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
182549    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
182550    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
182551    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
182552    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
182553    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
182554    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
182555    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
182556    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
182557    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
182558    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
182559    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
182560    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
182561    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
182562    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
182563    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
182564    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
182565    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
182566    +END;
MPRINT(EM_DIAGRAM):   END;
182567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182568    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
182569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182571    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
182572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182573    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182574    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
182575    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182576    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
182577    +   H1x1_1  =    -0.61752831165943 * S_Income  +    -0.31903138173339 *
182578    +        S_Kidhome  +     1.07644564135555 * S_MntFishProducts
182579    +          +     0.65454839379318 * S_MntFruits  +    -0.14959507038031 *
182580    +        S_MntGoldProds  +    -5.93493457217182 * S_MntMeatProducts
182581    +          +     0.13203247258141 * S_MntSweetProducts
182582    +          +     2.56195281130506 * S_MntWines  +    -1.36884424558249 *
182583    +        S_NumCatalogPurchases  +    -0.86876556455629 * S_NumDealsPurchases
182584    +          +     1.48881174203434 * S_NumStorePurchases
182585    +          +     2.06403591844726 * S_NumWebPurchases
182586    +          +    -0.09535558759694 * S_NumWebVisitsMonth
182587    +          +    -0.05978552253526 * S_Recency  +     0.15007435747359 *
182588    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.61752831165943 * S_Income + -0.31903138173339 * S_Kidhome +
1.07644564135555 * S_MntFishProducts + 0.65454839379318 * S_MntFruits + -0.14959507038031 *
S_MntGoldProds + -5.93493457217182 * S_MntMeatProducts + 0.13203247258141 * S_MntSweetProducts
+ 2.56195281130506 * S_MntWines + -1.36884424558249 * S_NumCatalogPurchases +
-0.86876556455629 * S_NumDealsPurchases + 1.48881174203434 * S_NumStorePurchases +
2.06403591844726 * S_NumWebPurchases + -0.09535558759694 * S_NumWebVisitsMonth +
-0.05978552253526 * S_Recency + 0.15007435747359 * S_Teenhome ;
182589    +   H1x1_2  =     0.26608479656795 * S_Income  +    -1.19991366958494 *
182590    +        S_Kidhome  +    -0.06930701896636 * S_MntFishProducts
182591    +          +    -0.24491476793503 * S_MntFruits  +     0.61341878614078 *
182592    +        S_MntGoldProds  +     1.20573081926043 * S_MntMeatProducts
182593    +          +      0.3852767951223 * S_MntSweetProducts
182594    +          +     1.08228250264945 * S_MntWines  +     0.60642303652873 *
182595    +        S_NumCatalogPurchases  +     0.15318179926318 * S_NumDealsPurchases
182596    +          +     0.87686526091024 * S_NumStorePurchases
182597    +          +     0.48807967312664 * S_NumWebPurchases
182598    +          +     2.42770807785792 * S_NumWebVisitsMonth
182599    +          +      -2.239057176324 * S_Recency  +    -0.38694456406673 *
182600    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26608479656795 * S_Income + -1.19991366958494 * S_Kidhome +
-0.06930701896636 * S_MntFishProducts + -0.24491476793503 * S_MntFruits + 0.61341878614078 *
S_MntGoldProds + 1.20573081926043 * S_MntMeatProducts + 0.3852767951223 * S_MntSweetProducts +
1.08228250264945 * S_MntWines + 0.60642303652873 * S_NumCatalogPurchases + 0.15318179926318 *
S_NumDealsPurchases + 0.87686526091024 * S_NumStorePurchases + 0.48807967312664 *
S_NumWebPurchases + 2.42770807785792 * S_NumWebVisitsMonth + -2.239057176324 * S_Recency +
-0.38694456406673 * S_Teenhome ;
182601    +   H1x1_3  =     2.14026785899485 * S_Income  +     0.71085813088393 *
182602    +        S_Kidhome  +    -0.12119457643873 * S_MntFishProducts
182603    +          +     0.52522197349122 * S_MntFruits  +     0.44706934196977 *
182604    +        S_MntGoldProds  +     1.26484530402043 * S_MntMeatProducts
182605    +          +      0.4461192743946 * S_MntSweetProducts
182606    +          +     0.68849791421776 * S_MntWines  +     0.73332275156447 *
182607    +        S_NumCatalogPurchases  +     0.25950906585502 * S_NumDealsPurchases
182608    +          +     1.26831094932108 * S_NumStorePurchases
182609    +          +     0.50819627174451 * S_NumWebPurchases
182610    +          +      0.5463426309003 * S_NumWebVisitsMonth
182611    +          +    -1.45156203280121 * S_Recency  +    -0.99155600458731 *
182612    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.14026785899485 * S_Income + 0.71085813088393 * S_Kidhome +
-0.12119457643873 * S_MntFishProducts + 0.52522197349122 * S_MntFruits + 0.44706934196977 *
S_MntGoldProds + 1.26484530402043 * S_MntMeatProducts + 0.4461192743946 * S_MntSweetProducts +
0.68849791421776 * S_MntWines + 0.73332275156447 * S_NumCatalogPurchases + 0.25950906585502 *
S_NumDealsPurchases + 1.26831094932108 * S_NumStorePurchases + 0.50819627174451 *
S_NumWebPurchases + 0.5463426309003 * S_NumWebVisitsMonth + -1.45156203280121 * S_Recency +
-0.99155600458731 * S_Teenhome ;
182613    +   H1x1_4  =     0.28134858392415 * S_Income  +     1.57838616473011 *
182614    +        S_Kidhome  +     0.01685933792865 * S_MntFishProducts
182615    +          +     0.64818795957189 * S_MntFruits  +     0.44053765721056 *
182616    +        S_MntGoldProds  +     -0.0350414210023 * S_MntMeatProducts
182617    +          +     0.73630834236265 * S_MntSweetProducts
182618    +          +     2.20164313777354 * S_MntWines  +    -0.71244138939707 *
182619    +        S_NumCatalogPurchases  +    -0.05218003711946 * S_NumDealsPurchases
182620    +          +     2.08815797619397 * S_NumStorePurchases
182621    +          +     1.47250122683369 * S_NumWebPurchases
182622    +          +    -1.95745344341946 * S_NumWebVisitsMonth
182623    +          +     1.52461902721397 * S_Recency  +     0.07114080397665 *
182624    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.28134858392415 * S_Income + 1.57838616473011 * S_Kidhome +
0.01685933792865 * S_MntFishProducts + 0.64818795957189 * S_MntFruits + 0.44053765721056 *
S_MntGoldProds + -0.0350414210023 * S_MntMeatProducts + 0.73630834236265 * S_MntSweetProducts
+ 2.20164313777354 * S_MntWines + -0.71244138939707 * S_NumCatalogPurchases +
-0.05218003711946 * S_NumDealsPurchases + 2.08815797619397 * S_NumStorePurchases +
1.47250122683369 * S_NumWebPurchases + -1.95745344341946 * S_NumWebVisitsMonth +
1.52461902721397 * S_Recency + 0.07114080397665 * S_Teenhome ;
182625    +   H1x1_5  =     0.06299419029838 * S_Income  +    -0.25263043424438 *
182626    +        S_Kidhome  +    -0.72407836360298 * S_MntFishProducts
182627    +          +     0.46240377706589 * S_MntFruits  +    -0.31168917499552 *
182628    +        S_MntGoldProds  +     3.17795585534164 * S_MntMeatProducts
182629    +          +    -0.23438993753342 * S_MntSweetProducts
182630    +          +     -2.0392497753494 * S_MntWines  +      1.0094456692298 *
182631    +        S_NumCatalogPurchases  +     1.21992922429388 * S_NumDealsPurchases
182632    +          +    -0.49697408067153 * S_NumStorePurchases
182633    +          +     0.41091736049576 * S_NumWebPurchases
182634    +          +     1.61180593172142 * S_NumWebVisitsMonth
182635    +          +    -2.15417652342106 * S_Recency  +    -0.30863432234672 *
182636    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.06299419029838 * S_Income + -0.25263043424438 * S_Kidhome +
-0.72407836360298 * S_MntFishProducts + 0.46240377706589 * S_MntFruits + -0.31168917499552 *
S_MntGoldProds + 3.17795585534164 * S_MntMeatProducts + -0.23438993753342 * S_MntSweetProducts
+ -2.0392497753494 * S_MntWines + 1.0094456692298 * S_NumCatalogPurchases + 1.21992922429388 *
S_NumDealsPurchases + -0.49697408067153 * S_NumStorePurchases + 0.41091736049576 *
S_NumWebPurchases + 1.61180593172142 * S_NumWebVisitsMonth + -2.15417652342106 * S_Recency +
-0.30863432234672 * S_Teenhome ;
182637    +   H1x1_1  = H1x1_1  +     1.15191639869453 * AcceptedCmp10
182638    +          +      0.0367982148477 * AcceptedCmp20  +      0.3258650789605 *
182639    +        AcceptedCmp30  +      0.2580514232707 * AcceptedCmp40
182640    +          +     0.63958723501202 * AcceptedCmp50  +    -0.32640656229888 *
182641    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.15191639869453 * AcceptedCmp10 + 0.0367982148477 *
AcceptedCmp20 + 0.3258650789605 * AcceptedCmp30 + 0.2580514232707 * AcceptedCmp40 +
0.63958723501202 * AcceptedCmp50 + -0.32640656229888 * Complain0 ;
182642    +   H1x1_2  = H1x1_2  +    -1.74950558446111 * AcceptedCmp10
182643    +          +    -0.90356166498734 * AcceptedCmp20  +    -1.23130580993933 *
182644    +        AcceptedCmp30  +     -1.4169795699816 * AcceptedCmp40
182645    +          +    -1.78889837976364 * AcceptedCmp50  +      1.4788954382262 *
182646    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.74950558446111 * AcceptedCmp10 + -0.90356166498734
* AcceptedCmp20 + -1.23130580993933 * AcceptedCmp30 + -1.4169795699816 * AcceptedCmp40 +
-1.78889837976364 * AcceptedCmp50 + 1.4788954382262 * Complain0 ;
182647    +   H1x1_3  = H1x1_3  +     0.19640584758608 * AcceptedCmp10
182648    +          +    -0.02812292141076 * AcceptedCmp20  +     0.18411950002405 *
182649    +        AcceptedCmp30  +     0.14654389018041 * AcceptedCmp40
182650    +          +    -0.73289230090736 * AcceptedCmp50  +    -0.18955862978745 *
182651    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.19640584758608 * AcceptedCmp10 + -0.02812292141076 *
AcceptedCmp20 + 0.18411950002405 * AcceptedCmp30 + 0.14654389018041 * AcceptedCmp40 +
-0.73289230090736 * AcceptedCmp50 + -0.18955862978745 * Complain0 ;
182652    +   H1x1_4  = H1x1_4  +     0.60930619563149 * AcceptedCmp10
182653    +          +     0.56372104821368 * AcceptedCmp20  +     1.23124531565034 *
182654    +        AcceptedCmp30  +     1.16511385622377 * AcceptedCmp40
182655    +          +     0.83299036807857 * AcceptedCmp50  +    -0.87889366207671 *
182656    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.60930619563149 * AcceptedCmp10 + 0.56372104821368 *
AcceptedCmp20 + 1.23124531565034 * AcceptedCmp30 + 1.16511385622377 * AcceptedCmp40 +
0.83299036807857 * AcceptedCmp50 + -0.87889366207671 * Complain0 ;
182657    +   H1x1_5  = H1x1_5  +    -1.02627214772402 * AcceptedCmp10
182658    +          +    -0.35326081554996 * AcceptedCmp20  +    -0.45229632523083 *
182659    +        AcceptedCmp30  +    -0.88576020203346 * AcceptedCmp40
182660    +          +    -0.25524770878943 * AcceptedCmp50  +    -0.58775156249673 *
182661    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.02627214772402 * AcceptedCmp10 + -0.35326081554996
* AcceptedCmp20 + -0.45229632523083 * AcceptedCmp30 + -0.88576020203346 * AcceptedCmp40 +
-0.25524770878943 * AcceptedCmp50 + -0.58775156249673 * Complain0 ;
182662    +   H1x1_1  = H1x1_1  +    -0.20048115002767 * Education2n_Cycle
182663    +          +     0.10477823552379 * EducationBasic  +    -0.09122776507376 *
182664    +        EducationGraduation  +    -0.01483389086199 * EducationMaster
182665    +          +    -0.14951932081311 * Marital_StatusDivorced
182666    +          +     0.08343648358981 * Marital_StatusMarried
182667    +          +    -0.52143432598374 * Marital_StatusSingle
182668    +          +    -0.17799942229122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.20048115002767 * Education2n_Cycle +
0.10477823552379 * EducationBasic + -0.09122776507376 * EducationGraduation +
-0.01483389086199 * EducationMaster + -0.14951932081311 * Marital_StatusDivorced +
0.08343648358981 * Marital_StatusMarried + -0.52143432598374 * Marital_StatusSingle +
-0.17799942229122 * Marital_StatusTogether ;
182669    +   H1x1_2  = H1x1_2  +    -0.06492224317117 * Education2n_Cycle
182670    +          +     0.50630082280639 * EducationBasic  +    -0.32521089553297 *
182671    +        EducationGraduation  +    -0.38968023972702 * EducationMaster
182672    +          +    -0.34495973695408 * Marital_StatusDivorced
182673    +          +    -0.30910829853532 * Marital_StatusMarried
182674    +          +     0.14431404541055 * Marital_StatusSingle
182675    +          +    -0.62673029935295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.06492224317117 * Education2n_Cycle +
0.50630082280639 * EducationBasic + -0.32521089553297 * EducationGraduation +
-0.38968023972702 * EducationMaster + -0.34495973695408 * Marital_StatusDivorced +
-0.30910829853532 * Marital_StatusMarried + 0.14431404541055 * Marital_StatusSingle +
-0.62673029935295 * Marital_StatusTogether ;
182676    +   H1x1_3  = H1x1_3  +     0.41266521248037 * Education2n_Cycle
182677    +          +    -0.11192325989817 * EducationBasic  +    -0.96742524784448 *
182678    +        EducationGraduation  +     0.05582780345024 * EducationMaster
182679    +          +     0.81191732290197 * Marital_StatusDivorced
182680    +          +    -2.53108753227171 * Marital_StatusMarried
182681    +          +     2.21769123178832 * Marital_StatusSingle
182682    +          +    -0.90613443546426 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.41266521248037 * Education2n_Cycle +
-0.11192325989817 * EducationBasic + -0.96742524784448 * EducationGraduation +
0.05582780345024 * EducationMaster + 0.81191732290197 * Marital_StatusDivorced +
-2.53108753227171 * Marital_StatusMarried + 2.21769123178832 * Marital_StatusSingle +
-0.90613443546426 * Marital_StatusTogether ;
182683    +   H1x1_4  = H1x1_4  +    -0.08882031994616 * Education2n_Cycle
182684    +          +     0.59640481500702 * EducationBasic  +    -0.75285942189639 *
182685    +        EducationGraduation  +     0.52527957409681 * EducationMaster
182686    +          +    -1.26246836163545 * Marital_StatusDivorced
182687    +          +     0.73147045162506 * Marital_StatusMarried
182688    +          +     0.04252836823306 * Marital_StatusSingle
182689    +          +     1.44915119635375 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.08882031994616 * Education2n_Cycle +
0.59640481500702 * EducationBasic + -0.75285942189639 * EducationGraduation + 0.52527957409681
* EducationMaster + -1.26246836163545 * Marital_StatusDivorced + 0.73147045162506 *
Marital_StatusMarried + 0.04252836823306 * Marital_StatusSingle + 1.44915119635375 *
Marital_StatusTogether ;
182690    +   H1x1_5  = H1x1_5  +    -0.24370046099656 * Education2n_Cycle
182691    +          +     0.03233873053213 * EducationBasic  +      0.1375198926931 *
182692    +        EducationGraduation  +      0.0979905405754 * EducationMaster
182693    +          +    -0.25571808514992 * Marital_StatusDivorced
182694    +          +     0.20684027342845 * Marital_StatusMarried
182695    +          +    -0.36983627747986 * Marital_StatusSingle
182696    +          +    -0.08239173696723 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24370046099656 * Education2n_Cycle +
0.03233873053213 * EducationBasic + 0.1375198926931 * EducationGraduation + 0.0979905405754 *
EducationMaster + -0.25571808514992 * Marital_StatusDivorced + 0.20684027342845 *
Marital_StatusMarried + -0.36983627747986 * Marital_StatusSingle + -0.08239173696723 *
Marital_StatusTogether ;
182697    +   H1x1_1  =    -0.01788649837565 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.01788649837565 + H1x1_1 ;
182698    +   H1x1_2  =     1.77562113267961 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.77562113267961 + H1x1_2 ;
182699    +   H1x1_3  =    -1.36483909507433 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.36483909507433 + H1x1_3 ;
182700    +   H1x1_4  =    -0.17103473926556 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.17103473926556 + H1x1_4 ;
182701    +   H1x1_5  =     0.17065963901812 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.17065963901812 + H1x1_5 ;
182702    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
182703    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
182704    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
182705    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
182706    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
182707    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
182708    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
182709    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
182710    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
182711    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
182712    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
182713    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
182714    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
182715    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
182716    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
182717    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
182718    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
182719    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
182720    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
182721    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
182722    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
182723    +END;
MPRINT(EM_DIAGRAM):   END;
182724    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
182725    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
182726    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
182727    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
182728    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
182729    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
182730    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
182731    +END;
MPRINT(EM_DIAGRAM):   END;
182732    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182733    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
182734    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182735    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
182736    +   P_DepVar1  =    -12.4855028874976 * H1x1_1  +     8.50519000347347 * H1x1_2
182737    +          +     3.84994997572101 * H1x1_3  +    -12.5610415895663 * H1x1_4
182738    +          +     17.4993211655408 * H1x1_5  +     0.14986282100716 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.4855028874976 * H1x1_1 + 8.50519000347347 * H1x1_2 +
3.84994997572101 * H1x1_3 + -12.5610415895663 * H1x1_4 + 17.4993211655408 * H1x1_5 +
0.14986282100716 * H1x1_6 ;
182739    +   P_DepVar1  =     3.23272740278636 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.23272740278636 + P_DepVar1 ;
182740    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
182741    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
182742    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
182743    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
182744    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
182745    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
182746    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
182747    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
182748    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
182749    +END;
MPRINT(EM_DIAGRAM):   END;
182750    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
182751    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
182752    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
182753    +END;
MPRINT(EM_DIAGRAM):   END;
182754    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
182755    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
182756    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
182757    +END;
MPRINT(EM_DIAGRAM):   END;
182758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182759    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
182760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
182761    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
182762    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
182763    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
182764    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
182765    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
182766    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
182767    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
182768    +END;
MPRINT(EM_DIAGRAM):   END;
182769    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
182770    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
182771    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
182772    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
182773     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
182774     quit;
182775     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
182776     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
182777     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
182778     retain ID 2 Node "AutoNeural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural42";
182779     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
182780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2220 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2220 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
182781     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
182782     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182783     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2220 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2220 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182784     proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural42_variableset out=_temp2(keep=NAME
CREATOR);
182785     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182786     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182787     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
182788     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
182789     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
182790     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
182791     proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural42_train out=_meta(keep=NAME) noprint;
182792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
182793     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
182794     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182795     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
182796     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
182797     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
182798     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182799     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182800     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
182801     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
182801   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1126 rows and 5 columns.
 
182802     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182803     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
182804     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1126 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1126 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
182805     filename _pref
182805   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
182806     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
182807     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
182808    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
182809    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
182810    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
182811    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
182812    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
182813    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
182814     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
182815     quit;
182816     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
182817     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
182818     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
182819     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
182820     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
182821     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
182822     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
182823     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182824     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182825     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
182826     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182827     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182828     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
182829     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
182830     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
182831     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
182832     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
182833     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
182834     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
182835     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182836     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
182837     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
182838     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
182839     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182840     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182841     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
182842     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
182842   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
182843     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182844     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
182845     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182846     filename _pref
182846   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
182847     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
182848     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
182849    +
182850    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
182851    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
182851   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
182852    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
182853    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
182854    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
182855    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
182856    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
182857     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
182858     quit;
182859     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
182860     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
182861     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
182862     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
182863     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
182864     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
182865     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
182866     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182867     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182868     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
182869     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182870     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182871     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
182872     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
182873     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
182874     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
182875     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
182876     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182877     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
182878     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182879     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182880     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
182881     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
182882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
182883     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182884     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
182885     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
182885   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
182886     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182887     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
182888     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1169 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
182889     filename _pref
182889   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
182890     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
182891     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
182892    +
182893    +
182894    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
182895    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
182896    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
182897    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
182898    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
182899    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
182900    +
182901    +
182902    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
182903    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
182904    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
182905    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
182906    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
182907    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
182908    +
182909    +
182910    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
182911    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
182912    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
182913    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
182914    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
182915    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
182916    +
182917    +
182918    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
182919    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
182920    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
182921    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
182922    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
182923    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
182924    +
182925    +
182926    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
182927    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
182928    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
182929    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
182930    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
182931    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
182932    +
182933    +
182934    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
182935    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
182936    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
182937    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
182938    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
182939    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
182940    +
182941    +
182942    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
182943    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
182944    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
182945    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
182946    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
182947    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
182948    +
182949    +
182950    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
182951    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
182952    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
182953    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
182954    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
182955    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
182956    +if
182957    +_FILTERNORM1 not in ( '.')
182958    + and
182959    +_FILTERNORM2 not in ( '.')
182960    + and
182961    +_FILTERNORM3 not in ( '.')
182962    + and
182963    +_FILTERNORM4 not in ( '.')
182964    + and
182965    +_FILTERNORM5 not in ( '.')
182966    + and
182967    +_FILTERNORM6 not in ( '.')
182968    + and
182969    +_FILTERNORM7 not in ( ' ')
182970    + and
182971    +_FILTERNORM8 not in ( ' ')
182972    +and
182973    +( Dt_Customer ne .)
182974    +and ( Income ne . and (Income<=107000))
182975    +and ( Kidhome ne .)
182976    +and ( MntFishProducts ne .)
182977    +and ( MntFruits ne .)
182978    +and ( MntGoldProds ne .)
182979    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
182980    +and ( MntSweetProducts ne .)
182981    +and ( MntWines ne .)
182982    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
182983    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
182984    +and ( NumStorePurchases ne .)
182985    +and ( NumWebPurchases ne .)
182986    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
182987    +and ( Recency ne .)
182988    +and ( Teenhome ne .)
182989    +and ( Year_Birth ne .)
182990    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
182991    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
182992    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
182993    +end;
MPRINT(EM_DIAGRAM):   end;
182994    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
182995    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
182996     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
182997     quit;
182998     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
182999     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
183000     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
183001     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
183002     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
183003     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183004     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
183005     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183006     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183007     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
183008     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183009     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183010     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183011     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
183012     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
183013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
183014     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
183015     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
183016     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
183017     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183018     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
183019     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183020     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
183021     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183022     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183023     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
183024     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
183024   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
183025     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183026     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
183027     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1235 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
183028     %macro varDept(fcmpdata=,id=);
183029     %global nobs&id scoreFlag&id;
183030     %let scoreFlag&id = 0;
183031     %if &id=1 or ^&fcmpStart %then %do;
183032     proc sort data=&fcmpdata out=_temp&id nodupkey;
183033     by NAME;
183034     where id=&id and LHS in( %let j=1;
183035     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
183036     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
183037     "&var" %let j = %eval(&j+1);
183038     %end;
183039     );
183040     run;
183041     %let dsid = %sysfunc(open(_temp&id));
183042     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
183043     %let dsid = %sysfunc(close(&dsid));
183044     %if &&nobs&id %then %do;
183045     %let scoreFlag&id = 1;
183046     %let fcmpStart = 1;
183047     %end;
183048     %else %let fcmpStart = 0;
183049     %end;
183050     %else %do;
183051     proc sort data=&fcmpdata out=_tempid;
183052     where id=&id;
183053     by LHS;
183054     run;
183055     %let dsid = %sysfunc(open(_tempid));
183056     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
183057     %let dsid = %sysfunc(close(&dsid));
183058     %if ^&&nobs&id %then %do;
183059     proc datasets lib=work nolist;
183060     delete _tempid;
183061     run;
183062     quit;
183063     %end;
183064     %else %do;
183065     data _tempAll;
183066     set %let j=%eval(&id-1);
183067     %do x=1 %to &j;
183068     %if &&nobs&x %then %do;
183069     _temp&x %end;
183070     %end;
183071     ;
183072     run;
183073     proc sql;
183074     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
183074   ! work._tempid p2 where p.name=p2.lhs;
183075     quit;
183076     data _temp&id;
183077     set _temp&id;
183078     where LHS ne '' and NAME ne '' and Node ne '';
183079     run;
183080     proc datasets lib=work nolist;
183081     delete _tempAll;
183082     run;
183083     %let dsid = %sysfunc(open(_temp&id));
183084     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
183085     %let dsid = %sysfunc(close(&dsid));
183086     %if ^&&nobs&id %then %do;
183087     proc datasets lib=work nolist;
183088     delete _temp&id;
183089     run;
183090     quit;
183091     %end;
183092     %else %do;
183093     %let scoreFlag&id = 1;
183094     data _temp&id;
183095     set _temp&id;
183096     where LHS ne NAME and node ne '';
183097     run;
183098     %let dsid = %sysfunc(open(_temp&id));
183099     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
183100     %let dsid = %sysfunc(close(&dsid));
183101     %if ^&&nobs&id %then %do;
183102     proc datasets lib=work nolist;
183103     delete _temp&id;
183104     run;
183105     quit;
183106     %end;
183107     %else %do;
183108     proc sort data=_temp&id nodupkey;
183109     by LHS NAME;
183110     run;
183111     %end;
183112     %end;
183113     %end;
183114     %end;
183115     %mend varDept;
183116     %macro optCode(outdata=fcmpdata);
183117     %global fcmpStart;
183118     %let fcmpStart = 0;
183119     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
183120     %let NumNodes=9;
183121     %do k=1 %to &NumNodes;
183122     %vardept(fcmpdata=&outdata, id=&k);
183123     %end;
183124     %mend optCode;
183125     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
183126     filename _pref
183126   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas";
183127     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
183128     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural41\EMPUBLISHSCORE.sas.
183129    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
183130    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
183131    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
183132    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
183133    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
183134    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
183135    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
183136    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
183137    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
183138    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
183139    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
183140    +LENGTH _WARN_ $4
183141    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
183142    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
183143    +
183144    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
183145    +
183146    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
183147    +
183148    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
183149    +
183150    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
183151    +
183152    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
183153    +
183154    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
183155    +
183156    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
183157    +
183158    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
183159    +
183160    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
183161    +
183162    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
183163    +
183164    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
183165    +
183166    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
183167    +
183168    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
183169    +
183170    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
183171    +
183172    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
183173    +
183174    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
183175    +
183176    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
183177    +
183178    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
183179    +
183180    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
183181    +
183182    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
183183    +
183184    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
183185    +
183186    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
183187    +
183188    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
183189    +
183190    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
183191    +
183192    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
183193    +
183194    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
183195    +
183196    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
183197    +
183198    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
183199    +
183200    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
183201    +
183202    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
183203    +
183204    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
183205    +
183206    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
183207    +
183208    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
183209    +
183210    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
183211    +
183212    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
183213    +
183214    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
183215    +
183216    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
183217    +
183218    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
183219    +
183220    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
183221    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
183222    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
183223    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
183224    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183225    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183226    +end;
MPRINT(EM_DIAGRAM):   end;
183227    +else do;
MPRINT(EM_DIAGRAM):   else do;
183228    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183229    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
183230    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183231    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183232    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
183233    +   end;
MPRINT(EM_DIAGRAM):   end;
183234    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183235    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
183236    +   end;
MPRINT(EM_DIAGRAM):   end;
183237    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183238    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
183239    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183240    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183241    +   end;
MPRINT(EM_DIAGRAM):   end;
183242    +end;
MPRINT(EM_DIAGRAM):   end;
183243    +
183244    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
183245    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
183246    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
183247    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
183248    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183249    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183250    +end;
MPRINT(EM_DIAGRAM):   end;
183251    +else do;
MPRINT(EM_DIAGRAM):   else do;
183252    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183253    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
183254    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183255    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183256    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
183257    +   end;
MPRINT(EM_DIAGRAM):   end;
183258    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183259    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
183260    +   end;
MPRINT(EM_DIAGRAM):   end;
183261    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183262    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
183263    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183264    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183265    +   end;
MPRINT(EM_DIAGRAM):   end;
183266    +end;
MPRINT(EM_DIAGRAM):   end;
183267    +
183268    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
183269    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
183270    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
183271    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
183272    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183273    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183274    +end;
MPRINT(EM_DIAGRAM):   end;
183275    +else do;
MPRINT(EM_DIAGRAM):   else do;
183276    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183277    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
183278    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183279    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183280    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
183281    +   end;
MPRINT(EM_DIAGRAM):   end;
183282    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183283    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
183284    +   end;
MPRINT(EM_DIAGRAM):   end;
183285    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183286    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
183287    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183288    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183289    +   end;
MPRINT(EM_DIAGRAM):   end;
183290    +end;
MPRINT(EM_DIAGRAM):   end;
183291    +
183292    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
183293    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
183294    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
183295    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
183296    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183297    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183298    +end;
MPRINT(EM_DIAGRAM):   end;
183299    +else do;
MPRINT(EM_DIAGRAM):   else do;
183300    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183301    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
183302    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183303    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183304    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
183305    +   end;
MPRINT(EM_DIAGRAM):   end;
183306    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183307    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
183308    +   end;
MPRINT(EM_DIAGRAM):   end;
183309    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183310    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
183311    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183312    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183313    +   end;
MPRINT(EM_DIAGRAM):   end;
183314    +end;
MPRINT(EM_DIAGRAM):   end;
183315    +
183316    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
183317    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
183318    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
183319    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
183320    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183321    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183322    +end;
MPRINT(EM_DIAGRAM):   end;
183323    +else do;
MPRINT(EM_DIAGRAM):   else do;
183324    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183325    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
183326    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183327    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183328    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
183329    +   end;
MPRINT(EM_DIAGRAM):   end;
183330    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183331    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
183332    +   end;
MPRINT(EM_DIAGRAM):   end;
183333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183334    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
183335    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183336    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183337    +   end;
MPRINT(EM_DIAGRAM):   end;
183338    +end;
MPRINT(EM_DIAGRAM):   end;
183339    +
183340    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
183341    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
183342    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
183343    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
183344    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183345    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183346    +end;
MPRINT(EM_DIAGRAM):   end;
183347    +else do;
MPRINT(EM_DIAGRAM):   else do;
183348    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183349    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
183350    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183351    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183352    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
183353    +   end;
MPRINT(EM_DIAGRAM):   end;
183354    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183355    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
183356    +   end;
MPRINT(EM_DIAGRAM):   end;
183357    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183358    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
183359    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183360    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183361    +   end;
MPRINT(EM_DIAGRAM):   end;
183362    +end;
MPRINT(EM_DIAGRAM):   end;
183363    +
183364    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
183365    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
183366    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
183367    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
183368    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
183369    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
183370    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
183371    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
183372    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
183373    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
183374    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
183375    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
183376    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183377    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183378    +end;
MPRINT(EM_DIAGRAM):   end;
183379    +else do;
MPRINT(EM_DIAGRAM):   else do;
183380    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
183381    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
183382    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183383    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
183384    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
183385    +   end;
MPRINT(EM_DIAGRAM):   end;
183386    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
183387    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
183388    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
183389    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
183390    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
183391    +   end;
MPRINT(EM_DIAGRAM):   end;
183392    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
183393    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
183394    +   end;
MPRINT(EM_DIAGRAM):   end;
183395    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
183396    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
183397    +   end;
MPRINT(EM_DIAGRAM):   end;
183398    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
183399    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
183400    +   end;
MPRINT(EM_DIAGRAM):   end;
183401    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183402    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
183403    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
183404    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
183405    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
183406    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183407    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183408    +   end;
MPRINT(EM_DIAGRAM):   end;
183409    +end;
MPRINT(EM_DIAGRAM):   end;
183410    +
183411    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
183412    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
183413    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
183414    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
183415    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
183416    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
183417    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
183418    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
183419    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
183420    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
183421    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
183422    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
183423    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
183424    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183426    +end;
MPRINT(EM_DIAGRAM):   end;
183427    +else do;
MPRINT(EM_DIAGRAM):   else do;
183428    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
183429    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
183430    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183431    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
183432    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
183433    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
183434    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
183435    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
183436    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183437    +         end;
MPRINT(EM_DIAGRAM):   end;
183438    +         else do;
MPRINT(EM_DIAGRAM):   else do;
183439    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
183440    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
183441    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183442    +            end;
MPRINT(EM_DIAGRAM):   end;
183443    +         end;
MPRINT(EM_DIAGRAM):   end;
183444    +      end;
MPRINT(EM_DIAGRAM):   end;
183445    +      else do;
MPRINT(EM_DIAGRAM):   else do;
183446    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
183447    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
183448    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183449    +         end;
MPRINT(EM_DIAGRAM):   end;
183450    +      end;
MPRINT(EM_DIAGRAM):   end;
183451    +   end;
MPRINT(EM_DIAGRAM):   end;
183452    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183453    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
183454    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
183455    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183456    +      end;
MPRINT(EM_DIAGRAM):   end;
183457    +      else do;
MPRINT(EM_DIAGRAM):   else do;
183458    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
183459    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
183460    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
183461    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
183462    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
183463    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183464    +         end;
MPRINT(EM_DIAGRAM):   end;
183465    +      end;
MPRINT(EM_DIAGRAM):   end;
183466    +   end;
MPRINT(EM_DIAGRAM):   end;
183467    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
183468    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
183469    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
183470    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
183471    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
183472    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183473    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183474    +   end;
MPRINT(EM_DIAGRAM):   end;
183475    +end;
MPRINT(EM_DIAGRAM):   end;
183476    +
183477    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183478    +*** Checking missing input Interval
183479    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
183480    +
183481    +IF NMISS(
183482    +   Income ,
183483    +   Kidhome ,
183484    +   MntFishProducts ,
183485    +   MntFruits ,
183486    +   MntGoldProds ,
183487    +   MntMeatProducts ,
183488    +   MntSweetProducts ,
183489    +   MntWines ,
183490    +   NumCatalogPurchases ,
183491    +   NumDealsPurchases ,
183492    +   NumStorePurchases ,
183493    +   NumWebPurchases ,
183494    +   NumWebVisitsMonth ,
183495    +   Recency ,
183496    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
183497    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
183498    +
183499    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183500    +END;
MPRINT(EM_DIAGRAM):   END;
183501    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183502    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
183503    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183504    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
183505    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
183506    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
183507    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
183508    +        MntFishProducts ;
The SAS System
 
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
183509    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
183510    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
183511    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
183512    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
183513    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
183514    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
183515    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
183516    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
183517    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
183518    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
183519    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
183520    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
183521    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
183522    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
183523    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
183524    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
183525    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
183526    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
183527    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
183528    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
183529    +END;
MPRINT(EM_DIAGRAM):   END;
183530    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
183531    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
183532    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
183533    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
183534    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
183535    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
183536    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
183537    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
183538    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
183539    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
183540    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
183541    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
183542    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
183543    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
183544    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
183545    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
183546    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
183547    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
183548    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
183549    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
183550    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
183551    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
183552    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
183553    +   ELSE S_NumCatalogPurchases
183554    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
183555    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
183556    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
183557    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
183558    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
183559    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
183560    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
183561    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
183562    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
183563    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
183564    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
183565    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
183566    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
183567    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
183568    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
183569    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
183570    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
183571    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
183572    +END;
MPRINT(EM_DIAGRAM):   END;
183573    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183574    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
183575    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183576    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183577    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
183578    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183580    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
183581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183582    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
183583    +   H1x1_1  =     0.00788029676844 * S_Income  +    -0.91535527861933 *
183584    +        S_Kidhome  +    -0.25225116407302 * S_MntFishProducts
183585    +          +    -0.18797076337897 * S_MntFruits  +    -0.44902183906131 *
183586    +        S_MntGoldProds  +      2.2767772850691 * S_MntMeatProducts
183587    +          +     -0.2030617183738 * S_MntSweetProducts
183588    +          +    -3.00492674390268 * S_MntWines  +     0.79341578039366 *
183589    +        S_NumCatalogPurchases  +     0.87204448909716 * S_NumDealsPurchases
183590    +          +    -2.67074303965293 * S_NumStorePurchases
183591    +          +    -0.84694619593676 * S_NumWebPurchases
183592    +          +     1.78464945757548 * S_NumWebVisitsMonth
183593    +          +    -1.79669645209961 * S_Recency  +     0.12484193160086 *
183594    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.00788029676844 * S_Income + -0.91535527861933 * S_Kidhome +
-0.25225116407302 * S_MntFishProducts + -0.18797076337897 * S_MntFruits + -0.44902183906131 *
S_MntGoldProds + 2.2767772850691 * S_MntMeatProducts + -0.2030617183738 * S_MntSweetProducts +
-3.00492674390268 * S_MntWines + 0.79341578039366 * S_NumCatalogPurchases + 0.87204448909716 *
S_NumDealsPurchases + -2.67074303965293 * S_NumStorePurchases + -0.84694619593676 *
S_NumWebPurchases + 1.78464945757548 * S_NumWebVisitsMonth + -1.79669645209961 * S_Recency +
0.12484193160086 * S_Teenhome ;
183595    +   H1x1_2  =     0.89056482755935 * S_Income  +    -1.26858223800375 *
183596    +        S_Kidhome  +    -0.21524958568885 * S_MntFishProducts
183597    +          +     0.09518715448323 * S_MntFruits  +    -0.19863573935492 *
183598    +        S_MntGoldProds  +     1.18841616001527 * S_MntMeatProducts
183599    +          +    -0.48853587268985 * S_MntSweetProducts
183600    +          +      -0.414993830248 * S_MntWines  +     1.47883555237605 *
183601    +        S_NumCatalogPurchases  +     0.83644109170588 * S_NumDealsPurchases
183602    +          +    -1.10593499185395 * S_NumStorePurchases
183603    +          +     -1.3003228821842 * S_NumWebPurchases
183604    +          +     2.87047131261901 * S_NumWebVisitsMonth
183605    +          +    -3.10727941128136 * S_Recency  +     -1.2351049603093 *
183606    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.89056482755935 * S_Income + -1.26858223800375 * S_Kidhome +
-0.21524958568885 * S_MntFishProducts + 0.09518715448323 * S_MntFruits + -0.19863573935492 *
S_MntGoldProds + 1.18841616001527 * S_MntMeatProducts + -0.48853587268985 * S_MntSweetProducts
+ -0.414993830248 * S_MntWines + 1.47883555237605 * S_NumCatalogPurchases + 0.83644109170588 *
S_NumDealsPurchases + -1.10593499185395 * S_NumStorePurchases + -1.3003228821842 *
S_NumWebPurchases + 2.87047131261901 * S_NumWebVisitsMonth + -3.10727941128136 * S_Recency +
-1.2351049603093 * S_Teenhome ;
183607    +   H1x1_3  =    -0.59621293188677 * S_Income  +    -0.98204600423622 *
183608    +        S_Kidhome  +     0.82413780234399 * S_MntFishProducts
183609    +          +     0.39739163071946 * S_MntFruits  +    -0.49042553659196 *
183610    +        S_MntGoldProds  +    -4.39932579909415 * S_MntMeatProducts
183611    +          +    -0.27795094909244 * S_MntSweetProducts
183612    +          +     0.24963500961568 * S_MntWines  +     -0.5239489331422 *
183613    +        S_NumCatalogPurchases  +    -0.90657315438752 * S_NumDealsPurchases
183614    +          +    -0.41332499072246 * S_NumStorePurchases
183615    +          +     0.76626053410817 * S_NumWebPurchases
183616    +          +     0.81795211037296 * S_NumWebVisitsMonth
183617    +          +    -0.50876365872417 * S_Recency  +     0.41668164622243 *
183618    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.59621293188677 * S_Income + -0.98204600423622 * S_Kidhome +
0.82413780234399 * S_MntFishProducts + 0.39739163071946 * S_MntFruits + -0.49042553659196 *
S_MntGoldProds + -4.39932579909415 * S_MntMeatProducts + -0.27795094909244 *
S_MntSweetProducts + 0.24963500961568 * S_MntWines + -0.5239489331422 * S_NumCatalogPurchases
+ -0.90657315438752 * S_NumDealsPurchases + -0.41332499072246 * S_NumStorePurchases +
0.76626053410817 * S_NumWebPurchases + 0.81795211037296 * S_NumWebVisitsMonth +
-0.50876365872417 * S_Recency + 0.41668164622243 * S_Teenhome ;
183619    +   H1x1_4  =     0.96283488963096 * S_Income  +    -0.87986849758504 *
183620    +        S_Kidhome  +     -0.1136919534185 * S_MntFishProducts
183621    +          +    -0.29232436238858 * S_MntFruits  +      0.1837511707412 *
183622    +        S_MntGoldProds  +     0.70727712145719 * S_MntMeatProducts
183623    +          +    -0.08285620819867 * S_MntSweetProducts
183624    +          +    -2.34391341405204 * S_MntWines  +     1.28790868462455 *
183625    +        S_NumCatalogPurchases  +    -0.66448120419076 * S_NumDealsPurchases
183626    +          +    -0.17691098721908 * S_NumStorePurchases
183627    +          +     0.46246892093576 * S_NumWebPurchases
183628    +          +     2.06272832836908 * S_NumWebVisitsMonth
183629    +          +    -2.20357897947054 * S_Recency  +    -0.21370157733704 *
183630    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.96283488963096 * S_Income + -0.87986849758504 * S_Kidhome +
-0.1136919534185 * S_MntFishProducts + -0.29232436238858 * S_MntFruits + 0.1837511707412 *
S_MntGoldProds + 0.70727712145719 * S_MntMeatProducts + -0.08285620819867 * S_MntSweetProducts
+ -2.34391341405204 * S_MntWines + 1.28790868462455 * S_NumCatalogPurchases +
-0.66448120419076 * S_NumDealsPurchases + -0.17691098721908 * S_NumStorePurchases +
0.46246892093576 * S_NumWebPurchases + 2.06272832836908 * S_NumWebVisitsMonth +
-2.20357897947054 * S_Recency + -0.21370157733704 * S_Teenhome ;
183631    +   H1x1_1  = H1x1_1  +    -1.11882466050741 * AcceptedCmp10
183632    +          +    -0.02672648348788 * AcceptedCmp20  +     -0.9935054015775 *
183633    +        AcceptedCmp30  +    -0.40619950578221 * AcceptedCmp40
183634    +          +     0.75861408836828 * AcceptedCmp50  +    -0.08119659353213 *
183635    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.11882466050741 * AcceptedCmp10 + -0.02672648348788
* AcceptedCmp20 + -0.9935054015775 * AcceptedCmp30 + -0.40619950578221 * AcceptedCmp40 +
0.75861408836828 * AcceptedCmp50 + -0.08119659353213 * Complain0 ;
183636    +   H1x1_2  = H1x1_2  +    -1.19874175712489 * AcceptedCmp10
183637    +          +    -1.39569753392124 * AcceptedCmp20  +    -1.40792768449965 *
183638    +        AcceptedCmp30  +    -1.33621370186337 * AcceptedCmp40
183639    +          +    -1.28850585600497 * AcceptedCmp50  +     1.54913459648682 *
183640    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.19874175712489 * AcceptedCmp10 + -1.39569753392124
* AcceptedCmp20 + -1.40792768449965 * AcceptedCmp30 + -1.33621370186337 * AcceptedCmp40 +
-1.28850585600497 * AcceptedCmp50 + 1.54913459648682 * Complain0 ;
183641    +   H1x1_3  = H1x1_3  +      0.8900995500275 * AcceptedCmp10
183642    +          +     0.63129973315749 * AcceptedCmp20  +    -0.31513199468014 *
183643    +        AcceptedCmp30  +     0.36000457467611 * AcceptedCmp40
183644    +          +     0.62901278737039 * AcceptedCmp50  +     0.13436691399472 *
183645    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.8900995500275 * AcceptedCmp10 + 0.63129973315749 *
AcceptedCmp20 + -0.31513199468014 * AcceptedCmp30 + 0.36000457467611 * AcceptedCmp40 +
0.62901278737039 * AcceptedCmp50 + 0.13436691399472 * Complain0 ;
183646    +   H1x1_4  = H1x1_4  +     -0.4761315940218 * AcceptedCmp10
183647    +          +     0.04116528443754 * AcceptedCmp20  +    -1.31248665137501 *
183648    +        AcceptedCmp30  +    -1.13922224536841 * AcceptedCmp40
183649    +          +    -1.71240975292363 * AcceptedCmp50  +     0.98794736218555 *
183650    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.4761315940218 * AcceptedCmp10 + 0.04116528443754 *
AcceptedCmp20 + -1.31248665137501 * AcceptedCmp30 + -1.13922224536841 * AcceptedCmp40 +
-1.71240975292363 * AcceptedCmp50 + 0.98794736218555 * Complain0 ;
183651    +   H1x1_1  = H1x1_1  +    -0.19427690904448 * Education2n_Cycle
183652    +          +    -0.78361431701943 * EducationBasic  +     0.70012279609726 *
183653    +        EducationGraduation  +    -0.51132563359945 * EducationMaster
183654    +          +     1.59526812226707 * Marital_StatusDivorced
183655    +          +    -0.74331656724296 * Marital_StatusMarried
183656    +          +     0.74316614019998 * Marital_StatusSingle
183657    +          +    -1.36761487171479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19427690904448 * Education2n_Cycle +
-0.78361431701943 * EducationBasic + 0.70012279609726 * EducationGraduation +
-0.51132563359945 * EducationMaster + 1.59526812226707 * Marital_StatusDivorced +
-0.74331656724296 * Marital_StatusMarried + 0.74316614019998 * Marital_StatusSingle +
-1.36761487171479 * Marital_StatusTogether ;
183658    +   H1x1_2  = H1x1_2  +    -0.76077191404637 * Education2n_Cycle
183659    +          +    -0.22680587409979 * EducationBasic  +     0.19812025591093 *
183660    +        EducationGraduation  +     0.07596142730184 * EducationMaster
183661    +          +     0.94291322065497 * Marital_StatusDivorced
183662    +          +    -1.64331597630127 * Marital_StatusMarried
183663    +          +     2.21526196736604 * Marital_StatusSingle
183664    +          +    -1.52687548646297 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.76077191404637 * Education2n_Cycle +
-0.22680587409979 * EducationBasic + 0.19812025591093 * EducationGraduation + 0.07596142730184
* EducationMaster + 0.94291322065497 * Marital_StatusDivorced + -1.64331597630127 *
Marital_StatusMarried + 2.21526196736604 * Marital_StatusSingle + -1.52687548646297 *
Marital_StatusTogether ;
183665    +   H1x1_3  = H1x1_3  +    -0.22328003539059 * Education2n_Cycle
183666    +          +    -0.56253476355283 * EducationBasic  +     0.43074608752346 *
183667    +        EducationGraduation  +    -0.59791003195469 * EducationMaster
183668    +          +     1.63906979191221 * Marital_StatusDivorced
183669    +          +    -1.00497354965718 * Marital_StatusMarried
183670    +          +     0.70485207953497 * Marital_StatusSingle
183671    +          +    -1.55917756143873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.22328003539059 * Education2n_Cycle +
-0.56253476355283 * EducationBasic + 0.43074608752346 * EducationGraduation +
-0.59791003195469 * EducationMaster + 1.63906979191221 * Marital_StatusDivorced +
-1.00497354965718 * Marital_StatusMarried + 0.70485207953497 * Marital_StatusSingle +
-1.55917756143873 * Marital_StatusTogether ;
183672    +   H1x1_4  = H1x1_4  +     0.85325476712793 * Education2n_Cycle
183673    +          +    -0.10167049440435 * EducationBasic  +     0.11808465181014 *
183674    +        EducationGraduation  +     -0.1847363034021 * EducationMaster
183675    +          +     0.75038128420756 * Marital_StatusDivorced
183676    +          +    -1.93055855198469 * Marital_StatusMarried
183677    +          +     0.73816798380254 * Marital_StatusSingle
183678    +          +    -1.77103687011169 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.85325476712793 * Education2n_Cycle +
-0.10167049440435 * EducationBasic + 0.11808465181014 * EducationGraduation + -0.1847363034021
* EducationMaster + 0.75038128420756 * Marital_StatusDivorced + -1.93055855198469 *
Marital_StatusMarried + 0.73816798380254 * Marital_StatusSingle + -1.77103687011169 *
Marital_StatusTogether ;
183679    +   H1x1_1  =    -0.97292943558748 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.97292943558748 + H1x1_1 ;
183680    +   H1x1_2  =      -0.767474595653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.767474595653 + H1x1_2 ;
183681    +   H1x1_3  =    -1.54289542125346 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.54289542125346 + H1x1_3 ;
183682    +   H1x1_4  =     0.11531219453063 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.11531219453063 + H1x1_4 ;
183683    +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
183684    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
183685    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
183686    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
183687    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
183688    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
183689    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
183690    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
183691    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
183692    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
183693    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
183694    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
183695    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
183696    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
183697    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
183698    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
183699    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
183700    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
183701    +END;
MPRINT(EM_DIAGRAM):   END;
183702    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
183703    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
183704    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
183705    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
183706    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
183707    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
183708    +END;
MPRINT(EM_DIAGRAM):   END;
183709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183710    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
183711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183712    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
183713    +   P_DepVar1  =     4.87259918787296 * H1x1_1  +     21.0865386977957 * H1x1_2
183714    +          +    -8.49666483029666 * H1x1_3  +     4.50140461489884 * H1x1_4
183715    +          +    -19.2888668755466 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.87259918787296 * H1x1_1 + 21.0865386977957 * H1x1_2 +
-8.49666483029666 * H1x1_3 + 4.50140461489884 * H1x1_4 + -19.2888668755466 * H1x1_5 ;
183716    +   P_DepVar1  =     0.94995870883169 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94995870883169 + P_DepVar1 ;
183717    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
183718    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
183719    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
183720    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
183721    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
183722    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
183723    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
183724    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
183725    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
183726    +END;
MPRINT(EM_DIAGRAM):   END;
183727    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
183728    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
183729    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
183730    +END;
MPRINT(EM_DIAGRAM):   END;
183731    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
183732    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
183733    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
183734    +END;
MPRINT(EM_DIAGRAM):   END;
183735    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183736    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
183737    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183738    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
183739    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
183740    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
183741    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
183742    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
183743    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
183744    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
183745    +END;
MPRINT(EM_DIAGRAM):   END;
183746    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
183747    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
183748    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
183749    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
183750     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
183751     quit;
183752     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
183753     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
183754     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
183755     retain ID 2 Node "AutoNeural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural41";
183756     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
183757     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2028 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2028 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183758     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
183759     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183760     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2028 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2028 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183761     proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural41_variableset out=_temp2(keep=NAME
CREATOR);
183762     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183763     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183764     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183765     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
183766     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
183767     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183768     proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural41_train out=_meta(keep=NAME) noprint;
183769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
183770     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
183771     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183772     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183773     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183774     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
183775     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183776     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
183777     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
183778     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
183778   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1044 rows and 5 columns.
 
183779     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183780     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
183781     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1044 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1044 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183782     filename _pref
183782   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
183783     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
183784     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
183785    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
183786    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
183787    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
183788    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
183789    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
183790    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
183791     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
183792     quit;
183793     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
183794     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
183795     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
183796     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
183797     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
183798     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183799     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
183800     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183801     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
183802     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
183803     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183804     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183805     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183806     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
183807     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
183808     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183809     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
183810     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
183811     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
183812     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183813     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183814     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183815     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
183816     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183817     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183818     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
183819     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
183819   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
183820     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183821     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
183822     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1048 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183823     filename _pref
183823   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
183824     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
183825     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
183826    +
183827    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
183828    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
183828   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
183829    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
183830    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
183831    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
183832    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
183833    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
183834     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
183835     quit;
183836     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
183837     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
183838     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
183839     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
183840     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
183841     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183842     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
183843     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183844     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
183845     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
183846     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183847     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183848     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183849     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
183850     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
183851     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183852     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
183853     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
183854     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
183855     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183856     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183857     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183858     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
183859     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183860     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183861     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
183862     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
183862   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
183863     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183864     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
183865     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
183866     filename _pref
183866   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
183867     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
183868     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
183869    +
183870    +
183871    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
183872    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
183873    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
183874    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
183875    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
183876    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
183877    +
183878    +
183879    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
183880    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
183881    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
183882    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
183883    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
183884    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
183885    +
183886    +
183887    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
183888    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
183889    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
183890    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
183891    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
183892    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
183893    +
183894    +
183895    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
183896    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
183897    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
183898    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
183899    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
183900    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
183901    +
183902    +
183903    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
183904    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
183905    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
183906    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
183907    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
183908    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
183909    +
183910    +
183911    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
183912    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
183913    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
183914    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
183915    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
183916    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
183917    +
183918    +
183919    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
183920    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
183921    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
183922    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
183923    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
183924    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
183925    +
183926    +
183927    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
183928    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
183929    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
183930    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
183931    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
183932    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
183933    +if
183934    +_FILTERNORM1 not in ( '.')
183935    + and
183936    +_FILTERNORM2 not in ( '.')
183937    + and
183938    +_FILTERNORM3 not in ( '.')
183939    + and
183940    +_FILTERNORM4 not in ( '.')
183941    + and
183942    +_FILTERNORM5 not in ( '.')
183943    + and
183944    +_FILTERNORM6 not in ( '.')
183945    + and
183946    +_FILTERNORM7 not in ( ' ')
183947    + and
183948    +_FILTERNORM8 not in ( ' ')
183949    +and
183950    +( Dt_Customer ne .)
183951    +and ( Income ne . and (Income<=107000))
183952    +and ( Kidhome ne .)
183953    +and ( MntFishProducts ne .)
183954    +and ( MntFruits ne .)
183955    +and ( MntGoldProds ne .)
183956    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
183957    +and ( MntSweetProducts ne .)
183958    +and ( MntWines ne .)
183959    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
183960    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
183961    +and ( NumStorePurchases ne .)
183962    +and ( NumWebPurchases ne .)
183963    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
183964    +and ( Recency ne .)
183965    +and ( Teenhome ne .)
183966    +and ( Year_Birth ne .)
183967    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
183968    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
183969    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
183970    +end;
MPRINT(EM_DIAGRAM):   end;
183971    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
183972    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
183973     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
183974     quit;
183975     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
183976     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
183977     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
183978     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
183979     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
183980     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183981     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
183982     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183983     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183984     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
183985     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183986     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
183987     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183988     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
183989     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
183990     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183991     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
183992     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
183993     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
183994     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183995     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
183996     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
183997     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
183998     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
183999     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184000     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
184001     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
184001   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
184002     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
184003     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
184004     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1153 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184005     %macro varDept(fcmpdata=,id=);
184006     %global nobs&id scoreFlag&id;
184007     %let scoreFlag&id = 0;
184008     %if &id=1 or ^&fcmpStart %then %do;
184009     proc sort data=&fcmpdata out=_temp&id nodupkey;
184010     by NAME;
184011     where id=&id and LHS in( %let j=1;
184012     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
184013     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
184014     "&var" %let j = %eval(&j+1);
184015     %end;
184016     );
184017     run;
184018     %let dsid = %sysfunc(open(_temp&id));
184019     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
184020     %let dsid = %sysfunc(close(&dsid));
184021     %if &&nobs&id %then %do;
184022     %let scoreFlag&id = 1;
184023     %let fcmpStart = 1;
184024     %end;
184025     %else %let fcmpStart = 0;
184026     %end;
184027     %else %do;
184028     proc sort data=&fcmpdata out=_tempid;
184029     where id=&id;
184030     by LHS;
184031     run;
184032     %let dsid = %sysfunc(open(_tempid));
184033     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
184034     %let dsid = %sysfunc(close(&dsid));
184035     %if ^&&nobs&id %then %do;
184036     proc datasets lib=work nolist;
184037     delete _tempid;
184038     run;
184039     quit;
184040     %end;
184041     %else %do;
184042     data _tempAll;
184043     set %let j=%eval(&id-1);
184044     %do x=1 %to &j;
184045     %if &&nobs&x %then %do;
184046     _temp&x %end;
184047     %end;
184048     ;
184049     run;
184050     proc sql;
184051     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
184051   ! work._tempid p2 where p.name=p2.lhs;
184052     quit;
184053     data _temp&id;
184054     set _temp&id;
184055     where LHS ne '' and NAME ne '' and Node ne '';
184056     run;
184057     proc datasets lib=work nolist;
184058     delete _tempAll;
184059     run;
184060     %let dsid = %sysfunc(open(_temp&id));
184061     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
184062     %let dsid = %sysfunc(close(&dsid));
184063     %if ^&&nobs&id %then %do;
184064     proc datasets lib=work nolist;
184065     delete _temp&id;
184066     run;
184067     quit;
184068     %end;
184069     %else %do;
184070     %let scoreFlag&id = 1;
184071     data _temp&id;
184072     set _temp&id;
184073     where LHS ne NAME and node ne '';
184074     run;
184075     %let dsid = %sysfunc(open(_temp&id));
184076     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
184077     %let dsid = %sysfunc(close(&dsid));
184078     %if ^&&nobs&id %then %do;
184079     proc datasets lib=work nolist;
184080     delete _temp&id;
184081     run;
184082     quit;
184083     %end;
184084     %else %do;
184085     proc sort data=_temp&id nodupkey;
184086     by LHS NAME;
184087     run;
184088     %end;
184089     %end;
184090     %end;
184091     %end;
184092     %mend varDept;
184093     %macro optCode(outdata=fcmpdata);
184094     %global fcmpStart;
184095     %let fcmpStart = 0;
184096     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
184097     %let NumNodes=9;
184098     %do k=1 %to &NumNodes;
184099     %vardept(fcmpdata=&outdata, id=&k);
184100     %end;
184101     %mend optCode;
184102     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 113 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 83 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 30 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
184103     filename _pref
184103   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas";
184104     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
184105     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMPUBLISHSCORE.sas.
184106    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
184107    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
184108    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
184109    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
184110    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
184111    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
184112    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
184113    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
184114    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
184115    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
184116    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
184117    +LENGTH _WARN_ $4
184118    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
184119    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
184120    +
184121    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
184122    +
184123    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
184124    +
184125    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
184126    +
184127    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
184128    +
184129    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
184130    +
184131    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
184132    +
184133    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
184134    +
184135    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
184136    +
184137    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
184138    +
184139    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
184140    +
184141    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
184142    +
184143    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
184144    +
184145    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
184146    +
184147    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
184148    +
184149    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
184150    +
184151    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
184152    +
184153    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
184154    +
184155    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
184156    +
184157    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
184158    +
184159    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
184160    +
184161    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
184162    +
184163    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
184164    +
184165    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
184166    +
184167    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
184168    +
184169    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
184170    +
184171    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
184172    +
184173    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
184174    +
184175    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
184176    +
184177    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
184178    +
184179    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
184180    +
184181    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
184182    +
184183    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
184184    +
184185    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
184186    +
184187    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
184188    +
184189    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
184190    +
184191    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
184192    +
184193    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
184194    +
184195    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
184196    +
184197    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
184198    +
184199    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
184200    +
184201    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
184202    +
184203    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
184204    +
184205    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
184206    +
184207    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
184208    +
184209    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
184210    +
184211    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
184212    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
184213    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
184214    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
184215    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184216    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184217    +end;
MPRINT(EM_DIAGRAM):   end;
184218    +else do;
MPRINT(EM_DIAGRAM):   else do;
184219    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184220    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
184221    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184222    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184223    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
184224    +   end;
MPRINT(EM_DIAGRAM):   end;
184225    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184226    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
184227    +   end;
MPRINT(EM_DIAGRAM):   end;
184228    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184229    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
184230    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184231    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184232    +   end;
MPRINT(EM_DIAGRAM):   end;
184233    +end;
MPRINT(EM_DIAGRAM):   end;
184234    +
184235    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
184236    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
184237    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
184238    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
184239    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184240    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184241    +end;
MPRINT(EM_DIAGRAM):   end;
184242    +else do;
MPRINT(EM_DIAGRAM):   else do;
184243    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184244    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
184245    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184246    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184247    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
184248    +   end;
MPRINT(EM_DIAGRAM):   end;
184249    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184250    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
184251    +   end;
MPRINT(EM_DIAGRAM):   end;
184252    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184253    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
184254    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184255    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184256    +   end;
MPRINT(EM_DIAGRAM):   end;
184257    +end;
MPRINT(EM_DIAGRAM):   end;
184258    +
184259    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
184260    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
184261    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
184262    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
184263    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184264    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184265    +end;
MPRINT(EM_DIAGRAM):   end;
184266    +else do;
MPRINT(EM_DIAGRAM):   else do;
184267    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184268    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
184269    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184270    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184271    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
184272    +   end;
MPRINT(EM_DIAGRAM):   end;
184273    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184274    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
184275    +   end;
MPRINT(EM_DIAGRAM):   end;
184276    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184277    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
184278    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184279    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184280    +   end;
MPRINT(EM_DIAGRAM):   end;
184281    +end;
MPRINT(EM_DIAGRAM):   end;
184282    +
184283    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
184284    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
184285    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
184286    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
184287    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184289    +end;
MPRINT(EM_DIAGRAM):   end;
184290    +else do;
MPRINT(EM_DIAGRAM):   else do;
184291    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184292    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
184293    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184294    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184295    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
184296    +   end;
MPRINT(EM_DIAGRAM):   end;
184297    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184298    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
184299    +   end;
MPRINT(EM_DIAGRAM):   end;
184300    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184301    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
184302    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184303    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184304    +   end;
MPRINT(EM_DIAGRAM):   end;
184305    +end;
MPRINT(EM_DIAGRAM):   end;
184306    +
184307    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
184308    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
184309    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
184310    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
184311    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184312    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184313    +end;
MPRINT(EM_DIAGRAM):   end;
184314    +else do;
MPRINT(EM_DIAGRAM):   else do;
184315    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184316    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
184317    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184318    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184319    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
184320    +   end;
MPRINT(EM_DIAGRAM):   end;
184321    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184322    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
184323    +   end;
MPRINT(EM_DIAGRAM):   end;
184324    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184325    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
184326    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184327    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184328    +   end;
MPRINT(EM_DIAGRAM):   end;
184329    +end;
MPRINT(EM_DIAGRAM):   end;
184330    +
184331    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
184332    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
184333    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
184334    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
184335    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184336    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184337    +end;
MPRINT(EM_DIAGRAM):   end;
184338    +else do;
MPRINT(EM_DIAGRAM):   else do;
184339    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184340    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
184341    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184342    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184343    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
184344    +   end;
MPRINT(EM_DIAGRAM):   end;
184345    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184346    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
184347    +   end;
MPRINT(EM_DIAGRAM):   end;
184348    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184349    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
184350    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184351    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184352    +   end;
MPRINT(EM_DIAGRAM):   end;
184353    +end;
MPRINT(EM_DIAGRAM):   end;
184354    +
184355    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
184356    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
184357    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
184358    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
184359    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
184360    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
184361    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
184362    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
184363    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
184364    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
184365    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
184366    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
184367    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184368    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184369    +end;
MPRINT(EM_DIAGRAM):   end;
184370    +else do;
MPRINT(EM_DIAGRAM):   else do;
184371    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
184372    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
184373    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184374    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
184375    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
184376    +   end;
MPRINT(EM_DIAGRAM):   end;
184377    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
184378    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
184379    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
184380    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
184381    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
184382    +   end;
MPRINT(EM_DIAGRAM):   end;
184383    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
184384    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
184385    +   end;
MPRINT(EM_DIAGRAM):   end;
184386    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
184387    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
184388    +   end;
MPRINT(EM_DIAGRAM):   end;
184389    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
184390    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
184391    +   end;
MPRINT(EM_DIAGRAM):   end;
184392    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184393    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
184394    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
184395    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
184396    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
184397    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184398    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184399    +   end;
MPRINT(EM_DIAGRAM):   end;
184400    +end;
MPRINT(EM_DIAGRAM):   end;
184401    +
184402    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
184403    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
184404    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
184405    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
184406    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
184407    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
184408    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
184409    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
184410    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
184411    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
184412    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
184413    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
184414    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
184415    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184416    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184417    +end;
MPRINT(EM_DIAGRAM):   end;
184418    +else do;
MPRINT(EM_DIAGRAM):   else do;
184419    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
184420    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
184421    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184422    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
184423    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
184424    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
184425    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
184426    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
184427    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184428    +         end;
MPRINT(EM_DIAGRAM):   end;
184429    +         else do;
MPRINT(EM_DIAGRAM):   else do;
184430    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
184431    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
184432    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184433    +            end;
MPRINT(EM_DIAGRAM):   end;
184434    +         end;
MPRINT(EM_DIAGRAM):   end;
184435    +      end;
MPRINT(EM_DIAGRAM):   end;
184436    +      else do;
MPRINT(EM_DIAGRAM):   else do;
184437    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
184438    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
184439    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184440    +         end;
MPRINT(EM_DIAGRAM):   end;
184441    +      end;
MPRINT(EM_DIAGRAM):   end;
184442    +   end;
MPRINT(EM_DIAGRAM):   end;
184443    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184444    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
184445    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
184446    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184447    +      end;
MPRINT(EM_DIAGRAM):   end;
184448    +      else do;
MPRINT(EM_DIAGRAM):   else do;
184449    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
184450    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
184451    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
184452    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
184453    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
184454    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184455    +         end;
MPRINT(EM_DIAGRAM):   end;
184456    +      end;
MPRINT(EM_DIAGRAM):   end;
184457    +   end;
MPRINT(EM_DIAGRAM):   end;
184458    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
184459    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
184460    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
184461    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
184462    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
184463    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184464    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184465    +   end;
MPRINT(EM_DIAGRAM):   end;
184466    +end;
MPRINT(EM_DIAGRAM):   end;
184467    +
184468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184469    +*** Checking missing input Interval
184470    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
184471    +
184472    +IF NMISS(
184473    +   Income ,
184474    +   Kidhome ,
184475    +   MntFishProducts ,
184476    +   MntFruits ,
184477    +   MntGoldProds ,
184478    +   MntMeatProducts ,
184479    +   MntSweetProducts ,
184480    +   MntWines ,
184481    +   NumCatalogPurchases ,
184482    +   NumDealsPurchases ,
184483    +   NumStorePurchases ,
184484    +   NumWebPurchases ,
184485    +   NumWebVisitsMonth ,
184486    +   Recency ,
184487    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
184488    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
184489    +
184490    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184491    +END;
MPRINT(EM_DIAGRAM):   END;
184492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184493    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
184494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184495    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
184496    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
184497    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
184498    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
184499    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
184500    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
184501    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
184502    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
184503    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
184504    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
184505    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
184506    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
184507    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
184508    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
184509    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
184510    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
184511    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
184512    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
184513    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
184514    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
184515    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
184516    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
184517    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
184518    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
184519    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
184520    +END;
MPRINT(EM_DIAGRAM):   END;
184521    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184522    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
184523    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
184524    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
184525    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
184526    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
184527    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
184528    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
184529    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
184530    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
184531    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
184532    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
184533    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
184534    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
184535    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
184536    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
184537    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
184538    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
184539    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
184540    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
184541    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
184542    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
184543    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
184544    +   ELSE S_NumCatalogPurchases
184545    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
184546    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
184547    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
184548    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
184549    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
184550    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
184551    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
184552    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
184553    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
184554    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
184555    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
184556    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
184557    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
184558    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
184559    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
184560    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
184561    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
184562    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
184563    +END;
MPRINT(EM_DIAGRAM):   END;
184564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184565    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
184566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184567    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184568    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
184569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184571    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
184572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184573    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
184574    +   H1x1_1  =     -0.6712927499227 * S_Income  +     0.52481056075303 *
184575    +        S_Kidhome  +     -2.3662268017216 * S_MntFishProducts
184576    +          +    -1.70194161526543 * S_MntFruits  +    -0.12195276696714 *
184577    +        S_MntGoldProds  +     5.02051235731232 * S_MntMeatProducts
184578    +          +    -2.37073629008864 * S_MntSweetProducts
184579    +          +    -7.49792253647533 * S_MntWines  +     1.93063890722455 *
184580    +        S_NumCatalogPurchases  +     1.44821336448113 * S_NumDealsPurchases
184581    +          +    -1.29021742502316 * S_NumStorePurchases
184582    +          +    -0.00949168969466 * S_NumWebPurchases
184583    +          +    -0.32248137192321 * S_NumWebVisitsMonth
184584    +          +    -0.55879173873733 * S_Recency  +    -0.22439654268554 *
184585    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.6712927499227 * S_Income + 0.52481056075303 * S_Kidhome +
-2.3662268017216 * S_MntFishProducts + -1.70194161526543 * S_MntFruits + -0.12195276696714 *
S_MntGoldProds + 5.02051235731232 * S_MntMeatProducts + -2.37073629008864 * S_MntSweetProducts
+ -7.49792253647533 * S_MntWines + 1.93063890722455 * S_NumCatalogPurchases + 1.44821336448113
* S_NumDealsPurchases + -1.29021742502316 * S_NumStorePurchases + -0.00949168969466 *
S_NumWebPurchases + -0.32248137192321 * S_NumWebVisitsMonth + -0.55879173873733 * S_Recency +
-0.22439654268554 * S_Teenhome ;
184586    +   H1x1_2  =    -1.63837717417638 * S_Income  +     1.01712005677207 *
184587    +        S_Kidhome  +    -0.11452425716086 * S_MntFishProducts
184588    +          +    -0.08273769039219 * S_MntFruits  +    -0.47045422182093 *
184589    +        S_MntGoldProds  +    -0.64593629987888 * S_MntMeatProducts
184590    +          +     0.41126087093412 * S_MntSweetProducts
184591    +          +    -0.00653581981542 * S_MntWines  +    -1.62534004647483 *
184592    +        S_NumCatalogPurchases  +    -0.74740978232431 * S_NumDealsPurchases
184593    +          +      0.2319226227964 * S_NumStorePurchases
184594    +          +     0.31190969795517 * S_NumWebPurchases
184595    +          +      -1.987305550542 * S_NumWebVisitsMonth
184596    +          +     2.46312593342153 * S_Recency  +     1.89469486725188 *
184597    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.63837717417638 * S_Income + 1.01712005677207 * S_Kidhome +
-0.11452425716086 * S_MntFishProducts + -0.08273769039219 * S_MntFruits + -0.47045422182093 *
S_MntGoldProds + -0.64593629987888 * S_MntMeatProducts + 0.41126087093412 * S_MntSweetProducts
+ -0.00653581981542 * S_MntWines + -1.62534004647483 * S_NumCatalogPurchases +
-0.74740978232431 * S_NumDealsPurchases + 0.2319226227964 * S_NumStorePurchases +
0.31190969795517 * S_NumWebPurchases + -1.987305550542 * S_NumWebVisitsMonth +
2.46312593342153 * S_Recency + 1.89469486725188 * S_Teenhome ;
184598    +   H1x1_3  =    -0.78523773312865 * S_Income  +    -1.40266608040579 *
184599    +        S_Kidhome  +     0.01206304735425 * S_MntFishProducts
184600    +          +    -0.50371384095637 * S_MntFruits  +    -0.93176870066879 *
184601    +        S_MntGoldProds  +    -0.53990224542491 * S_MntMeatProducts
184602    +          +    -0.73991431726966 * S_MntSweetProducts
184603    +          +    -0.21227505043037 * S_MntWines  +     0.42667885020643 *
184604    +        S_NumCatalogPurchases  +    -0.34821401096287 * S_NumDealsPurchases
184605    +          +    -2.50826402419251 * S_NumStorePurchases
184606    +          +    -0.30764477738015 * S_NumWebPurchases
184607    +          +     1.21240794582671 * S_NumWebVisitsMonth
184608    +          +    -2.22374004865256 * S_Recency  +    -0.07389156638234 *
184609    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.78523773312865 * S_Income + -1.40266608040579 * S_Kidhome +
0.01206304735425 * S_MntFishProducts + -0.50371384095637 * S_MntFruits + -0.93176870066879 *
S_MntGoldProds + -0.53990224542491 * S_MntMeatProducts + -0.73991431726966 *
S_MntSweetProducts + -0.21227505043037 * S_MntWines + 0.42667885020643 * S_NumCatalogPurchases
+ -0.34821401096287 * S_NumDealsPurchases + -2.50826402419251 * S_NumStorePurchases +
-0.30764477738015 * S_NumWebPurchases + 1.21240794582671 * S_NumWebVisitsMonth +
-2.22374004865256 * S_Recency + -0.07389156638234 * S_Teenhome ;
184610    +   H1x1_4  =     1.52339017953874 * S_Income  +     -0.0800472387091 *
184611    +        S_Kidhome  +    -0.81466158613596 * S_MntFishProducts
184612    +          +    -1.56740792821078 * S_MntFruits  +    -0.44251282056636 *
184613    +        S_MntGoldProds  +     4.21345569180051 * S_MntMeatProducts
184614    +          +     1.07674028011002 * S_MntSweetProducts
184615    +          +    -4.16668334099034 * S_MntWines  +     2.33183855256347 *
184616    +        S_NumCatalogPurchases  +     1.55678471765653 * S_NumDealsPurchases
184617    +          +    -0.47776935727231 * S_NumStorePurchases
184618    +          +     -0.5890810666834 * S_NumWebPurchases
184619    +          +      1.3845716796855 * S_NumWebVisitsMonth
184620    +          +    -0.37826249433224 * S_Recency  +    -0.32813220931783 *
184621    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.52339017953874 * S_Income + -0.0800472387091 * S_Kidhome +
-0.81466158613596 * S_MntFishProducts + -1.56740792821078 * S_MntFruits + -0.44251282056636 *
S_MntGoldProds + 4.21345569180051 * S_MntMeatProducts + 1.07674028011002 * S_MntSweetProducts
+ -4.16668334099034 * S_MntWines + 2.33183855256347 * S_NumCatalogPurchases + 1.55678471765653
* S_NumDealsPurchases + -0.47776935727231 * S_NumStorePurchases + -0.5890810666834 *
S_NumWebPurchases + 1.3845716796855 * S_NumWebVisitsMonth + -0.37826249433224 * S_Recency +
-0.32813220931783 * S_Teenhome ;
184622    +   H1x1_1  = H1x1_1  +     -1.8652801761626 * AcceptedCmp10
184623    +          +    -2.15838385124109 * AcceptedCmp20  +    -0.32281263106473 *
184624    +        AcceptedCmp30  +    -0.52751972284584 * AcceptedCmp40
184625    +          +    -0.16576520159698 * AcceptedCmp50  +      0.0798586391257 *
184626    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.8652801761626 * AcceptedCmp10 + -2.15838385124109 *
AcceptedCmp20 + -0.32281263106473 * AcceptedCmp30 + -0.52751972284584 * AcceptedCmp40 +
-0.16576520159698 * AcceptedCmp50 + 0.0798586391257 * Complain0 ;
184627    +   H1x1_2  = H1x1_2  +     1.18847829749899 * AcceptedCmp10
184628    +          +     2.28872916962314 * AcceptedCmp20  +      0.7666362501062 *
184629    +        AcceptedCmp30  +     0.63272382969915 * AcceptedCmp40
184630    +          +     1.03410667663543 * AcceptedCmp50  +    -0.44709535985633 *
184631    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.18847829749899 * AcceptedCmp10 + 2.28872916962314 *
AcceptedCmp20 + 0.7666362501062 * AcceptedCmp30 + 0.63272382969915 * AcceptedCmp40 +
1.03410667663543 * AcceptedCmp50 + -0.44709535985633 * Complain0 ;
184632    +   H1x1_3  = H1x1_3  +    -0.30260316693677 * AcceptedCmp10
184633    +          +     1.37858034146365 * AcceptedCmp20  +    -1.95638038137808 *
184634    +        AcceptedCmp30  +     -2.1581101738114 * AcceptedCmp40
184635    +          +    -1.72040670376675 * AcceptedCmp50  +     2.82913230380101 *
184636    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.30260316693677 * AcceptedCmp10 + 1.37858034146365 *
AcceptedCmp20 + -1.95638038137808 * AcceptedCmp30 + -2.1581101738114 * AcceptedCmp40 +
-1.72040670376675 * AcceptedCmp50 + 2.82913230380101 * Complain0 ;
184637    +   H1x1_4  = H1x1_4  +     0.37463576870294 * AcceptedCmp10
184638    +          +     -1.1935629973001 * AcceptedCmp20  +     -0.0357513820165 *
184639    +        AcceptedCmp30  +    -0.34228453024248 * AcceptedCmp40
184640    +          +     0.08692364147086 * AcceptedCmp50  +     0.01804293030366 *
184641    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.37463576870294 * AcceptedCmp10 + -1.1935629973001 *
AcceptedCmp20 + -0.0357513820165 * AcceptedCmp30 + -0.34228453024248 * AcceptedCmp40 +
0.08692364147086 * AcceptedCmp50 + 0.01804293030366 * Complain0 ;
184642    +   H1x1_1  = H1x1_1  +     0.10559298643668 * Education2n_Cycle
184643    +          +     -0.5051689695544 * EducationBasic  +     0.07434632730326 *
184644    +        EducationGraduation  +     0.68592368666749 * EducationMaster
184645    +          +     0.38999748028122 * Marital_StatusDivorced
184646    +          +     0.44180844463279 * Marital_StatusMarried
184647    +          +     0.63824884669155 * Marital_StatusSingle
184648    +          +    -0.26198648898013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.10559298643668 * Education2n_Cycle +
-0.5051689695544 * EducationBasic + 0.07434632730326 * EducationGraduation + 0.68592368666749
* EducationMaster + 0.38999748028122 * Marital_StatusDivorced + 0.44180844463279 *
Marital_StatusMarried + 0.63824884669155 * Marital_StatusSingle + -0.26198648898013 *
Marital_StatusTogether ;
184649    +   H1x1_2  = H1x1_2  +     0.38077564253123 * Education2n_Cycle
184650    +          +    -1.71516234680597 * EducationBasic  +      0.9305914926408 *
184651    +        EducationGraduation  +    -0.48500520310542 * EducationMaster
184652    +          +    -0.95537871859519 * Marital_StatusDivorced
184653    +          +     2.55061153921286 * Marital_StatusMarried
184654    +          +    -1.78007154396711 * Marital_StatusSingle
184655    +          +     1.47779717106964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38077564253123 * Education2n_Cycle +
-1.71516234680597 * EducationBasic + 0.9305914926408 * EducationGraduation + -0.48500520310542
* EducationMaster + -0.95537871859519 * Marital_StatusDivorced + 2.55061153921286 *
Marital_StatusMarried + -1.78007154396711 * Marital_StatusSingle + 1.47779717106964 *
Marital_StatusTogether ;
184656    +   H1x1_3  = H1x1_3  +    -0.26877104077313 * Education2n_Cycle
184657    +          +    -1.51047207681049 * EducationBasic  +     1.00818590807055 *
184658    +        EducationGraduation  +    -2.08836171183474 * EducationMaster
184659    +          +     1.29930912124343 * Marital_StatusDivorced
184660    +          +    -1.63037830924789 * Marital_StatusMarried
184661    +          +     0.19040732776086 * Marital_StatusSingle
184662    +          +     -3.9038060950259 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.26877104077313 * Education2n_Cycle +
-1.51047207681049 * EducationBasic + 1.00818590807055 * EducationGraduation +
-2.08836171183474 * EducationMaster + 1.29930912124343 * Marital_StatusDivorced +
-1.63037830924789 * Marital_StatusMarried + 0.19040732776086 * Marital_StatusSingle +
-3.9038060950259 * Marital_StatusTogether ;
184663    +   H1x1_4  = H1x1_4  +     0.59574708300703 * Education2n_Cycle
184664    +          +    -0.19936070861543 * EducationBasic  +     0.82683145042233 *
184665    +        EducationGraduation  +    -0.24015931152788 * EducationMaster
184666    +          +     -0.3129003025095 * Marital_StatusDivorced
184667    +          +     0.00843550425239 * Marital_StatusMarried
184668    +          +    -0.20416436114776 * Marital_StatusSingle
184669    +          +     1.08624823622502 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.59574708300703 * Education2n_Cycle +
-0.19936070861543 * EducationBasic + 0.82683145042233 * EducationGraduation +
-0.24015931152788 * EducationMaster + -0.3129003025095 * Marital_StatusDivorced +
0.00843550425239 * Marital_StatusMarried + -0.20416436114776 * Marital_StatusSingle +
1.08624823622502 * Marital_StatusTogether ;
184670    +   H1x1_1  =    -2.66745806568988 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.66745806568988 + H1x1_1 ;
184671    +   H1x1_2  =     1.39870734752375 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.39870734752375 + H1x1_2 ;
184672    +   H1x1_3  =     3.90802178606462 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 3.90802178606462 + H1x1_3 ;
184673    +   H1x1_4  =    -1.61490323089776 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.61490323089776 + H1x1_4 ;
184674    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
184675    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
184676    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
184677    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
184678    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
184679    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
184680    +END;
MPRINT(EM_DIAGRAM):   END;
184681    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184682    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
184683    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
184684    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
184685    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
184686    +END;
MPRINT(EM_DIAGRAM):   END;
184687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184688    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
184689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184690    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
184691    +   H1x2_1  =     0.40035517192793 * S_Income  +     1.50961149935512 *
184692    +        S_Kidhome  +    -0.71749794576247 * S_MntFishProducts
184693    +          +    -0.80539813415293 * S_MntFruits  +    -0.11190500470397 *
184694    +        S_MntGoldProds  +    -1.00287277559415 * S_MntMeatProducts
184695    +          +    -0.90866858123806 * S_MntSweetProducts
184696    +          +     0.48761861591898 * S_MntWines  +    -0.00278053699018 *
184697    +        S_NumCatalogPurchases  +     1.76527380505645 * S_NumDealsPurchases
184698    +          +     1.45805686107789 * S_NumStorePurchases
184699    +          +     1.48794767642409 * S_NumWebPurchases
184700    +          +    -1.24357395997191 * S_NumWebVisitsMonth
184701    +          +     2.73747730751211 * S_Recency  +    -0.74105180435611 *
184702    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.40035517192793 * S_Income + 1.50961149935512 * S_Kidhome +
-0.71749794576247 * S_MntFishProducts + -0.80539813415293 * S_MntFruits + -0.11190500470397 *
S_MntGoldProds + -1.00287277559415 * S_MntMeatProducts + -0.90866858123806 *
S_MntSweetProducts + 0.48761861591898 * S_MntWines + -0.00278053699018 * S_NumCatalogPurchases
+ 1.76527380505645 * S_NumDealsPurchases + 1.45805686107789 * S_NumStorePurchases +
1.48794767642409 * S_NumWebPurchases + -1.24357395997191 * S_NumWebVisitsMonth +
2.73747730751211 * S_Recency + -0.74105180435611 * S_Teenhome ;
184703    +   H1x2_2  =    -2.30368761501045 * S_Income  +     0.82837234680306 *
184704    +        S_Kidhome  +    -0.57801225504203 * S_MntFishProducts
184705    +          +    -0.53882153761332 * S_MntFruits  +    -0.06305202172404 *
184706    +        S_MntGoldProds  +    -0.83741138145577 * S_MntMeatProducts
184707    +          +     1.05010358762976 * S_MntSweetProducts
184708    +          +     -0.8308916879344 * S_MntWines  +     0.00135039846616 *
184709    +        S_NumCatalogPurchases  +     -0.1426130520252 * S_NumDealsPurchases
184710    +          +    -2.04318529474165 * S_NumStorePurchases
184711    +          +     1.64478964728594 * S_NumWebPurchases
184712    +          +    -0.74790322980646 * S_NumWebVisitsMonth
184713    +          +     0.44846346006135 * S_Recency  +    -1.17558204887145 *
184714    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.30368761501045 * S_Income + 0.82837234680306 * S_Kidhome +
-0.57801225504203 * S_MntFishProducts + -0.53882153761332 * S_MntFruits + -0.06305202172404 *
S_MntGoldProds + -0.83741138145577 * S_MntMeatProducts + 1.05010358762976 * S_MntSweetProducts
+ -0.8308916879344 * S_MntWines + 0.00135039846616 * S_NumCatalogPurchases + -0.1426130520252
* S_NumDealsPurchases + -2.04318529474165 * S_NumStorePurchases + 1.64478964728594 *
S_NumWebPurchases + -0.74790322980646 * S_NumWebVisitsMonth + 0.44846346006135 * S_Recency +
-1.17558204887145 * S_Teenhome ;
184715    +   H1x2_3  =     1.07803134847301 * S_Income  +     1.10001550023539 *
184716    +        S_Kidhome  +      2.1312863754193 * S_MntFishProducts
184717    +          +    -0.41841353908141 * S_MntFruits  +    -0.28009599678539 *
184718    +        S_MntGoldProds  +    -0.57516542648625 * S_MntMeatProducts
184719    +          +     0.39974532423377 * S_MntSweetProducts
184720    +          +    -1.03786923973351 * S_MntWines  +    -0.21873654141419 *
184721    +        S_NumCatalogPurchases  +    -0.12545360575656 * S_NumDealsPurchases
184722    +          +     0.70805557348415 * S_NumStorePurchases
184723    +          +     2.40362900277228 * S_NumWebPurchases
184724    +          +    -0.84521247676043 * S_NumWebVisitsMonth
184725    +          +     4.38953216910793 * S_Recency  +     1.39159599477449 *
184726    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.07803134847301 * S_Income + 1.10001550023539 * S_Kidhome +
2.1312863754193 * S_MntFishProducts + -0.41841353908141 * S_MntFruits + -0.28009599678539 *
S_MntGoldProds + -0.57516542648625 * S_MntMeatProducts + 0.39974532423377 * S_MntSweetProducts
+ -1.03786923973351 * S_MntWines + -0.21873654141419 * S_NumCatalogPurchases +
-0.12545360575656 * S_NumDealsPurchases + 0.70805557348415 * S_NumStorePurchases +
2.40362900277228 * S_NumWebPurchases + -0.84521247676043 * S_NumWebVisitsMonth +
4.38953216910793 * S_Recency + 1.39159599477449 * S_Teenhome ;
184727    +   H1x2_4  =      1.5904518722284 * S_Income  +     0.14957259343911 *
184728    +        S_Kidhome  +     1.71856101884761 * S_MntFishProducts
184729    +          +     0.97544338421034 * S_MntFruits  +     1.16387775609385 *
184730    +        S_MntGoldProds  +    -0.43463910907731 * S_MntMeatProducts
184731    +          +     1.67907268159197 * S_MntSweetProducts
184732    +          +    -0.67372438764914 * S_MntWines  +     0.34705529867224 *
184733    +        S_NumCatalogPurchases  +     1.55570260456887 * S_NumDealsPurchases
184734    +          +      0.0818178054474 * S_NumStorePurchases
184735    +          +     0.21533198164279 * S_NumWebPurchases
184736    +          +     2.13590425604302 * S_NumWebVisitsMonth
184737    +          +    -2.07481510631659 * S_Recency  +    -0.82288425478762 *
184738    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.5904518722284 * S_Income + 0.14957259343911 * S_Kidhome +
1.71856101884761 * S_MntFishProducts + 0.97544338421034 * S_MntFruits + 1.16387775609385 *
S_MntGoldProds + -0.43463910907731 * S_MntMeatProducts + 1.67907268159197 * S_MntSweetProducts
+ -0.67372438764914 * S_MntWines + 0.34705529867224 * S_NumCatalogPurchases + 1.55570260456887
* S_NumDealsPurchases + 0.0818178054474 * S_NumStorePurchases + 0.21533198164279 *
S_NumWebPurchases + 2.13590425604302 * S_NumWebVisitsMonth + -2.07481510631659 * S_Recency +
-0.82288425478762 * S_Teenhome ;
184739    +   H1x2_1  = H1x2_1  +    -1.62231361085618 * AcceptedCmp10
184740    +          +     0.93841494775887 * AcceptedCmp20  +      0.1734706863831 *
184741    +        AcceptedCmp30  +     0.16475784850175 * AcceptedCmp40
184742    +          +     0.65486951368163 * AcceptedCmp50  +      1.6226382489877 *
184743    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.62231361085618 * AcceptedCmp10 + 0.93841494775887 *
AcceptedCmp20 + 0.1734706863831 * AcceptedCmp30 + 0.16475784850175 * AcceptedCmp40 +
0.65486951368163 * AcceptedCmp50 + 1.6226382489877 * Complain0 ;
184744    +   H1x2_2  = H1x2_2  +     0.93875540013493 * AcceptedCmp10
184745    +          +     2.69754413059384 * AcceptedCmp20  +    -0.30913025234768 *
184746    +        AcceptedCmp30  +    -0.00924007964301 * AcceptedCmp40
184747    +          +     -0.7359545134435 * AcceptedCmp50  +    -0.44748157506074 *
184748    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.93875540013493 * AcceptedCmp10 + 2.69754413059384 *
AcceptedCmp20 + -0.30913025234768 * AcceptedCmp30 + -0.00924007964301 * AcceptedCmp40 +
-0.7359545134435 * AcceptedCmp50 + -0.44748157506074 * Complain0 ;
184749    +   H1x2_3  = H1x2_3  +      0.4023712256607 * AcceptedCmp10
184750    +          +    -0.46100225887196 * AcceptedCmp20  +    -0.11545325868036 *
184751    +        AcceptedCmp30  +     1.81326302523772 * AcceptedCmp40
184752    +          +     1.57642234573579 * AcceptedCmp50  +    -0.52645724664984 *
184753    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.4023712256607 * AcceptedCmp10 + -0.46100225887196 *
AcceptedCmp20 + -0.11545325868036 * AcceptedCmp30 + 1.81326302523772 * AcceptedCmp40 +
1.57642234573579 * AcceptedCmp50 + -0.52645724664984 * Complain0 ;
184754    +   H1x2_4  = H1x2_4  +    -1.08307715440234 * AcceptedCmp10
184755    +          +     0.10309372709877 * AcceptedCmp20  +    -1.18814330876811 *
184756    +        AcceptedCmp30  +    -1.69102202926075 * AcceptedCmp40
184757    +          +     0.10465943889984 * AcceptedCmp50  +    -0.96523771648083 *
184758    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.08307715440234 * AcceptedCmp10 + 0.10309372709877 *
AcceptedCmp20 + -1.18814330876811 * AcceptedCmp30 + -1.69102202926075 * AcceptedCmp40 +
0.10465943889984 * AcceptedCmp50 + -0.96523771648083 * Complain0 ;
184759    +   H1x2_1  = H1x2_1  +     0.57966380694999 * Education2n_Cycle
184760    +          +     1.09807543038463 * EducationBasic  +     0.56896005764417 *
184761    +        EducationGraduation  +     0.78238700450794 * EducationMaster
184762    +          +     0.09735596304222 * Marital_StatusDivorced
184763    +          +    -0.41892050812825 * Marital_StatusMarried
184764    +          +    -1.42753782654911 * Marital_StatusSingle
184765    +          +     2.12640980869845 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.57966380694999 * Education2n_Cycle +
1.09807543038463 * EducationBasic + 0.56896005764417 * EducationGraduation + 0.78238700450794
* EducationMaster + 0.09735596304222 * Marital_StatusDivorced + -0.41892050812825 *
Marital_StatusMarried + -1.42753782654911 * Marital_StatusSingle + 2.12640980869845 *
Marital_StatusTogether ;
184766    +   H1x2_2  = H1x2_2  +     1.23142964464278 * Education2n_Cycle
184767    +          +    -0.57685007681361 * EducationBasic  +     0.95565027871272 *
184768    +        EducationGraduation  +     1.03407121736627 * EducationMaster
184769    +          +    -0.32415267410507 * Marital_StatusDivorced
184770    +          +     0.49045578856782 * Marital_StatusMarried
184771    +          +    -1.95612005933176 * Marital_StatusSingle
184772    +          +    -0.09380239900044 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.23142964464278 * Education2n_Cycle +
-0.57685007681361 * EducationBasic + 0.95565027871272 * EducationGraduation + 1.03407121736627
* EducationMaster + -0.32415267410507 * Marital_StatusDivorced + 0.49045578856782 *
Marital_StatusMarried + -1.95612005933176 * Marital_StatusSingle + -0.09380239900044 *
Marital_StatusTogether ;
184773    +   H1x2_3  = H1x2_3  +    -0.59991828858437 * Education2n_Cycle
184774    +          +     0.16738017494874 * EducationBasic  +     1.11954020630495 *
184775    +        EducationGraduation  +    -1.26111004544108 * EducationMaster
184776    +          +    -1.25715350788627 * Marital_StatusDivorced
184777    +          +     0.74269511935299 * Marital_StatusMarried
184778    +          +    -0.27394822792771 * Marital_StatusSingle
184779    +          +     0.32120400150108 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.59991828858437 * Education2n_Cycle +
0.16738017494874 * EducationBasic + 1.11954020630495 * EducationGraduation + -1.26111004544108
* EducationMaster + -1.25715350788627 * Marital_StatusDivorced + 0.74269511935299 *
Marital_StatusMarried + -0.27394822792771 * Marital_StatusSingle + 0.32120400150108 *
Marital_StatusTogether ;
184780    +   H1x2_4  = H1x2_4  +     0.73858886461182 * Education2n_Cycle
184781    +          +     1.18482398810163 * EducationBasic  +     0.31912715416105 *
184782    +        EducationGraduation  +     -0.7403940659871 * EducationMaster
184783    +          +    -1.42754006114782 * Marital_StatusDivorced
184784    +          +    -0.13979120103654 * Marital_StatusMarried
184785    +          +    -1.66244370644258 * Marital_StatusSingle
184786    +          +     1.29295770867497 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.73858886461182 * Education2n_Cycle +
1.18482398810163 * EducationBasic + 0.31912715416105 * EducationGraduation + -0.7403940659871
* EducationMaster + -1.42754006114782 * Marital_StatusDivorced + -0.13979120103654 *
Marital_StatusMarried + -1.66244370644258 * Marital_StatusSingle + 1.29295770867497 *
Marital_StatusTogether ;
184787    +   H1x2_1  =     0.02486753071365 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02486753071365 + H1x2_1 ;
184788    +   H1x2_2  =     1.30157602008517 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.30157602008517 + H1x2_2 ;
184789    +   H1x2_3  =    -0.71765289173772 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.71765289173772 + H1x2_3 ;
184790    +   H1x2_4  =    -0.28206267191961 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.28206267191961 + H1x2_4 ;
184791    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
184792    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
184793    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
184794    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
184795    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
184796    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
184797    +END;
MPRINT(EM_DIAGRAM):   END;
184798    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184799    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
184800    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
184801    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
184802    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
184803    +END;
MPRINT(EM_DIAGRAM):   END;
184804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184805    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
184806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184807    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
184808    +   H2x1_1  =    -1.34021567967914 * H1x1_1  +    -0.82210150819056 * H1x1_2
184809    +          +      0.2051584088577 * H1x1_3  +    -0.14877251454609 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.34021567967914 * H1x1_1 + -0.82210150819056 * H1x1_2 +
0.2051584088577 * H1x1_3 + -0.14877251454609 * H1x1_4 ;
184810    +   H2x1_2  =     5.90283136076368 * H1x1_1  +    -7.93891997601848 * H1x1_2
184811    +          +     6.88352608350263 * H1x1_3  +     4.96968417177752 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 5.90283136076368 * H1x1_1 + -7.93891997601848 * H1x1_2 +
6.88352608350263 * H1x1_3 + 4.96968417177752 * H1x1_4 ;
184812    +   H2x1_3  =    -0.35820258372371 * H1x1_1  +      3.0004195561827 * H1x1_2
184813    +          +    -2.45737828305901 * H1x1_3  +     -3.3701635035096 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.35820258372371 * H1x1_1 + 3.0004195561827 * H1x1_2 +
-2.45737828305901 * H1x1_3 + -3.3701635035096 * H1x1_4 ;
184814    +   H2x1_4  =    -2.21298094667436 * H1x1_1  +     0.26414252140039 * H1x1_2
184815    +          +     1.09094365218549 * H1x1_3  +     1.52196888791164 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -2.21298094667436 * H1x1_1 + 0.26414252140039 * H1x1_2 +
1.09094365218549 * H1x1_3 + 1.52196888791164 * H1x1_4 ;
184816    +   H2x1_1  = H2x1_1  +    -0.84246838752596 * H1x2_1
184817    +          +     0.53874594317309 * H1x2_2  +     0.47956597308168 * H1x2_3
184818    +          +    -0.93255463077914 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.84246838752596 * H1x2_1 + 0.53874594317309 * H1x2_2
+ 0.47956597308168 * H1x2_3 + -0.93255463077914 * H1x2_4 ;
184819    +   H2x1_2  = H2x1_2  +     -1.9223116287684 * H1x2_1
184820    +          +    -2.37377206970433 * H1x2_2  +    -0.73887953722708 * H1x2_3
184821    +          +     2.71044044080254 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.9223116287684 * H1x2_1 + -2.37377206970433 * H1x2_2
+ -0.73887953722708 * H1x2_3 + 2.71044044080254 * H1x2_4 ;
184822    +   H2x1_3  = H2x1_3  +     0.53173546674544 * H1x2_1
184823    +          +     1.48831638926533 * H1x2_2  +     2.89231339277069 * H1x2_3
184824    +          +    -2.75774116509863 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.53173546674544 * H1x2_1 + 1.48831638926533 * H1x2_2
+ 2.89231339277069 * H1x2_3 + -2.75774116509863 * H1x2_4 ;
184825    +   H2x1_4  = H2x1_4  +     1.42086435786687 * H1x2_1
184826    +          +     0.41116169758796 * H1x2_2  +    -1.89087404607062 * H1x2_3
184827    +          +     1.62153254823704 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.42086435786687 * H1x2_1 + 0.41116169758796 * H1x2_2
+ -1.89087404607062 * H1x2_3 + 1.62153254823704 * H1x2_4 ;
184828    +   H2x1_1  =    -1.75788455741829 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.75788455741829 + H2x1_1 ;
184829    +   H2x1_2  =    -1.23949015246826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.23949015246826 + H2x1_2 ;
184830    +   H2x1_3  =     0.22552341308337 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.22552341308337 + H2x1_3 ;
184831    +   H2x1_4  =    -0.29261642916715 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.29261642916715 + H2x1_4 ;
184832    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
184833    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
184834    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
184835    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
184836    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
184837    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
184838    +END;
MPRINT(EM_DIAGRAM):   END;
184839    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184840    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
184841    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
184842    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
184843    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
184844    +END;
MPRINT(EM_DIAGRAM):   END;
184845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184846    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
184847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184848    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
184849    +   P_DepVar1  =    -0.01128614443737 * H2x1_1  +     20.5485882709782 * H2x1_2
184850    +          +    -12.1833710389136 * H2x1_3  +     -2.9534639226061 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.01128614443737 * H2x1_1 + 20.5485882709782 * H2x1_2 +
-12.1833710389136 * H2x1_3 + -2.9534639226061 * H2x1_4 ;
184851    +   P_DepVar1  =     1.18328906065521 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.18328906065521 + P_DepVar1 ;
184852    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
184853    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
184854    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
184855    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
184856    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
184857    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
184858    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
184859    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
184860    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
184861    +END;
MPRINT(EM_DIAGRAM):   END;
184862    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184863    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
184864    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
184865    +END;
MPRINT(EM_DIAGRAM):   END;
184866    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
184867    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
184868    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
184869    +END;
MPRINT(EM_DIAGRAM):   END;
184870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184871    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
184872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184873    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
184874    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
184875    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
184876    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
184877    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
184878    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
184879    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
184880    +END;
MPRINT(EM_DIAGRAM):   END;
184881    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
184882    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
184883    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
184884    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
184885     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
184886     quit;
184887     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
184888     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
184889     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
184890     retain ID 2 Node "AutoNeural47";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural47";
184891     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
184892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3034 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3034 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
184893     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
184894     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3034 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3034 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184896     proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural47_variableset out=_temp2(keep=NAME
CREATOR);
184897     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184898     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL47_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184899     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
184900     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
184901     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
184902     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
184903     proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural47_train out=_meta(keep=NAME) noprint;
184904     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 65 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
184905     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
184906     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184907     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 65 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 65 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184908     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
184909     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
184910     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184911     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 65 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 65 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184912     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
184913     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
184913   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1477 rows and 5 columns.
 
184914     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184915     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
184916     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1477 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1477 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184917     filename _pref
184917   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
184918     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
184919     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
184920    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
184921    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
184922    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
184923    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
184924    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
184925    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
184926     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
184927     quit;
184928     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
184929     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
184930     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
184931     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
184932     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
184933     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
184934     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
184935     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184936     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184937     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
184938     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184939     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184940     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
184941     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
184942     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
184943     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184944     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
184945     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
184946     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
184947     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184948     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184949     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
184950     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
184951     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184952     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
184953     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
184954     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
184954   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
184955     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184956     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
184957     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1481 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184958     filename _pref
184958   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
184959     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
184960     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
184961    +
184962    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
184963    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
184963   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
184964    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
184965    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
184966    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
184967    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
184968    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
184969     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
184970     quit;
184971     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
184972     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
184973     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
184974     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
184975     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
184976     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184977     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
184978     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184979     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
184980     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
184981     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184982     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184983     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
184984     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
184985     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
184986     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184987     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
184988     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184989     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
184990     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184991     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
184992     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
184993     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
184994     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
184995     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184996     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
184997     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
184997   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
184998     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
184999     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
185000     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1520 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185001     filename _pref
185001   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
185002     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
185003     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
185004    +
185005    +
185006    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
185007    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
185008    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
185009    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
185010    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
185011    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
185012    +
185013    +
185014    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
185015    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
185016    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
185017    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
185018    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
185019    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
185020    +
185021    +
185022    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
185023    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
185024    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
185025    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
185026    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
185027    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
185028    +
185029    +
185030    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
185031    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
185032    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
185033    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
185034    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
185035    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
185036    +
185037    +
185038    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
185039    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
185040    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
185041    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
185042    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
185043    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
185044    +
185045    +
185046    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
185047    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
185048    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
185049    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
185050    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
185051    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
185052    +
185053    +
185054    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
185055    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
185056    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
185057    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
185058    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
185059    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
185060    +
185061    +
185062    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
185063    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
185064    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
185065    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
185066    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
185067    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
185068    +if
185069    +_FILTERNORM1 not in ( '.')
185070    + and
185071    +_FILTERNORM2 not in ( '.')
185072    + and
185073    +_FILTERNORM3 not in ( '.')
185074    + and
185075    +_FILTERNORM4 not in ( '.')
185076    + and
185077    +_FILTERNORM5 not in ( '.')
185078    + and
185079    +_FILTERNORM6 not in ( '.')
185080    + and
185081    +_FILTERNORM7 not in ( ' ')
185082    + and
185083    +_FILTERNORM8 not in ( ' ')
185084    +and
185085    +( Dt_Customer ne .)
185086    +and ( Income ne . and (Income<=107000))
185087    +and ( Kidhome ne .)
185088    +and ( MntFishProducts ne .)
185089    +and ( MntFruits ne .)
185090    +and ( MntGoldProds ne .)
185091    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
185092    +and ( MntSweetProducts ne .)
185093    +and ( MntWines ne .)
185094    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
185095    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
185096    +and ( NumStorePurchases ne .)
185097    +and ( NumWebPurchases ne .)
185098    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
185099    +and ( Recency ne .)
185100    +and ( Teenhome ne .)
185101    +and ( Year_Birth ne .)
185102    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
185103    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
185104    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
185105    +end;
MPRINT(EM_DIAGRAM):   end;
185106    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
185107    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
185108     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
185109     quit;
185110     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
185111     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
185112     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
185113     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
185114     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
185115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185116     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
185117     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185118     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185119     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
185120     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185121     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185122     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
185123     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
185124     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
185125     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185126     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
185127     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185128     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
185129     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185130     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185131     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
185132     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
185133     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185134     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185135     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
185136     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
185136   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
185137     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185138     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
185139     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1586 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185140     %macro varDept(fcmpdata=,id=);
185141     %global nobs&id scoreFlag&id;
185142     %let scoreFlag&id = 0;
185143     %if &id=1 or ^&fcmpStart %then %do;
185144     proc sort data=&fcmpdata out=_temp&id nodupkey;
185145     by NAME;
185146     where id=&id and LHS in( %let j=1;
185147     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
185148     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
185149     "&var" %let j = %eval(&j+1);
185150     %end;
185151     );
185152     run;
185153     %let dsid = %sysfunc(open(_temp&id));
185154     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
185155     %let dsid = %sysfunc(close(&dsid));
185156     %if &&nobs&id %then %do;
185157     %let scoreFlag&id = 1;
185158     %let fcmpStart = 1;
185159     %end;
185160     %else %let fcmpStart = 0;
185161     %end;
185162     %else %do;
185163     proc sort data=&fcmpdata out=_tempid;
185164     where id=&id;
185165     by LHS;
185166     run;
185167     %let dsid = %sysfunc(open(_tempid));
185168     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
185169     %let dsid = %sysfunc(close(&dsid));
185170     %if ^&&nobs&id %then %do;
185171     proc datasets lib=work nolist;
185172     delete _tempid;
185173     run;
185174     quit;
185175     %end;
185176     %else %do;
185177     data _tempAll;
185178     set %let j=%eval(&id-1);
185179     %do x=1 %to &j;
185180     %if &&nobs&x %then %do;
185181     _temp&x %end;
185182     %end;
185183     ;
185184     run;
185185     proc sql;
185186     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
185186   ! work._tempid p2 where p.name=p2.lhs;
185187     quit;
185188     data _temp&id;
185189     set _temp&id;
185190     where LHS ne '' and NAME ne '' and Node ne '';
185191     run;
185192     proc datasets lib=work nolist;
185193     delete _tempAll;
185194     run;
185195     %let dsid = %sysfunc(open(_temp&id));
185196     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
185197     %let dsid = %sysfunc(close(&dsid));
185198     %if ^&&nobs&id %then %do;
185199     proc datasets lib=work nolist;
185200     delete _temp&id;
185201     run;
185202     quit;
185203     %end;
185204     %else %do;
185205     %let scoreFlag&id = 1;
185206     data _temp&id;
185207     set _temp&id;
185208     where LHS ne NAME and node ne '';
185209     run;
185210     %let dsid = %sysfunc(open(_temp&id));
185211     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
185212     %let dsid = %sysfunc(close(&dsid));
185213     %if ^&&nobs&id %then %do;
185214     proc datasets lib=work nolist;
185215     delete _temp&id;
185216     run;
185217     quit;
185218     %end;
185219     %else %do;
185220     proc sort data=_temp&id nodupkey;
185221     by LHS NAME;
185222     run;
185223     %end;
185224     %end;
185225     %end;
185226     %end;
185227     %mend varDept;
185228     %macro optCode(outdata=fcmpdata);
185229     %global fcmpStart;
185230     %let fcmpStart = 0;
185231     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
185232     %let NumNodes=9;
185233     %do k=1 %to &NumNodes;
185234     %vardept(fcmpdata=&outdata, id=&k);
185235     %end;
185236     %mend optCode;
185237     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 97 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 37 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
185238     filename _pref
185238   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas";
185239     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
185240     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural45\EMPUBLISHSCORE.sas.
185241    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
185242    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
185243    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
185244    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
185245    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
185246    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
185247    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
185248    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
185249    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
185250    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
185251    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
185252    +LENGTH _WARN_ $4
185253    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
185254    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
185255    +
185256    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
185257    +
185258    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
185259    +
185260    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
185261    +
185262    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
185263    +
185264    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
185265    +
185266    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
185267    +
185268    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
185269    +
185270    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
185271    +
185272    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
185273    +
185274    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
185275    +
185276    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
185277    +
185278    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
185279    +
185280    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
185281    +
185282    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
185283    +
185284    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
185285    +
185286    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
185287    +
185288    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
185289    +
185290    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
185291    +
185292    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
185293    +
185294    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
185295    +
185296    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
185297    +
185298    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
185299    +
185300    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
185301    +
185302    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
185303    +
185304    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
185305    +
185306    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
185307    +
185308    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
185309    +
185310    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
185311    +
185312    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
185313    +
185314    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
185315    +
185316    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
185317    +
185318    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
185319    +
185320    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
185321    +
185322    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
185323    +
185324    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
185325    +
185326    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
185327    +
185328    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
185329    +
185330    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
185331    +
185332    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
185333    +
185334    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
185335    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
185336    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
185337    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
185338    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
185339    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185340    +end;
MPRINT(EM_DIAGRAM):   end;
185341    +else do;
MPRINT(EM_DIAGRAM):   else do;
185342    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
185343    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
185344    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185345    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
185346    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
185347    +   end;
MPRINT(EM_DIAGRAM):   end;
185348    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
185349    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
185350    +   end;
MPRINT(EM_DIAGRAM):   end;
185351    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185352    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
185353    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
185354    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185355    +   end;
MPRINT(EM_DIAGRAM):   end;
185356    +end;
MPRINT(EM_DIAGRAM):   end;
185357    +
185358    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
185359    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
185360    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
185361    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
185362    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
185363    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185364    +end;
MPRINT(EM_DIAGRAM):   end;
185365    +else do;
MPRINT(EM_DIAGRAM):   else do;
185366    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
185367    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
185368    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185369    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
185370    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
185371    +   end;
MPRINT(EM_DIAGRAM):   end;
185372    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
185373    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
185374    +   end;
MPRINT(EM_DIAGRAM):   end;
185375    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185376    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
185377    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
185378    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185379    +   end;
MPRINT(EM_DIAGRAM):   end;
185380    +end;
MPRINT(EM_DIAGRAM):   end;
185381    +
185382    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
185383    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
185384    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
185385    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
185386    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
185387    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185388    +end;
MPRINT(EM_DIAGRAM):   end;
185389    +else do;
MPRINT(EM_DIAGRAM):   else do;
185390    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
185391    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
185392    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185393    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
185394    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
185395    +   end;
MPRINT(EM_DIAGRAM):   end;
185396    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
185397    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
185398    +   end;
MPRINT(EM_DIAGRAM):   end;
185399    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185400    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
185401    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
185402    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185403    +   end;
MPRINT(EM_DIAGRAM):   end;
185404    +end;
MPRINT(EM_DIAGRAM):   end;
185405    +
185406    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
185407    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
185408    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
185409    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
185410    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
185411    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185412    +end;
MPRINT(EM_DIAGRAM):   end;
185413    +else do;
MPRINT(EM_DIAGRAM):   else do;
185414    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
185415    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
185416    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185417    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
185418    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
185419    +   end;
MPRINT(EM_DIAGRAM):   end;
185420    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
185421    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
185422    +   end;
MPRINT(EM_DIAGRAM):   end;
185423    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185424    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
185425    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
185426    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185427    +   end;
MPRINT(EM_DIAGRAM):   end;
185428    +end;
MPRINT(EM_DIAGRAM):   end;
185429    +
185430    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
185431    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
185432    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
185433    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
185434    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
185435    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185436    +end;
MPRINT(EM_DIAGRAM):   end;
185437    +else do;
MPRINT(EM_DIAGRAM):   else do;
185438    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
185439    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
185440    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185441    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
185442    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
185443    +   end;
MPRINT(EM_DIAGRAM):   end;
185444    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
185445    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
185446    +   end;
MPRINT(EM_DIAGRAM):   end;
185447    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185448    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
185449    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
185450    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185451    +   end;
MPRINT(EM_DIAGRAM):   end;
185452    +end;
MPRINT(EM_DIAGRAM):   end;
185453    +
185454    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
185455    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
185456    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
185457    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
185458    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
185459    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185460    +end;
MPRINT(EM_DIAGRAM):   end;
185461    +else do;
MPRINT(EM_DIAGRAM):   else do;
185462    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
185463    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
185464    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185465    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
185466    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
185467    +   end;
MPRINT(EM_DIAGRAM):   end;
185468    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
185469    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
185470    +   end;
MPRINT(EM_DIAGRAM):   end;
185471    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185472    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
185473    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
185474    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185475    +   end;
MPRINT(EM_DIAGRAM):   end;
185476    +end;
MPRINT(EM_DIAGRAM):   end;
185477    +
185478    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
185479    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
185480    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
185481    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
185482    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
185483    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
185484    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
185485    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
185486    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
185487    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
185488    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
185489    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
185490    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
185491    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185492    +end;
MPRINT(EM_DIAGRAM):   end;
185493    +else do;
MPRINT(EM_DIAGRAM):   else do;
185494    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
185495    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
185496    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185497    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
185498    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
185499    +   end;
MPRINT(EM_DIAGRAM):   end;
185500    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
185501    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
185502    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
185503    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
185504    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
185505    +   end;
MPRINT(EM_DIAGRAM):   end;
185506    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
185507    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
185508    +   end;
MPRINT(EM_DIAGRAM):   end;
185509    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
185510    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
185511    +   end;
MPRINT(EM_DIAGRAM):   end;
185512    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
185513    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
185514    +   end;
MPRINT(EM_DIAGRAM):   end;
185515    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185516    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
185517    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
185518    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
185519    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
185520    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
185521    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185522    +   end;
MPRINT(EM_DIAGRAM):   end;
185523    +end;
MPRINT(EM_DIAGRAM):   end;
185524    +
185525    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
185526    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
185527    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
185528    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
185529    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
185530    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
185531    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
185532    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
185533    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
185534    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
185535    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
185536    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
185537    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
185538    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
185539    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185540    +end;
MPRINT(EM_DIAGRAM):   end;
185541    +else do;
MPRINT(EM_DIAGRAM):   else do;
185542    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
185543    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
185544    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
185545    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
185546    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
185547    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
185548    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
185549    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
185550    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
185551    +         end;
MPRINT(EM_DIAGRAM):   end;
185552    +         else do;
MPRINT(EM_DIAGRAM):   else do;
185553    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
185554    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
185555    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
185556    +            end;
MPRINT(EM_DIAGRAM):   end;
185557    +         end;
MPRINT(EM_DIAGRAM):   end;
185558    +      end;
MPRINT(EM_DIAGRAM):   end;
185559    +      else do;
MPRINT(EM_DIAGRAM):   else do;
185560    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
185561    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
185562    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
185563    +         end;
MPRINT(EM_DIAGRAM):   end;
185564    +      end;
MPRINT(EM_DIAGRAM):   end;
185565    +   end;
MPRINT(EM_DIAGRAM):   end;
185566    +   else do;
MPRINT(EM_DIAGRAM):   else do;
185567    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
185568    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
185569    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
185570    +      end;
MPRINT(EM_DIAGRAM):   end;
185571    +      else do;
MPRINT(EM_DIAGRAM):   else do;
185572    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
185573    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
185574    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
185575    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
185576    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
185577    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
185578    +         end;
MPRINT(EM_DIAGRAM):   end;
185579    +      end;
MPRINT(EM_DIAGRAM):   end;
185580    +   end;
MPRINT(EM_DIAGRAM):   end;
185581    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
185582    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
185583    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
185584    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
185585    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
185586    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
185587    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185588    +   end;
MPRINT(EM_DIAGRAM):   end;
185589    +end;
MPRINT(EM_DIAGRAM):   end;
185590    +
185591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185592    +*** Checking missing input Interval
185593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
185594    +
185595    +IF NMISS(
185596    +   Income ,
185597    +   Kidhome ,
185598    +   MntFishProducts ,
185599    +   MntFruits ,
185600    +   MntGoldProds ,
185601    +   MntMeatProducts ,
185602    +   MntSweetProducts ,
185603    +   MntWines ,
185604    +   NumCatalogPurchases ,
185605    +   NumDealsPurchases ,
185606    +   NumStorePurchases ,
185607    +   NumWebPurchases ,
185608    +   NumWebVisitsMonth ,
185609    +   Recency ,
185610    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
185611    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
185612    +
185613    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
185614    +END;
MPRINT(EM_DIAGRAM):   END;
185615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185616    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
185617    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185618    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185619    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
185620    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
185621    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
185622    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
185623    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
185624    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
185625    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
185626    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
185627    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
185628    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
185629    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
185630    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
185631    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
185632    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
185633    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
185634    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
185635    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
185636    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
185637    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
185638    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
185639    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
185640    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
185641    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
185642    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
185643    +END;
MPRINT(EM_DIAGRAM):   END;
185644    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185645    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
185646    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
185647    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
185648    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
185649    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
185650    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
185651    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
185652    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
185653    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
185654    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
185655    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
185656    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
185657    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
185658    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
185659    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
185660    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
185661    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
185662    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
185663    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
185664    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
185665    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
185666    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
185667    +   ELSE S_NumCatalogPurchases
185668    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
185669    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
185670    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
185671    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
185672    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
185673    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
185674    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
185675    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
185676    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
185677    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
185678    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
185679    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
185680    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
185681    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
185682    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
185683    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
185684    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
185685    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
185686    +END;
MPRINT(EM_DIAGRAM):   END;
185687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185688    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
185689    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185691    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
185692    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185693    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185694    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
185695    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185696    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185697    +   H1x1_1  =     0.95463807935638 * S_Income  +     -0.0812123000279 *
185698    +        S_Kidhome  +    -1.17242250965796 * S_MntFishProducts
185699    +          +    -0.39894096707412 * S_MntFruits  +     0.48282664436672 *
185700    +        S_MntGoldProds  +       7.765847453582 * S_MntMeatProducts
185701    +          +    -0.44570165516063 * S_MntSweetProducts
185702    +          +    -1.40872100231855 * S_MntWines  +     1.40783708957732 *
185703    +        S_NumCatalogPurchases  +     1.49155573260533 * S_NumDealsPurchases
185704    +          +    -1.76291210288234 * S_NumStorePurchases
185705    +          +    -2.02392782824649 * S_NumWebPurchases
185706    +          +     1.28490910676992 * S_NumWebVisitsMonth
185707    +          +    -1.30767557862851 * S_Recency  +    -0.59235237740193 *
185708    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.95463807935638 * S_Income + -0.0812123000279 * S_Kidhome +
-1.17242250965796 * S_MntFishProducts + -0.39894096707412 * S_MntFruits + 0.48282664436672 *
S_MntGoldProds + 7.765847453582 * S_MntMeatProducts + -0.44570165516063 * S_MntSweetProducts +
-1.40872100231855 * S_MntWines + 1.40783708957732 * S_NumCatalogPurchases + 1.49155573260533 *
S_NumDealsPurchases + -1.76291210288234 * S_NumStorePurchases + -2.02392782824649 *
S_NumWebPurchases + 1.28490910676992 * S_NumWebVisitsMonth + -1.30767557862851 * S_Recency +
-0.59235237740193 * S_Teenhome ;
185709    +   H1x1_2  =    -0.44691945203456 * S_Income  +     0.39379891740392 *
185710    +        S_Kidhome  +     0.02372129308662 * S_MntFishProducts
185711    +          +     0.20627554813879 * S_MntFruits  +     0.34760356004051 *
185712    +        S_MntGoldProds  +    -0.95672595976635 * S_MntMeatProducts
185713    +          +     0.29239311560831 * S_MntSweetProducts
185714    +          +     1.16929881835698 * S_MntWines  +    -1.00380099933966 *
185715    +        S_NumCatalogPurchases  +     0.13934722329916 * S_NumDealsPurchases
185716    +          +     0.94246962588327 * S_NumStorePurchases
185717    +          +      0.9680353780544 * S_NumWebPurchases
185718    +          +    -2.21882487627334 * S_NumWebVisitsMonth
185719    +          +     2.11904606383155 * S_Recency  +      0.6539185986418 *
185720    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.44691945203456 * S_Income + 0.39379891740392 * S_Kidhome +
0.02372129308662 * S_MntFishProducts + 0.20627554813879 * S_MntFruits + 0.34760356004051 *
S_MntGoldProds + -0.95672595976635 * S_MntMeatProducts + 0.29239311560831 * S_MntSweetProducts
+ 1.16929881835698 * S_MntWines + -1.00380099933966 * S_NumCatalogPurchases + 0.13934722329916
* S_NumDealsPurchases + 0.94246962588327 * S_NumStorePurchases + 0.9680353780544 *
S_NumWebPurchases + -2.21882487627334 * S_NumWebVisitsMonth + 2.11904606383155 * S_Recency +
0.6539185986418 * S_Teenhome ;
185721    +   H1x1_1  = H1x1_1  +    -3.59113827146831 * AcceptedCmp10
185722    +          +    -0.49569953193794 * AcceptedCmp20  +    -0.52167719336095 *
185723    +        AcceptedCmp30  +    -0.86715095433046 * AcceptedCmp40
185724    +          +    -5.62926111624877 * AcceptedCmp50  +     0.11096869316425 *
185725    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -3.59113827146831 * AcceptedCmp10 + -0.49569953193794
* AcceptedCmp20 + -0.52167719336095 * AcceptedCmp30 + -0.86715095433046 * AcceptedCmp40 +
-5.62926111624877 * AcceptedCmp50 + 0.11096869316425 * Complain0 ;
185726    +   H1x1_2  = H1x1_2  +     0.46033758530017 * AcceptedCmp10
185727    +          +     0.35006796696269 * AcceptedCmp20  +     0.97811071409034 *
185728    +        AcceptedCmp30  +     0.99898386731466 * AcceptedCmp40
185729    +          +     1.09004749757455 * AcceptedCmp50  +    -0.37828411200383 *
185730    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.46033758530017 * AcceptedCmp10 + 0.35006796696269 *
AcceptedCmp20 + 0.97811071409034 * AcceptedCmp30 + 0.99898386731466 * AcceptedCmp40 +
1.09004749757455 * AcceptedCmp50 + -0.37828411200383 * Complain0 ;
185731    +   H1x1_1  = H1x1_1  +    -0.19002184370931 * Education2n_Cycle
185732    +          +      0.4572325462076 * EducationBasic  +     0.18712226653295 *
185733    +        EducationGraduation  +     0.44122744485667 * EducationMaster
185734    +          +    -0.37907342816265 * Marital_StatusDivorced
185735    +          +     0.12610640291685 * Marital_StatusMarried
185736    +          +     0.51984913420219 * Marital_StatusSingle
185737    +          +     0.07401117310472 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.19002184370931 * Education2n_Cycle +
0.4572325462076 * EducationBasic + 0.18712226653295 * EducationGraduation + 0.44122744485667 *
EducationMaster + -0.37907342816265 * Marital_StatusDivorced + 0.12610640291685 *
Marital_StatusMarried + 0.51984913420219 * Marital_StatusSingle + 0.07401117310472 *
Marital_StatusTogether ;
185738    +   H1x1_2  = H1x1_2  +    -0.33166298059049 * Education2n_Cycle
185739    +          +     1.29947160945083 * EducationBasic  +    -0.61327168479974 *
185740    +        EducationGraduation  +    -0.26642525612671 * EducationMaster
185741    +          +    -1.03351623479699 * Marital_StatusDivorced
185742    +          +     1.44541386522162 * Marital_StatusMarried
185743    +          +    -1.03636573521294 * Marital_StatusSingle
185744    +          +     1.72091885709893 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.33166298059049 * Education2n_Cycle +
1.29947160945083 * EducationBasic + -0.61327168479974 * EducationGraduation +
-0.26642525612671 * EducationMaster + -1.03351623479699 * Marital_StatusDivorced +
1.44541386522162 * Marital_StatusMarried + -1.03636573521294 * Marital_StatusSingle +
1.72091885709893 * Marital_StatusTogether ;
185745    +   H1x1_1  =     10.1449432133402 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 10.1449432133402 + H1x1_1 ;
185746    +   H1x1_2  =    -2.11517502439063 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.11517502439063 + H1x1_2 ;
185747    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
185748    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
185749    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
185750    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
185751    +END;
MPRINT(EM_DIAGRAM):   END;
185752    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185753    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
185754    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
185755    +END;
MPRINT(EM_DIAGRAM):   END;
185756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185757    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
185758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185759    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185760    +   H1x2_1  =     -0.8682144724836 * S_Income  +      2.3024809346762 *
185761    +        S_Kidhome  +     0.64624727466292 * S_MntFishProducts
185762    +          +    -0.09660410291886 * S_MntFruits  +    -1.79562837605117 *
185763    +        S_MntGoldProds  +      0.1276827318716 * S_MntMeatProducts
185764    +          +    -0.56491281055157 * S_MntSweetProducts
185765    +          +     0.93663442469929 * S_MntWines  +    -0.00899150883311 *
185766    +        S_NumCatalogPurchases  +    -1.22662917925595 * S_NumDealsPurchases
185767    +          +    -0.90340706582786 * S_NumStorePurchases
185768    +          +    -1.91501626179453 * S_NumWebPurchases
185769    +          +     0.10121028558369 * S_NumWebVisitsMonth
185770    +          +     1.60735726265156 * S_Recency  +     0.23538323190125 *
185771    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.8682144724836 * S_Income + 2.3024809346762 * S_Kidhome +
0.64624727466292 * S_MntFishProducts + -0.09660410291886 * S_MntFruits + -1.79562837605117 *
S_MntGoldProds + 0.1276827318716 * S_MntMeatProducts + -0.56491281055157 * S_MntSweetProducts
+ 0.93663442469929 * S_MntWines + -0.00899150883311 * S_NumCatalogPurchases +
-1.22662917925595 * S_NumDealsPurchases + -0.90340706582786 * S_NumStorePurchases +
-1.91501626179453 * S_NumWebPurchases + 0.10121028558369 * S_NumWebVisitsMonth +
1.60735726265156 * S_Recency + 0.23538323190125 * S_Teenhome ;
185772    +   H1x2_2  =    -1.09261687432274 * S_Income  +     1.20111535021385 *
185773    +        S_Kidhome  +    -1.69538442721283 * S_MntFishProducts
185774    +          +    -0.70987820940317 * S_MntFruits  +    -1.60645342742617 *
185775    +        S_MntGoldProds  +    -0.30176111780721 * S_MntMeatProducts
185776    +          +    -0.23001625322332 * S_MntSweetProducts
185777    +          +    -0.14467043598448 * S_MntWines  +     0.41886993157522 *
185778    +        S_NumCatalogPurchases  +     1.96896752447653 * S_NumDealsPurchases
185779    +          +    -2.13716920911877 * S_NumStorePurchases
185780    +          +    -0.33508808117738 * S_NumWebPurchases
185781    +          +     -2.0809737926136 * S_NumWebVisitsMonth
185782    +          +     1.03175786727839 * S_Recency  +      0.7367575698643 *
185783    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.09261687432274 * S_Income + 1.20111535021385 * S_Kidhome +
-1.69538442721283 * S_MntFishProducts + -0.70987820940317 * S_MntFruits + -1.60645342742617 *
S_MntGoldProds + -0.30176111780721 * S_MntMeatProducts + -0.23001625322332 *
S_MntSweetProducts + -0.14467043598448 * S_MntWines + 0.41886993157522 * S_NumCatalogPurchases
+ 1.96896752447653 * S_NumDealsPurchases + -2.13716920911877 * S_NumStorePurchases +
-0.33508808117738 * S_NumWebPurchases + -2.0809737926136 * S_NumWebVisitsMonth +
1.03175786727839 * S_Recency + 0.7367575698643 * S_Teenhome ;
185784    +   H1x2_1  = H1x2_1  +     1.58943051578323 * AcceptedCmp10
185785    +          +     0.09118005069971 * AcceptedCmp20  +     1.19759908387569 *
185786    +        AcceptedCmp30  +     0.89598378494479 * AcceptedCmp40
185787    +          +     0.46816867379718 * AcceptedCmp50  +     1.86944333764097 *
185788    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.58943051578323 * AcceptedCmp10 + 0.09118005069971 *
AcceptedCmp20 + 1.19759908387569 * AcceptedCmp30 + 0.89598378494479 * AcceptedCmp40 +
0.46816867379718 * AcceptedCmp50 + 1.86944333764097 * Complain0 ;
185789    +   H1x2_2  = H1x2_2  +    -0.08862601564048 * AcceptedCmp10
185790    +          +    -3.30636530499001 * AcceptedCmp20  +     0.15596560905391 *
185791    +        AcceptedCmp30  +     0.09538395772421 * AcceptedCmp40
185792    +          +     0.55380047577072 * AcceptedCmp50  +    -1.45096025939708 *
185793    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.08862601564048 * AcceptedCmp10 + -3.30636530499001
* AcceptedCmp20 + 0.15596560905391 * AcceptedCmp30 + 0.09538395772421 * AcceptedCmp40 +
0.55380047577072 * AcceptedCmp50 + -1.45096025939708 * Complain0 ;
185794    +   H1x2_1  = H1x2_1  +     -0.8656532372301 * Education2n_Cycle
185795    +          +     1.21189313523907 * EducationBasic  +     1.51417472534213 *
185796    +        EducationGraduation  +     0.48964474451872 * EducationMaster
185797    +          +     1.22462877499103 * Marital_StatusDivorced
185798    +          +     0.55976057621985 * Marital_StatusMarried
185799    +          +     -0.3198252517086 * Marital_StatusSingle
185800    +          +     0.23778601487144 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.8656532372301 * Education2n_Cycle +
1.21189313523907 * EducationBasic + 1.51417472534213 * EducationGraduation + 0.48964474451872
* EducationMaster + 1.22462877499103 * Marital_StatusDivorced + 0.55976057621985 *
Marital_StatusMarried + -0.3198252517086 * Marital_StatusSingle + 0.23778601487144 *
Marital_StatusTogether ;
185801    +   H1x2_2  = H1x2_2  +     0.58231562363597 * Education2n_Cycle
185802    +          +    -0.76544661145643 * EducationBasic  +     -0.6650405134602 *
185803    +        EducationGraduation  +    -1.59533016160829 * EducationMaster
185804    +          +     0.32730811728353 * Marital_StatusDivorced
185805    +          +     1.61519773132998 * Marital_StatusMarried
185806    +          +    -1.42728303824254 * Marital_StatusSingle
185807    +          +     1.39334432128351 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58231562363597 * Education2n_Cycle +
-0.76544661145643 * EducationBasic + -0.6650405134602 * EducationGraduation +
-1.59533016160829 * EducationMaster + 0.32730811728353 * Marital_StatusDivorced +
1.61519773132998 * Marital_StatusMarried + -1.42728303824254 * Marital_StatusSingle +
1.39334432128351 * Marital_StatusTogether ;
185808    +   H1x2_1  =     1.49479859857755 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.49479859857755 + H1x2_1 ;
185809    +   H1x2_2  =     -0.6918737847278 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.6918737847278 + H1x2_2 ;
185810    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
185811    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
185812    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
185813    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
185814    +END;
MPRINT(EM_DIAGRAM):   END;
185815    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185816    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
185817    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
185818    +END;
MPRINT(EM_DIAGRAM):   END;
185819    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185820    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
185821    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185822    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185823    +   H2x1_1  =     1.67705445310922 * H1x1_1  +     -1.4133773927734 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.67705445310922 * H1x1_1 + -1.4133773927734 * H1x1_2 ;
185824    +   H2x1_2  =    -2.14069220527729 * H1x1_1  +     2.80569007785887 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.14069220527729 * H1x1_1 + 2.80569007785887 * H1x1_2 ;
185825    +   H2x1_1  = H2x1_1  +    -0.57216138417153 * H1x2_1
185826    +          +     1.42286315059473 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.57216138417153 * H1x2_1 + 1.42286315059473 * H1x2_2
;
185827    +   H2x1_2  = H2x1_2  +     1.62250993087733 * H1x2_1
185828    +          +     0.34104856545583 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.62250993087733 * H1x2_1 + 0.34104856545583 * H1x2_2 ;
185829    +   H2x1_1  =    -3.48786428904302 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.48786428904302 + H2x1_1 ;
185830    +   H2x1_2  =    -0.43119827941199 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.43119827941199 + H2x1_2 ;
185831    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
185832    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
185833    +END;
MPRINT(EM_DIAGRAM):   END;
185834    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185835    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
185836    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
185837    +END;
MPRINT(EM_DIAGRAM):   END;
185838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185839    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
185840    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185841    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
185842    +   P_DepVar1  =    -9.14009115080293 * H2x1_1  +    -5.28591504747655 * H2x1_2
185843    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.14009115080293 * H2x1_1 + -5.28591504747655 * H2x1_2 ;
185844    +   P_DepVar1  =    -3.08988807073218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08988807073218 + P_DepVar1 ;
185845    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
185846    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
185847    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
185848    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
185849    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
185850    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
185851    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
185852    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
185853    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
185854    +END;
MPRINT(EM_DIAGRAM):   END;
185855    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
185856    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
185857    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
185858    +END;
MPRINT(EM_DIAGRAM):   END;
185859    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
185860    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
185861    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
185862    +END;
MPRINT(EM_DIAGRAM):   END;
185863    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185864    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
185865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
185866    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
185867    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
185868    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
185869    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
185870    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
185871    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
185872    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
185873    +END;
MPRINT(EM_DIAGRAM):   END;
185874    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
185875    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
185876    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
185877    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
185878     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
185879     quit;
185880     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
185881     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
185882     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
185883     retain ID 2 Node "AutoNeural45";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural45";
185884     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
185885     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2098 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2098 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185886     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
185887     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185888     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2098 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2098 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185889     proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural45_variableset out=_temp2(keep=NAME
CREATOR);
185890     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185891     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL45_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185892     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
185893     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
185894     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
185895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185896     proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural45_train out=_meta(keep=NAME) noprint;
185897     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185898     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
185899     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185900     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
185901     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
185902     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
185903     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185904     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185905     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
185906     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
185906   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1081 rows and 5 columns.
 
185907     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185908     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
185909     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1081 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1081 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185910     filename _pref
185910   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
185911     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
185912     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
185913    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
185914    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
185915    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
185916    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
185917    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
185918    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
185919     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
185920     quit;
185921     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
185922     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
185923     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
185924     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
185925     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
185926     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185927     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
185928     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185929     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185930     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
185931     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185932     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185933     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
185934     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
185935     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
185936     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185937     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
185938     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185939     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
185940     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185941     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185942     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
185943     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
185944     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185945     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185946     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
185947     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
185947   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
185948     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185949     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
185950     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1085 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185951     filename _pref
185951   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
185952     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
185953     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
185954    +
185955    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
185956    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
185956   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
185957    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
185958    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
185959    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
185960    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
185961    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
185962     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
185963     quit;
185964     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
185965     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
185966     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
185967     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
185968     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
185969     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
185970     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
185971     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185972     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185973     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
185974     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185975     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185976     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
185977     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
185978     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
185979     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185980     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
185981     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185982     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
185983     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185984     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185985     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
185986     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
185987     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
185988     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185989     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
185990     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
185990   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
185991     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
185992     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
185993     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1124 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
185994     filename _pref
185994   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
185995     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
185996     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
185997    +
185998    +
185999    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
186000    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
186001    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
186002    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
186003    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
186004    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
186005    +
186006    +
186007    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
186008    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
186009    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
186010    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
186011    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
186012    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
186013    +
186014    +
186015    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
186016    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
186017    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
186018    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
186019    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
186020    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
186021    +
186022    +
186023    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
186024    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
186025    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
186026    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
186027    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
186028    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
186029    +
186030    +
186031    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
186032    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
186033    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
186034    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
186035    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
186036    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
186037    +
186038    +
186039    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
186040    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
186041    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
186042    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
186043    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
186044    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
186045    +
186046    +
186047    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
186048    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
186049    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
186050    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
186051    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
186052    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
186053    +
186054    +
186055    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
186056    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
186057    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
186058    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
186059    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
186060    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
186061    +if
186062    +_FILTERNORM1 not in ( '.')
186063    + and
186064    +_FILTERNORM2 not in ( '.')
186065    + and
186066    +_FILTERNORM3 not in ( '.')
186067    + and
186068    +_FILTERNORM4 not in ( '.')
186069    + and
186070    +_FILTERNORM5 not in ( '.')
186071    + and
186072    +_FILTERNORM6 not in ( '.')
186073    + and
186074    +_FILTERNORM7 not in ( ' ')
186075    + and
186076    +_FILTERNORM8 not in ( ' ')
186077    +and
186078    +( Dt_Customer ne .)
186079    +and ( Income ne . and (Income<=107000))
186080    +and ( Kidhome ne .)
186081    +and ( MntFishProducts ne .)
186082    +and ( MntFruits ne .)
186083    +and ( MntGoldProds ne .)
186084    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
186085    +and ( MntSweetProducts ne .)
186086    +and ( MntWines ne .)
186087    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
186088    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
186089    +and ( NumStorePurchases ne .)
186090    +and ( NumWebPurchases ne .)
186091    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
186092    +and ( Recency ne .)
186093    +and ( Teenhome ne .)
186094    +and ( Year_Birth ne .)
186095    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
186096    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
186097    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
186098    +end;
MPRINT(EM_DIAGRAM):   end;
186099    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
186100    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
186101     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
186102     quit;
186103     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
186104     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
186105     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
186106     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
186107     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
186108     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186109     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
186110     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186111     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186112     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
186113     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186114     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186115     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
186116     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
186117     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
186118     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186119     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
186120     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
186121     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
186122     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186123     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186124     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
186125     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
186126     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186127     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186128     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
186129     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
186129   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
186130     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186131     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
186132     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1190 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186133     %macro varDept(fcmpdata=,id=);
186134     %global nobs&id scoreFlag&id;
186135     %let scoreFlag&id = 0;
186136     %if &id=1 or ^&fcmpStart %then %do;
186137     proc sort data=&fcmpdata out=_temp&id nodupkey;
186138     by NAME;
186139     where id=&id and LHS in( %let j=1;
186140     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
186141     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
186142     "&var" %let j = %eval(&j+1);
186143     %end;
186144     );
186145     run;
186146     %let dsid = %sysfunc(open(_temp&id));
186147     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
186148     %let dsid = %sysfunc(close(&dsid));
186149     %if &&nobs&id %then %do;
186150     %let scoreFlag&id = 1;
186151     %let fcmpStart = 1;
186152     %end;
186153     %else %let fcmpStart = 0;
186154     %end;
186155     %else %do;
186156     proc sort data=&fcmpdata out=_tempid;
186157     where id=&id;
186158     by LHS;
186159     run;
186160     %let dsid = %sysfunc(open(_tempid));
186161     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
186162     %let dsid = %sysfunc(close(&dsid));
186163     %if ^&&nobs&id %then %do;
186164     proc datasets lib=work nolist;
186165     delete _tempid;
186166     run;
186167     quit;
186168     %end;
186169     %else %do;
186170     data _tempAll;
186171     set %let j=%eval(&id-1);
186172     %do x=1 %to &j;
186173     %if &&nobs&x %then %do;
186174     _temp&x %end;
186175     %end;
186176     ;
186177     run;
186178     proc sql;
186179     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
186179   ! work._tempid p2 where p.name=p2.lhs;
186180     quit;
186181     data _temp&id;
186182     set _temp&id;
186183     where LHS ne '' and NAME ne '' and Node ne '';
186184     run;
186185     proc datasets lib=work nolist;
186186     delete _tempAll;
186187     run;
186188     %let dsid = %sysfunc(open(_temp&id));
186189     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
186190     %let dsid = %sysfunc(close(&dsid));
186191     %if ^&&nobs&id %then %do;
186192     proc datasets lib=work nolist;
186193     delete _temp&id;
186194     run;
186195     quit;
186196     %end;
186197     %else %do;
186198     %let scoreFlag&id = 1;
186199     data _temp&id;
186200     set _temp&id;
186201     where LHS ne NAME and node ne '';
186202     run;
186203     %let dsid = %sysfunc(open(_temp&id));
186204     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
186205     %let dsid = %sysfunc(close(&dsid));
186206     %if ^&&nobs&id %then %do;
186207     proc datasets lib=work nolist;
186208     delete _temp&id;
186209     run;
186210     quit;
186211     %end;
186212     %else %do;
186213     proc sort data=_temp&id nodupkey;
186214     by LHS NAME;
186215     run;
186216     %end;
186217     %end;
186218     %end;
186219     %end;
186220     %mend varDept;
186221     %macro optCode(outdata=fcmpdata);
186222     %global fcmpStart;
186223     %let fcmpStart = 0;
186224     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
186225     %let NumNodes=9;
186226     %do k=1 %to &NumNodes;
186227     %vardept(fcmpdata=&outdata, id=&k);
186228     %end;
186229     %mend optCode;
186230     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
186231     filename _pref
186231   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas";
186232     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
186233     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural44\EMPUBLISHSCORE.sas.
186234    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
186235    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
186236    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
186237    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
186238    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
186239    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
186240    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
186241    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
186242    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
186243    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
186244    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
186245    +LENGTH _WARN_ $4
186246    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
186247    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
186248    +
186249    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
186250    +
186251    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
186252    +
186253    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
186254    +
186255    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
186256    +
186257    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
186258    +
186259    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
186260    +
186261    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
186262    +
186263    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
186264    +
186265    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
186266    +
186267    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
186268    +
186269    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
186270    +
186271    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
186272    +
186273    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
186274    +
186275    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
186276    +
186277    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
186278    +
186279    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
186280    +
186281    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
186282    +
186283    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
186284    +
186285    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
186286    +
186287    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
186288    +
186289    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
186290    +
186291    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
186292    +
186293    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
186294    +
186295    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
186296    +
186297    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
186298    +
186299    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
186300    +
186301    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
186302    +
186303    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
186304    +
186305    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
186306    +
186307    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
186308    +
186309    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
186310    +
186311    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
186312    +
186313    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
186314    +
186315    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
186316    +
186317    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
186318    +
186319    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
186320    +
186321    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
186322    +
186323    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
186324    +
186325    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
186326    +
186327    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
186328    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
186329    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
186330    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
186331    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186332    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186333    +end;
MPRINT(EM_DIAGRAM):   end;
186334    +else do;
MPRINT(EM_DIAGRAM):   else do;
186335    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186336    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
186337    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186338    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186339    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
186340    +   end;
MPRINT(EM_DIAGRAM):   end;
186341    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186342    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
186343    +   end;
MPRINT(EM_DIAGRAM):   end;
186344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186345    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
186346    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186347    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186348    +   end;
MPRINT(EM_DIAGRAM):   end;
186349    +end;
MPRINT(EM_DIAGRAM):   end;
186350    +
186351    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
186352    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
186353    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
186354    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
186355    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186356    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186357    +end;
MPRINT(EM_DIAGRAM):   end;
186358    +else do;
MPRINT(EM_DIAGRAM):   else do;
186359    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186360    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
186361    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186362    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186363    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
186364    +   end;
MPRINT(EM_DIAGRAM):   end;
186365    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186366    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
186367    +   end;
MPRINT(EM_DIAGRAM):   end;
186368    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186369    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
186370    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186371    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186372    +   end;
MPRINT(EM_DIAGRAM):   end;
186373    +end;
MPRINT(EM_DIAGRAM):   end;
186374    +
186375    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
186376    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
186377    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
186378    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
186379    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186380    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186381    +end;
MPRINT(EM_DIAGRAM):   end;
186382    +else do;
MPRINT(EM_DIAGRAM):   else do;
186383    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186384    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
186385    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186386    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186387    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
186388    +   end;
MPRINT(EM_DIAGRAM):   end;
186389    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186390    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
186391    +   end;
MPRINT(EM_DIAGRAM):   end;
186392    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186393    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
186394    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186395    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186396    +   end;
MPRINT(EM_DIAGRAM):   end;
186397    +end;
MPRINT(EM_DIAGRAM):   end;
186398    +
186399    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
186400    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
186401    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
186402    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
186403    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186404    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186405    +end;
MPRINT(EM_DIAGRAM):   end;
186406    +else do;
MPRINT(EM_DIAGRAM):   else do;
186407    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186408    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
186409    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186410    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186411    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
186412    +   end;
MPRINT(EM_DIAGRAM):   end;
186413    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186414    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
186415    +   end;
MPRINT(EM_DIAGRAM):   end;
186416    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186417    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
186418    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186419    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186420    +   end;
MPRINT(EM_DIAGRAM):   end;
186421    +end;
MPRINT(EM_DIAGRAM):   end;
186422    +
186423    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
186424    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
186425    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
186426    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
186427    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186428    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186429    +end;
MPRINT(EM_DIAGRAM):   end;
186430    +else do;
MPRINT(EM_DIAGRAM):   else do;
186431    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186432    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
186433    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186434    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186435    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
186436    +   end;
MPRINT(EM_DIAGRAM):   end;
186437    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186438    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
186439    +   end;
MPRINT(EM_DIAGRAM):   end;
186440    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186441    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
186442    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186443    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186444    +   end;
MPRINT(EM_DIAGRAM):   end;
186445    +end;
MPRINT(EM_DIAGRAM):   end;
186446    +
186447    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
186448    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
186449    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
186450    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
186451    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186452    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186453    +end;
MPRINT(EM_DIAGRAM):   end;
186454    +else do;
MPRINT(EM_DIAGRAM):   else do;
186455    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
186456    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
186457    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186458    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
186459    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
186460    +   end;
MPRINT(EM_DIAGRAM):   end;
186461    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
186462    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
186463    +   end;
MPRINT(EM_DIAGRAM):   end;
186464    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186465    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
186466    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186467    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186468    +   end;
MPRINT(EM_DIAGRAM):   end;
186469    +end;
MPRINT(EM_DIAGRAM):   end;
186470    +
186471    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
186472    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
186473    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
186474    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
186475    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
186476    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
186477    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
186478    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
186479    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
186480    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
186481    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
186482    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
186483    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186484    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186485    +end;
MPRINT(EM_DIAGRAM):   end;
186486    +else do;
MPRINT(EM_DIAGRAM):   else do;
186487    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
186488    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
186489    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186490    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
186491    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
186492    +   end;
MPRINT(EM_DIAGRAM):   end;
186493    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
186494    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
186495    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
186496    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
186497    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
186498    +   end;
MPRINT(EM_DIAGRAM):   end;
186499    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
186500    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
186501    +   end;
MPRINT(EM_DIAGRAM):   end;
186502    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
186503    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
186504    +   end;
MPRINT(EM_DIAGRAM):   end;
186505    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
186506    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
186507    +   end;
MPRINT(EM_DIAGRAM):   end;
186508    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186509    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
186510    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
186511    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
186512    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
186513    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186514    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186515    +   end;
MPRINT(EM_DIAGRAM):   end;
186516    +end;
MPRINT(EM_DIAGRAM):   end;
186517    +
186518    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
186519    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
186520    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
186521    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
186522    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
186523    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
186524    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
186525    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
186526    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
186527    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
186528    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
186529    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
186530    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
186531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
186532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186533    +end;
MPRINT(EM_DIAGRAM):   end;
186534    +else do;
MPRINT(EM_DIAGRAM):   else do;
186535    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
186536    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
186537    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
186538    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
186539    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
186540    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
186541    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
186542    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
186543    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186544    +         end;
MPRINT(EM_DIAGRAM):   end;
186545    +         else do;
MPRINT(EM_DIAGRAM):   else do;
186546    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
186547    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
186548    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186549    +            end;
MPRINT(EM_DIAGRAM):   end;
186550    +         end;
MPRINT(EM_DIAGRAM):   end;
186551    +      end;
MPRINT(EM_DIAGRAM):   end;
186552    +      else do;
MPRINT(EM_DIAGRAM):   else do;
186553    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
186554    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
186555    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186556    +         end;
MPRINT(EM_DIAGRAM):   end;
186557    +      end;
MPRINT(EM_DIAGRAM):   end;
186558    +   end;
MPRINT(EM_DIAGRAM):   end;
186559    +   else do;
MPRINT(EM_DIAGRAM):   else do;
186560    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
186561    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
186562    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186563    +      end;
MPRINT(EM_DIAGRAM):   end;
186564    +      else do;
MPRINT(EM_DIAGRAM):   else do;
186565    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
186566    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
186567    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
186568    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
186569    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
186570    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
186571    +         end;
MPRINT(EM_DIAGRAM):   end;
186572    +      end;
MPRINT(EM_DIAGRAM):   end;
186573    +   end;
MPRINT(EM_DIAGRAM):   end;
186574    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
186575    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
186576    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
186577    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
186578    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
186579    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
186580    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186581    +   end;
MPRINT(EM_DIAGRAM):   end;
186582    +end;
MPRINT(EM_DIAGRAM):   end;
186583    +
186584    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186585    +*** Checking missing input Interval
186586    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
186587    +
186588    +IF NMISS(
186589    +   Income ,
186590    +   Kidhome ,
186591    +   MntFishProducts ,
186592    +   MntFruits ,
186593    +   MntGoldProds ,
186594    +   MntMeatProducts ,
186595    +   MntSweetProducts ,
186596    +   MntWines ,
186597    +   NumCatalogPurchases ,
186598    +   NumDealsPurchases ,
186599    +   NumStorePurchases ,
186600    +   NumWebPurchases ,
186601    +   NumWebVisitsMonth ,
186602    +   Recency ,
186603    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
186604    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
186605    +
186606    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
186607    +END;
MPRINT(EM_DIAGRAM):   END;
186608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186609    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
186610    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186611    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186612    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
186613    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
186614    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
186615    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
186616    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
186617    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
186618    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
186619    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
186620    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
186621    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
186622    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
186623    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
186624    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
186625    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
186626    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
186627    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
186628    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
186629    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
186630    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
186631    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
186632    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
186633    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
186634    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
186635    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
186636    +END;
MPRINT(EM_DIAGRAM):   END;
186637    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186638    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
186639    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
186640    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
186641    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
186642    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
186643    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
186644    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
186645    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
186646    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
186647    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
186648    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
186649    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
186650    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
186651    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
186652    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
186653    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
186654    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
186655    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
186656    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
186657    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
186658    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
186659    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
186660    +   ELSE S_NumCatalogPurchases
186661    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
186662    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
186663    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
186664    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
186665    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
186666    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
186667    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
186668    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
186669    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
186670    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
186671    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
186672    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
186673    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
186674    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
186675    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
186676    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
186677    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
186678    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
186679    +END;
MPRINT(EM_DIAGRAM):   END;
186680    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186681    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
186682    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186683    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186684    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
186685    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186687    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
186688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186689    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186690    +   H1x1_1  =     0.60821559277699 * S_Income  +     0.78245878520575 *
186691    +        S_Kidhome  +     3.02629225919456 * S_MntFishProducts
186692    +          +     1.44208452883494 * S_MntFruits  +     -0.8161710906244 *
186693    +        S_MntGoldProds  +    -5.65479728306763 * S_MntMeatProducts
186694    +          +     2.41993296129914 * S_MntSweetProducts
186695    +          +     16.1416936305202 * S_MntWines  +    -0.30170648366369 *
186696    +        S_NumCatalogPurchases  +    -4.40539425596446 * S_NumDealsPurchases
186697    +          +     7.59231492380468 * S_NumStorePurchases
186698    +          +    -0.47095655313121 * S_NumWebPurchases
186699    +          +     2.65669932372712 * S_NumWebVisitsMonth
186700    +          +     0.92605434462951 * S_Recency  +     0.27595278529362 *
186701    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.60821559277699 * S_Income + 0.78245878520575 * S_Kidhome +
3.02629225919456 * S_MntFishProducts + 1.44208452883494 * S_MntFruits + -0.8161710906244 *
S_MntGoldProds + -5.65479728306763 * S_MntMeatProducts + 2.41993296129914 * S_MntSweetProducts
+ 16.1416936305202 * S_MntWines + -0.30170648366369 * S_NumCatalogPurchases +
-4.40539425596446 * S_NumDealsPurchases + 7.59231492380468 * S_NumStorePurchases +
-0.47095655313121 * S_NumWebPurchases + 2.65669932372712 * S_NumWebVisitsMonth +
0.92605434462951 * S_Recency + 0.27595278529362 * S_Teenhome ;
186702    +   H1x1_1  = H1x1_1  +     2.22617132301519 * AcceptedCmp10
186703    +          +     2.97389891933054 * AcceptedCmp20  +    -0.25852677589668 *
186704    +        AcceptedCmp30  +     0.29740935303964 * AcceptedCmp40
186705    +          +     6.80320564322924 * AcceptedCmp50  +     2.19745012825493 *
186706    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.22617132301519 * AcceptedCmp10 + 2.97389891933054 *
AcceptedCmp20 + -0.25852677589668 * AcceptedCmp30 + 0.29740935303964 * AcceptedCmp40 +
6.80320564322924 * AcceptedCmp50 + 2.19745012825493 * Complain0 ;
186707    +   H1x1_1  = H1x1_1  +     2.55205464559227 * Education2n_Cycle
186708    +          +    -0.98577713200024 * EducationBasic  +     1.74619403557996 *
186709    +        EducationGraduation  +    -3.89600865490994 * EducationMaster
186710    +          +     0.44728218776544 * Marital_StatusDivorced
186711    +          +    -1.62458831276183 * Marital_StatusMarried
186712    +          +    -0.42858616367237 * Marital_StatusSingle
186713    +          +    -0.29553796445711 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.55205464559227 * Education2n_Cycle +
-0.98577713200024 * EducationBasic + 1.74619403557996 * EducationGraduation +
-3.89600865490994 * EducationMaster + 0.44728218776544 * Marital_StatusDivorced +
-1.62458831276183 * Marital_StatusMarried + -0.42858616367237 * Marital_StatusSingle +
-0.29553796445711 * Marital_StatusTogether ;
186714    +   H1x1_1  =     3.59078196202385 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.59078196202385 + H1x1_1 ;
186715    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
186716    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
186717    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
186718    +END;
MPRINT(EM_DIAGRAM):   END;
186719    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186720    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
186721    +END;
MPRINT(EM_DIAGRAM):   END;
186722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186723    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
186724    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186725    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186726    +   H1x2_1  =    -0.99188645731967 * S_Income  +    -0.76771098590807 *
186727    +        S_Kidhome  +      0.8287505285538 * S_MntFishProducts
186728    +          +     0.45999682434351 * S_MntFruits  +      0.4293543408639 *
186729    +        S_MntGoldProds  +    -9.07723801877759 * S_MntMeatProducts
186730    +          +    -1.37098390846164 * S_MntSweetProducts
186731    +          +    -0.51776810310879 * S_MntWines  +    -1.37476010659628 *
186732    +        S_NumCatalogPurchases  +    -1.10451572937532 * S_NumDealsPurchases
186733    +          +     0.58246769316602 * S_NumStorePurchases
186734    +          +     2.72780243156581 * S_NumWebPurchases
186735    +          +    -1.73896446530763 * S_NumWebVisitsMonth
186736    +          +      0.7638963348072 * S_Recency  +     0.26979377997458 *
186737    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.99188645731967 * S_Income + -0.76771098590807 * S_Kidhome +
0.8287505285538 * S_MntFishProducts + 0.45999682434351 * S_MntFruits + 0.4293543408639 *
S_MntGoldProds + -9.07723801877759 * S_MntMeatProducts + -1.37098390846164 *
S_MntSweetProducts + -0.51776810310879 * S_MntWines + -1.37476010659628 *
S_NumCatalogPurchases + -1.10451572937532 * S_NumDealsPurchases + 0.58246769316602 *
S_NumStorePurchases + 2.72780243156581 * S_NumWebPurchases + -1.73896446530763 *
S_NumWebVisitsMonth + 0.7638963348072 * S_Recency + 0.26979377997458 * S_Teenhome ;
186738    +   H1x2_1  = H1x2_1  +     2.43014219686416 * AcceptedCmp10
186739    +          +    -4.74345515374868 * AcceptedCmp20  +     0.62579233621413 *
186740    +        AcceptedCmp30  +     0.64637471234006 * AcceptedCmp40
186741    +          +     1.70767935570268 * AcceptedCmp50  +    -0.94631514600478 *
186742    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 2.43014219686416 * AcceptedCmp10 + -4.74345515374868 *
AcceptedCmp20 + 0.62579233621413 * AcceptedCmp30 + 0.64637471234006 * AcceptedCmp40 +
1.70767935570268 * AcceptedCmp50 + -0.94631514600478 * Complain0 ;
186743    +   H1x2_1  = H1x2_1  +    -0.98761508407831 * Education2n_Cycle
186744    +          +     0.88643388278508 * EducationBasic  +    -0.83878459420096 *
186745    +        EducationGraduation  +     1.01072132252596 * EducationMaster
186746    +          +     0.08221095774854 * Marital_StatusDivorced
186747    +          +    -0.13062113450086 * Marital_StatusMarried
186748    +          +      0.1912119500185 * Marital_StatusSingle
186749    +          +     -0.3728209764276 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.98761508407831 * Education2n_Cycle +
0.88643388278508 * EducationBasic + -0.83878459420096 * EducationGraduation + 1.01072132252596
* EducationMaster + 0.08221095774854 * Marital_StatusDivorced + -0.13062113450086 *
Marital_StatusMarried + 0.1912119500185 * Marital_StatusSingle + -0.3728209764276 *
Marital_StatusTogether ;
186750    +   H1x2_1  =    -3.03275566330542 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -3.03275566330542 + H1x2_1 ;
186751    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
186752    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
186753    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
186754    +END;
MPRINT(EM_DIAGRAM):   END;
186755    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186756    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
186757    +END;
MPRINT(EM_DIAGRAM):   END;
186758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186759    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
186760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186761    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186762    +   H1x3_1  =    -1.55963738420881 * S_Income  +     0.71964926339388 *
186763    +        S_Kidhome  +    -0.47208108972067 * S_MntFishProducts
186764    +          +      0.6450894987393 * S_MntFruits  +     0.06261669147127 *
186765    +        S_MntGoldProds  +     0.14975522509881 * S_MntMeatProducts
186766    +          +     -0.4771357321143 * S_MntSweetProducts
186767    +          +     0.66709116843422 * S_MntWines  +     0.90111404700817 *
186768    +        S_NumCatalogPurchases  +     0.17723895187345 * S_NumDealsPurchases
186769    +          +     0.38755002642582 * S_NumStorePurchases
186770    +          +     0.65178643881164 * S_NumWebPurchases
186771    +          +    -0.83170832622452 * S_NumWebVisitsMonth
186772    +          +     2.65115346957983 * S_Recency  +     1.27228948382376 *
186773    +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.55963738420881 * S_Income + 0.71964926339388 * S_Kidhome +
-0.47208108972067 * S_MntFishProducts + 0.6450894987393 * S_MntFruits + 0.06261669147127 *
S_MntGoldProds + 0.14975522509881 * S_MntMeatProducts + -0.4771357321143 * S_MntSweetProducts
+ 0.66709116843422 * S_MntWines + 0.90111404700817 * S_NumCatalogPurchases + 0.17723895187345
* S_NumDealsPurchases + 0.38755002642582 * S_NumStorePurchases + 0.65178643881164 *
S_NumWebPurchases + -0.83170832622452 * S_NumWebVisitsMonth + 2.65115346957983 * S_Recency +
1.27228948382376 * S_Teenhome ;
186774    +   H1x3_1  = H1x3_1  +     0.29816272417051 * AcceptedCmp10
186775    +          +    -0.71154376870988 * AcceptedCmp20  +    -0.39513051704909 *
186776    +        AcceptedCmp30  +     1.19068615672558 * AcceptedCmp40
186777    +          +     -1.9640044684445 * AcceptedCmp50  +    -0.09395110959453 *
186778    +        Complain0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.29816272417051 * AcceptedCmp10 + -0.71154376870988 *
AcceptedCmp20 + -0.39513051704909 * AcceptedCmp30 + 1.19068615672558 * AcceptedCmp40 +
-1.9640044684445 * AcceptedCmp50 + -0.09395110959453 * Complain0 ;
186779    +   H1x3_1  = H1x3_1  +    -0.43809514270646 * Education2n_Cycle
186780    +          +     0.27926697891252 * EducationBasic  +     1.12178568429269 *
186781    +        EducationGraduation  +      0.9696976240987 * EducationMaster
186782    +          +    -0.13574340372484 * Marital_StatusDivorced
186783    +          +     1.26001446384238 * Marital_StatusMarried
186784    +          +    -0.16294618258246 * Marital_StatusSingle
186785    +          +    -0.31789534786196 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.43809514270646 * Education2n_Cycle +
0.27926697891252 * EducationBasic + 1.12178568429269 * EducationGraduation + 0.9696976240987 *
EducationMaster + -0.13574340372484 * Marital_StatusDivorced + 1.26001446384238 *
Marital_StatusMarried + -0.16294618258246 * Marital_StatusSingle + -0.31789534786196 *
Marital_StatusTogether ;
186786    +   H1x3_1  =     0.67537485509128 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.67537485509128 + H1x3_1 ;
186787    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
186788    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
186789    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
186790    +END;
MPRINT(EM_DIAGRAM):   END;
186791    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186792    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
186793    +END;
MPRINT(EM_DIAGRAM):   END;
186794    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186795    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
186796    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186797    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186798    +   H2x1_1  =     1.66176856703373 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.66176856703373 * H1x1_1 ;
186799    +   H2x1_1  = H2x1_1  +     2.22197952592224 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.22197952592224 * H1x2_1 ;
186800    +   H2x1_1  = H2x1_1  +     1.05148827727504 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.05148827727504 * H1x3_1 ;
186801    +   H2x1_1  =    -1.97152028826028 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.97152028826028 + H2x1_1 ;
186802    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
186803    +END;
MPRINT(EM_DIAGRAM):   END;
186804    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186805    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
186806    +END;
MPRINT(EM_DIAGRAM):   END;
186807    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186808    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
186809    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186810    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186811    +   H2x2_1  =     0.45033423451322 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.45033423451322 * H1x1_1 ;
186812    +   H2x2_1  = H2x2_1  +     2.46855103154551 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.46855103154551 * H1x2_1 ;
186813    +   H2x2_1  = H2x2_1  +    -0.77837055555012 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.77837055555012 * H1x3_1 ;
186814    +   H2x2_1  =     -0.9821313826813 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.9821313826813 + H2x2_1 ;
186815    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
186816    +END;
MPRINT(EM_DIAGRAM):   END;
186817    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186818    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
186819    +END;
MPRINT(EM_DIAGRAM):   END;
186820    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186821    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
186822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186823    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186824    +   H3x1_1  =    -4.89394761736069 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -4.89394761736069 * H2x1_1 ;
186825    +   H3x1_1  = H3x1_1  +    -3.02496799626931 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -3.02496799626931 * H2x2_1 ;
186826    +   H3x1_1  =    -2.03654026915424 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -2.03654026915424 + H3x1_1 ;
186827    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
186828    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
186829    +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
186830    +END;
MPRINT(EM_DIAGRAM):   END;
186831    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186832    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
186833    +END;
MPRINT(EM_DIAGRAM):   END;
186834    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186835    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
186836    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186837    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
186838    +   P_DepVar1  =      11.443408553765 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 11.443408553765 * H3x1_1 ;
186839    +   P_DepVar1  =     0.39570054021751 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.39570054021751 + P_DepVar1 ;
186840    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
186841    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
186842    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
186843    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
186844    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
186845    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
186846    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
186847    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
186848    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
186849    +END;
MPRINT(EM_DIAGRAM):   END;
186850    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
186851    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
186852    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
186853    +END;
MPRINT(EM_DIAGRAM):   END;
186854    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
186855    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
186856    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
186857    +END;
MPRINT(EM_DIAGRAM):   END;
186858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186859    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
186860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
186861    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
186862    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
186863    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
186864    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
186865    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
186866    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
186867    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
186868    +END;
MPRINT(EM_DIAGRAM):   END;
186869    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
186870    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
186871    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
186872    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
186873     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
186874     quit;
186875     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
186876     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
186877     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
186878     retain ID 2 Node "AutoNeural44";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural44";
186879     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
186880     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186881     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
186882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186883     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186884     proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural44_variableset out=_temp2(keep=NAME
CREATOR);
186885     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186886     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL44_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
186887     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
186888     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
186889     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
186890     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186891     proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural44_train out=_meta(keep=NAME) noprint;
186892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186893     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
186894     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186896     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
186897     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
186898     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186899     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186900     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
186901     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
186901   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.
 
186902     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186903     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
186904     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186905     filename _pref
186905   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
186906     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
186907     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
186908    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
186909    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
186910    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
186911    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
186912    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
186913    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
186914     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
186915     quit;
186916     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
186917     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
186918     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
186919     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
186920     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
186921     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186922     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
186923     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186924     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186925     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
186926     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186927     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186928     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
186929     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
186930     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
186931     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186932     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
186933     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186934     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
186935     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186936     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186937     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
186938     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
186939     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186940     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186941     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
186942     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
186942   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
186943     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186944     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
186945     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186946     filename _pref
186946   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
186947     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
186948     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
186949    +
186950    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
186951    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
186951   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
186952    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
186953    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
186954    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
186955    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
186956    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
186957     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
186958     quit;
186959     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
186960     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
186961     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
186962     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
186963     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
186964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186965     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
186966     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186967     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186968     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
186969     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186970     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186971     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
186972     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
186973     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
186974     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186975     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
186976     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186977     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
186978     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186979     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186980     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
186981     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
186982     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
186983     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
186984     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
186985     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
186985   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
186986     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186987     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
186988     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
186989     filename _pref
186989   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
186990     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
186991     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
186992    +
186993    +
186994    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
186995    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
186996    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
186997    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
186998    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
186999    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
187000    +
187001    +
187002    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
187003    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
187004    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
187005    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
187006    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
187007    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
187008    +
187009    +
187010    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
187011    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
187012    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
187013    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
187014    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
187015    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
187016    +
187017    +
187018    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
187019    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
187020    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
187021    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
187022    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
187023    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
187024    +
187025    +
187026    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
187027    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
187028    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
187029    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
187030    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
187031    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
187032    +
187033    +
187034    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
187035    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
187036    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
187037    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
187038    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
187039    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
187040    +
187041    +
187042    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
187043    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
187044    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
187045    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
187046    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
187047    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
187048    +
187049    +
187050    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
187051    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
187052    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
187053    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
187054    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
187055    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
187056    +if
187057    +_FILTERNORM1 not in ( '.')
187058    + and
187059    +_FILTERNORM2 not in ( '.')
187060    + and
187061    +_FILTERNORM3 not in ( '.')
187062    + and
187063    +_FILTERNORM4 not in ( '.')
187064    + and
187065    +_FILTERNORM5 not in ( '.')
187066    + and
187067    +_FILTERNORM6 not in ( '.')
187068    + and
187069    +_FILTERNORM7 not in ( ' ')
187070    + and
187071    +_FILTERNORM8 not in ( ' ')
187072    +and
187073    +( Dt_Customer ne .)
187074    +and ( Income ne . and (Income<=107000))
187075    +and ( Kidhome ne .)
187076    +and ( MntFishProducts ne .)
187077    +and ( MntFruits ne .)
187078    +and ( MntGoldProds ne .)
187079    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
187080    +and ( MntSweetProducts ne .)
187081    +and ( MntWines ne .)
187082    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
187083    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
187084    +and ( NumStorePurchases ne .)
187085    +and ( NumWebPurchases ne .)
187086    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
187087    +and ( Recency ne .)
187088    +and ( Teenhome ne .)
187089    +and ( Year_Birth ne .)
187090    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
187091    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
187092    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
187093    +end;
MPRINT(EM_DIAGRAM):   end;
187094    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
187095    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
187096     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
187097     quit;
187098     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
187099     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
187100     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
187101     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
187102     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
187103     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
187104     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
187105     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
187106     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187107     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
187108     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
187109     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187110     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
187111     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
187112     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
187113     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187114     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
187115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
187116     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
187117     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
187118     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187119     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
187120     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
187121     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
187122     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
187123     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
187124     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
187124   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
187125     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187126     proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl59_FCMP data=_tempx;
187127     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL59_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL59_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187128     %macro varDept(fcmpdata=,id=);
187129     %global nobs&id scoreFlag&id;
187130     %let scoreFlag&id = 0;
187131     %if &id=1 or ^&fcmpStart %then %do;
187132     proc sort data=&fcmpdata out=_temp&id nodupkey;
187133     by NAME;
187134     where id=&id and LHS in( %let j=1;
187135     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
187136     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
187137     "&var" %let j = %eval(&j+1);
187138     %end;
187139     );
187140     run;
187141     %let dsid = %sysfunc(open(_temp&id));
187142     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
187143     %let dsid = %sysfunc(close(&dsid));
187144     %if &&nobs&id %then %do;
187145     %let scoreFlag&id = 1;
187146     %let fcmpStart = 1;
187147     %end;
187148     %else %let fcmpStart = 0;
187149     %end;
187150     %else %do;
187151     proc sort data=&fcmpdata out=_tempid;
187152     where id=&id;
187153     by LHS;
187154     run;
187155     %let dsid = %sysfunc(open(_tempid));
187156     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
187157     %let dsid = %sysfunc(close(&dsid));
187158     %if ^&&nobs&id %then %do;
187159     proc datasets lib=work nolist;
187160     delete _tempid;
187161     run;
187162     quit;
187163     %end;
187164     %else %do;
187165     data _tempAll;
187166     set %let j=%eval(&id-1);
187167     %do x=1 %to &j;
187168     %if &&nobs&x %then %do;
187169     _temp&x %end;
187170     %end;
187171     ;
187172     run;
187173     proc sql;
187174     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
187174   ! work._tempid p2 where p.name=p2.lhs;
187175     quit;
187176     data _temp&id;
187177     set _temp&id;
187178     where LHS ne '' and NAME ne '' and Node ne '';
187179     run;
187180     proc datasets lib=work nolist;
187181     delete _tempAll;
187182     run;
187183     %let dsid = %sysfunc(open(_temp&id));
187184     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
187185     %let dsid = %sysfunc(close(&dsid));
187186     %if ^&&nobs&id %then %do;
187187     proc datasets lib=work nolist;
187188     delete _temp&id;
187189     run;
187190     quit;
187191     %end;
187192     %else %do;
187193     %let scoreFlag&id = 1;
187194     data _temp&id;
187195     set _temp&id;
187196     where LHS ne NAME and node ne '';
187197     run;
187198     %let dsid = %sysfunc(open(_temp&id));
187199     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
187200     %let dsid = %sysfunc(close(&dsid));
187201     %if ^&&nobs&id %then %do;
187202     proc datasets lib=work nolist;
187203     delete _temp&id;
187204     run;
187205     quit;
187206     %end;
187207     %else %do;
187208     proc sort data=_temp&id nodupkey;
187209     by LHS NAME;
187210     run;
187211     %end;
187212     %end;
187213     %end;
187214     %end;
187215     %mend varDept;
187216     %macro optCode(outdata=fcmpdata);
187217     %global fcmpStart;
187218     %let fcmpStart = 0;
187219     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
187220     %let NumNodes=9;
187221     %do k=1 %to &NumNodes;
187222     %vardept(fcmpdata=&outdata, id=&k);
187223     %end;
187224     %mend optCode;
187225     %optcode(outData=EMWS8.Ensmbl59_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 116 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl59_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
187226     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
187227     * Ensmbl59: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Computing metadata for TRAIN data;
187228     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL59_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl59_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl59_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl59_TRAIN out=WORK.M1_7JS8K noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_7JS8K;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_7JS8K(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_7JS8K;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_7JS8K;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0GV2IL_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GV2IL_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GV2IL_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M38FSD86(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GV2IL_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GV2IL_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GV2IL_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GV2IL_;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GV2IL_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural46_TRAIN noprint
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural46_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl59";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl59";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl59: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl59";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
187548     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
187549     set EMWS8.Ensmbl59_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMINFO;
187550     where DATA='Ensmbl59' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl59' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
187551     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL59_EMINFO.
      WHERE (DATA='Ensmbl59') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187552     data EMWS8.Ensmbl59_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMINFO;
187553     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
187554     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
187555     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL59_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
187559     run;
187560     data EMWS8.Ensmbl59_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMINFO;
187561     set EMWS8.Ensmbl59_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMINFO WORK.MODELTEMP_INFO;
187562     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL59_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL59_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
187563     proc sort data = EMWS8.Ensmbl59_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl59_EMINFO NOTHREADS;
187564     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
187565     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL59_EMINFO.
NOTE: The data set EMWS8.ENSMBL59_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187566     proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural46_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
187567     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
187568     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL46_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187569     proc sort data = EMWS8.Ensmbl59_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl59_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
187570     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
187571     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL59_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187572     data EMWS8.Ensmbl59_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMINFO;
187573     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
187574     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
187575     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL59_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187576     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
187577     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
187578     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
187579     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL59_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL59_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
The SAS System
 
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.03 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                12.03 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3BIEE8B
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl59\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3BIEE8B new;
MPRINT(EM_DIAGRAM):   run;
187603     data EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMOUTFIT;
187604     set EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMOUTFIT;
187605     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
187606     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
187606   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
187607     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
187608     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL59_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL59_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187609     proc sort data=EMWS8.Ensmbl59_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl59_EMREPORTFIT nothreads;
187610     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
187611     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL59_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL59_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187612     %let _EMwarndup = 0;
187613     %let _EMtargetdup =;
187614     %let _EMASEtargetdup =;
187615     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
187616     set EMWS8.Ensmbl59_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMOUTFIT;
187617     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
187618     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
187619     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
187620     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
187621     end;
MPRINT(EM_DIAGRAM):   end;
187622     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL59_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187623     proc sort data=EMWS8.AutoNeural43_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural43_CMeta_TRAIN out=WORK.SUBSETINMETA;
187624     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
187625     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL43_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 51 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187626     proc sort data=EMWS8.Ensmbl59_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl59_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
187627     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
187628     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set EMWS8.ENSMBL59_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 41 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187629     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
187630     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
187631     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
187632     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 41 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 51 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187633     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
187634     set EMWS8.Ensmbl59_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_CMeta_TRAIN;
187635     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
187635   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
187636     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL59_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
187637     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
187638     set EMWS8.Ensmbl59_TRAIN(keep=
187639     F_DepVar
187640     I_DepVar
187641     P_DepVar0
187642     P_DepVar1
187643     R_DepVar0
187644     R_DepVar1
187645     U_DepVar
187646     _WARN_
187647     DepVar
187648     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
187649     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: View EMWS8.ENSMBL59_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL46_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL59_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl59_37Y9CPW nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl59_37Y9CPW;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_37Y9CPW(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_37Y9CPW;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_37Y9CPW;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000151607 OVLMAX 0.9999785385 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
191915     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
191916     set EMWS8.Ensmbl59_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_CMeta_TRAIN;
191917     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
191917   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
191918     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL59_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
191919     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
191920     set EMWS8.Ensmbl59_VALIDATE(keep=
191921     F_DepVar
191922     I_DepVar
191923     P_DepVar0
191924     P_DepVar1
191925     R_DepVar0
191926     R_DepVar1
191927     U_DepVar
191928     _WARN_
191929     DepVar
191930     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
191931     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: View EMWS8.ENSMBL59_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL46_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL59_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl59_2MZ6F7D nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl59_2MZ6F7D;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_2MZ6F7D(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMCLASSIFICATION WORK.Ensmbl59_2MZ6F7D;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl59_2MZ6F7D;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl59_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural43_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.000015053 OVLMAX 0.9999888893 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
196206     %let _cn = %sysfunc(getoption(CENTER));
196207     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
196208     proc print data=EMWS8.Ensmbl59_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMREPORTFIT noobs label;
196209     var STAT LABEL TRAIN
196210     VALIDATE
196211     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
196212     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
196213     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
196214     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
196215     run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL59_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 56.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
196216     title10;
MPRINT(EM_DIAGRAM):   title10;
196217     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
196218     proc sort data=EMWS8.Ensmbl59_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl59_EMCLASSIFICATION nothreads;
196219     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
196220     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL59_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL59_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
196221     %let _cn = %sysfunc(getoption(CENTER));
196222     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
196223     proc print data=EMWS8.Ensmbl59_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMCLASSIFICATION noobs label;
196224     var from into pct_row pct_col count percent
196225     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
196226     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
196227     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
196228     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
196229     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
196230     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
196231     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
196232     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
196233     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
196234     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
196235     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
196236     run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL59_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 57.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
196237     title9;
MPRINT(EM_DIAGRAM):   title9;
196238     title10;
MPRINT(EM_DIAGRAM):   title10;
196239     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
196240     %let _cn = %sysfunc(getoption(CENTER));
196241     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
196242     data EMWS8.Ensmbl59_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl59_EMEVENTREPORT;
196243     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
196243   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
196244     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
196244   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
196244   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
196244   ! FALSEEVENT
196245     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
196245   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
196245   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
196246        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
196247     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
196248     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
196249     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
196250     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
196251     set EMWS8.Ensmbl59_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl59_EMEVENTREPORT;
196252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL59_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL59_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
196253     proc print data=EMWS8.Ensmbl59_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMEVENTREPORT noobs label;
196254     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
196255     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
196256     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
196257     run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL59_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 58.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
196258     title10;
MPRINT(EM_DIAGRAM):   title10;
196259     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
196260     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
196261     modify Ensmbl59_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl59_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
196262     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
196263     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
196263   ! ;
MPRINT(EM_DIAGRAM):   run;
196264     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL59_EMRANK.DATA.
196265     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
196266     %let _cn = %sysfunc(getoption(CENTER));
196267     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
196268     proc print data=EMWS8.Ensmbl59_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMRANK label noobs;
196269     var
196270     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
196271     by
196272     notsorted DATAROLE
196273     notsorted TARGET
196274     notsorted TARGETLABEL
196275     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
196276     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
196277     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
196278     run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL59_EMRANK.
NOTE: The PROCEDURE PRINT printed page 59.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
196279     title10;
MPRINT(EM_DIAGRAM):   title10;
196280     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
196281     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
196282     modify Ensmbl59_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl59_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
196283     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
196283   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
196284     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
196284   ! ;
MPRINT(EM_DIAGRAM):   run;
196285     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL59_EMSCOREDIST.DATA.
196286     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl59_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
