*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                17.37 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.37 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                17.37 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3UEU7DT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3UEU7DT new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.37 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.37 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[218965] MAX=1 EXCEEDMAXVALUE='' )[218969] )[218963]
VALIDCHOICES=(CHOICE1='Y' )[218967] )[219251] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[218973]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[218977] )[218975] )[218971] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[218981]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[218987] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[218985] )[218983] )[218979] )[218961]
1813611    proc freq data=EMWS8.Ensmbl53_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl53_VariableSet noprint;
1813612    table ROLE*LEVEL/out=WORK.Ensmbl53META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl53META;
1813613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL53_VARIABLESET.
NOTE: The data set WORK.ENSMBL53META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1813614    proc print data=WORK.Ensmbl53META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl53META label noobs;
1813615    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1813616    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1813616  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1813616  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1813617    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1813618    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1813619    run;
 
NOTE: There were 2 observations read from the data set WORK.ENSMBL53META.
NOTE: The PROCEDURE PRINT printed page 1535.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1813620    title10;
MPRINT(EM_DIAGRAM):   title10;
1813621    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural29_TRAIN EMWS8.AutoNeural29_TRAIN
EMWS8.AutoNeural29_TRAIN EMWS8.AutoNeural29_TRAIN EMWS8 AutoNeural29_TRAIN
EMWS8.AutoNeural29_TRAIN EMWS8.AutoNeural29_TRAIN
EMWS8.AutoNeural29_TRAIN EMWS8.AutoNeural29_TRAIN EMWS8 AutoNeural29_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural29_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural29_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1813650    data WORK.Ensmbl53_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl53_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1813651    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1813652    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1813652  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1813652  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1813653       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1813653  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1813653  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1813654    set EMWS8.AUTONEURAL29_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL29_DEPVAR_DM( where=(_TYPE_="TARGET"));
1813655    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1813656    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1813657    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1813658    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1813659    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1813660    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1813661    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1813662    end;
MPRINT(EM_DIAGRAM):   end;
1813663    output;
MPRINT(EM_DIAGRAM):   output;
1813664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL29_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL53_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1813665    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1813666    proc print data=WORK.Ensmbl53_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl53_EVENT noobs label;
1813667    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1813668    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1813669    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1813670    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL53_EVENT.
NOTE: The PROCEDURE PRINT printed page 1536.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1813671    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1813672    proc print data = EMWS8.AutoNeural29_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural29_DepVar_DM noobs label;
1813673    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1813674    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1813675    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1813675  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1813675  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1813676    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1813677    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1813678    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL29_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1537.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1813679    title10;
MPRINT(EM_DIAGRAM):   title10;
1813680    %let groupid =;
1813681    %let endGroupid =;
1813682    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1813683    set EMWS8.AutoNeural30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural30_EMINFO;
1813684    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1813684  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1813685    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1813686    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1813687    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL30_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1813688    %let groupid =;
1813689    %let endGroupid =;
1813690    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1813691    set EMWS8.AutoNeural31_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural31_EMINFO;
1813692    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1813692  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1813693    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1813694    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1813695    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL31_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1813696    %let groupid =;
1813697    %let endGroupid =;
1813698    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1813699    set EMWS8.AutoNeural32_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural32_EMINFO;
1813700    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1813700  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1813701    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1813702    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1813703    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL32_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1813704    %let groupid =;
1813705    %let endGroupid =;
1813706    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1813707    set EMWS8.AutoNeural33_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural33_EMINFO;
1813708    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1813708  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1813709    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1813710    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1813711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL33_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1813712    %let groupid =;
1813713    %let endGroupid =;
1813714    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1813715    set EMWS8.AutoNeural27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural27_EMINFO;
1813716    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1813716  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1813717    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1813718    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1813719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL27_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1813720    %let groupid =;
1813721    %let endGroupid =;
1813722    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1813723    set EMWS8.AutoNeural28_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMINFO;
1813724    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1813724  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1813725    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1813726    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1813727    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL28_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1813728    %let groupid =;
1813729    %let endGroupid =;
1813730    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1813731    set EMWS8.AutoNeural29_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural29_EMINFO;
1813732    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1813732  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1813733    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1813734    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1813735    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL29_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1813736    data WORK.Ensmbl53;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl53;
1813737    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1813738    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1813738  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1813739    nodeid="AUTONEURAL30";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL30";
1813740    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1813741    output;
MPRINT(EM_DIAGRAM):   output;
1813742    nodeid="AUTONEURAL31";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL31";
1813743    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1813744    output;
MPRINT(EM_DIAGRAM):   output;
1813745    nodeid="AUTONEURAL32";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL32";
1813746    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1813747    output;
MPRINT(EM_DIAGRAM):   output;
1813748    nodeid="AUTONEURAL33";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL33";
1813749    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1813750    output;
MPRINT(EM_DIAGRAM):   output;
1813751    nodeid="AUTONEURAL27";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL27";
1813752    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1813753    output;
MPRINT(EM_DIAGRAM):   output;
1813754    nodeid="AUTONEURAL28";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL28";
1813755    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1813756    output;
MPRINT(EM_DIAGRAM):   output;
1813757    nodeid="AUTONEURAL29";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL29";
1813758    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1813759    output;
MPRINT(EM_DIAGRAM):   output;
1813760    ;
MPRINT(EM_DIAGRAM):   ;
1813761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL53 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1813762    title;
MPRINT(EM_DIAGRAM):   title;
1813763    proc print data=WORK.Ensmbl53 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl53 label noobs;
1813764    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1813765    title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Voting";
MPRINT(EM_DIAGRAM):   run;
1813766    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL53.
NOTE: The PROCEDURE PRINT printed page 1538.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1813767    title9;
MPRINT(EM_DIAGRAM):   title9;
1813768    title10;
MPRINT(EM_DIAGRAM):   title10;
1813769    data WORK.M0GKOZDY;
MPRINT(EM_DIAGRAM):    data WORK.M0GKOZDY;
1813770    set WORK.M0GKOZDY;
MPRINT(EM_DIAGRAM):   set WORK.M0GKOZDY;
1813771    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1813772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0GKOZDY.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M0GKOZDY has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1813773    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1813774    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1813775    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1813776    %macro DMDBClass;
1813777        DepVar(DESC)
1813778    %mend DMDBClass;
1813779    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1813780    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1813781    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1813782    %macro DMDBVar;
1813783
1813784    %mend DMDBVar;
1813785    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813786    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1813787    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813788    proc dmdb batch data=EMWS8.AutoNeural30_TRAIN
1813789    dmdbcat=WORK.EM_DMDB
1813790    maxlevel = 513
1813791    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural30_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1813792    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1813793    target
1813794    DepVar
1813795    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1813796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL30_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1813797    quit;
1813798    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.37 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                17.37 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0ZP675F
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0ZP675F new;
MPRINT(EM_DIAGRAM):   run;
1813900    filename emflow
1813900  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring AUTONEURAL30_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813901    *------------------------------------------------------------*;
1813902    * Ensmbl53: Scoring AUTONEURAL30_TRAIN data;
1813903    *------------------------------------------------------------*;
1813904    data EMWS8.Ensmbl53_TRAIN
1813905    / view=EMWS8.Ensmbl53_TRAIN
1813906    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_TRAIN / view=EMWS8.Ensmbl53_TRAIN ;
1813907    set EMWS8.AutoNeural30_TRAIN
1813908    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural30_TRAIN ;
1813909    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMFLOWSCORE.sas.
1813910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813911   +* Ensmbl53: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Combine model for DepVar;
1813912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813913   +* Ensmbl53: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 1 of 7;
1813914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813915   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813916   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1813917   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1813918   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1813919   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813920   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813921   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1813922   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1813923   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1813924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813926   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1813927   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1813928   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1813929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813930   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813931   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1813932   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1813933   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1813934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813935   +
1813936   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1813937   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1813937  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1813938   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1813939   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1813940   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1813941   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1813942   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1813943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813944   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1813945   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1813946   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1813947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813948   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813949   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1813950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813951   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1813952   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1813953   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1813954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813955   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1813956   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1813957   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1813958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813959   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813960   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1813961   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1813962   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1813963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813964   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1813965   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1813966   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1813967   +
1813968   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1813969   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1813970   +
1813971   +
1813972   +
1813973   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1813974   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1813975   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1813976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813977   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1813978   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1813979   +* NODE: AutoNeural30;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural30;
1813980   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1813981   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1813982   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1813983   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1813984   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1813985   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1813986   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1813987   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1813988   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1813989   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1813990   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1813991   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1813992   +LENGTH _WARN_ $4
1813993   +      F_DepVar  $ 12
1813994   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1813995   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1813996   +
1813997   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1813998   +
1813999   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1814000   +
1814001   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1814002   +
1814003   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1814004   +
1814005   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1814006   +
1814007   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1814008   +
1814009   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1814010   +
1814011   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1814012   +
1814013   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1814014   +
1814015   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1814016   +
1814017   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1814018   +
1814019   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1814020   +
1814021   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1814022   +
1814023   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1814024   +
1814025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814026   +*** Checking missing input Interval
1814027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1814028   +
1814029   +IF NMISS(
1814030   +   AcceptedCmpTotal ,
1814031   +   Mnt ,
1814032   +   MntMeatProducts ,
1814033   +   NumCatalogPurchases ,
1814034   +   RFMstat ,
1814035   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1814036   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1814037   +
1814038   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1814039   +END;
MPRINT(EM_DIAGRAM):   END;
1814040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814041   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1814042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814043   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814044   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814045   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814046   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814047   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814048   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814049   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1814050   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814051   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814052   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814053   +END;
MPRINT(EM_DIAGRAM):   END;
1814054   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814055   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1814056   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814057   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814058   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1814059   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814060   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1814061   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814062   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814063   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1814064   +   ELSE S_NumCatalogPurchases
1814065   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1814066   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814067   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1814068   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814069   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1814070   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814071   +END;
MPRINT(EM_DIAGRAM):   END;
1814072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814073   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1814074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814075   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814076   +   H1x1_1  =    -10.2196367325197 * S_AcceptedCmpTotal
1814077   +          +     73.8468810244622 * S_Mnt  +    -37.1568918433377 *
1814078   +        S_MntMeatProducts  +    -6.41798758194194 * S_NumCatalogPurchases
1814079   +          +     8.70227685660232 * S_RFMstat  +      6.0315592275084 *
1814080   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -10.2196367325197 * S_AcceptedCmpTotal + 73.8468810244622 *
S_Mnt + -37.1568918433377 * S_MntMeatProducts + -6.41798758194194 * S_NumCatalogPurchases +
8.70227685660232 * S_RFMstat + 6.0315592275084 * S_Recency ;
1814081   +   H1x1_1  =     13.2334413528619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 13.2334413528619 + H1x1_1 ;
1814082   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1814083   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1814084   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1814085   +END;
MPRINT(EM_DIAGRAM):   END;
1814086   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814087   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1814088   +END;
MPRINT(EM_DIAGRAM):   END;
1814089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814090   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1814091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814092   +
1814093   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1814094   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1814095   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1814096   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1814097   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1814098   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1814099   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1814100   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1814101   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1814102   +end;
MPRINT(EM_DIAGRAM):   end;
1814103   +else do;
MPRINT(EM_DIAGRAM):   else do;
1814104   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1814105   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1814106   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1814107   +   end;
MPRINT(EM_DIAGRAM):   end;
1814108   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1814109   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1814110   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1814111   +   end;
MPRINT(EM_DIAGRAM):   end;
1814112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1814113   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1814114   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1814115   +   end;
MPRINT(EM_DIAGRAM):   end;
1814116   +end;
MPRINT(EM_DIAGRAM):   end;
1814117   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814118   +   P_DepVar1  =    -2.47422582638078 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.47422582638078 * H1x1_1 ;
1814119   +   P_DepVar1  =    -1.87932369728474 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.87932369728474 + P_DepVar1 ;
1814120   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1814121   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1814122   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1814123   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1814124   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1814125   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1814126   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1814127   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1814128   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1814129   +END;
MPRINT(EM_DIAGRAM):   END;
1814130   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814131   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1814132   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1814133   +END;
MPRINT(EM_DIAGRAM):   END;
1814134   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1814135   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1814136   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1814137   +END;
MPRINT(EM_DIAGRAM):   END;
1814138   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1814139   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1814140   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1814141   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1814142   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1814143   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1814144   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1814145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814146   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1814147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814148   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1814149   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1814150   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1814151   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1814152   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1814153   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1814154   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1814155   +END;
MPRINT(EM_DIAGRAM):   END;
1814156   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1814157   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1814158   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1814159   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1814160   +* Renaming variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural30;
1814161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814162   +* Renaming Posterior variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural30;
1814163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814164   +drop AutoNeural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_P_DepVar1;
1814165   +AutoNeural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural30_P_DepVar1 = P_DepVar1;
1814166   +drop AutoNeural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_P_DepVar0;
1814167   +AutoNeural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural30_P_DepVar0 = P_DepVar0;
1814168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814169   +* Renaming Into variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural30;
1814170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814171   +length AutoNeural30_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural30_I_DepVar $32;
1814172   +drop AutoNeural30_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_I_DepVar;
1814173   +AutoNeural30_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural30_I_DepVar = I_DepVar;
1814174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814175   +* Renaming _WARN_ variable for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural30;
1814176   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814177   +length AutoNeural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural30_WARN_ $4;
1814178   +drop AutoNeural30_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_WARN_;
1814179   +AutoNeural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural30_WARN_ = _WARN_;
1814180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814181   +* Ensmbl53: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 2 of 7;
1814182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814183   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814184   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1814185   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1814186   +* NODE: AutoNeural31;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural31;
1814187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814188   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1814189   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1814190   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1814191   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1814192   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1814193   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1814194   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1814195   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1814196   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1814197   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1814198   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1814199   +LENGTH _WARN_ $4
1814200   +      F_DepVar  $ 12
1814201   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1814202   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1814203   +
1814204   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1814205   +
1814206   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1814207   +
1814208   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1814209   +
1814210   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1814211   +
1814212   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1814213   +
1814214   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1814215   +
1814216   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1814217   +
1814218   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1814219   +
1814220   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1814221   +
1814222   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1814223   +
1814224   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1814225   +
1814226   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1814227   +
1814228   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1814229   +
1814230   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1814231   +
1814232   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1814233   +
1814234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814235   +*** Checking missing input Interval
1814236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1814237   +
1814238   +IF NMISS(
1814239   +   AcceptedCmpTotal ,
1814240   +   Mnt ,
1814241   +   MntMeatProducts ,
1814242   +   NumCatalogPurchases ,
1814243   +   RFMstat ,
1814244   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1814245   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1814246   +
1814247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1814248   +END;
MPRINT(EM_DIAGRAM):   END;
1814249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814250   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1814251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814252   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814253   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814254   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814255   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814256   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814257   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814258   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1814259   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814260   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814261   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814262   +END;
MPRINT(EM_DIAGRAM):   END;
1814263   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814264   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1814265   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814266   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814267   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1814268   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814269   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1814270   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814271   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814272   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1814273   +   ELSE S_NumCatalogPurchases
1814274   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1814275   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814276   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1814277   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814278   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1814279   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814280   +END;
MPRINT(EM_DIAGRAM):   END;
1814281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814282   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1814283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814284   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814285   +   H1x1_1  =     0.88877074263455 * S_AcceptedCmpTotal
1814286   +          +     -6.8647547731997 * S_Mnt  +     3.38470731995645 *
1814287   +        S_MntMeatProducts  +     0.45686791470898 * S_NumCatalogPurchases
1814288   +          +    -0.12981013682039 * S_RFMstat  +    -0.01175498343834 *
1814289   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.88877074263455 * S_AcceptedCmpTotal + -6.8647547731997 *
S_Mnt + 3.38470731995645 * S_MntMeatProducts + 0.45686791470898 * S_NumCatalogPurchases +
-0.12981013682039 * S_RFMstat + -0.01175498343834 * S_Recency ;
1814290   +   H1x1_2  =    -0.11003981472254 * S_AcceptedCmpTotal
1814291   +          +    -0.85647328083992 * S_Mnt  +     10.0358306583456 *
1814292   +        S_MntMeatProducts  +     1.92503432752831 * S_NumCatalogPurchases
1814293   +          +     0.92971820927182 * S_RFMstat  +    -0.12489463268487 *
1814294   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.11003981472254 * S_AcceptedCmpTotal + -0.85647328083992 *
S_Mnt + 10.0358306583456 * S_MntMeatProducts + 1.92503432752831 * S_NumCatalogPurchases +
0.92971820927182 * S_RFMstat + -0.12489463268487 * S_Recency ;
1814295   +   H1x1_1  =    -2.35812752137322 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.35812752137322 + H1x1_1 ;
1814296   +   H1x1_2  =     8.68969383477576 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 8.68969383477576 + H1x1_2 ;
1814297   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1814298   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1814299   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1814300   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1814301   +END;
MPRINT(EM_DIAGRAM):   END;
1814302   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814303   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1814304   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1814305   +END;
MPRINT(EM_DIAGRAM):   END;
1814306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814307   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1814308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814309   +
1814310   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1814311   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1814312   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1814313   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1814314   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1814315   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1814316   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1814317   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1814318   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1814319   +end;
MPRINT(EM_DIAGRAM):   end;
1814320   +else do;
MPRINT(EM_DIAGRAM):   else do;
1814321   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1814322   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1814323   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1814324   +   end;
MPRINT(EM_DIAGRAM):   end;
1814325   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1814326   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1814327   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1814328   +   end;
MPRINT(EM_DIAGRAM):   end;
1814329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1814330   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1814331   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1814332   +   end;
MPRINT(EM_DIAGRAM):   end;
1814333   +end;
MPRINT(EM_DIAGRAM):   end;
1814334   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814335   +   P_DepVar1  =     6.72682466184772 * H1x1_1  +     8.11139972991132 * H1x1_2
1814336   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.72682466184772 * H1x1_1 + 8.11139972991132 * H1x1_2 ;
1814337   +   P_DepVar1  =    -12.3654701108229 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.3654701108229 + P_DepVar1 ;
1814338   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1814339   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1814340   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1814341   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1814342   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1814343   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1814344   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1814345   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1814346   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1814347   +END;
MPRINT(EM_DIAGRAM):   END;
1814348   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814349   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1814350   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1814351   +END;
MPRINT(EM_DIAGRAM):   END;
1814352   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1814353   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1814354   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1814355   +END;
MPRINT(EM_DIAGRAM):   END;
1814356   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1814357   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1814358   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1814359   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1814360   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1814361   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1814362   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1814363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814364   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1814365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814366   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1814367   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1814368   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1814369   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1814370   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1814371   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1814372   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1814373   +END;
MPRINT(EM_DIAGRAM):   END;
1814374   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1814375   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1814376   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1814377   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1814378   +* Renaming variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural31;
1814379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814380   +* Renaming Posterior variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural31;
1814381   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814382   +drop AutoNeural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_P_DepVar1;
1814383   +AutoNeural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural31_P_DepVar1 = P_DepVar1;
1814384   +drop AutoNeural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_P_DepVar0;
1814385   +AutoNeural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural31_P_DepVar0 = P_DepVar0;
1814386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814387   +* Renaming Into variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural31;
1814388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814389   +length AutoNeural31_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural31_I_DepVar $32;
1814390   +drop AutoNeural31_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_I_DepVar;
1814391   +AutoNeural31_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural31_I_DepVar = I_DepVar;
1814392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814393   +* Renaming _WARN_ variable for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural31;
1814394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814395   +length AutoNeural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural31_WARN_ $4;
1814396   +drop AutoNeural31_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_WARN_;
1814397   +AutoNeural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural31_WARN_ = _WARN_;
1814398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814399   +* Ensmbl53: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 3 of 7;
1814400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814402   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1814403   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1814404   +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
1814405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814406   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1814407   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1814408   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1814409   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1814410   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1814411   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1814412   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1814413   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1814414   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1814415   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1814416   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1814417   +LENGTH _WARN_ $4
1814418   +      F_DepVar  $ 12
1814419   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1814420   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1814421   +
1814422   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1814423   +
1814424   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1814425   +
1814426   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1814427   +
1814428   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1814429   +
1814430   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1814431   +
1814432   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1814433   +
1814434   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1814435   +
1814436   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1814437   +
1814438   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1814439   +
1814440   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1814441   +
1814442   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1814443   +
1814444   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1814445   +
1814446   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1814447   +
1814448   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1814449   +
1814450   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1814451   +
1814452   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1814453   +
1814454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814455   +*** Checking missing input Interval
1814456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1814457   +
1814458   +IF NMISS(
1814459   +   AcceptedCmpTotal ,
1814460   +   Mnt ,
1814461   +   MntMeatProducts ,
1814462   +   NumCatalogPurchases ,
1814463   +   RFMstat ,
1814464   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1814465   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1814466   +
1814467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1814468   +END;
MPRINT(EM_DIAGRAM):   END;
1814469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814470   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1814471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814472   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814473   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814474   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814475   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814476   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814477   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814478   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1814479   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814480   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814481   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814482   +END;
MPRINT(EM_DIAGRAM):   END;
1814483   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814484   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1814485   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814486   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814487   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1814488   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814489   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1814490   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814491   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814492   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1814493   +   ELSE S_NumCatalogPurchases
1814494   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1814495   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814496   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1814497   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814498   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1814499   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814500   +END;
MPRINT(EM_DIAGRAM):   END;
1814501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814502   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1814503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814504   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814505   +   H1x1_1  =    -0.14955504394548 * S_AcceptedCmpTotal
1814506   +          +    -1.51573020728474 * S_Mnt  +      0.4607268669617 *
1814507   +        S_MntMeatProducts  +     -0.3334944156024 * S_NumCatalogPurchases
1814508   +          +     0.09267374022355 * S_RFMstat  +     0.47606901130176 *
1814509   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14955504394548 * S_AcceptedCmpTotal + -1.51573020728474 *
S_Mnt + 0.4607268669617 * S_MntMeatProducts + -0.3334944156024 * S_NumCatalogPurchases +
0.09267374022355 * S_RFMstat + 0.47606901130176 * S_Recency ;
1814510   +   H1x1_2  =      0.2468028004293 * S_AcceptedCmpTotal
1814511   +          +    -0.77717776485086 * S_Mnt  +     7.40002044896531 *
1814512   +        S_MntMeatProducts  +     1.60897655452635 * S_NumCatalogPurchases
1814513   +          +     0.67552122628568 * S_RFMstat  +    -0.32443547406066 *
1814514   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2468028004293 * S_AcceptedCmpTotal + -0.77717776485086 *
S_Mnt + 7.40002044896531 * S_MntMeatProducts + 1.60897655452635 * S_NumCatalogPurchases +
0.67552122628568 * S_RFMstat + -0.32443547406066 * S_Recency ;
1814515   +   H1x1_3  =     6.59800324692585 * S_AcceptedCmpTotal
1814516   +          +    -28.0912205253849 * S_Mnt  +     13.5059679211684 *
1814517   +        S_MntMeatProducts  +     5.32084702602181 * S_NumCatalogPurchases
1814518   +          +    -1.75455080633468 * S_RFMstat  +    -3.56741217768456 *
1814519   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 6.59800324692585 * S_AcceptedCmpTotal + -28.0912205253849 *
S_Mnt + 13.5059679211684 * S_MntMeatProducts + 5.32084702602181 * S_NumCatalogPurchases +
-1.75455080633468 * S_RFMstat + -3.56741217768456 * S_Recency ;
1814520   +   H1x1_1  =     2.30670471730853 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.30670471730853 + H1x1_1 ;
1814521   +   H1x1_2  =     6.72353576768002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 6.72353576768002 + H1x1_2 ;
1814522   +   H1x1_3  =    -10.2093918588588 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -10.2093918588588 + H1x1_3 ;
1814523   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1814524   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1814525   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1814526   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1814527   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1814528   +END;
MPRINT(EM_DIAGRAM):   END;
1814529   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814530   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1814531   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1814532   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1814533   +END;
MPRINT(EM_DIAGRAM):   END;
1814534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814535   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1814536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814537   +
1814538   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1814539   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1814540   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1814541   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1814542   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1814543   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1814544   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1814545   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1814546   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1814547   +end;
MPRINT(EM_DIAGRAM):   end;
1814548   +else do;
MPRINT(EM_DIAGRAM):   else do;
1814549   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1814550   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1814551   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1814552   +   end;
MPRINT(EM_DIAGRAM):   end;
1814553   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1814554   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1814555   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1814556   +   end;
MPRINT(EM_DIAGRAM):   end;
1814557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1814558   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1814559   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1814560   +   end;
MPRINT(EM_DIAGRAM):   end;
1814561   +end;
MPRINT(EM_DIAGRAM):   end;
1814562   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814563   +   P_DepVar1  =    -13.8690336647034 * H1x1_1  +     12.3879569416654 * H1x1_2
1814564   +          +     2.67685271681444 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -13.8690336647034 * H1x1_1 + 12.3879569416654 * H1x1_2 +
2.67685271681444 * H1x1_3 ;
1814565   +   P_DepVar1  =    -2.88709627935044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.88709627935044 + P_DepVar1 ;
1814566   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1814567   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1814568   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1814569   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1814570   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1814571   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1814572   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1814573   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1814574   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1814575   +END;
MPRINT(EM_DIAGRAM):   END;
1814576   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814577   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1814578   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1814579   +END;
MPRINT(EM_DIAGRAM):   END;
1814580   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1814581   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1814582   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1814583   +END;
MPRINT(EM_DIAGRAM):   END;
1814584   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1814585   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1814586   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1814587   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1814588   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1814589   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1814590   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1814591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814592   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1814593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814594   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1814595   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1814596   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1814597   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1814598   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1814599   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1814600   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1814601   +END;
MPRINT(EM_DIAGRAM):   END;
1814602   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1814603   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1814604   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1814605   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1814606   +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
1814607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814608   +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
1814609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814610   +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
1814611   +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
1814612   +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
1814613   +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
1814614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814615   +* Renaming Into variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural32;
1814616   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814617   +length AutoNeural32_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural32_I_DepVar $32;
1814618   +drop AutoNeural32_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_I_DepVar;
1814619   +AutoNeural32_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural32_I_DepVar = I_DepVar;
1814620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814621   +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
1814622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814623   +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
1814624   +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
1814625   +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
1814626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814627   +* Ensmbl53: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 4 of 7;
1814628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814629   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814630   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1814631   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1814632   +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
1814633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814634   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1814635   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1814636   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1814637   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1814638   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1814639   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1814640   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1814641   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1814642   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1814643   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1814644   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1814645   +LENGTH _WARN_ $4
1814646   +      F_DepVar  $ 12
1814647   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1814648   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1814649   +
1814650   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1814651   +
1814652   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1814653   +
1814654   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1814655   +
1814656   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1814657   +
1814658   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1814659   +
1814660   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1814661   +
1814662   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1814663   +
1814664   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1814665   +
1814666   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1814667   +
1814668   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1814669   +
1814670   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1814671   +
1814672   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1814673   +
1814674   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1814675   +
1814676   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1814677   +
1814678   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1814679   +
1814680   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1814681   +
1814682   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1814683   +
1814684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814685   +*** Checking missing input Interval
1814686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1814687   +
1814688   +IF NMISS(
1814689   +   AcceptedCmpTotal ,
1814690   +   Mnt ,
1814691   +   MntMeatProducts ,
1814692   +   NumCatalogPurchases ,
1814693   +   RFMstat ,
1814694   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1814695   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1814696   +
1814697   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1814698   +END;
MPRINT(EM_DIAGRAM):   END;
1814699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814700   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1814701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814702   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814703   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814704   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814705   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814706   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814707   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814708   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1814709   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814710   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814711   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814712   +END;
MPRINT(EM_DIAGRAM):   END;
1814713   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814714   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1814715   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814716   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814717   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1814718   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814719   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1814720   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814721   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814722   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1814723   +   ELSE S_NumCatalogPurchases
1814724   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1814725   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814726   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1814727   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814728   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1814729   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814730   +END;
MPRINT(EM_DIAGRAM):   END;
1814731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814732   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1814733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814734   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814735   +   H1x1_1  =     0.21234921669572 * S_AcceptedCmpTotal
1814736   +          +     0.01945817648377 * S_Mnt  +     0.10373621819131 *
1814737   +        S_MntMeatProducts  +     0.14724080002257 * S_NumCatalogPurchases
1814738   +          +     0.01465421656969 * S_RFMstat  +    -0.37839603073195 *
1814739   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.21234921669572 * S_AcceptedCmpTotal + 0.01945817648377 *
S_Mnt + 0.10373621819131 * S_MntMeatProducts + 0.14724080002257 * S_NumCatalogPurchases +
0.01465421656969 * S_RFMstat + -0.37839603073195 * S_Recency ;
1814740   +   H1x1_2  =      1.6456490248475 * S_AcceptedCmpTotal
1814741   +          +    -4.36126689821345 * S_Mnt  +    -5.34341350667797 *
1814742   +        S_MntMeatProducts  +    -0.50775340376834 * S_NumCatalogPurchases
1814743   +          +    -3.77547933008523 * S_RFMstat  +    -0.35687395481612 *
1814744   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.6456490248475 * S_AcceptedCmpTotal + -4.36126689821345 *
S_Mnt + -5.34341350667797 * S_MntMeatProducts + -0.50775340376834 * S_NumCatalogPurchases +
-3.77547933008523 * S_RFMstat + -0.35687395481612 * S_Recency ;
1814745   +   H1x1_3  =     2.25495773414966 * S_AcceptedCmpTotal
1814746   +          +     -11.006968240108 * S_Mnt  +     5.29014268166876 *
1814747   +        S_MntMeatProducts  +     1.38527755695319 * S_NumCatalogPurchases
1814748   +          +    -0.25229120510632 * S_RFMstat  +    -0.96545690161812 *
1814749   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.25495773414966 * S_AcceptedCmpTotal + -11.006968240108 *
S_Mnt + 5.29014268166876 * S_MntMeatProducts + 1.38527755695319 * S_NumCatalogPurchases +
-0.25229120510632 * S_RFMstat + -0.96545690161812 * S_Recency ;
1814750   +   H1x1_1  =    -1.44629643725438 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.44629643725438 + H1x1_1 ;
1814751   +   H1x1_2  =    -8.96045510766511 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -8.96045510766511 + H1x1_2 ;
1814752   +   H1x1_3  =    -3.43663513496723 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.43663513496723 + H1x1_3 ;
1814753   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1814754   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1814755   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1814756   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1814757   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1814758   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1814759   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1814760   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1814761   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1814762   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1814763   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1814764   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1814765   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1814766   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1814767   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1814768   +END;
MPRINT(EM_DIAGRAM):   END;
1814769   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814770   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1814771   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1814772   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1814773   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1814774   +END;
MPRINT(EM_DIAGRAM):   END;
1814775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814776   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1814777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814778   +
1814779   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1814780   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1814781   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1814782   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1814783   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1814784   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1814785   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1814786   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1814787   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1814788   +end;
MPRINT(EM_DIAGRAM):   end;
1814789   +else do;
MPRINT(EM_DIAGRAM):   else do;
1814790   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1814791   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1814792   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1814793   +   end;
MPRINT(EM_DIAGRAM):   end;
1814794   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1814795   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1814796   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1814797   +   end;
MPRINT(EM_DIAGRAM):   end;
1814798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1814799   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1814800   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1814801   +   end;
MPRINT(EM_DIAGRAM):   end;
1814802   +end;
MPRINT(EM_DIAGRAM):   end;
1814803   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814804   +   P_DepVar1  =     15.9155817268417 * H1x1_1  +    -26.1877719603903 * H1x1_2
1814805   +          +     3.03900855168824 * H1x1_3  +    -8.12584282800012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.9155817268417 * H1x1_1 + -26.1877719603903 * H1x1_2 +
3.03900855168824 * H1x1_3 + -8.12584282800012 * H1x1_4 ;
1814806   +   P_DepVar1  =    -0.43873072735423 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.43873072735423 + P_DepVar1 ;
1814807   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1814808   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1814809   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1814810   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1814811   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1814812   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1814813   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1814814   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1814815   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1814816   +END;
MPRINT(EM_DIAGRAM):   END;
1814817   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814818   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1814819   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1814820   +END;
MPRINT(EM_DIAGRAM):   END;
1814821   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1814822   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1814823   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1814824   +END;
MPRINT(EM_DIAGRAM):   END;
1814825   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1814826   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1814827   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1814828   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1814829   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1814830   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1814831   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1814832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814833   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1814834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814835   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1814836   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1814837   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1814838   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1814839   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1814840   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1814841   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1814842   +END;
MPRINT(EM_DIAGRAM):   END;
1814843   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1814844   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1814845   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1814846   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1814847   +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
1814848   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814849   +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
1814850   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814851   +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
1814852   +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
1814853   +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
1814854   +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
1814855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814856   +* Renaming Into variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural33;
1814857   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814858   +length AutoNeural33_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural33_I_DepVar $32;
1814859   +drop AutoNeural33_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_I_DepVar;
1814860   +AutoNeural33_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural33_I_DepVar = I_DepVar;
1814861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814862   +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
1814863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814864   +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
1814865   +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
1814866   +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
1814867   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814868   +* Ensmbl53: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 5 of 7;
1814869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814871   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1814872   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1814873   +* NODE: AutoNeural27;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural27;
1814874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1814875   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1814876   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1814877   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1814878   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1814879   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1814880   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1814881   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1814882   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1814883   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1814884   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1814885   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1814886   +LENGTH _WARN_ $4
1814887   +      F_DepVar  $ 12
1814888   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1814889   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1814890   +
1814891   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1814892   +
1814893   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1814894   +
1814895   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1814896   +
1814897   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1814898   +
1814899   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1814900   +
1814901   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1814902   +
1814903   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1814904   +
1814905   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1814906   +
1814907   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1814908   +
1814909   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1814910   +
1814911   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1814912   +
1814913   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1814914   +
1814915   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1814916   +
1814917   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1814918   +
1814919   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1814920   +
1814921   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1814922   +
1814923   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1814924   +
1814925   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1814926   +
1814927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814928   +*** Checking missing input Interval
1814929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1814930   +
1814931   +IF NMISS(
1814932   +   AcceptedCmpTotal ,
1814933   +   Mnt ,
1814934   +   MntMeatProducts ,
1814935   +   NumCatalogPurchases ,
1814936   +   RFMstat ,
1814937   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1814938   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1814939   +
1814940   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1814941   +END;
MPRINT(EM_DIAGRAM):   END;
1814942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814943   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1814944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814945   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814946   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814947   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814948   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814949   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814950   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814951   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1814952   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814953   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814954   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814955   +END;
MPRINT(EM_DIAGRAM):   END;
1814956   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1814957   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1814958   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1814959   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1814960   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1814961   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1814962   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1814963   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1814964   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1814965   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1814966   +   ELSE S_NumCatalogPurchases
1814967   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1814968   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1814969   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1814970   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1814971   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1814972   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1814973   +END;
MPRINT(EM_DIAGRAM):   END;
1814974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814975   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1814976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1814977   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1814978   +   H1x1_1  =     0.20171954292418 * S_AcceptedCmpTotal
1814979   +          +     0.29079116229788 * S_Mnt  +     0.23711535602944 *
1814980   +        S_MntMeatProducts  +     0.42529081995564 * S_NumCatalogPurchases
1814981   +          +     0.18062808343642 * S_RFMstat  +    -0.63318995037874 *
1814982   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.20171954292418 * S_AcceptedCmpTotal + 0.29079116229788 *
S_Mnt + 0.23711535602944 * S_MntMeatProducts + 0.42529081995564 * S_NumCatalogPurchases +
0.18062808343642 * S_RFMstat + -0.63318995037874 * S_Recency ;
1814983   +   H1x1_2  =    -1.98920342874828 * S_AcceptedCmpTotal
1814984   +          +      10.493361229847 * S_Mnt  +    -5.26684519238396 *
1814985   +        S_MntMeatProducts  +     -1.3815052580097 * S_NumCatalogPurchases
1814986   +          +     0.33275103937215 * S_RFMstat  +     0.91614898624506 *
1814987   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.98920342874828 * S_AcceptedCmpTotal + 10.493361229847 *
S_Mnt + -5.26684519238396 * S_MntMeatProducts + -1.3815052580097 * S_NumCatalogPurchases +
0.33275103937215 * S_RFMstat + 0.91614898624506 * S_Recency ;
1814988   +   H1x1_3  =     0.73206551950569 * S_AcceptedCmpTotal
1814989   +          +    -1.01976407347302 * S_Mnt  +    -1.13350661445888 *
1814990   +        S_MntMeatProducts  +    -0.07125936639892 * S_NumCatalogPurchases
1814991   +          +    -0.39616853923675 * S_RFMstat  +    -0.82914022268456 *
1814992   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.73206551950569 * S_AcceptedCmpTotal + -1.01976407347302 *
S_Mnt + -1.13350661445888 * S_MntMeatProducts + -0.07125936639892 * S_NumCatalogPurchases +
-0.39616853923675 * S_RFMstat + -0.82914022268456 * S_Recency ;
1814993   +   H1x1_4  =    -0.34492981088566 * S_AcceptedCmpTotal
1814994   +          +     1.21190291017614 * S_Mnt  +    -8.17509176920502 *
1814995   +        S_MntMeatProducts  +    -1.48783679196456 * S_NumCatalogPurchases
1814996   +          +     -0.9509465201423 * S_RFMstat  +     0.48054774355638 *
1814997   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34492981088566 * S_AcceptedCmpTotal + 1.21190291017614 *
S_Mnt + -8.17509176920502 * S_MntMeatProducts + -1.48783679196456 * S_NumCatalogPurchases +
-0.9509465201423 * S_RFMstat + 0.48054774355638 * S_Recency ;
1814998   +   H1x1_5  =    -1.52519083391934 * S_AcceptedCmpTotal
1814999   +          +    -3.64608769152407 * S_Mnt  +    -6.52923883290239 *
1815000   +        S_MntMeatProducts  +      2.7900190963798 * S_NumCatalogPurchases
1815001   +          +     4.27091451171932 * S_RFMstat  +     2.19744854544492 *
1815002   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.52519083391934 * S_AcceptedCmpTotal + -3.64608769152407 *
S_Mnt + -6.52923883290239 * S_MntMeatProducts + 2.7900190963798 * S_NumCatalogPurchases +
4.27091451171932 * S_RFMstat + 2.19744854544492 * S_Recency ;
1815003   +   H1x1_1  =    -3.14760700594037 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.14760700594037 + H1x1_1 ;
1815004   +   H1x1_2  =     3.74367981551949 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.74367981551949 + H1x1_2 ;
1815005   +   H1x1_3  =     0.87862388051597 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87862388051597 + H1x1_3 ;
1815006   +   H1x1_4  =    -7.01266539803621 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.01266539803621 + H1x1_4 ;
1815007   +   H1x1_5  =     4.82694309436143 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.82694309436143 + H1x1_5 ;
1815008   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1815009   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1815010   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1815011   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1815012   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1815013   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1815014   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1815015   +END;
MPRINT(EM_DIAGRAM):   END;
1815016   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815017   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1815018   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1815019   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1815020   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1815021   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1815022   +END;
MPRINT(EM_DIAGRAM):   END;
1815023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815024   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1815025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815026   +
1815027   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1815028   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1815029   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1815030   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1815031   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1815032   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1815033   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1815034   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1815035   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1815036   +end;
MPRINT(EM_DIAGRAM):   end;
1815037   +else do;
MPRINT(EM_DIAGRAM):   else do;
1815038   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1815039   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1815040   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1815041   +   end;
MPRINT(EM_DIAGRAM):   end;
1815042   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1815043   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1815044   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1815045   +   end;
MPRINT(EM_DIAGRAM):   end;
1815046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1815047   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1815048   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1815049   +   end;
MPRINT(EM_DIAGRAM):   end;
1815050   +end;
MPRINT(EM_DIAGRAM):   end;
1815051   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815052   +   P_DepVar1  =     15.5046788281633 * H1x1_1  +    -4.66397711541227 * H1x1_2
1815053   +          +     4.82395074522384 * H1x1_3  +    -12.9633946998053 * H1x1_4
1815054   +          +    -2.45163227816589 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.5046788281633 * H1x1_1 + -4.66397711541227 * H1x1_2 +
4.82395074522384 * H1x1_3 + -12.9633946998053 * H1x1_4 + -2.45163227816589 * H1x1_5 ;
1815055   +   P_DepVar1  =    -0.48464899477516 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.48464899477516 + P_DepVar1 ;
1815056   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1815057   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1815058   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1815059   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1815060   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1815061   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1815062   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1815063   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1815064   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1815065   +END;
MPRINT(EM_DIAGRAM):   END;
1815066   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815067   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1815068   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1815069   +END;
MPRINT(EM_DIAGRAM):   END;
1815070   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1815071   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1815072   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1815073   +END;
MPRINT(EM_DIAGRAM):   END;
1815074   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1815075   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1815076   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1815077   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1815078   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1815079   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1815080   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1815081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815082   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1815083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815084   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1815085   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1815086   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1815087   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1815088   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1815089   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1815090   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1815091   +END;
MPRINT(EM_DIAGRAM):   END;
1815092   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1815093   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1815094   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1815095   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1815096   +* Renaming variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural27;
1815097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815098   +* Renaming Posterior variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural27;
1815099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815100   +drop AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar1;
1815101   +AutoNeural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar1 = P_DepVar1;
1815102   +drop AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar0;
1815103   +AutoNeural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar0 = P_DepVar0;
1815104   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815105   +* Renaming Into variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural27;
1815106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815107   +length AutoNeural27_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural27_I_DepVar $32;
1815108   +drop AutoNeural27_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_I_DepVar;
1815109   +AutoNeural27_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural27_I_DepVar = I_DepVar;
1815110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815111   +* Renaming _WARN_ variable for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural27;
1815112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815113   +length AutoNeural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural27_WARN_ $4;
1815114   +drop AutoNeural27_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_WARN_;
1815115   +AutoNeural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural27_WARN_ = _WARN_;
1815116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815117   +* Ensmbl53: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 6 of 7;
1815118   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815120   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1815121   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1815122   +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
1815123   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815124   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1815125   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1815126   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1815127   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1815128   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1815129   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1815130   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1815131   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1815132   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1815133   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1815134   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1815135   +LENGTH _WARN_ $4
1815136   +      F_DepVar  $ 12
1815137   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1815138   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1815139   +
1815140   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1815141   +
1815142   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1815143   +
1815144   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1815145   +
1815146   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1815147   +
1815148   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1815149   +
1815150   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1815151   +
1815152   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1815153   +
1815154   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1815155   +
1815156   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1815157   +
1815158   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1815159   +
1815160   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1815161   +
1815162   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1815163   +
1815164   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1815165   +
1815166   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1815167   +
1815168   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1815169   +
1815170   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1815171   +
1815172   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1815173   +
1815174   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1815175   +
1815176   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1815177   +
1815178   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1815179   +
1815180   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1815181   +
1815182   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1815183   +
1815184   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
1815185   +
1815186   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1815187   +
1815188   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1815189   +
1815190   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1815191   +
1815192   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1815193   +
1815194   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1815195   +
1815196   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1815197   +
1815198   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1815199   +
1815200   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1815201   +
1815202   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1815203   +
1815204   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1815205   +
1815206   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1815207   +
1815208   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
1815209   +
1815210   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1815211   +
1815212   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1815213   +
1815214   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1815215   +
1815216   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1815217   +
1815218   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1815219   +
1815220   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
1815221   +
1815222   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1815223   +
1815224   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1815225   +
1815226   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1815227   +
1815228   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1815229   +
1815230   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1815231   +
1815232   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1815233   +
1815234   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1815235   +
1815236   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1815237   +
1815238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815239   +*** Checking missing input Interval
1815240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1815241   +
1815242   +IF NMISS(
1815243   +   AcceptedCmpTotal ,
1815244   +   Mnt ,
1815245   +   MntMeatProducts ,
1815246   +   NumCatalogPurchases ,
1815247   +   RFMstat ,
1815248   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1815249   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1815250   +
1815251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1815252   +END;
MPRINT(EM_DIAGRAM):   END;
1815253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815254   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1815255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815256   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815257   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1815258   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1815259   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1815260   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1815261   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1815262   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1815263   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1815264   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1815265   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1815266   +END;
MPRINT(EM_DIAGRAM):   END;
1815267   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815268   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1815269   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1815270   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1815271   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1815272   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1815273   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1815274   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1815275   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1815276   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1815277   +   ELSE S_NumCatalogPurchases
1815278   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1815279   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1815280   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1815281   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1815282   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1815283   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1815284   +END;
MPRINT(EM_DIAGRAM):   END;
1815285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815286   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1815287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815288   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815289   +   H1x1_1  =     2.10717134491045 * S_AcceptedCmpTotal
1815290   +          +    -10.9799187882689 * S_Mnt  +     3.17619086363109 *
1815291   +        S_MntMeatProducts  +     0.58522050540174 * S_NumCatalogPurchases
1815292   +          +     0.10457500953086 * S_RFMstat  +    -0.59708195840656 *
1815293   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.10717134491045 * S_AcceptedCmpTotal + -10.9799187882689 *
S_Mnt + 3.17619086363109 * S_MntMeatProducts + 0.58522050540174 * S_NumCatalogPurchases +
0.10457500953086 * S_RFMstat + -0.59708195840656 * S_Recency ;
1815294   +   H1x1_2  =    -1.09600222674288 * S_AcceptedCmpTotal
1815295   +          +    -2.75188573882189 * S_Mnt  +     2.38829776780629 *
1815296   +        S_MntMeatProducts  +     2.37290115499231 * S_NumCatalogPurchases
1815297   +          +    -1.67864747205449 * S_RFMstat  +    -1.87700204299542 *
1815298   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.09600222674288 * S_AcceptedCmpTotal + -2.75188573882189 *
S_Mnt + 2.38829776780629 * S_MntMeatProducts + 2.37290115499231 * S_NumCatalogPurchases +
-1.67864747205449 * S_RFMstat + -1.87700204299542 * S_Recency ;
1815299   +   H1x1_3  =     0.24593136036671 * S_AcceptedCmpTotal
1815300   +          +     0.98275447305236 * S_Mnt  +     1.52686649163215 *
1815301   +        S_MntMeatProducts  +     1.08491172792697 * S_NumCatalogPurchases
1815302   +          +    -6.31220731697864 * S_RFMstat  +    -2.08472878456829 *
1815303   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.24593136036671 * S_AcceptedCmpTotal + 0.98275447305236 *
S_Mnt + 1.52686649163215 * S_MntMeatProducts + 1.08491172792697 * S_NumCatalogPurchases +
-6.31220731697864 * S_RFMstat + -2.08472878456829 * S_Recency ;
1815304   +   H1x1_4  =     1.35296744918554 * S_AcceptedCmpTotal
1815305   +          +    -3.58727753695297 * S_Mnt  +    -6.35187991517409 *
1815306   +        S_MntMeatProducts  +    -1.41725838894141 * S_NumCatalogPurchases
1815307   +          +     -2.5174617752956 * S_RFMstat  +     0.27284317719271 *
1815308   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.35296744918554 * S_AcceptedCmpTotal + -3.58727753695297 *
S_Mnt + -6.35187991517409 * S_MntMeatProducts + -1.41725838894141 * S_NumCatalogPurchases +
-2.5174617752956 * S_RFMstat + 0.27284317719271 * S_Recency ;
1815309   +   H1x1_5  =     1.41560412529603 * S_AcceptedCmpTotal
1815310   +          +     2.25142479190183 * S_Mnt  +      0.2775616702254 *
1815311   +        S_MntMeatProducts  +     -0.4118907005017 * S_NumCatalogPurchases
1815312   +          +     0.38803464834347 * S_RFMstat  +    -0.81750268679565 *
1815313   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.41560412529603 * S_AcceptedCmpTotal + 2.25142479190183 *
S_Mnt + 0.2775616702254 * S_MntMeatProducts + -0.4118907005017 * S_NumCatalogPurchases +
0.38803464834347 * S_RFMstat + -0.81750268679565 * S_Recency ;
1815314   +   H1x1_1  =    -1.94381314805925 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.94381314805925 + H1x1_1 ;
1815315   +   H1x1_2  =     -1.4831757685406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.4831757685406 + H1x1_2 ;
1815316   +   H1x1_3  =    -0.53539803191548 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.53539803191548 + H1x1_3 ;
1815317   +   H1x1_4  =    -5.07257058520645 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -5.07257058520645 + H1x1_4 ;
1815318   +   H1x1_5  =    -3.95581011117601 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.95581011117601 + H1x1_5 ;
1815319   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1815320   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1815321   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1815322   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1815323   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1815324   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1815325   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1815326   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1815327   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1815328   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1815329   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1815330   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1815331   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1815332   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1815333   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1815334   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1815335   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1815336   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1815337   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1815338   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1815339   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1815340   +END;
MPRINT(EM_DIAGRAM):   END;
1815341   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815342   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1815343   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1815344   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1815345   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1815346   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1815347   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1815348   +END;
MPRINT(EM_DIAGRAM):   END;
1815349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815350   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1815351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815352   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815353   +   H1x2_1  =    -1.55686119998165 * S_AcceptedCmpTotal
1815354   +          +    -0.26111571781978 * S_Mnt  +    -1.44938218805988 *
1815355   +        S_MntMeatProducts  +     0.04086123541942 * S_NumCatalogPurchases
1815356   +          +    -0.80214702507913 * S_RFMstat  +     0.70413979175849 *
1815357   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.55686119998165 * S_AcceptedCmpTotal + -0.26111571781978 *
S_Mnt + -1.44938218805988 * S_MntMeatProducts + 0.04086123541942 * S_NumCatalogPurchases +
-0.80214702507913 * S_RFMstat + 0.70413979175849 * S_Recency ;
1815358   +   H1x2_2  =    -1.89013114756444 * S_AcceptedCmpTotal
1815359   +          +     2.02645277032883 * S_Mnt  +     0.33300450318575 *
1815360   +        S_MntMeatProducts  +    -3.49523435320164 * S_NumCatalogPurchases
1815361   +          +    -0.54366042810185 * S_RFMstat  +    -0.96821243793862 *
1815362   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.89013114756444 * S_AcceptedCmpTotal + 2.02645277032883 *
S_Mnt + 0.33300450318575 * S_MntMeatProducts + -3.49523435320164 * S_NumCatalogPurchases +
-0.54366042810185 * S_RFMstat + -0.96821243793862 * S_Recency ;
1815363   +   H1x2_3  =    -0.37493223935971 * S_AcceptedCmpTotal
1815364   +          +     0.44222577344261 * S_Mnt  +    -2.29203252552751 *
1815365   +        S_MntMeatProducts  +    -2.51799836083289 * S_NumCatalogPurchases
1815366   +          +     0.79676408136588 * S_RFMstat  +    -1.33777715205059 *
1815367   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.37493223935971 * S_AcceptedCmpTotal + 0.44222577344261 *
S_Mnt + -2.29203252552751 * S_MntMeatProducts + -2.51799836083289 * S_NumCatalogPurchases +
0.79676408136588 * S_RFMstat + -1.33777715205059 * S_Recency ;
1815368   +   H1x2_4  =     0.61023216239118 * S_AcceptedCmpTotal
1815369   +          +     -1.2504451910923 * S_Mnt  +     1.08805550572067 *
1815370   +        S_MntMeatProducts  +     0.42462128634087 * S_NumCatalogPurchases
1815371   +          +     0.47301106041065 * S_RFMstat  +    -2.61753144043135 *
1815372   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.61023216239118 * S_AcceptedCmpTotal + -1.2504451910923 *
S_Mnt + 1.08805550572067 * S_MntMeatProducts + 0.42462128634087 * S_NumCatalogPurchases +
0.47301106041065 * S_RFMstat + -2.61753144043135 * S_Recency ;
1815373   +   H1x2_5  =    -1.41618915627784 * S_AcceptedCmpTotal
1815374   +          +    -1.13785141950187 * S_Mnt  +    -1.73667107974481 *
1815375   +        S_MntMeatProducts  +      3.1366199093076 * S_NumCatalogPurchases
1815376   +          +    -1.94563130199796 * S_RFMstat  +       2.512838942818 *
1815377   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.41618915627784 * S_AcceptedCmpTotal + -1.13785141950187 *
S_Mnt + -1.73667107974481 * S_MntMeatProducts + 3.1366199093076 * S_NumCatalogPurchases +
-1.94563130199796 * S_RFMstat + 2.512838942818 * S_Recency ;
1815378   +   H1x2_1  =     0.73112846873387 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73112846873387 + H1x2_1 ;
1815379   +   H1x2_2  =    -0.66717106615524 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.66717106615524 + H1x2_2 ;
1815380   +   H1x2_3  =      2.7125530739338 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.7125530739338 + H1x2_3 ;
1815381   +   H1x2_4  =    -1.39079027168122 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.39079027168122 + H1x2_4 ;
1815382   +   H1x2_5  =     -1.5266283403396 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.5266283403396 + H1x2_5 ;
1815383   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1815384   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1815385   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1815386   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1815387   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1815388   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1815389   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1815390   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1815391   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1815392   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1815393   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1815394   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1815395   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1815396   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1815397   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1815398   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1815399   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1815400   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1815401   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1815402   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1815403   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1815404   +END;
MPRINT(EM_DIAGRAM):   END;
1815405   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815406   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1815407   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1815408   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1815409   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1815410   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1815411   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1815412   +END;
MPRINT(EM_DIAGRAM):   END;
1815413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815414   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1815415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815416   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815417   +   H1x3_1  =     1.55893522013734 * S_AcceptedCmpTotal
1815418   +          +    -1.16802167955541 * S_Mnt  +    -1.60360119780136 *
1815419   +        S_MntMeatProducts  +     0.47774394371528 * S_NumCatalogPurchases
1815420   +          +      -0.530718682766 * S_RFMstat  +    -2.44187650282709 *
1815421   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.55893522013734 * S_AcceptedCmpTotal + -1.16802167955541 *
S_Mnt + -1.60360119780136 * S_MntMeatProducts + 0.47774394371528 * S_NumCatalogPurchases +
-0.530718682766 * S_RFMstat + -2.44187650282709 * S_Recency ;
1815422   +   H1x3_2  =     1.06465525219753 * S_AcceptedCmpTotal
1815423   +          +    -4.15619528335918 * S_Mnt  +     1.95067813512976 *
1815424   +        S_MntMeatProducts  +    -2.07670102753791 * S_NumCatalogPurchases
1815425   +          +     0.49910286851075 * S_RFMstat  +     0.93996026298479 *
1815426   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.06465525219753 * S_AcceptedCmpTotal + -4.15619528335918 *
S_Mnt + 1.95067813512976 * S_MntMeatProducts + -2.07670102753791 * S_NumCatalogPurchases +
0.49910286851075 * S_RFMstat + 0.93996026298479 * S_Recency ;
1815427   +   H1x3_3  =    -0.29105397796174 * S_AcceptedCmpTotal
1815428   +          +     2.11159454800566 * S_Mnt  +     1.67840031691295 *
1815429   +        S_MntMeatProducts  +    -2.40711178902336 * S_NumCatalogPurchases
1815430   +          +    -1.13747844076384 * S_RFMstat  +    -0.88756656082469 *
1815431   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.29105397796174 * S_AcceptedCmpTotal + 2.11159454800566 *
S_Mnt + 1.67840031691295 * S_MntMeatProducts + -2.40711178902336 * S_NumCatalogPurchases +
-1.13747844076384 * S_RFMstat + -0.88756656082469 * S_Recency ;
1815432   +   H1x3_4  =    -1.15703505358845 * S_AcceptedCmpTotal
1815433   +          +     0.30100889287849 * S_Mnt  +     0.55319963517684 *
1815434   +        S_MntMeatProducts  +    -0.02272785613118 * S_NumCatalogPurchases
1815435   +          +     0.43699534320691 * S_RFMstat  +     2.22910491450126 *
1815436   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.15703505358845 * S_AcceptedCmpTotal + 0.30100889287849 *
S_Mnt + 0.55319963517684 * S_MntMeatProducts + -0.02272785613118 * S_NumCatalogPurchases +
0.43699534320691 * S_RFMstat + 2.22910491450126 * S_Recency ;
1815437   +   H1x3_5  =    -0.42268650148557 * S_AcceptedCmpTotal
1815438   +          +    -2.38416083526034 * S_Mnt  +     2.41579845516974 *
1815439   +        S_MntMeatProducts  +     0.60973384003689 * S_NumCatalogPurchases
1815440   +          +    -1.12415629345715 * S_RFMstat  +    -0.59274912531616 *
1815441   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.42268650148557 * S_AcceptedCmpTotal + -2.38416083526034 *
S_Mnt + 2.41579845516974 * S_MntMeatProducts + 0.60973384003689 * S_NumCatalogPurchases +
-1.12415629345715 * S_RFMstat + -0.59274912531616 * S_Recency ;
1815442   +   H1x3_1  =     0.20894643335542 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.20894643335542 + H1x3_1 ;
1815443   +   H1x3_2  =     2.19187718990043 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 2.19187718990043 + H1x3_2 ;
1815444   +   H1x3_3  =    -0.63127842492526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.63127842492526 + H1x3_3 ;
1815445   +   H1x3_4  =     0.25735048029686 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25735048029686 + H1x3_4 ;
1815446   +   H1x3_5  =     0.02632857468412 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.02632857468412 + H1x3_5 ;
1815447   +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
1815448   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
1815449   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1815450   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
1815451   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
1815452   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
1815453   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
1815454   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
1815455   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
1815456   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
1815457   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
1815458   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
1815459   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
1815460   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
1815461   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
1815462   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
1815463   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
1815464   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
1815465   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
1815466   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
1815467   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
1815468   +END;
MPRINT(EM_DIAGRAM):   END;
1815469   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815470   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1815471   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1815472   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1815473   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1815474   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1815475   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
1815476   +END;
MPRINT(EM_DIAGRAM):   END;
1815477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815478   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1815479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815480   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815481   +   H2x1_1  =    -1.91284328958208 * H1x1_1  +     1.01368252878712 * H1x1_2
1815482   +          +     0.88385633780482 * H1x1_3  +     0.77249497316744 * H1x1_4
1815483   +          +    -1.68467525644522 * H1x1_5  +     0.22872788371043 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.91284328958208 * H1x1_1 + 1.01368252878712 * H1x1_2 +
0.88385633780482 * H1x1_3 + 0.77249497316744 * H1x1_4 + -1.68467525644522 * H1x1_5 +
0.22872788371043 * H1x1_6 ;
1815484   +   H2x1_2  =    -0.08913678495622 * H1x1_1  +    -0.95704614273187 * H1x1_2
1815485   +          +    -1.13959611313765 * H1x1_3  +    -0.83269840840553 * H1x1_4
1815486   +          +    -1.34839441082903 * H1x1_5  +      1.4617930846853 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.08913678495622 * H1x1_1 + -0.95704614273187 * H1x1_2 +
-1.13959611313765 * H1x1_3 + -0.83269840840553 * H1x1_4 + -1.34839441082903 * H1x1_5 +
1.4617930846853 * H1x1_6 ;
1815487   +   H2x1_3  =     1.19406467163652 * H1x1_1  +     1.10561638775412 * H1x1_2
1815488   +          +     3.50091937687106 * H1x1_3  +     -0.7408464567923 * H1x1_4
1815489   +          +     1.07741096211456 * H1x1_5  +     -1.0098240718302 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.19406467163652 * H1x1_1 + 1.10561638775412 * H1x1_2 +
3.50091937687106 * H1x1_3 + -0.7408464567923 * H1x1_4 + 1.07741096211456 * H1x1_5 +
-1.0098240718302 * H1x1_6 ;
1815490   +   H2x1_4  =    -3.50840251474163 * H1x1_1  +    -0.53688540920235 * H1x1_2
1815491   +          +    -2.44435438360824 * H1x1_3  +     4.64213676100195 * H1x1_4
1815492   +          +     0.36171420259161 * H1x1_5  +     0.11106499550345 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.50840251474163 * H1x1_1 + -0.53688540920235 * H1x1_2 +
-2.44435438360824 * H1x1_3 + 4.64213676100195 * H1x1_4 + 0.36171420259161 * H1x1_5 +
0.11106499550345 * H1x1_6 ;
1815493   +   H2x1_5  =    -0.92126735850423 * H1x1_1  +    -0.50015259068425 * H1x1_2
1815494   +          +    -2.75013936022633 * H1x1_3  +     1.29804156504555 * H1x1_4
1815495   +          +    -2.88854985509185 * H1x1_5  +     3.51037817476003 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.92126735850423 * H1x1_1 + -0.50015259068425 * H1x1_2 +
-2.75013936022633 * H1x1_3 + 1.29804156504555 * H1x1_4 + -2.88854985509185 * H1x1_5 +
3.51037817476003 * H1x1_6 ;
1815496   +   H2x1_6  =      2.7601365695399 * H1x1_1  +     0.60343333315883 * H1x1_2
1815497   +          +    -4.84088835213795 * H1x1_3  +     0.04677091451384 * H1x1_4
1815498   +          +     1.99119511166544 * H1x1_5  +    -1.84413878989067 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 2.7601365695399 * H1x1_1 + 0.60343333315883 * H1x1_2 +
-4.84088835213795 * H1x1_3 + 0.04677091451384 * H1x1_4 + 1.99119511166544 * H1x1_5 +
-1.84413878989067 * H1x1_6 ;
1815499   +   H2x1_1  = H2x1_1  +    -0.55299168308518 * H1x2_1
1815500   +          +    -0.70728759829892 * H1x2_2  +     0.02028723479846 * H1x2_3
1815501   +          +      2.1534144925678 * H1x2_4  +    -0.60181736829464 * H1x2_5
1815502   +          +    -0.96627475596267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.55299168308518 * H1x2_1 + -0.70728759829892 *
H1x2_2 + 0.02028723479846 * H1x2_3 + 2.1534144925678 * H1x2_4 + -0.60181736829464 * H1x2_5 +
-0.96627475596267 * H1x2_6 ;
1815503   +   H2x1_2  = H2x1_2  +     1.02776882707138 * H1x2_1
1815504   +          +    -0.26186544699712 * H1x2_2  +    -0.59804813597981 * H1x2_3
1815505   +          +     0.13683572328121 * H1x2_4  +     -0.4527430044725 * H1x2_5
1815506   +          +     0.09804477894859 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.02776882707138 * H1x2_1 + -0.26186544699712 * H1x2_2
+ -0.59804813597981 * H1x2_3 + 0.13683572328121 * H1x2_4 + -0.4527430044725 * H1x2_5 +
0.09804477894859 * H1x2_6 ;
1815507   +   H2x1_3  = H2x1_3  +    -1.37372644240513 * H1x2_1
1815508   +          +    -1.41411080054855 * H1x2_2  +    -0.85635388175337 * H1x2_3
1815509   +          +     1.78033736245689 * H1x2_4  +    -0.32277639652206 * H1x2_5
1815510   +          +    -0.10095907241792 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.37372644240513 * H1x2_1 + -1.41411080054855 *
H1x2_2 + -0.85635388175337 * H1x2_3 + 1.78033736245689 * H1x2_4 + -0.32277639652206 * H1x2_5 +
-0.10095907241792 * H1x2_6 ;
1815511   +   H2x1_4  = H2x1_4  +     0.38975073179429 * H1x2_1
1815512   +          +      1.7999626274739 * H1x2_2  +    -0.54595798920563 * H1x2_3
1815513   +          +    -2.87794569741229 * H1x2_4  +     2.24407851876424 * H1x2_5
1815514   +          +    -0.78007016861264 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.38975073179429 * H1x2_1 + 1.7999626274739 * H1x2_2 +
-0.54595798920563 * H1x2_3 + -2.87794569741229 * H1x2_4 + 2.24407851876424 * H1x2_5 +
-0.78007016861264 * H1x2_6 ;
1815515   +   H2x1_5  = H2x1_5  +     1.68407538128685 * H1x2_1
1815516   +          +     2.69111816059998 * H1x2_2  +     0.12927675826764 * H1x2_3
1815517   +          +     -1.7263485913587 * H1x2_4  +    -2.15741343790643 * H1x2_5
1815518   +          +     1.95855676074934 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.68407538128685 * H1x2_1 + 2.69111816059998 * H1x2_2
+ 0.12927675826764 * H1x2_3 + -1.7263485913587 * H1x2_4 + -2.15741343790643 * H1x2_5 +
1.95855676074934 * H1x2_6 ;
1815519   +   H2x1_6  = H2x1_6  +     0.31146846941645 * H1x2_1
1815520   +          +     0.33682375646593 * H1x2_2  +      1.6527641940739 * H1x2_3
1815521   +          +    -0.96403239328063 * H1x2_4  +    -1.11790253982232 * H1x2_5
1815522   +          +     -1.4251132059225 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 0.31146846941645 * H1x2_1 + 0.33682375646593 * H1x2_2
+ 1.6527641940739 * H1x2_3 + -0.96403239328063 * H1x2_4 + -1.11790253982232 * H1x2_5 +
-1.4251132059225 * H1x2_6 ;
1815523   +   H2x1_1  = H2x1_1  +     0.47301275142195 * H1x3_1
1815524   +          +    -1.23391488243925 * H1x3_2  +    -1.81348351496647 * H1x3_3
1815525   +          +    -0.66473016828009 * H1x3_4  +     1.27670685567846 * H1x3_5
1815526   +          +     0.38481934719452 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.47301275142195 * H1x3_1 + -1.23391488243925 * H1x3_2
+ -1.81348351496647 * H1x3_3 + -0.66473016828009 * H1x3_4 + 1.27670685567846 * H1x3_5 +
0.38481934719452 * H1x3_6 ;
1815527   +   H2x1_2  = H2x1_2  +     0.35549808536734 * H1x3_1
1815528   +          +     0.36201179536458 * H1x3_2  +     1.04726425834791 * H1x3_3
1815529   +          +    -1.08276187248251 * H1x3_4  +     0.74248193765521 * H1x3_5
1815530   +          +     1.87596859340821 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.35549808536734 * H1x3_1 + 0.36201179536458 * H1x3_2
+ 1.04726425834791 * H1x3_3 + -1.08276187248251 * H1x3_4 + 0.74248193765521 * H1x3_5 +
1.87596859340821 * H1x3_6 ;
1815531   +   H2x1_3  = H2x1_3  +    -0.36667720681998 * H1x3_1
1815532   +          +      0.5256210995417 * H1x3_2  +    -0.44860423311788 * H1x3_3
1815533   +          +    -0.20913840911463 * H1x3_4  +    -0.76258888517092 * H1x3_5
1815534   +          +     0.20457555210609 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.36667720681998 * H1x3_1 + 0.5256210995417 * H1x3_2
+ -0.44860423311788 * H1x3_3 + -0.20913840911463 * H1x3_4 + -0.76258888517092 * H1x3_5 +
0.20457555210609 * H1x3_6 ;
1815535   +   H2x1_4  = H2x1_4  +     -0.5052323966606 * H1x3_1
1815536   +          +     0.57348008947054 * H1x3_2  +     0.36313882476736 * H1x3_3
1815537   +          +     2.54509537428676 * H1x3_4  +    -1.40462445002153 * H1x3_5
1815538   +          +     1.76488988390401 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.5052323966606 * H1x3_1 + 0.57348008947054 * H1x3_2
+ 0.36313882476736 * H1x3_3 + 2.54509537428676 * H1x3_4 + -1.40462445002153 * H1x3_5 +
1.76488988390401 * H1x3_6 ;
1815539   +   H2x1_5  = H2x1_5  +     -0.4555917406867 * H1x3_1
1815540   +          +     0.52745581365834 * H1x3_2  +    -0.82303556180885 * H1x3_3
1815541   +          +    -0.78981386250305 * H1x3_4  +     0.09307958113664 * H1x3_5
1815542   +          +     1.63202351822216 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.4555917406867 * H1x3_1 + 0.52745581365834 * H1x3_2
+ -0.82303556180885 * H1x3_3 + -0.78981386250305 * H1x3_4 + 0.09307958113664 * H1x3_5 +
1.63202351822216 * H1x3_6 ;
1815543   +   H2x1_6  = H2x1_6  +    -0.57563015009902 * H1x3_1
1815544   +          +     2.47575184377805 * H1x3_2  +    -0.91958118957044 * H1x3_3
1815545   +          +    -1.67916721690516 * H1x3_4  +     0.69514147486102 * H1x3_5
1815546   +          +    -0.75070900812889 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.57563015009902 * H1x3_1 + 2.47575184377805 * H1x3_2
+ -0.91958118957044 * H1x3_3 + -1.67916721690516 * H1x3_4 + 0.69514147486102 * H1x3_5 +
-0.75070900812889 * H1x3_6 ;
1815547   +   H2x1_1  =     0.44089803005479 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.44089803005479 + H2x1_1 ;
1815548   +   H2x1_2  =     0.84182794358826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84182794358826 + H2x1_2 ;
1815549   +   H2x1_3  =     0.09803371201388 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.09803371201388 + H2x1_3 ;
1815550   +   H2x1_4  =      -0.624591248343 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.624591248343 + H2x1_4 ;
1815551   +   H2x1_5  =      0.7596943675806 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.7596943675806 + H2x1_5 ;
1815552   +   H2x1_6  =     1.86613856151687 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.86613856151687 + H2x1_6 ;
1815553   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1815554   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1815555   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1815556   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1815557   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1815558   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1815559   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1815560   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1815561   +END;
MPRINT(EM_DIAGRAM):   END;
1815562   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815563   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1815564   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1815565   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1815566   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1815567   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1815568   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1815569   +END;
MPRINT(EM_DIAGRAM):   END;
1815570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815571   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1815572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815573   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815574   +   H2x2_1  =    -0.67599100831955 * H1x1_1  +     0.24077189312828 * H1x1_2
1815575   +          +      0.2000763543409 * H1x1_3  +    -1.82199808794926 * H1x1_4
1815576   +          +    -0.63614429983717 * H1x1_5  +     0.35027369588915 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.67599100831955 * H1x1_1 + 0.24077189312828 * H1x1_2 +
0.2000763543409 * H1x1_3 + -1.82199808794926 * H1x1_4 + -0.63614429983717 * H1x1_5 +
0.35027369588915 * H1x1_6 ;
1815577   +   H2x2_2  =    -2.86273409671688 * H1x1_1  +    -1.17210014090039 * H1x1_2
1815578   +          +     2.79815832312648 * H1x1_3  +     0.46361776813305 * H1x1_4
1815579   +          +      0.0798677597958 * H1x1_5  +    -0.75991454790943 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -2.86273409671688 * H1x1_1 + -1.17210014090039 * H1x1_2 +
2.79815832312648 * H1x1_3 + 0.46361776813305 * H1x1_4 + 0.0798677597958 * H1x1_5 +
-0.75991454790943 * H1x1_6 ;
1815580   +   H2x2_3  =     -0.6739829418862 * H1x1_1  +    -2.31169428380278 * H1x1_2
1815581   +          +     2.10300119718615 * H1x1_3  +    -0.00742357063683 * H1x1_4
1815582   +          +    -1.51041651747244 * H1x1_5  +    -0.17010696636548 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.6739829418862 * H1x1_1 + -2.31169428380278 * H1x1_2 +
2.10300119718615 * H1x1_3 + -0.00742357063683 * H1x1_4 + -1.51041651747244 * H1x1_5 +
-0.17010696636548 * H1x1_6 ;
1815583   +   H2x2_4  =    -1.50678102953218 * H1x1_1  +    -0.89959733379076 * H1x1_2
1815584   +          +     1.08933879000366 * H1x1_3  +      0.4160027440208 * H1x1_4
1815585   +          +     0.96602358671281 * H1x1_5  +     2.49695921665153 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.50678102953218 * H1x1_1 + -0.89959733379076 * H1x1_2 +
1.08933879000366 * H1x1_3 + 0.4160027440208 * H1x1_4 + 0.96602358671281 * H1x1_5 +
2.49695921665153 * H1x1_6 ;
1815586   +   H2x2_5  =      0.7197781324018 * H1x1_1  +     0.65156339723506 * H1x1_2
1815587   +          +     1.10688522196469 * H1x1_3  +    -0.18317373714845 * H1x1_4
1815588   +          +    -0.41607265841802 * H1x1_5  +    -1.97247962280317 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.7197781324018 * H1x1_1 + 0.65156339723506 * H1x1_2 +
1.10688522196469 * H1x1_3 + -0.18317373714845 * H1x1_4 + -0.41607265841802 * H1x1_5 +
-1.97247962280317 * H1x1_6 ;
1815589   +   H2x2_6  =     0.54986188496659 * H1x1_1  +    -1.79839449870258 * H1x1_2
1815590   +          +    -1.15036560870119 * H1x1_3  +     1.47969678061941 * H1x1_4
1815591   +          +     0.10597867235187 * H1x1_5  +     0.90300533681641 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.54986188496659 * H1x1_1 + -1.79839449870258 * H1x1_2 +
-1.15036560870119 * H1x1_3 + 1.47969678061941 * H1x1_4 + 0.10597867235187 * H1x1_5 +
0.90300533681641 * H1x1_6 ;
1815592   +   H2x2_1  = H2x2_1  +    -0.21000305943834 * H1x2_1
1815593   +          +    -0.32875528993365 * H1x2_2  +    -2.01191741391886 * H1x2_3
1815594   +          +     0.25433844143017 * H1x2_4  +    -0.22353514971516 * H1x2_5
1815595   +          +    -1.39994531215362 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21000305943834 * H1x2_1 + -0.32875528993365 *
H1x2_2 + -2.01191741391886 * H1x2_3 + 0.25433844143017 * H1x2_4 + -0.22353514971516 * H1x2_5 +
-1.39994531215362 * H1x2_6 ;
1815596   +   H2x2_2  = H2x2_2  +     0.97984435202354 * H1x2_1
1815597   +          +    -0.32249690006833 * H1x2_2  +    -1.39997315416199 * H1x2_3
1815598   +          +     -2.7808281862933 * H1x2_4  +    -0.16292745421241 * H1x2_5
1815599   +          +    -0.40444669273525 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.97984435202354 * H1x2_1 + -0.32249690006833 * H1x2_2
+ -1.39997315416199 * H1x2_3 + -2.7808281862933 * H1x2_4 + -0.16292745421241 * H1x2_5 +
-0.40444669273525 * H1x2_6 ;
1815600   +   H2x2_3  = H2x2_3  +      1.7332207906399 * H1x2_1
1815601   +          +     0.48772690844604 * H1x2_2  +    -0.03702571322482 * H1x2_3
1815602   +          +    -0.04073364631727 * H1x2_4  +    -0.91191013457442 * H1x2_5
1815603   +          +    -2.38736049861996 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.7332207906399 * H1x2_1 + 0.48772690844604 * H1x2_2 +
-0.03702571322482 * H1x2_3 + -0.04073364631727 * H1x2_4 + -0.91191013457442 * H1x2_5 +
-2.38736049861996 * H1x2_6 ;
1815604   +   H2x2_4  = H2x2_4  +    -0.06792429668775 * H1x2_1
1815605   +          +    -3.07222522712126 * H1x2_2  +     0.01320929156379 * H1x2_3
1815606   +          +     0.84459091213222 * H1x2_4  +    -0.95949143247045 * H1x2_5
1815607   +          +     0.02632878191094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.06792429668775 * H1x2_1 + -3.07222522712126 *
H1x2_2 + 0.01320929156379 * H1x2_3 + 0.84459091213222 * H1x2_4 + -0.95949143247045 * H1x2_5 +
0.02632878191094 * H1x2_6 ;
1815608   +   H2x2_5  = H2x2_5  +     0.13831659235384 * H1x2_1
1815609   +          +    -1.75598160312232 * H1x2_2  +     0.17047671926062 * H1x2_3
1815610   +          +    -0.45409084878331 * H1x2_4  +    -1.17540122389603 * H1x2_5
1815611   +          +     0.79706245066425 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 0.13831659235384 * H1x2_1 + -1.75598160312232 * H1x2_2
+ 0.17047671926062 * H1x2_3 + -0.45409084878331 * H1x2_4 + -1.17540122389603 * H1x2_5 +
0.79706245066425 * H1x2_6 ;
1815612   +   H2x2_6  = H2x2_6  +     1.74450762507234 * H1x2_1
1815613   +          +    -0.18999736448811 * H1x2_2  +    -0.82200918268165 * H1x2_3
1815614   +          +      1.8752098314092 * H1x2_4  +    -0.55366925571085 * H1x2_5
1815615   +          +     1.96032751350518 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.74450762507234 * H1x2_1 + -0.18999736448811 * H1x2_2
+ -0.82200918268165 * H1x2_3 + 1.8752098314092 * H1x2_4 + -0.55366925571085 * H1x2_5 +
1.96032751350518 * H1x2_6 ;
1815616   +   H2x2_1  = H2x2_1  +     1.05088385328525 * H1x3_1
1815617   +          +    -1.18748050069472 * H1x3_2  +     0.33686598960541 * H1x3_3
1815618   +          +     0.60467968457853 * H1x3_4  +     0.44997942659683 * H1x3_5
1815619   +          +     0.86372067144364 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.05088385328525 * H1x3_1 + -1.18748050069472 * H1x3_2
+ 0.33686598960541 * H1x3_3 + 0.60467968457853 * H1x3_4 + 0.44997942659683 * H1x3_5 +
0.86372067144364 * H1x3_6 ;
1815620   +   H2x2_2  = H2x2_2  +     0.54489966189284 * H1x3_1
1815621   +          +     0.63828892530684 * H1x3_2  +     1.36576672067523 * H1x3_3
1815622   +          +    -0.93080386349548 * H1x3_4  +    -0.53645684858865 * H1x3_5
1815623   +          +     0.80254310887989 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54489966189284 * H1x3_1 + 0.63828892530684 * H1x3_2
+ 1.36576672067523 * H1x3_3 + -0.93080386349548 * H1x3_4 + -0.53645684858865 * H1x3_5 +
0.80254310887989 * H1x3_6 ;
1815624   +   H2x2_3  = H2x2_3  +    -0.43326705547287 * H1x3_1
1815625   +          +     1.62130917530395 * H1x3_2  +     -1.9569471371487 * H1x3_3
1815626   +          +    -0.16690355216427 * H1x3_4  +     0.76588074497881 * H1x3_5
1815627   +          +    -0.80961698509146 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.43326705547287 * H1x3_1 + 1.62130917530395 * H1x3_2
+ -1.9569471371487 * H1x3_3 + -0.16690355216427 * H1x3_4 + 0.76588074497881 * H1x3_5 +
-0.80961698509146 * H1x3_6 ;
1815628   +   H2x2_4  = H2x2_4  +     0.14186336769381 * H1x3_1
1815629   +          +    -0.40313769302155 * H1x3_2  +     0.32907477170578 * H1x3_3
1815630   +          +    -0.09559287343495 * H1x3_4  +     1.23870853269954 * H1x3_5
1815631   +          +    -1.29909553454934 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.14186336769381 * H1x3_1 + -0.40313769302155 * H1x3_2
+ 0.32907477170578 * H1x3_3 + -0.09559287343495 * H1x3_4 + 1.23870853269954 * H1x3_5 +
-1.29909553454934 * H1x3_6 ;
1815632   +   H2x2_5  = H2x2_5  +    -0.23962567636847 * H1x3_1
1815633   +          +    -0.40709618711343 * H1x3_2  +    -1.68479406479753 * H1x3_3
1815634   +          +     0.70815879664382 * H1x3_4  +    -0.08013794063462 * H1x3_5
1815635   +          +      0.3854653698129 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.23962567636847 * H1x3_1 + -0.40709618711343 *
H1x3_2 + -1.68479406479753 * H1x3_3 + 0.70815879664382 * H1x3_4 + -0.08013794063462 * H1x3_5 +
0.3854653698129 * H1x3_6 ;
1815636   +   H2x2_6  = H2x2_6  +     0.30227974563111 * H1x3_1
1815637   +          +    -0.74687752968448 * H1x3_2  +     1.36415251312446 * H1x3_3
1815638   +          +     1.81088044806083 * H1x3_4  +     1.05534281539066 * H1x3_5
1815639   +          +    -0.43429796112944 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.30227974563111 * H1x3_1 + -0.74687752968448 * H1x3_2
+ 1.36415251312446 * H1x3_3 + 1.81088044806083 * H1x3_4 + 1.05534281539066 * H1x3_5 +
-0.43429796112944 * H1x3_6 ;
1815640   +   H2x2_1  =     0.63184708368306 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63184708368306 + H2x2_1 ;
1815641   +   H2x2_2  =     0.84907350596357 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.84907350596357 + H2x2_2 ;
1815642   +   H2x2_3  =    -0.73809203587584 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.73809203587584 + H2x2_3 ;
1815643   +   H2x2_4  =    -0.43815853180498 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.43815853180498 + H2x2_4 ;
1815644   +   H2x2_5  =     0.21738444698009 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.21738444698009 + H2x2_5 ;
1815645   +   H2x2_6  =     0.35336989078545 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.35336989078545 + H2x2_6 ;
1815646   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1815647   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1815648   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
1815649   +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
1815650   +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
1815651   +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
1815652   +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
1815653   +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
1815654   +END;
MPRINT(EM_DIAGRAM):   END;
1815655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815656   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1815657   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1815658   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1815659   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1815660   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1815661   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
1815662   +END;
MPRINT(EM_DIAGRAM):   END;
1815663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815664   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1815665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815666   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815667   +   H3x1_1  =     0.88232318111379 * H2x1_1  +     0.33230222316203 * H2x1_2
1815668   +          +     1.74392107555271 * H2x1_3  +    -1.04185063882146 * H2x1_4
1815669   +          +    -0.63105511848819 * H2x1_5  +    -1.05088304858423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.88232318111379 * H2x1_1 + 0.33230222316203 * H2x1_2 +
1.74392107555271 * H2x1_3 + -1.04185063882146 * H2x1_4 + -0.63105511848819 * H2x1_5 +
-1.05088304858423 * H2x1_6 ;
1815670   +   H3x1_2  =     1.11736284857762 * H2x1_1  +     1.90660007278783 * H2x1_2
1815671   +          +    -0.38007206174956 * H2x1_3  +     0.37265047043174 * H2x1_4
1815672   +          +     2.27208664894129 * H2x1_5  +     0.87150445612099 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.11736284857762 * H2x1_1 + 1.90660007278783 * H2x1_2 +
-0.38007206174956 * H2x1_3 + 0.37265047043174 * H2x1_4 + 2.27208664894129 * H2x1_5 +
0.87150445612099 * H2x1_6 ;
1815673   +   H3x1_3  =    -1.47841270668706 * H2x1_1  +    -1.28441896803313 * H2x1_2
1815674   +          +     1.95549364222924 * H2x1_3  +    -2.50484940312791 * H2x1_4
1815675   +          +    -2.84934238039874 * H2x1_5  +     2.18013446750751 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.47841270668706 * H2x1_1 + -1.28441896803313 * H2x1_2 +
1.95549364222924 * H2x1_3 + -2.50484940312791 * H2x1_4 + -2.84934238039874 * H2x1_5 +
2.18013446750751 * H2x1_6 ;
1815676   +   H3x1_4  =     1.91981096223784 * H2x1_1  +     2.50981387206546 * H2x1_2
1815677   +          +     1.52848474440169 * H2x1_3  +    -1.77653121606781 * H2x1_4
1815678   +          +    -1.17059017641066 * H2x1_5  +     0.08630071934474 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.91981096223784 * H2x1_1 + 2.50981387206546 * H2x1_2 +
1.52848474440169 * H2x1_3 + -1.77653121606781 * H2x1_4 + -1.17059017641066 * H2x1_5 +
0.08630071934474 * H2x1_6 ;
1815679   +   H3x1_5  =    -0.90689901549977 * H2x1_1  +    -0.28920884601352 * H2x1_2
1815680   +          +     0.19367561691053 * H2x1_3  +    -1.64382922054024 * H2x1_4
1815681   +          +    -1.27645531071461 * H2x1_5  +     2.78368081292476 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.90689901549977 * H2x1_1 + -0.28920884601352 * H2x1_2 +
0.19367561691053 * H2x1_3 + -1.64382922054024 * H2x1_4 + -1.27645531071461 * H2x1_5 +
2.78368081292476 * H2x1_6 ;
1815682   +   H3x1_6  =     1.79097710546589 * H2x1_1  +     0.62195006841522 * H2x1_2
1815683   +          +     0.38238495192417 * H2x1_3  +     0.38117337455775 * H2x1_4
1815684   +          +     0.31232345193628 * H2x1_5  +     1.64288571863932 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.79097710546589 * H2x1_1 + 0.62195006841522 * H2x1_2 +
0.38238495192417 * H2x1_3 + 0.38117337455775 * H2x1_4 + 0.31232345193628 * H2x1_5 +
1.64288571863932 * H2x1_6 ;
1815685   +   H3x1_1  = H3x1_1  +    -0.29610176935088 * H2x2_1
1815686   +          +    -0.05687019870114 * H2x2_2  +     0.19276816813006 * H2x2_3
1815687   +          +    -0.02919428123272 * H2x2_4  +     -0.1225189756077 * H2x2_5
1815688   +          +     0.35216486042215 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.29610176935088 * H2x2_1 + -0.05687019870114 *
H2x2_2 + 0.19276816813006 * H2x2_3 + -0.02919428123272 * H2x2_4 + -0.1225189756077 * H2x2_5 +
0.35216486042215 * H2x2_6 ;
1815689   +   H3x1_2  = H3x1_2  +    -0.65560935360323 * H2x2_1
1815690   +          +     1.14492037534385 * H2x2_2  +    -0.73840836071645 * H2x2_3
1815691   +          +      1.3947576688638 * H2x2_4  +    -0.01317619212955 * H2x2_5
1815692   +          +    -0.91648595761636 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -0.65560935360323 * H2x2_1 + 1.14492037534385 * H2x2_2
+ -0.73840836071645 * H2x2_3 + 1.3947576688638 * H2x2_4 + -0.01317619212955 * H2x2_5 +
-0.91648595761636 * H2x2_6 ;
1815693   +   H3x1_3  = H3x1_3  +    -0.53127332055291 * H2x2_1
1815694   +          +     0.36262088215518 * H2x2_2  +     2.77585954813321 * H2x2_3
1815695   +          +     1.38261906942485 * H2x2_4  +    -0.22635906489825 * H2x2_5
1815696   +          +    -2.11281855575499 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.53127332055291 * H2x2_1 + 0.36262088215518 * H2x2_2
+ 2.77585954813321 * H2x2_3 + 1.38261906942485 * H2x2_4 + -0.22635906489825 * H2x2_5 +
-2.11281855575499 * H2x2_6 ;
1815697   +   H3x1_4  = H3x1_4  +     0.10255243516649 * H2x2_1
1815698   +          +    -0.19237607982949 * H2x2_2  +    -0.39440266749795 * H2x2_3
1815699   +          +     0.62091379272854 * H2x2_4  +    -0.71121773171613 * H2x2_5
1815700   +          +     0.57305821692201 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.10255243516649 * H2x2_1 + -0.19237607982949 * H2x2_2
+ -0.39440266749795 * H2x2_3 + 0.62091379272854 * H2x2_4 + -0.71121773171613 * H2x2_5 +
0.57305821692201 * H2x2_6 ;
1815701   +   H3x1_5  = H3x1_5  +     1.38760232745985 * H2x2_1
1815702   +          +    -0.67366859881604 * H2x2_2  +     0.73667853659073 * H2x2_3
1815703   +          +     0.48338791573814 * H2x2_4  +    -1.86204960161547 * H2x2_5
1815704   +          +     2.06401699674057 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 1.38760232745985 * H2x2_1 + -0.67366859881604 * H2x2_2
+ 0.73667853659073 * H2x2_3 + 0.48338791573814 * H2x2_4 + -1.86204960161547 * H2x2_5 +
2.06401699674057 * H2x2_6 ;
1815705   +   H3x1_6  = H3x1_6  +     1.58403061991045 * H2x2_1
1815706   +          +    -1.98415138001436 * H2x2_2  +    -2.65270828558486 * H2x2_3
1815707   +          +     0.24663962279095 * H2x2_4  +    -0.13610124747178 * H2x2_5
1815708   +          +     0.08850124295188 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.58403061991045 * H2x2_1 + -1.98415138001436 * H2x2_2
+ -2.65270828558486 * H2x2_3 + 0.24663962279095 * H2x2_4 + -0.13610124747178 * H2x2_5 +
0.08850124295188 * H2x2_6 ;
1815709   +   H3x1_1  =    -0.38359896864958 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.38359896864958 + H3x1_1 ;
1815710   +   H3x1_2  =     0.71155840570573 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.71155840570573 + H3x1_2 ;
1815711   +   H3x1_3  =     0.51799749231142 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.51799749231142 + H3x1_3 ;
1815712   +   H3x1_4  =     0.67952932286733 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.67952932286733 + H3x1_4 ;
1815713   +   H3x1_5  =    -0.81394067979603 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.81394067979603 + H3x1_5 ;
1815714   +   H3x1_6  =    -0.01596290366203 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.01596290366203 + H3x1_6 ;
1815715   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
1815716   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
1815717   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
1815718   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
1815719   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
1815720   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
1815721   +END;
MPRINT(EM_DIAGRAM):   END;
1815722   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815723   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1815724   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1815725   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1815726   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1815727   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1815728   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
1815729   +END;
MPRINT(EM_DIAGRAM):   END;
1815730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815731   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1815732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815733   +
1815734   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1815735   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1815736   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1815737   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1815738   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1815739   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1815740   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1815741   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1815742   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1815743   +end;
MPRINT(EM_DIAGRAM):   end;
1815744   +else do;
MPRINT(EM_DIAGRAM):   else do;
1815745   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1815746   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1815747   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1815748   +   end;
MPRINT(EM_DIAGRAM):   end;
1815749   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1815750   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1815751   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1815752   +   end;
MPRINT(EM_DIAGRAM):   end;
1815753   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1815754   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1815755   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1815756   +   end;
MPRINT(EM_DIAGRAM):   end;
1815757   +end;
MPRINT(EM_DIAGRAM):   end;
1815758   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815759   +   P_DepVar1  =     0.28094469007064 * H3x1_1  +     4.40543517205109 * H3x1_2
1815760   +          +     4.58780022403482 * H3x1_3  +    -1.49344393871597 * H3x1_4
1815761   +          +     3.15120047821915 * H3x1_5  +    -1.83744247169269 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28094469007064 * H3x1_1 + 4.40543517205109 * H3x1_2 +
4.58780022403482 * H3x1_3 + -1.49344393871597 * H3x1_4 + 3.15120047821915 * H3x1_5 +
-1.83744247169269 * H3x1_6 ;
1815762   +   P_DepVar1  =     -2.1680951408523 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.1680951408523 + P_DepVar1 ;
1815763   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1815764   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1815765   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1815766   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1815767   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1815768   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1815769   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1815770   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1815771   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1815772   +END;
MPRINT(EM_DIAGRAM):   END;
1815773   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815774   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1815775   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1815776   +END;
MPRINT(EM_DIAGRAM):   END;
1815777   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1815778   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1815779   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1815780   +END;
MPRINT(EM_DIAGRAM):   END;
1815781   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1815782   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1815783   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1815784   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1815785   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1815786   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1815787   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1815788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815789   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1815790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815791   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1815792   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1815793   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1815794   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1815795   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1815796   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1815797   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1815798   +END;
MPRINT(EM_DIAGRAM):   END;
1815799   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1815800   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1815801   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1815802   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1815803   +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
1815804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815805   +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
1815806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815807   +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
1815808   +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
1815809   +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
1815810   +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
1815811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815812   +* Renaming Into variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural28;
1815813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815814   +length AutoNeural28_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural28_I_DepVar $32;
1815815   +drop AutoNeural28_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_I_DepVar;
1815816   +AutoNeural28_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural28_I_DepVar = I_DepVar;
1815817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815818   +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
1815819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815820   +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
1815821   +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
1815822   +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
1815823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815824   +* Ensmbl53: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 7 of 7;
1815825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815827   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1815828   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1815829   +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
1815830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815831   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1815832   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1815833   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1815834   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1815835   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1815836   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1815837   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1815838   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1815839   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1815840   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1815841   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1815842   +LENGTH _WARN_ $4
1815843   +      F_DepVar  $ 12
1815844   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1815845   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1815846   +
1815847   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1815848   +
1815849   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1815850   +
1815851   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1815852   +
1815853   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1815854   +
1815855   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1815856   +
1815857   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1815858   +
1815859   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1815860   +
1815861   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1815862   +
1815863   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1815864   +
1815865   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1815866   +
1815867   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1815868   +
1815869   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1815870   +
1815871   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1815872   +
1815873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815874   +*** Checking missing input Interval
1815875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1815876   +
1815877   +IF NMISS(
1815878   +   AcceptedCmpTotal ,
1815879   +   Mnt ,
1815880   +   MntMeatProducts ,
1815881   +   NumCatalogPurchases ,
1815882   +   RFMstat ,
1815883   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1815884   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1815885   +
1815886   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1815887   +END;
MPRINT(EM_DIAGRAM):   END;
1815888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815889   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1815890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815891   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815892   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1815893   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1815894   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1815895   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1815896   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1815897   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1815898   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1815899   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1815900   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1815901   +END;
MPRINT(EM_DIAGRAM):   END;
1815902   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815903   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1815904   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1815905   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1815906   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1815907   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1815908   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1815909   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1815910   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1815911   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1815912   +   ELSE S_NumCatalogPurchases
1815913   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1815914   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1815915   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1815916   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1815917   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1815918   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1815919   +END;
MPRINT(EM_DIAGRAM):   END;
1815920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815921   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1815922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815923   +
1815924   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1815925   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1815926   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1815927   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1815928   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1815929   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1815930   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1815931   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1815932   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1815933   +end;
MPRINT(EM_DIAGRAM):   end;
1815934   +else do;
MPRINT(EM_DIAGRAM):   else do;
1815935   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1815936   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1815937   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1815938   +   end;
MPRINT(EM_DIAGRAM):   end;
1815939   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1815940   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1815941   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1815942   +   end;
MPRINT(EM_DIAGRAM):   end;
1815943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1815944   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1815945   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1815946   +   end;
MPRINT(EM_DIAGRAM):   end;
1815947   +end;
MPRINT(EM_DIAGRAM):   end;
1815948   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1815949   +   P_DepVar1  =     1.05169539250812 * S_AcceptedCmpTotal
1815950   +          +    -1.01535799807127 * S_Mnt  +     0.90249216466184 *
1815951   +        S_MntMeatProducts  +     0.55600820704456 * S_NumCatalogPurchases
1815952   +          +     0.11616609536854 * S_RFMstat  +    -1.16391829324819 *
1815953   +        S_Recency ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.05169539250812 * S_AcceptedCmpTotal + -1.01535799807127 *
S_Mnt + 0.90249216466184 * S_MntMeatProducts + 0.55600820704456 * S_NumCatalogPurchases +
0.11616609536854 * S_RFMstat + -1.16391829324819 * S_Recency ;
1815954   +   P_DepVar1  =    -2.23938090727264 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23938090727264 + P_DepVar1 ;
1815955   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1815956   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1815957   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1815958   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1815959   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1815960   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1815961   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1815962   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1815963   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1815964   +END;
MPRINT(EM_DIAGRAM):   END;
1815965   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1815966   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1815967   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1815968   +END;
MPRINT(EM_DIAGRAM):   END;
1815969   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1815970   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1815971   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1815972   +END;
MPRINT(EM_DIAGRAM):   END;
1815973   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1815974   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1815975   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1815976   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1815977   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1815978   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1815979   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1815980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815981   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1815982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1815983   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1815984   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1815985   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1815986   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1815987   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1815988   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1815989   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1815990   +END;
MPRINT(EM_DIAGRAM):   END;
1815991   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1815992   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1815993   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1815994   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1815995   +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
1815996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815997   +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
1815998   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1815999   +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
1816000   +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
1816001   +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
1816002   +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
1816003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816004   +* Renaming Into variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural29;
1816005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816006   +length AutoNeural29_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural29_I_DepVar $32;
1816007   +drop AutoNeural29_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_I_DepVar;
1816008   +AutoNeural29_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural29_I_DepVar = I_DepVar;
1816009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816010   +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
1816011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816012   +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
1816013   +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
1816014   +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
1816015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816016   +* Ensmbl53: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Voting to produce predicted target;
1816017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816018   +array Ensmbl53_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl53_post{2} _temporary_;
1816019   +array Ensmbl53_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl53_count{2} _temporary_;
1816020   +array Ensmbl53_level{2} $32 _temporary_ (
1816021   +"1"
1816022   +"0"
1816023   +);
MPRINT(EM_DIAGRAM):   array Ensmbl53_level{2} $32 _temporary_ ( "1" "0" );
1816024   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1816025   +Ensmbl53_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{i} = 0;
1816026   +Ensmbl53_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{i} = 0;
1816027   +end;
MPRINT(EM_DIAGRAM):   end;
1816028   +if AutoNeural30_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural30_I_DepVar = Ensmbl53_level{1} then do;
1816029   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1816030   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural30_P_DepVar1;
1816031   +end;
MPRINT(EM_DIAGRAM):   end;
1816032   +if AutoNeural31_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural31_I_DepVar = Ensmbl53_level{1} then do;
1816033   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1816034   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural31_P_DepVar1;
1816035   +end;
MPRINT(EM_DIAGRAM):   end;
1816036   +if AutoNeural32_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural32_I_DepVar = Ensmbl53_level{1} then do;
1816037   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1816038   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural32_P_DepVar1;
1816039   +end;
MPRINT(EM_DIAGRAM):   end;
1816040   +if AutoNeural33_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural33_I_DepVar = Ensmbl53_level{1} then do;
1816041   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1816042   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural33_P_DepVar1;
1816043   +end;
MPRINT(EM_DIAGRAM):   end;
1816044   +if AutoNeural27_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural27_I_DepVar = Ensmbl53_level{1} then do;
1816045   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1816046   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural27_P_DepVar1;
1816047   +end;
MPRINT(EM_DIAGRAM):   end;
1816048   +if AutoNeural28_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural28_I_DepVar = Ensmbl53_level{1} then do;
1816049   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1816050   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural28_P_DepVar1;
1816051   +end;
MPRINT(EM_DIAGRAM):   end;
1816052   +if AutoNeural29_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural29_I_DepVar = Ensmbl53_level{1} then do;
1816053   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1816054   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural29_P_DepVar1;
1816055   +end;
MPRINT(EM_DIAGRAM):   end;
1816056   +if AutoNeural30_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural30_I_DepVar = Ensmbl53_level{2} then do;
1816057   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1816058   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural30_P_DepVar0;
1816059   +end;
MPRINT(EM_DIAGRAM):   end;
1816060   +if AutoNeural31_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural31_I_DepVar = Ensmbl53_level{2} then do;
1816061   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1816062   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural31_P_DepVar0;
1816063   +end;
MPRINT(EM_DIAGRAM):   end;
1816064   +if AutoNeural32_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural32_I_DepVar = Ensmbl53_level{2} then do;
1816065   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1816066   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural32_P_DepVar0;
1816067   +end;
MPRINT(EM_DIAGRAM):   end;
1816068   +if AutoNeural33_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural33_I_DepVar = Ensmbl53_level{2} then do;
1816069   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1816070   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural33_P_DepVar0;
1816071   +end;
MPRINT(EM_DIAGRAM):   end;
1816072   +if AutoNeural27_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural27_I_DepVar = Ensmbl53_level{2} then do;
1816073   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1816074   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural27_P_DepVar0;
1816075   +end;
MPRINT(EM_DIAGRAM):   end;
1816076   +if AutoNeural28_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural28_I_DepVar = Ensmbl53_level{2} then do;
1816077   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1816078   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural28_P_DepVar0;
1816079   +end;
MPRINT(EM_DIAGRAM):   end;
1816080   +if AutoNeural29_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural29_I_DepVar = Ensmbl53_level{2} then do;
1816081   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1816082   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural29_P_DepVar0;
1816083   +end;
MPRINT(EM_DIAGRAM):   end;
1816084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816085   +* Ensmbl53: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Determine Into Variable;
1816086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816087   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1816088   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1816089   +vote_count = max(
1816090   +Ensmbl53_count{1} ,
1816091   +Ensmbl53_count{2}
1816092   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl53_count{1} , Ensmbl53_count{2} );
1816093   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1816094   +if Ensmbl53_count{i}=vote_count and Ensmbl53_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl53_count{i}=vote_count and Ensmbl53_post{i}>vote_post then do;
1816095   +I_DepVar = Ensmbl53_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl53_level{i};
1816096   +vote_post = Ensmbl53_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl53_count{i};
1816097   +end;
MPRINT(EM_DIAGRAM):   end;
1816098   +end;
MPRINT(EM_DIAGRAM):   end;
1816099   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816100   +* Ensmbl53: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Compute posterior vars using models predicting the chosen
level;
1816101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816102   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1816103   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1816104   +if I_DepVar = AutoNeural30_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural30_I_DepVar then do;
1816105   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural30_P_DepVar1;
1816106   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural30_P_DepVar0;
1816107   +end;
MPRINT(EM_DIAGRAM):   end;
1816108   +if I_DepVar = AutoNeural31_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural31_I_DepVar then do;
1816109   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural31_P_DepVar1;
1816110   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural31_P_DepVar0;
1816111   +end;
MPRINT(EM_DIAGRAM):   end;
1816112   +if I_DepVar = AutoNeural32_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural32_I_DepVar then do;
1816113   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural32_P_DepVar1;
1816114   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural32_P_DepVar0;
1816115   +end;
MPRINT(EM_DIAGRAM):   end;
1816116   +if I_DepVar = AutoNeural33_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural33_I_DepVar then do;
1816117   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural33_P_DepVar1;
1816118   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural33_P_DepVar0;
1816119   +end;
MPRINT(EM_DIAGRAM):   end;
1816120   +if I_DepVar = AutoNeural27_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural27_I_DepVar then do;
1816121   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural27_P_DepVar1;
1816122   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural27_P_DepVar0;
1816123   +end;
MPRINT(EM_DIAGRAM):   end;
1816124   +if I_DepVar = AutoNeural28_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural28_I_DepVar then do;
1816125   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural28_P_DepVar1;
1816126   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural28_P_DepVar0;
1816127   +end;
MPRINT(EM_DIAGRAM):   end;
1816128   +if I_DepVar = AutoNeural29_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural29_I_DepVar then do;
1816129   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural29_P_DepVar1;
1816130   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural29_P_DepVar0;
1816131   +end;
MPRINT(EM_DIAGRAM):   end;
1816132   +* Ensmbl53: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Averaging posterior;
1816133   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1816134   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1816135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816136   +* Ensmbl53: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Producing Unformatted variable;
1816137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816138   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1816139   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1816140   +else
1816141   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1816142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816143   +* Ensmbl53: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Computing _WARN_ Variable;
1816144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816145   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1816146   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1816147   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1816148   +if index(AUTONEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1816148  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1816149   +if index(AUTONEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1816149  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1816150   +if index(AUTONEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1816150  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1816151   +if index(AUTONEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1816151  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1816152   +if index(AUTONEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1816152  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1816153   +if index(AUTONEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1816153  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1816154   +if index(AUTONEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1816154  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1816155   +if index(AUTONEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1816155  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1816156   +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1816156  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1816157   +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1816157  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1816158   +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1816158  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1816159   +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1816159  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1816160   +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1816160  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1816161   +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1816161  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1816162   +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1816162  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1816163   +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1816163  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1816164   +if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1816164  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1816165   +if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1816165  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1816166   +if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1816166  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1816167   +if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1816167  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1816168   +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1816168  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1816169   +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1816169  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1816170   +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1816170  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1816171   +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1816171  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1816172   +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1816172  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1816173   +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1816173  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1816174   +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1816174  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1816175   +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1816175  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1816176   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816177   +* Ensmbl53: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Computing Residual Vars;
1816178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816179   +if
1816180   +F_DepVar NE '1'
1816181   +AND F_DepVar NE '0'
1816182   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1816183   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1816184   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1816185   +end;
MPRINT(EM_DIAGRAM):   end;
1816186   +else do;
MPRINT(EM_DIAGRAM):   else do;
1816187   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1816188   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1816189   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1816190   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1816191   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1816192   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1816193   +END;
MPRINT(EM_DIAGRAM):   END;
1816194   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1816195    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL53_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL30_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1816196    quit;
1816197    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1816198    filename emflow
1816198  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring AUTONEURAL30_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816199    *------------------------------------------------------------*;
1816200    * Ensmbl53: Scoring AUTONEURAL30_VALIDATE data;
1816201    *------------------------------------------------------------*;
1816202    data EMWS8.Ensmbl53_VALIDATE
1816203    / view=EMWS8.Ensmbl53_VALIDATE
1816204    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_VALIDATE / view=EMWS8.Ensmbl53_VALIDATE ;
1816205    set EMWS8.AutoNeural30_VALIDATE
1816206    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural30_VALIDATE ;
1816207    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMFLOWSCORE.sas.
1816208   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816209   +* Ensmbl53: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Combine model for DepVar;
1816210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816211   +* Ensmbl53: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 1 of 7;
1816212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816213   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816214   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1816215   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1816216   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1816217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816219   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1816220   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1816221   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1816222   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816224   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1816225   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1816226   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1816227   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816229   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1816230   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1816231   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1816232   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816233   +
1816234   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1816235   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1816235  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1816236   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1816237   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1816238   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1816239   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1816240   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1816241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816242   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1816243   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1816244   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1816245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816247   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1816248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816249   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1816250   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1816251   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1816252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816253   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1816254   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1816255   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1816256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816258   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1816259   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1816260   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1816261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816262   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1816263   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1816264   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1816265   +
1816266   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1816267   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1816268   +
1816269   +
1816270   +
1816271   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1816272   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1816273   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1816274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816275   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1816276   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1816277   +* NODE: AutoNeural30;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural30;
1816278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816279   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1816280   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1816281   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1816282   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1816283   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1816284   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1816285   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1816286   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1816287   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1816288   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1816289   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1816290   +LENGTH _WARN_ $4
1816291   +      F_DepVar  $ 12
1816292   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1816293   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1816294   +
1816295   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1816296   +
1816297   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1816298   +
1816299   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1816300   +
1816301   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1816302   +
1816303   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1816304   +
1816305   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1816306   +
1816307   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1816308   +
1816309   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1816310   +
1816311   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1816312   +
1816313   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1816314   +
1816315   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1816316   +
1816317   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1816318   +
1816319   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1816320   +
1816321   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1816322   +
1816323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816324   +*** Checking missing input Interval
1816325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1816326   +
1816327   +IF NMISS(
1816328   +   AcceptedCmpTotal ,
1816329   +   Mnt ,
1816330   +   MntMeatProducts ,
1816331   +   NumCatalogPurchases ,
1816332   +   RFMstat ,
1816333   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1816334   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1816335   +
1816336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1816337   +END;
MPRINT(EM_DIAGRAM):   END;
1816338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816339   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1816340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816341   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1816342   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1816343   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1816344   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1816345   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1816346   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1816347   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1816348   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1816349   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1816350   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1816351   +END;
MPRINT(EM_DIAGRAM):   END;
1816352   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1816353   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1816354   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1816355   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1816356   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1816357   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1816358   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1816359   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1816360   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1816361   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1816362   +   ELSE S_NumCatalogPurchases
1816363   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1816364   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1816365   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1816366   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1816367   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1816368   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1816369   +END;
MPRINT(EM_DIAGRAM):   END;
1816370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816371   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1816372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816373   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1816374   +   H1x1_1  =    -10.2196367325197 * S_AcceptedCmpTotal
1816375   +          +     73.8468810244622 * S_Mnt  +    -37.1568918433377 *
1816376   +        S_MntMeatProducts  +    -6.41798758194194 * S_NumCatalogPurchases
1816377   +          +     8.70227685660232 * S_RFMstat  +      6.0315592275084 *
1816378   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -10.2196367325197 * S_AcceptedCmpTotal + 73.8468810244622 *
S_Mnt + -37.1568918433377 * S_MntMeatProducts + -6.41798758194194 * S_NumCatalogPurchases +
8.70227685660232 * S_RFMstat + 6.0315592275084 * S_Recency ;
1816379   +   H1x1_1  =     13.2334413528619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 13.2334413528619 + H1x1_1 ;
1816380   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1816381   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1816382   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1816383   +END;
MPRINT(EM_DIAGRAM):   END;
1816384   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1816385   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1816386   +END;
MPRINT(EM_DIAGRAM):   END;
1816387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816388   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1816389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816390   +
1816391   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1816392   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1816393   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1816394   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1816395   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1816396   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1816397   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1816398   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1816399   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1816400   +end;
MPRINT(EM_DIAGRAM):   end;
1816401   +else do;
MPRINT(EM_DIAGRAM):   else do;
1816402   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1816403   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1816404   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1816405   +   end;
MPRINT(EM_DIAGRAM):   end;
1816406   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1816407   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1816408   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1816409   +   end;
MPRINT(EM_DIAGRAM):   end;
1816410   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1816411   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1816412   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1816413   +   end;
MPRINT(EM_DIAGRAM):   end;
1816414   +end;
MPRINT(EM_DIAGRAM):   end;
1816415   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1816416   +   P_DepVar1  =    -2.47422582638078 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.47422582638078 * H1x1_1 ;
1816417   +   P_DepVar1  =    -1.87932369728474 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.87932369728474 + P_DepVar1 ;
1816418   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1816419   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1816420   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1816421   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1816422   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1816423   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1816424   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1816425   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1816426   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1816427   +END;
MPRINT(EM_DIAGRAM):   END;
1816428   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1816429   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1816430   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1816431   +END;
MPRINT(EM_DIAGRAM):   END;
1816432   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1816433   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1816434   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1816435   +END;
MPRINT(EM_DIAGRAM):   END;
1816436   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1816437   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1816438   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1816439   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1816440   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1816441   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1816442   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1816443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816444   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1816445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816446   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1816447   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1816448   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1816449   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1816450   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1816451   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1816452   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1816453   +END;
MPRINT(EM_DIAGRAM):   END;
1816454   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1816455   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1816456   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1816457   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1816458   +* Renaming variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural30;
1816459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816460   +* Renaming Posterior variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural30;
1816461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816462   +drop AutoNeural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_P_DepVar1;
1816463   +AutoNeural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural30_P_DepVar1 = P_DepVar1;
1816464   +drop AutoNeural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_P_DepVar0;
1816465   +AutoNeural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural30_P_DepVar0 = P_DepVar0;
1816466   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816467   +* Renaming Into variables for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural30;
1816468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816469   +length AutoNeural30_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural30_I_DepVar $32;
1816470   +drop AutoNeural30_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_I_DepVar;
1816471   +AutoNeural30_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural30_I_DepVar = I_DepVar;
1816472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816473   +* Renaming _WARN_ variable for AutoNeural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural30;
1816474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816475   +length AutoNeural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural30_WARN_ $4;
1816476   +drop AutoNeural30_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural30_WARN_;
1816477   +AutoNeural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural30_WARN_ = _WARN_;
1816478   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816479   +* Ensmbl53: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 2 of 7;
1816480   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816481   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816482   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1816483   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1816484   +* NODE: AutoNeural31;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural31;
1816485   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816486   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1816487   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1816488   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1816489   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1816490   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1816491   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1816492   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1816493   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1816494   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1816495   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1816496   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1816497   +LENGTH _WARN_ $4
1816498   +      F_DepVar  $ 12
1816499   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1816500   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1816501   +
1816502   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1816503   +
1816504   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1816505   +
1816506   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1816507   +
1816508   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1816509   +
1816510   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1816511   +
1816512   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1816513   +
1816514   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1816515   +
1816516   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1816517   +
1816518   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1816519   +
1816520   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1816521   +
1816522   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1816523   +
1816524   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1816525   +
1816526   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1816527   +
1816528   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1816529   +
1816530   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1816531   +
1816532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816533   +*** Checking missing input Interval
1816534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1816535   +
1816536   +IF NMISS(
1816537   +   AcceptedCmpTotal ,
1816538   +   Mnt ,
1816539   +   MntMeatProducts ,
1816540   +   NumCatalogPurchases ,
1816541   +   RFMstat ,
1816542   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1816543   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1816544   +
1816545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1816546   +END;
MPRINT(EM_DIAGRAM):   END;
1816547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816548   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1816549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816550   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1816551   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1816552   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1816553   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1816554   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1816555   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1816556   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1816557   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1816558   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1816559   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1816560   +END;
MPRINT(EM_DIAGRAM):   END;
1816561   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1816562   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1816563   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1816564   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1816565   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1816566   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1816567   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1816568   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1816569   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1816570   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1816571   +   ELSE S_NumCatalogPurchases
1816572   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1816573   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1816574   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1816575   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1816576   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1816577   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1816578   +END;
MPRINT(EM_DIAGRAM):   END;
1816579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816580   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1816581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816582   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1816583   +   H1x1_1  =     0.88877074263455 * S_AcceptedCmpTotal
1816584   +          +     -6.8647547731997 * S_Mnt  +     3.38470731995645 *
1816585   +        S_MntMeatProducts  +     0.45686791470898 * S_NumCatalogPurchases
1816586   +          +    -0.12981013682039 * S_RFMstat  +    -0.01175498343834 *
1816587   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.88877074263455 * S_AcceptedCmpTotal + -6.8647547731997 *
S_Mnt + 3.38470731995645 * S_MntMeatProducts + 0.45686791470898 * S_NumCatalogPurchases +
-0.12981013682039 * S_RFMstat + -0.01175498343834 * S_Recency ;
1816588   +   H1x1_2  =    -0.11003981472254 * S_AcceptedCmpTotal
1816589   +          +    -0.85647328083992 * S_Mnt  +     10.0358306583456 *
1816590   +        S_MntMeatProducts  +     1.92503432752831 * S_NumCatalogPurchases
1816591   +          +     0.92971820927182 * S_RFMstat  +    -0.12489463268487 *
1816592   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.11003981472254 * S_AcceptedCmpTotal + -0.85647328083992 *
S_Mnt + 10.0358306583456 * S_MntMeatProducts + 1.92503432752831 * S_NumCatalogPurchases +
0.92971820927182 * S_RFMstat + -0.12489463268487 * S_Recency ;
1816593   +   H1x1_1  =    -2.35812752137322 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.35812752137322 + H1x1_1 ;
1816594   +   H1x1_2  =     8.68969383477576 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 8.68969383477576 + H1x1_2 ;
1816595   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1816596   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1816597   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1816598   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1816599   +END;
MPRINT(EM_DIAGRAM):   END;
1816600   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1816601   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1816602   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1816603   +END;
MPRINT(EM_DIAGRAM):   END;
1816604   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816605   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1816606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816607   +
1816608   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1816609   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1816610   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1816611   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1816612   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1816613   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1816614   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1816615   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1816616   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1816617   +end;
MPRINT(EM_DIAGRAM):   end;
1816618   +else do;
MPRINT(EM_DIAGRAM):   else do;
1816619   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1816620   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1816621   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1816622   +   end;
MPRINT(EM_DIAGRAM):   end;
1816623   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1816624   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1816625   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1816626   +   end;
MPRINT(EM_DIAGRAM):   end;
1816627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1816628   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1816629   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1816630   +   end;
MPRINT(EM_DIAGRAM):   end;
1816631   +end;
MPRINT(EM_DIAGRAM):   end;
1816632   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1816633   +   P_DepVar1  =     6.72682466184772 * H1x1_1  +     8.11139972991132 * H1x1_2
1816634   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.72682466184772 * H1x1_1 + 8.11139972991132 * H1x1_2 ;
1816635   +   P_DepVar1  =    -12.3654701108229 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.3654701108229 + P_DepVar1 ;
1816636   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1816637   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1816638   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1816639   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1816640   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1816641   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1816642   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1816643   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1816644   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1816645   +END;
MPRINT(EM_DIAGRAM):   END;
1816646   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1816647   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1816648   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1816649   +END;
MPRINT(EM_DIAGRAM):   END;
1816650   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1816651   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1816652   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1816653   +END;
MPRINT(EM_DIAGRAM):   END;
1816654   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1816655   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1816656   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1816657   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1816658   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1816659   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1816660   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1816661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816662   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1816663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816664   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1816665   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1816666   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1816667   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1816668   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1816669   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1816670   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1816671   +END;
MPRINT(EM_DIAGRAM):   END;
1816672   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1816673   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1816674   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1816675   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1816676   +* Renaming variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural31;
1816677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816678   +* Renaming Posterior variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural31;
1816679   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816680   +drop AutoNeural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_P_DepVar1;
1816681   +AutoNeural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural31_P_DepVar1 = P_DepVar1;
1816682   +drop AutoNeural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_P_DepVar0;
1816683   +AutoNeural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural31_P_DepVar0 = P_DepVar0;
1816684   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816685   +* Renaming Into variables for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural31;
1816686   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816687   +length AutoNeural31_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural31_I_DepVar $32;
1816688   +drop AutoNeural31_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_I_DepVar;
1816689   +AutoNeural31_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural31_I_DepVar = I_DepVar;
1816690   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816691   +* Renaming _WARN_ variable for AutoNeural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural31;
1816692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816693   +length AutoNeural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural31_WARN_ $4;
1816694   +drop AutoNeural31_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural31_WARN_;
1816695   +AutoNeural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural31_WARN_ = _WARN_;
1816696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816697   +* Ensmbl53: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 3 of 7;
1816698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816700   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1816701   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1816702   +* NODE: AutoNeural32;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural32;
1816703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816704   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1816705   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1816706   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1816707   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1816708   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1816709   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1816710   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1816711   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1816712   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1816713   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1816714   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1816715   +LENGTH _WARN_ $4
1816716   +      F_DepVar  $ 12
1816717   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1816718   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1816719   +
1816720   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1816721   +
1816722   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1816723   +
1816724   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1816725   +
1816726   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1816727   +
1816728   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1816729   +
1816730   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1816731   +
1816732   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1816733   +
1816734   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1816735   +
1816736   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1816737   +
1816738   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1816739   +
1816740   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1816741   +
1816742   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1816743   +
1816744   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1816745   +
1816746   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1816747   +
1816748   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1816749   +
1816750   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1816751   +
1816752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816753   +*** Checking missing input Interval
1816754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1816755   +
1816756   +IF NMISS(
1816757   +   AcceptedCmpTotal ,
1816758   +   Mnt ,
1816759   +   MntMeatProducts ,
1816760   +   NumCatalogPurchases ,
1816761   +   RFMstat ,
1816762   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1816763   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1816764   +
1816765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1816766   +END;
MPRINT(EM_DIAGRAM):   END;
1816767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816768   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1816769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816770   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1816771   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1816772   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1816773   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1816774   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1816775   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1816776   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1816777   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1816778   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1816779   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1816780   +END;
MPRINT(EM_DIAGRAM):   END;
1816781   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1816782   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1816783   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1816784   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1816785   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1816786   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1816787   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1816788   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1816789   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1816790   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1816791   +   ELSE S_NumCatalogPurchases
1816792   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1816793   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1816794   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1816795   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1816796   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1816797   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1816798   +END;
MPRINT(EM_DIAGRAM):   END;
1816799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816800   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1816801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816802   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1816803   +   H1x1_1  =    -0.14955504394548 * S_AcceptedCmpTotal
1816804   +          +    -1.51573020728474 * S_Mnt  +      0.4607268669617 *
1816805   +        S_MntMeatProducts  +     -0.3334944156024 * S_NumCatalogPurchases
1816806   +          +     0.09267374022355 * S_RFMstat  +     0.47606901130176 *
1816807   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14955504394548 * S_AcceptedCmpTotal + -1.51573020728474 *
S_Mnt + 0.4607268669617 * S_MntMeatProducts + -0.3334944156024 * S_NumCatalogPurchases +
0.09267374022355 * S_RFMstat + 0.47606901130176 * S_Recency ;
1816808   +   H1x1_2  =      0.2468028004293 * S_AcceptedCmpTotal
1816809   +          +    -0.77717776485086 * S_Mnt  +     7.40002044896531 *
1816810   +        S_MntMeatProducts  +     1.60897655452635 * S_NumCatalogPurchases
1816811   +          +     0.67552122628568 * S_RFMstat  +    -0.32443547406066 *
1816812   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2468028004293 * S_AcceptedCmpTotal + -0.77717776485086 *
S_Mnt + 7.40002044896531 * S_MntMeatProducts + 1.60897655452635 * S_NumCatalogPurchases +
0.67552122628568 * S_RFMstat + -0.32443547406066 * S_Recency ;
1816813   +   H1x1_3  =     6.59800324692585 * S_AcceptedCmpTotal
1816814   +          +    -28.0912205253849 * S_Mnt  +     13.5059679211684 *
1816815   +        S_MntMeatProducts  +     5.32084702602181 * S_NumCatalogPurchases
1816816   +          +    -1.75455080633468 * S_RFMstat  +    -3.56741217768456 *
1816817   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 6.59800324692585 * S_AcceptedCmpTotal + -28.0912205253849 *
S_Mnt + 13.5059679211684 * S_MntMeatProducts + 5.32084702602181 * S_NumCatalogPurchases +
-1.75455080633468 * S_RFMstat + -3.56741217768456 * S_Recency ;
1816818   +   H1x1_1  =     2.30670471730853 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.30670471730853 + H1x1_1 ;
1816819   +   H1x1_2  =     6.72353576768002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 6.72353576768002 + H1x1_2 ;
1816820   +   H1x1_3  =    -10.2093918588588 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -10.2093918588588 + H1x1_3 ;
1816821   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1816822   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1816823   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1816824   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1816825   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1816826   +END;
MPRINT(EM_DIAGRAM):   END;
1816827   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1816828   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1816829   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1816830   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1816831   +END;
MPRINT(EM_DIAGRAM):   END;
1816832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816833   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1816834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816835   +
1816836   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1816837   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1816838   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1816839   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1816840   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1816841   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1816842   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1816843   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1816844   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1816845   +end;
MPRINT(EM_DIAGRAM):   end;
1816846   +else do;
MPRINT(EM_DIAGRAM):   else do;
1816847   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1816848   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1816849   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1816850   +   end;
MPRINT(EM_DIAGRAM):   end;
1816851   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1816852   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1816853   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1816854   +   end;
MPRINT(EM_DIAGRAM):   end;
1816855   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1816856   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1816857   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1816858   +   end;
MPRINT(EM_DIAGRAM):   end;
1816859   +end;
MPRINT(EM_DIAGRAM):   end;
1816860   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1816861   +   P_DepVar1  =    -13.8690336647034 * H1x1_1  +     12.3879569416654 * H1x1_2
1816862   +          +     2.67685271681444 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -13.8690336647034 * H1x1_1 + 12.3879569416654 * H1x1_2 +
2.67685271681444 * H1x1_3 ;
1816863   +   P_DepVar1  =    -2.88709627935044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.88709627935044 + P_DepVar1 ;
1816864   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1816865   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1816866   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1816867   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1816868   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1816869   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1816870   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1816871   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1816872   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1816873   +END;
MPRINT(EM_DIAGRAM):   END;
1816874   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1816875   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1816876   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1816877   +END;
MPRINT(EM_DIAGRAM):   END;
1816878   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1816879   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1816880   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1816881   +END;
MPRINT(EM_DIAGRAM):   END;
1816882   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1816883   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1816884   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1816885   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1816886   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1816887   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1816888   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1816889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816890   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1816891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816892   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1816893   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1816894   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1816895   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1816896   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1816897   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1816898   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1816899   +END;
MPRINT(EM_DIAGRAM):   END;
1816900   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1816901   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1816902   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1816903   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1816904   +* Renaming variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural32;
1816905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816906   +* Renaming Posterior variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural32;
1816907   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816908   +drop AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar1;
1816909   +AutoNeural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar1 = P_DepVar1;
1816910   +drop AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_P_DepVar0;
1816911   +AutoNeural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural32_P_DepVar0 = P_DepVar0;
1816912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816913   +* Renaming Into variables for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural32;
1816914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816915   +length AutoNeural32_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural32_I_DepVar $32;
1816916   +drop AutoNeural32_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_I_DepVar;
1816917   +AutoNeural32_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural32_I_DepVar = I_DepVar;
1816918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816919   +* Renaming _WARN_ variable for AutoNeural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural32;
1816920   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816921   +length AutoNeural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural32_WARN_ $4;
1816922   +drop AutoNeural32_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural32_WARN_;
1816923   +AutoNeural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural32_WARN_ = _WARN_;
1816924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816925   +* Ensmbl53: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 4 of 7;
1816926   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816928   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1816929   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1816930   +* NODE: AutoNeural33;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural33;
1816931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1816932   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1816933   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1816934   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1816935   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1816936   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1816937   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1816938   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1816939   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1816940   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1816941   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1816942   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1816943   +LENGTH _WARN_ $4
1816944   +      F_DepVar  $ 12
1816945   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1816946   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1816947   +
1816948   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1816949   +
1816950   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1816951   +
1816952   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1816953   +
1816954   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1816955   +
1816956   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1816957   +
1816958   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1816959   +
1816960   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1816961   +
1816962   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1816963   +
1816964   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1816965   +
1816966   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1816967   +
1816968   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1816969   +
1816970   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1816971   +
1816972   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1816973   +
1816974   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1816975   +
1816976   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1816977   +
1816978   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1816979   +
1816980   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1816981   +
1816982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816983   +*** Checking missing input Interval
1816984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1816985   +
1816986   +IF NMISS(
1816987   +   AcceptedCmpTotal ,
1816988   +   Mnt ,
1816989   +   MntMeatProducts ,
1816990   +   NumCatalogPurchases ,
1816991   +   RFMstat ,
1816992   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1816993   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1816994   +
1816995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1816996   +END;
MPRINT(EM_DIAGRAM):   END;
1816997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1816998   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1816999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817000   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817001   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1817002   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1817003   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1817004   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1817005   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1817006   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1817007   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1817008   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1817009   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1817010   +END;
MPRINT(EM_DIAGRAM):   END;
1817011   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817012   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1817013   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1817014   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1817015   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1817016   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1817017   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1817018   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1817019   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1817020   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1817021   +   ELSE S_NumCatalogPurchases
1817022   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1817023   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1817024   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1817025   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1817026   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1817027   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1817028   +END;
MPRINT(EM_DIAGRAM):   END;
1817029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817030   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1817031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817033   +   H1x1_1  =     0.21234921669572 * S_AcceptedCmpTotal
1817034   +          +     0.01945817648377 * S_Mnt  +     0.10373621819131 *
1817035   +        S_MntMeatProducts  +     0.14724080002257 * S_NumCatalogPurchases
1817036   +          +     0.01465421656969 * S_RFMstat  +    -0.37839603073195 *
1817037   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.21234921669572 * S_AcceptedCmpTotal + 0.01945817648377 *
S_Mnt + 0.10373621819131 * S_MntMeatProducts + 0.14724080002257 * S_NumCatalogPurchases +
0.01465421656969 * S_RFMstat + -0.37839603073195 * S_Recency ;
1817038   +   H1x1_2  =      1.6456490248475 * S_AcceptedCmpTotal
1817039   +          +    -4.36126689821345 * S_Mnt  +    -5.34341350667797 *
1817040   +        S_MntMeatProducts  +    -0.50775340376834 * S_NumCatalogPurchases
1817041   +          +    -3.77547933008523 * S_RFMstat  +    -0.35687395481612 *
1817042   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.6456490248475 * S_AcceptedCmpTotal + -4.36126689821345 *
S_Mnt + -5.34341350667797 * S_MntMeatProducts + -0.50775340376834 * S_NumCatalogPurchases +
-3.77547933008523 * S_RFMstat + -0.35687395481612 * S_Recency ;
1817043   +   H1x1_3  =     2.25495773414966 * S_AcceptedCmpTotal
1817044   +          +     -11.006968240108 * S_Mnt  +     5.29014268166876 *
1817045   +        S_MntMeatProducts  +     1.38527755695319 * S_NumCatalogPurchases
1817046   +          +    -0.25229120510632 * S_RFMstat  +    -0.96545690161812 *
1817047   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.25495773414966 * S_AcceptedCmpTotal + -11.006968240108 *
S_Mnt + 5.29014268166876 * S_MntMeatProducts + 1.38527755695319 * S_NumCatalogPurchases +
-0.25229120510632 * S_RFMstat + -0.96545690161812 * S_Recency ;
1817048   +   H1x1_1  =    -1.44629643725438 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.44629643725438 + H1x1_1 ;
1817049   +   H1x1_2  =    -8.96045510766511 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -8.96045510766511 + H1x1_2 ;
1817050   +   H1x1_3  =    -3.43663513496723 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.43663513496723 + H1x1_3 ;
1817051   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1817052   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1817053   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1817054   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1817055   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1817056   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1817057   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1817058   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1817059   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1817060   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1817061   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1817062   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1817063   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1817064   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1817065   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1817066   +END;
MPRINT(EM_DIAGRAM):   END;
1817067   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817068   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1817069   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1817070   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1817071   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1817072   +END;
MPRINT(EM_DIAGRAM):   END;
1817073   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817074   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1817075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817076   +
1817077   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1817078   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1817079   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1817080   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1817081   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1817082   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1817083   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1817084   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1817085   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1817086   +end;
MPRINT(EM_DIAGRAM):   end;
1817087   +else do;
MPRINT(EM_DIAGRAM):   else do;
1817088   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1817089   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1817090   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1817091   +   end;
MPRINT(EM_DIAGRAM):   end;
1817092   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1817093   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1817094   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1817095   +   end;
MPRINT(EM_DIAGRAM):   end;
1817096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1817097   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1817098   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1817099   +   end;
MPRINT(EM_DIAGRAM):   end;
1817100   +end;
MPRINT(EM_DIAGRAM):   end;
1817101   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817102   +   P_DepVar1  =     15.9155817268417 * H1x1_1  +    -26.1877719603903 * H1x1_2
1817103   +          +     3.03900855168824 * H1x1_3  +    -8.12584282800012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.9155817268417 * H1x1_1 + -26.1877719603903 * H1x1_2 +
3.03900855168824 * H1x1_3 + -8.12584282800012 * H1x1_4 ;
1817104   +   P_DepVar1  =    -0.43873072735423 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.43873072735423 + P_DepVar1 ;
1817105   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1817106   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1817107   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1817108   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1817109   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1817110   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1817111   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1817112   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1817113   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1817114   +END;
MPRINT(EM_DIAGRAM):   END;
1817115   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817116   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1817117   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1817118   +END;
MPRINT(EM_DIAGRAM):   END;
1817119   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1817120   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1817121   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1817122   +END;
MPRINT(EM_DIAGRAM):   END;
1817123   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1817124   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1817125   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1817126   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1817127   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1817128   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1817129   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1817130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817131   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1817132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817133   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1817134   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1817135   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1817136   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1817137   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1817138   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1817139   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1817140   +END;
MPRINT(EM_DIAGRAM):   END;
1817141   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1817142   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1817143   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1817144   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1817145   +* Renaming variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural33;
1817146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817147   +* Renaming Posterior variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural33;
1817148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817149   +drop AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar1;
1817150   +AutoNeural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar1 = P_DepVar1;
1817151   +drop AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_P_DepVar0;
1817152   +AutoNeural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural33_P_DepVar0 = P_DepVar0;
1817153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817154   +* Renaming Into variables for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural33;
1817155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817156   +length AutoNeural33_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural33_I_DepVar $32;
1817157   +drop AutoNeural33_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_I_DepVar;
1817158   +AutoNeural33_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural33_I_DepVar = I_DepVar;
1817159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817160   +* Renaming _WARN_ variable for AutoNeural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural33;
1817161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817162   +length AutoNeural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural33_WARN_ $4;
1817163   +drop AutoNeural33_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural33_WARN_;
1817164   +AutoNeural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural33_WARN_ = _WARN_;
1817165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817166   +* Ensmbl53: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 5 of 7;
1817167   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817169   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1817170   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1817171   +* NODE: AutoNeural27;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural27;
1817172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817173   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1817174   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1817175   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1817176   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1817177   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1817178   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1817179   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1817180   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1817181   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1817182   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1817183   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1817184   +LENGTH _WARN_ $4
1817185   +      F_DepVar  $ 12
1817186   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1817187   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1817188   +
1817189   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1817190   +
1817191   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1817192   +
1817193   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1817194   +
1817195   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1817196   +
1817197   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1817198   +
1817199   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1817200   +
1817201   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1817202   +
1817203   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1817204   +
1817205   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1817206   +
1817207   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1817208   +
1817209   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1817210   +
1817211   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1817212   +
1817213   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1817214   +
1817215   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1817216   +
1817217   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1817218   +
1817219   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1817220   +
1817221   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1817222   +
1817223   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1817224   +
1817225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817226   +*** Checking missing input Interval
1817227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1817228   +
1817229   +IF NMISS(
1817230   +   AcceptedCmpTotal ,
1817231   +   Mnt ,
1817232   +   MntMeatProducts ,
1817233   +   NumCatalogPurchases ,
1817234   +   RFMstat ,
1817235   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1817236   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1817237   +
1817238   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1817239   +END;
MPRINT(EM_DIAGRAM):   END;
1817240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817241   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1817242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817243   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817244   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1817245   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1817246   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1817247   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1817248   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1817249   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1817250   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1817251   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1817252   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1817253   +END;
MPRINT(EM_DIAGRAM):   END;
1817254   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817255   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1817256   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1817257   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1817258   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1817259   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1817260   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1817261   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1817262   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1817263   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1817264   +   ELSE S_NumCatalogPurchases
1817265   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1817266   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1817267   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1817268   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1817269   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1817270   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1817271   +END;
MPRINT(EM_DIAGRAM):   END;
1817272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817273   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1817274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817276   +   H1x1_1  =     0.20171954292418 * S_AcceptedCmpTotal
1817277   +          +     0.29079116229788 * S_Mnt  +     0.23711535602944 *
1817278   +        S_MntMeatProducts  +     0.42529081995564 * S_NumCatalogPurchases
1817279   +          +     0.18062808343642 * S_RFMstat  +    -0.63318995037874 *
1817280   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.20171954292418 * S_AcceptedCmpTotal + 0.29079116229788 *
S_Mnt + 0.23711535602944 * S_MntMeatProducts + 0.42529081995564 * S_NumCatalogPurchases +
0.18062808343642 * S_RFMstat + -0.63318995037874 * S_Recency ;
1817281   +   H1x1_2  =    -1.98920342874828 * S_AcceptedCmpTotal
1817282   +          +      10.493361229847 * S_Mnt  +    -5.26684519238396 *
1817283   +        S_MntMeatProducts  +     -1.3815052580097 * S_NumCatalogPurchases
1817284   +          +     0.33275103937215 * S_RFMstat  +     0.91614898624506 *
1817285   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.98920342874828 * S_AcceptedCmpTotal + 10.493361229847 *
S_Mnt + -5.26684519238396 * S_MntMeatProducts + -1.3815052580097 * S_NumCatalogPurchases +
0.33275103937215 * S_RFMstat + 0.91614898624506 * S_Recency ;
1817286   +   H1x1_3  =     0.73206551950569 * S_AcceptedCmpTotal
1817287   +          +    -1.01976407347302 * S_Mnt  +    -1.13350661445888 *
1817288   +        S_MntMeatProducts  +    -0.07125936639892 * S_NumCatalogPurchases
1817289   +          +    -0.39616853923675 * S_RFMstat  +    -0.82914022268456 *
1817290   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.73206551950569 * S_AcceptedCmpTotal + -1.01976407347302 *
S_Mnt + -1.13350661445888 * S_MntMeatProducts + -0.07125936639892 * S_NumCatalogPurchases +
-0.39616853923675 * S_RFMstat + -0.82914022268456 * S_Recency ;
1817291   +   H1x1_4  =    -0.34492981088566 * S_AcceptedCmpTotal
1817292   +          +     1.21190291017614 * S_Mnt  +    -8.17509176920502 *
1817293   +        S_MntMeatProducts  +    -1.48783679196456 * S_NumCatalogPurchases
1817294   +          +     -0.9509465201423 * S_RFMstat  +     0.48054774355638 *
1817295   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34492981088566 * S_AcceptedCmpTotal + 1.21190291017614 *
S_Mnt + -8.17509176920502 * S_MntMeatProducts + -1.48783679196456 * S_NumCatalogPurchases +
-0.9509465201423 * S_RFMstat + 0.48054774355638 * S_Recency ;
1817296   +   H1x1_5  =    -1.52519083391934 * S_AcceptedCmpTotal
1817297   +          +    -3.64608769152407 * S_Mnt  +    -6.52923883290239 *
1817298   +        S_MntMeatProducts  +      2.7900190963798 * S_NumCatalogPurchases
1817299   +          +     4.27091451171932 * S_RFMstat  +     2.19744854544492 *
1817300   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.52519083391934 * S_AcceptedCmpTotal + -3.64608769152407 *
S_Mnt + -6.52923883290239 * S_MntMeatProducts + 2.7900190963798 * S_NumCatalogPurchases +
4.27091451171932 * S_RFMstat + 2.19744854544492 * S_Recency ;
1817301   +   H1x1_1  =    -3.14760700594037 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.14760700594037 + H1x1_1 ;
1817302   +   H1x1_2  =     3.74367981551949 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.74367981551949 + H1x1_2 ;
1817303   +   H1x1_3  =     0.87862388051597 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87862388051597 + H1x1_3 ;
1817304   +   H1x1_4  =    -7.01266539803621 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.01266539803621 + H1x1_4 ;
1817305   +   H1x1_5  =     4.82694309436143 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.82694309436143 + H1x1_5 ;
1817306   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1817307   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1817308   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1817309   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1817310   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1817311   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1817312   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1817313   +END;
MPRINT(EM_DIAGRAM):   END;
1817314   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817315   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1817316   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1817317   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1817318   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1817319   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1817320   +END;
MPRINT(EM_DIAGRAM):   END;
1817321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817322   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1817323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817324   +
1817325   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1817326   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1817327   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1817328   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1817329   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1817330   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1817331   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1817332   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1817333   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1817334   +end;
MPRINT(EM_DIAGRAM):   end;
1817335   +else do;
MPRINT(EM_DIAGRAM):   else do;
1817336   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1817337   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1817338   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1817339   +   end;
MPRINT(EM_DIAGRAM):   end;
1817340   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1817341   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1817342   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1817343   +   end;
MPRINT(EM_DIAGRAM):   end;
1817344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1817345   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1817346   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1817347   +   end;
MPRINT(EM_DIAGRAM):   end;
1817348   +end;
MPRINT(EM_DIAGRAM):   end;
1817349   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817350   +   P_DepVar1  =     15.5046788281633 * H1x1_1  +    -4.66397711541227 * H1x1_2
1817351   +          +     4.82395074522384 * H1x1_3  +    -12.9633946998053 * H1x1_4
1817352   +          +    -2.45163227816589 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.5046788281633 * H1x1_1 + -4.66397711541227 * H1x1_2 +
4.82395074522384 * H1x1_3 + -12.9633946998053 * H1x1_4 + -2.45163227816589 * H1x1_5 ;
1817353   +   P_DepVar1  =    -0.48464899477516 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.48464899477516 + P_DepVar1 ;
1817354   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1817355   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1817356   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1817357   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1817358   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1817359   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1817360   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1817361   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1817362   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1817363   +END;
MPRINT(EM_DIAGRAM):   END;
1817364   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817365   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1817366   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1817367   +END;
MPRINT(EM_DIAGRAM):   END;
1817368   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1817369   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1817370   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1817371   +END;
MPRINT(EM_DIAGRAM):   END;
1817372   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1817373   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1817374   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1817375   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1817376   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1817377   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1817378   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1817379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817380   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1817381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817382   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1817383   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1817384   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1817385   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1817386   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1817387   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1817388   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1817389   +END;
MPRINT(EM_DIAGRAM):   END;
1817390   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1817391   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1817392   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1817393   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1817394   +* Renaming variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural27;
1817395   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817396   +* Renaming Posterior variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural27;
1817397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817398   +drop AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar1;
1817399   +AutoNeural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar1 = P_DepVar1;
1817400   +drop AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_P_DepVar0;
1817401   +AutoNeural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural27_P_DepVar0 = P_DepVar0;
1817402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817403   +* Renaming Into variables for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural27;
1817404   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817405   +length AutoNeural27_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural27_I_DepVar $32;
1817406   +drop AutoNeural27_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_I_DepVar;
1817407   +AutoNeural27_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural27_I_DepVar = I_DepVar;
1817408   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817409   +* Renaming _WARN_ variable for AutoNeural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural27;
1817410   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817411   +length AutoNeural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural27_WARN_ $4;
1817412   +drop AutoNeural27_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural27_WARN_;
1817413   +AutoNeural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural27_WARN_ = _WARN_;
1817414   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817415   +* Ensmbl53: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 6 of 7;
1817416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817417   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817418   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1817419   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1817420   +* NODE: AutoNeural28;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural28;
1817421   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1817422   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1817423   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1817424   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1817425   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1817426   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1817427   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1817428   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1817429   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1817430   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1817431   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1817432   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1817433   +LENGTH _WARN_ $4
1817434   +      F_DepVar  $ 12
1817435   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1817436   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1817437   +
1817438   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1817439   +
1817440   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1817441   +
1817442   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1817443   +
1817444   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1817445   +
1817446   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1817447   +
1817448   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1817449   +
1817450   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1817451   +
1817452   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1817453   +
1817454   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1817455   +
1817456   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1817457   +
1817458   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1817459   +
1817460   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1817461   +
1817462   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1817463   +
1817464   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1817465   +
1817466   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1817467   +
1817468   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1817469   +
1817470   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1817471   +
1817472   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1817473   +
1817474   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1817475   +
1817476   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1817477   +
1817478   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1817479   +
1817480   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1817481   +
1817482   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
1817483   +
1817484   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1817485   +
1817486   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1817487   +
1817488   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1817489   +
1817490   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1817491   +
1817492   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1817493   +
1817494   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1817495   +
1817496   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1817497   +
1817498   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1817499   +
1817500   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1817501   +
1817502   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1817503   +
1817504   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1817505   +
1817506   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
1817507   +
1817508   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1817509   +
1817510   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1817511   +
1817512   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1817513   +
1817514   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1817515   +
1817516   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1817517   +
1817518   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
1817519   +
1817520   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1817521   +
1817522   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1817523   +
1817524   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1817525   +
1817526   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1817527   +
1817528   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1817529   +
1817530   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1817531   +
1817532   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1817533   +
1817534   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1817535   +
1817536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817537   +*** Checking missing input Interval
1817538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1817539   +
1817540   +IF NMISS(
1817541   +   AcceptedCmpTotal ,
1817542   +   Mnt ,
1817543   +   MntMeatProducts ,
1817544   +   NumCatalogPurchases ,
1817545   +   RFMstat ,
1817546   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1817547   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1817548   +
1817549   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1817550   +END;
MPRINT(EM_DIAGRAM):   END;
1817551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817552   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1817553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817554   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817555   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1817556   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1817557   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1817558   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1817559   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1817560   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1817561   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1817562   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1817563   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1817564   +END;
MPRINT(EM_DIAGRAM):   END;
1817565   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817566   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1817567   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1817568   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1817569   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1817570   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1817571   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1817572   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1817573   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1817574   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1817575   +   ELSE S_NumCatalogPurchases
1817576   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1817577   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1817578   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1817579   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1817580   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1817581   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1817582   +END;
MPRINT(EM_DIAGRAM):   END;
1817583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817584   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1817585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817586   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817587   +   H1x1_1  =     2.10717134491045 * S_AcceptedCmpTotal
1817588   +          +    -10.9799187882689 * S_Mnt  +     3.17619086363109 *
1817589   +        S_MntMeatProducts  +     0.58522050540174 * S_NumCatalogPurchases
1817590   +          +     0.10457500953086 * S_RFMstat  +    -0.59708195840656 *
1817591   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.10717134491045 * S_AcceptedCmpTotal + -10.9799187882689 *
S_Mnt + 3.17619086363109 * S_MntMeatProducts + 0.58522050540174 * S_NumCatalogPurchases +
0.10457500953086 * S_RFMstat + -0.59708195840656 * S_Recency ;
1817592   +   H1x1_2  =    -1.09600222674288 * S_AcceptedCmpTotal
1817593   +          +    -2.75188573882189 * S_Mnt  +     2.38829776780629 *
1817594   +        S_MntMeatProducts  +     2.37290115499231 * S_NumCatalogPurchases
1817595   +          +    -1.67864747205449 * S_RFMstat  +    -1.87700204299542 *
1817596   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.09600222674288 * S_AcceptedCmpTotal + -2.75188573882189 *
S_Mnt + 2.38829776780629 * S_MntMeatProducts + 2.37290115499231 * S_NumCatalogPurchases +
-1.67864747205449 * S_RFMstat + -1.87700204299542 * S_Recency ;
1817597   +   H1x1_3  =     0.24593136036671 * S_AcceptedCmpTotal
1817598   +          +     0.98275447305236 * S_Mnt  +     1.52686649163215 *
1817599   +        S_MntMeatProducts  +     1.08491172792697 * S_NumCatalogPurchases
1817600   +          +    -6.31220731697864 * S_RFMstat  +    -2.08472878456829 *
1817601   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.24593136036671 * S_AcceptedCmpTotal + 0.98275447305236 *
S_Mnt + 1.52686649163215 * S_MntMeatProducts + 1.08491172792697 * S_NumCatalogPurchases +
-6.31220731697864 * S_RFMstat + -2.08472878456829 * S_Recency ;
1817602   +   H1x1_4  =     1.35296744918554 * S_AcceptedCmpTotal
1817603   +          +    -3.58727753695297 * S_Mnt  +    -6.35187991517409 *
1817604   +        S_MntMeatProducts  +    -1.41725838894141 * S_NumCatalogPurchases
1817605   +          +     -2.5174617752956 * S_RFMstat  +     0.27284317719271 *
1817606   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.35296744918554 * S_AcceptedCmpTotal + -3.58727753695297 *
S_Mnt + -6.35187991517409 * S_MntMeatProducts + -1.41725838894141 * S_NumCatalogPurchases +
-2.5174617752956 * S_RFMstat + 0.27284317719271 * S_Recency ;
1817607   +   H1x1_5  =     1.41560412529603 * S_AcceptedCmpTotal
1817608   +          +     2.25142479190183 * S_Mnt  +      0.2775616702254 *
1817609   +        S_MntMeatProducts  +     -0.4118907005017 * S_NumCatalogPurchases
1817610   +          +     0.38803464834347 * S_RFMstat  +    -0.81750268679565 *
1817611   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.41560412529603 * S_AcceptedCmpTotal + 2.25142479190183 *
S_Mnt + 0.2775616702254 * S_MntMeatProducts + -0.4118907005017 * S_NumCatalogPurchases +
0.38803464834347 * S_RFMstat + -0.81750268679565 * S_Recency ;
1817612   +   H1x1_1  =    -1.94381314805925 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.94381314805925 + H1x1_1 ;
1817613   +   H1x1_2  =     -1.4831757685406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.4831757685406 + H1x1_2 ;
1817614   +   H1x1_3  =    -0.53539803191548 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.53539803191548 + H1x1_3 ;
1817615   +   H1x1_4  =    -5.07257058520645 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -5.07257058520645 + H1x1_4 ;
1817616   +   H1x1_5  =    -3.95581011117601 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.95581011117601 + H1x1_5 ;
1817617   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1817618   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1817619   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1817620   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1817621   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1817622   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1817623   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1817624   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1817625   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1817626   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1817627   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1817628   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1817629   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1817630   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1817631   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1817632   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1817633   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1817634   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1817635   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1817636   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1817637   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1817638   +END;
MPRINT(EM_DIAGRAM):   END;
1817639   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817640   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1817641   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1817642   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1817643   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1817644   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1817645   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1817646   +END;
MPRINT(EM_DIAGRAM):   END;
1817647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817648   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1817649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817651   +   H1x2_1  =    -1.55686119998165 * S_AcceptedCmpTotal
1817652   +          +    -0.26111571781978 * S_Mnt  +    -1.44938218805988 *
1817653   +        S_MntMeatProducts  +     0.04086123541942 * S_NumCatalogPurchases
1817654   +          +    -0.80214702507913 * S_RFMstat  +     0.70413979175849 *
1817655   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.55686119998165 * S_AcceptedCmpTotal + -0.26111571781978 *
S_Mnt + -1.44938218805988 * S_MntMeatProducts + 0.04086123541942 * S_NumCatalogPurchases +
-0.80214702507913 * S_RFMstat + 0.70413979175849 * S_Recency ;
1817656   +   H1x2_2  =    -1.89013114756444 * S_AcceptedCmpTotal
1817657   +          +     2.02645277032883 * S_Mnt  +     0.33300450318575 *
1817658   +        S_MntMeatProducts  +    -3.49523435320164 * S_NumCatalogPurchases
1817659   +          +    -0.54366042810185 * S_RFMstat  +    -0.96821243793862 *
1817660   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.89013114756444 * S_AcceptedCmpTotal + 2.02645277032883 *
S_Mnt + 0.33300450318575 * S_MntMeatProducts + -3.49523435320164 * S_NumCatalogPurchases +
-0.54366042810185 * S_RFMstat + -0.96821243793862 * S_Recency ;
1817661   +   H1x2_3  =    -0.37493223935971 * S_AcceptedCmpTotal
1817662   +          +     0.44222577344261 * S_Mnt  +    -2.29203252552751 *
1817663   +        S_MntMeatProducts  +    -2.51799836083289 * S_NumCatalogPurchases
1817664   +          +     0.79676408136588 * S_RFMstat  +    -1.33777715205059 *
1817665   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.37493223935971 * S_AcceptedCmpTotal + 0.44222577344261 *
S_Mnt + -2.29203252552751 * S_MntMeatProducts + -2.51799836083289 * S_NumCatalogPurchases +
0.79676408136588 * S_RFMstat + -1.33777715205059 * S_Recency ;
1817666   +   H1x2_4  =     0.61023216239118 * S_AcceptedCmpTotal
1817667   +          +     -1.2504451910923 * S_Mnt  +     1.08805550572067 *
1817668   +        S_MntMeatProducts  +     0.42462128634087 * S_NumCatalogPurchases
1817669   +          +     0.47301106041065 * S_RFMstat  +    -2.61753144043135 *
1817670   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.61023216239118 * S_AcceptedCmpTotal + -1.2504451910923 *
S_Mnt + 1.08805550572067 * S_MntMeatProducts + 0.42462128634087 * S_NumCatalogPurchases +
0.47301106041065 * S_RFMstat + -2.61753144043135 * S_Recency ;
1817671   +   H1x2_5  =    -1.41618915627784 * S_AcceptedCmpTotal
1817672   +          +    -1.13785141950187 * S_Mnt  +    -1.73667107974481 *
1817673   +        S_MntMeatProducts  +      3.1366199093076 * S_NumCatalogPurchases
1817674   +          +    -1.94563130199796 * S_RFMstat  +       2.512838942818 *
1817675   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.41618915627784 * S_AcceptedCmpTotal + -1.13785141950187 *
S_Mnt + -1.73667107974481 * S_MntMeatProducts + 3.1366199093076 * S_NumCatalogPurchases +
-1.94563130199796 * S_RFMstat + 2.512838942818 * S_Recency ;
1817676   +   H1x2_1  =     0.73112846873387 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73112846873387 + H1x2_1 ;
1817677   +   H1x2_2  =    -0.66717106615524 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.66717106615524 + H1x2_2 ;
1817678   +   H1x2_3  =      2.7125530739338 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.7125530739338 + H1x2_3 ;
1817679   +   H1x2_4  =    -1.39079027168122 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.39079027168122 + H1x2_4 ;
1817680   +   H1x2_5  =     -1.5266283403396 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.5266283403396 + H1x2_5 ;
1817681   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1817682   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1817683   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1817684   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1817685   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1817686   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1817687   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1817688   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1817689   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1817690   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1817691   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1817692   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1817693   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1817694   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1817695   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1817696   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1817697   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1817698   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1817699   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1817700   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1817701   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1817702   +END;
MPRINT(EM_DIAGRAM):   END;
1817703   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817704   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1817705   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1817706   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1817707   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1817708   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1817709   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1817710   +END;
MPRINT(EM_DIAGRAM):   END;
1817711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817712   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1817713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817714   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817715   +   H1x3_1  =     1.55893522013734 * S_AcceptedCmpTotal
1817716   +          +    -1.16802167955541 * S_Mnt  +    -1.60360119780136 *
1817717   +        S_MntMeatProducts  +     0.47774394371528 * S_NumCatalogPurchases
1817718   +          +      -0.530718682766 * S_RFMstat  +    -2.44187650282709 *
1817719   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.55893522013734 * S_AcceptedCmpTotal + -1.16802167955541 *
S_Mnt + -1.60360119780136 * S_MntMeatProducts + 0.47774394371528 * S_NumCatalogPurchases +
-0.530718682766 * S_RFMstat + -2.44187650282709 * S_Recency ;
1817720   +   H1x3_2  =     1.06465525219753 * S_AcceptedCmpTotal
1817721   +          +    -4.15619528335918 * S_Mnt  +     1.95067813512976 *
1817722   +        S_MntMeatProducts  +    -2.07670102753791 * S_NumCatalogPurchases
1817723   +          +     0.49910286851075 * S_RFMstat  +     0.93996026298479 *
1817724   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.06465525219753 * S_AcceptedCmpTotal + -4.15619528335918 *
S_Mnt + 1.95067813512976 * S_MntMeatProducts + -2.07670102753791 * S_NumCatalogPurchases +
0.49910286851075 * S_RFMstat + 0.93996026298479 * S_Recency ;
1817725   +   H1x3_3  =    -0.29105397796174 * S_AcceptedCmpTotal
1817726   +          +     2.11159454800566 * S_Mnt  +     1.67840031691295 *
1817727   +        S_MntMeatProducts  +    -2.40711178902336 * S_NumCatalogPurchases
1817728   +          +    -1.13747844076384 * S_RFMstat  +    -0.88756656082469 *
1817729   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.29105397796174 * S_AcceptedCmpTotal + 2.11159454800566 *
S_Mnt + 1.67840031691295 * S_MntMeatProducts + -2.40711178902336 * S_NumCatalogPurchases +
-1.13747844076384 * S_RFMstat + -0.88756656082469 * S_Recency ;
1817730   +   H1x3_4  =    -1.15703505358845 * S_AcceptedCmpTotal
1817731   +          +     0.30100889287849 * S_Mnt  +     0.55319963517684 *
1817732   +        S_MntMeatProducts  +    -0.02272785613118 * S_NumCatalogPurchases
1817733   +          +     0.43699534320691 * S_RFMstat  +     2.22910491450126 *
1817734   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.15703505358845 * S_AcceptedCmpTotal + 0.30100889287849 *
S_Mnt + 0.55319963517684 * S_MntMeatProducts + -0.02272785613118 * S_NumCatalogPurchases +
0.43699534320691 * S_RFMstat + 2.22910491450126 * S_Recency ;
1817735   +   H1x3_5  =    -0.42268650148557 * S_AcceptedCmpTotal
1817736   +          +    -2.38416083526034 * S_Mnt  +     2.41579845516974 *
1817737   +        S_MntMeatProducts  +     0.60973384003689 * S_NumCatalogPurchases
1817738   +          +    -1.12415629345715 * S_RFMstat  +    -0.59274912531616 *
1817739   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.42268650148557 * S_AcceptedCmpTotal + -2.38416083526034 *
S_Mnt + 2.41579845516974 * S_MntMeatProducts + 0.60973384003689 * S_NumCatalogPurchases +
-1.12415629345715 * S_RFMstat + -0.59274912531616 * S_Recency ;
1817740   +   H1x3_1  =     0.20894643335542 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.20894643335542 + H1x3_1 ;
1817741   +   H1x3_2  =     2.19187718990043 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 2.19187718990043 + H1x3_2 ;
1817742   +   H1x3_3  =    -0.63127842492526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.63127842492526 + H1x3_3 ;
1817743   +   H1x3_4  =     0.25735048029686 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25735048029686 + H1x3_4 ;
1817744   +   H1x3_5  =     0.02632857468412 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.02632857468412 + H1x3_5 ;
1817745   +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
1817746   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
1817747   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1817748   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
1817749   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
1817750   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
1817751   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
1817752   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
1817753   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
1817754   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
1817755   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
1817756   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
1817757   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
1817758   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
1817759   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
1817760   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
1817761   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
1817762   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
1817763   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
1817764   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
1817765   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
1817766   +END;
MPRINT(EM_DIAGRAM):   END;
1817767   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817768   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1817769   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1817770   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1817771   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1817772   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1817773   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
1817774   +END;
MPRINT(EM_DIAGRAM):   END;
1817775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817776   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1817777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817778   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817779   +   H2x1_1  =    -1.91284328958208 * H1x1_1  +     1.01368252878712 * H1x1_2
1817780   +          +     0.88385633780482 * H1x1_3  +     0.77249497316744 * H1x1_4
1817781   +          +    -1.68467525644522 * H1x1_5  +     0.22872788371043 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.91284328958208 * H1x1_1 + 1.01368252878712 * H1x1_2 +
0.88385633780482 * H1x1_3 + 0.77249497316744 * H1x1_4 + -1.68467525644522 * H1x1_5 +
0.22872788371043 * H1x1_6 ;
1817782   +   H2x1_2  =    -0.08913678495622 * H1x1_1  +    -0.95704614273187 * H1x1_2
1817783   +          +    -1.13959611313765 * H1x1_3  +    -0.83269840840553 * H1x1_4
1817784   +          +    -1.34839441082903 * H1x1_5  +      1.4617930846853 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.08913678495622 * H1x1_1 + -0.95704614273187 * H1x1_2 +
-1.13959611313765 * H1x1_3 + -0.83269840840553 * H1x1_4 + -1.34839441082903 * H1x1_5 +
1.4617930846853 * H1x1_6 ;
1817785   +   H2x1_3  =     1.19406467163652 * H1x1_1  +     1.10561638775412 * H1x1_2
1817786   +          +     3.50091937687106 * H1x1_3  +     -0.7408464567923 * H1x1_4
1817787   +          +     1.07741096211456 * H1x1_5  +     -1.0098240718302 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.19406467163652 * H1x1_1 + 1.10561638775412 * H1x1_2 +
3.50091937687106 * H1x1_3 + -0.7408464567923 * H1x1_4 + 1.07741096211456 * H1x1_5 +
-1.0098240718302 * H1x1_6 ;
1817788   +   H2x1_4  =    -3.50840251474163 * H1x1_1  +    -0.53688540920235 * H1x1_2
1817789   +          +    -2.44435438360824 * H1x1_3  +     4.64213676100195 * H1x1_4
1817790   +          +     0.36171420259161 * H1x1_5  +     0.11106499550345 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.50840251474163 * H1x1_1 + -0.53688540920235 * H1x1_2 +
-2.44435438360824 * H1x1_3 + 4.64213676100195 * H1x1_4 + 0.36171420259161 * H1x1_5 +
0.11106499550345 * H1x1_6 ;
1817791   +   H2x1_5  =    -0.92126735850423 * H1x1_1  +    -0.50015259068425 * H1x1_2
1817792   +          +    -2.75013936022633 * H1x1_3  +     1.29804156504555 * H1x1_4
1817793   +          +    -2.88854985509185 * H1x1_5  +     3.51037817476003 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.92126735850423 * H1x1_1 + -0.50015259068425 * H1x1_2 +
-2.75013936022633 * H1x1_3 + 1.29804156504555 * H1x1_4 + -2.88854985509185 * H1x1_5 +
3.51037817476003 * H1x1_6 ;
1817794   +   H2x1_6  =      2.7601365695399 * H1x1_1  +     0.60343333315883 * H1x1_2
1817795   +          +    -4.84088835213795 * H1x1_3  +     0.04677091451384 * H1x1_4
1817796   +          +     1.99119511166544 * H1x1_5  +    -1.84413878989067 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 2.7601365695399 * H1x1_1 + 0.60343333315883 * H1x1_2 +
-4.84088835213795 * H1x1_3 + 0.04677091451384 * H1x1_4 + 1.99119511166544 * H1x1_5 +
-1.84413878989067 * H1x1_6 ;
1817797   +   H2x1_1  = H2x1_1  +    -0.55299168308518 * H1x2_1
1817798   +          +    -0.70728759829892 * H1x2_2  +     0.02028723479846 * H1x2_3
1817799   +          +      2.1534144925678 * H1x2_4  +    -0.60181736829464 * H1x2_5
1817800   +          +    -0.96627475596267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.55299168308518 * H1x2_1 + -0.70728759829892 *
H1x2_2 + 0.02028723479846 * H1x2_3 + 2.1534144925678 * H1x2_4 + -0.60181736829464 * H1x2_5 +
-0.96627475596267 * H1x2_6 ;
1817801   +   H2x1_2  = H2x1_2  +     1.02776882707138 * H1x2_1
1817802   +          +    -0.26186544699712 * H1x2_2  +    -0.59804813597981 * H1x2_3
1817803   +          +     0.13683572328121 * H1x2_4  +     -0.4527430044725 * H1x2_5
1817804   +          +     0.09804477894859 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.02776882707138 * H1x2_1 + -0.26186544699712 * H1x2_2
+ -0.59804813597981 * H1x2_3 + 0.13683572328121 * H1x2_4 + -0.4527430044725 * H1x2_5 +
0.09804477894859 * H1x2_6 ;
1817805   +   H2x1_3  = H2x1_3  +    -1.37372644240513 * H1x2_1
1817806   +          +    -1.41411080054855 * H1x2_2  +    -0.85635388175337 * H1x2_3
1817807   +          +     1.78033736245689 * H1x2_4  +    -0.32277639652206 * H1x2_5
1817808   +          +    -0.10095907241792 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.37372644240513 * H1x2_1 + -1.41411080054855 *
H1x2_2 + -0.85635388175337 * H1x2_3 + 1.78033736245689 * H1x2_4 + -0.32277639652206 * H1x2_5 +
-0.10095907241792 * H1x2_6 ;
1817809   +   H2x1_4  = H2x1_4  +     0.38975073179429 * H1x2_1
1817810   +          +      1.7999626274739 * H1x2_2  +    -0.54595798920563 * H1x2_3
1817811   +          +    -2.87794569741229 * H1x2_4  +     2.24407851876424 * H1x2_5
1817812   +          +    -0.78007016861264 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.38975073179429 * H1x2_1 + 1.7999626274739 * H1x2_2 +
-0.54595798920563 * H1x2_3 + -2.87794569741229 * H1x2_4 + 2.24407851876424 * H1x2_5 +
-0.78007016861264 * H1x2_6 ;
1817813   +   H2x1_5  = H2x1_5  +     1.68407538128685 * H1x2_1
1817814   +          +     2.69111816059998 * H1x2_2  +     0.12927675826764 * H1x2_3
1817815   +          +     -1.7263485913587 * H1x2_4  +    -2.15741343790643 * H1x2_5
1817816   +          +     1.95855676074934 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.68407538128685 * H1x2_1 + 2.69111816059998 * H1x2_2
+ 0.12927675826764 * H1x2_3 + -1.7263485913587 * H1x2_4 + -2.15741343790643 * H1x2_5 +
1.95855676074934 * H1x2_6 ;
1817817   +   H2x1_6  = H2x1_6  +     0.31146846941645 * H1x2_1
1817818   +          +     0.33682375646593 * H1x2_2  +      1.6527641940739 * H1x2_3
1817819   +          +    -0.96403239328063 * H1x2_4  +    -1.11790253982232 * H1x2_5
1817820   +          +     -1.4251132059225 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 0.31146846941645 * H1x2_1 + 0.33682375646593 * H1x2_2
+ 1.6527641940739 * H1x2_3 + -0.96403239328063 * H1x2_4 + -1.11790253982232 * H1x2_5 +
-1.4251132059225 * H1x2_6 ;
1817821   +   H2x1_1  = H2x1_1  +     0.47301275142195 * H1x3_1
1817822   +          +    -1.23391488243925 * H1x3_2  +    -1.81348351496647 * H1x3_3
1817823   +          +    -0.66473016828009 * H1x3_4  +     1.27670685567846 * H1x3_5
1817824   +          +     0.38481934719452 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.47301275142195 * H1x3_1 + -1.23391488243925 * H1x3_2
+ -1.81348351496647 * H1x3_3 + -0.66473016828009 * H1x3_4 + 1.27670685567846 * H1x3_5 +
0.38481934719452 * H1x3_6 ;
1817825   +   H2x1_2  = H2x1_2  +     0.35549808536734 * H1x3_1
1817826   +          +     0.36201179536458 * H1x3_2  +     1.04726425834791 * H1x3_3
1817827   +          +    -1.08276187248251 * H1x3_4  +     0.74248193765521 * H1x3_5
1817828   +          +     1.87596859340821 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.35549808536734 * H1x3_1 + 0.36201179536458 * H1x3_2
+ 1.04726425834791 * H1x3_3 + -1.08276187248251 * H1x3_4 + 0.74248193765521 * H1x3_5 +
1.87596859340821 * H1x3_6 ;
1817829   +   H2x1_3  = H2x1_3  +    -0.36667720681998 * H1x3_1
1817830   +          +      0.5256210995417 * H1x3_2  +    -0.44860423311788 * H1x3_3
1817831   +          +    -0.20913840911463 * H1x3_4  +    -0.76258888517092 * H1x3_5
1817832   +          +     0.20457555210609 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.36667720681998 * H1x3_1 + 0.5256210995417 * H1x3_2
+ -0.44860423311788 * H1x3_3 + -0.20913840911463 * H1x3_4 + -0.76258888517092 * H1x3_5 +
0.20457555210609 * H1x3_6 ;
1817833   +   H2x1_4  = H2x1_4  +     -0.5052323966606 * H1x3_1
1817834   +          +     0.57348008947054 * H1x3_2  +     0.36313882476736 * H1x3_3
1817835   +          +     2.54509537428676 * H1x3_4  +    -1.40462445002153 * H1x3_5
1817836   +          +     1.76488988390401 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.5052323966606 * H1x3_1 + 0.57348008947054 * H1x3_2
+ 0.36313882476736 * H1x3_3 + 2.54509537428676 * H1x3_4 + -1.40462445002153 * H1x3_5 +
1.76488988390401 * H1x3_6 ;
1817837   +   H2x1_5  = H2x1_5  +     -0.4555917406867 * H1x3_1
1817838   +          +     0.52745581365834 * H1x3_2  +    -0.82303556180885 * H1x3_3
1817839   +          +    -0.78981386250305 * H1x3_4  +     0.09307958113664 * H1x3_5
1817840   +          +     1.63202351822216 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.4555917406867 * H1x3_1 + 0.52745581365834 * H1x3_2
+ -0.82303556180885 * H1x3_3 + -0.78981386250305 * H1x3_4 + 0.09307958113664 * H1x3_5 +
1.63202351822216 * H1x3_6 ;
1817841   +   H2x1_6  = H2x1_6  +    -0.57563015009902 * H1x3_1
1817842   +          +     2.47575184377805 * H1x3_2  +    -0.91958118957044 * H1x3_3
1817843   +          +    -1.67916721690516 * H1x3_4  +     0.69514147486102 * H1x3_5
1817844   +          +    -0.75070900812889 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.57563015009902 * H1x3_1 + 2.47575184377805 * H1x3_2
+ -0.91958118957044 * H1x3_3 + -1.67916721690516 * H1x3_4 + 0.69514147486102 * H1x3_5 +
-0.75070900812889 * H1x3_6 ;
1817845   +   H2x1_1  =     0.44089803005479 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.44089803005479 + H2x1_1 ;
1817846   +   H2x1_2  =     0.84182794358826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84182794358826 + H2x1_2 ;
1817847   +   H2x1_3  =     0.09803371201388 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.09803371201388 + H2x1_3 ;
1817848   +   H2x1_4  =      -0.624591248343 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.624591248343 + H2x1_4 ;
1817849   +   H2x1_5  =      0.7596943675806 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.7596943675806 + H2x1_5 ;
1817850   +   H2x1_6  =     1.86613856151687 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.86613856151687 + H2x1_6 ;
1817851   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1817852   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1817853   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1817854   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1817855   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1817856   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1817857   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1817858   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1817859   +END;
MPRINT(EM_DIAGRAM):   END;
1817860   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817861   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1817862   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1817863   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1817864   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1817865   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1817866   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1817867   +END;
MPRINT(EM_DIAGRAM):   END;
1817868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817869   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1817870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817871   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817872   +   H2x2_1  =    -0.67599100831955 * H1x1_1  +     0.24077189312828 * H1x1_2
1817873   +          +      0.2000763543409 * H1x1_3  +    -1.82199808794926 * H1x1_4
1817874   +          +    -0.63614429983717 * H1x1_5  +     0.35027369588915 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.67599100831955 * H1x1_1 + 0.24077189312828 * H1x1_2 +
0.2000763543409 * H1x1_3 + -1.82199808794926 * H1x1_4 + -0.63614429983717 * H1x1_5 +
0.35027369588915 * H1x1_6 ;
1817875   +   H2x2_2  =    -2.86273409671688 * H1x1_1  +    -1.17210014090039 * H1x1_2
1817876   +          +     2.79815832312648 * H1x1_3  +     0.46361776813305 * H1x1_4
1817877   +          +      0.0798677597958 * H1x1_5  +    -0.75991454790943 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -2.86273409671688 * H1x1_1 + -1.17210014090039 * H1x1_2 +
2.79815832312648 * H1x1_3 + 0.46361776813305 * H1x1_4 + 0.0798677597958 * H1x1_5 +
-0.75991454790943 * H1x1_6 ;
1817878   +   H2x2_3  =     -0.6739829418862 * H1x1_1  +    -2.31169428380278 * H1x1_2
1817879   +          +     2.10300119718615 * H1x1_3  +    -0.00742357063683 * H1x1_4
1817880   +          +    -1.51041651747244 * H1x1_5  +    -0.17010696636548 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.6739829418862 * H1x1_1 + -2.31169428380278 * H1x1_2 +
2.10300119718615 * H1x1_3 + -0.00742357063683 * H1x1_4 + -1.51041651747244 * H1x1_5 +
-0.17010696636548 * H1x1_6 ;
1817881   +   H2x2_4  =    -1.50678102953218 * H1x1_1  +    -0.89959733379076 * H1x1_2
1817882   +          +     1.08933879000366 * H1x1_3  +      0.4160027440208 * H1x1_4
1817883   +          +     0.96602358671281 * H1x1_5  +     2.49695921665153 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.50678102953218 * H1x1_1 + -0.89959733379076 * H1x1_2 +
1.08933879000366 * H1x1_3 + 0.4160027440208 * H1x1_4 + 0.96602358671281 * H1x1_5 +
2.49695921665153 * H1x1_6 ;
1817884   +   H2x2_5  =      0.7197781324018 * H1x1_1  +     0.65156339723506 * H1x1_2
1817885   +          +     1.10688522196469 * H1x1_3  +    -0.18317373714845 * H1x1_4
1817886   +          +    -0.41607265841802 * H1x1_5  +    -1.97247962280317 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.7197781324018 * H1x1_1 + 0.65156339723506 * H1x1_2 +
1.10688522196469 * H1x1_3 + -0.18317373714845 * H1x1_4 + -0.41607265841802 * H1x1_5 +
-1.97247962280317 * H1x1_6 ;
1817887   +   H2x2_6  =     0.54986188496659 * H1x1_1  +    -1.79839449870258 * H1x1_2
1817888   +          +    -1.15036560870119 * H1x1_3  +     1.47969678061941 * H1x1_4
1817889   +          +     0.10597867235187 * H1x1_5  +     0.90300533681641 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.54986188496659 * H1x1_1 + -1.79839449870258 * H1x1_2 +
-1.15036560870119 * H1x1_3 + 1.47969678061941 * H1x1_4 + 0.10597867235187 * H1x1_5 +
0.90300533681641 * H1x1_6 ;
1817890   +   H2x2_1  = H2x2_1  +    -0.21000305943834 * H1x2_1
1817891   +          +    -0.32875528993365 * H1x2_2  +    -2.01191741391886 * H1x2_3
1817892   +          +     0.25433844143017 * H1x2_4  +    -0.22353514971516 * H1x2_5
1817893   +          +    -1.39994531215362 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21000305943834 * H1x2_1 + -0.32875528993365 *
H1x2_2 + -2.01191741391886 * H1x2_3 + 0.25433844143017 * H1x2_4 + -0.22353514971516 * H1x2_5 +
-1.39994531215362 * H1x2_6 ;
1817894   +   H2x2_2  = H2x2_2  +     0.97984435202354 * H1x2_1
1817895   +          +    -0.32249690006833 * H1x2_2  +    -1.39997315416199 * H1x2_3
1817896   +          +     -2.7808281862933 * H1x2_4  +    -0.16292745421241 * H1x2_5
1817897   +          +    -0.40444669273525 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.97984435202354 * H1x2_1 + -0.32249690006833 * H1x2_2
+ -1.39997315416199 * H1x2_3 + -2.7808281862933 * H1x2_4 + -0.16292745421241 * H1x2_5 +
-0.40444669273525 * H1x2_6 ;
1817898   +   H2x2_3  = H2x2_3  +      1.7332207906399 * H1x2_1
1817899   +          +     0.48772690844604 * H1x2_2  +    -0.03702571322482 * H1x2_3
1817900   +          +    -0.04073364631727 * H1x2_4  +    -0.91191013457442 * H1x2_5
1817901   +          +    -2.38736049861996 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.7332207906399 * H1x2_1 + 0.48772690844604 * H1x2_2 +
-0.03702571322482 * H1x2_3 + -0.04073364631727 * H1x2_4 + -0.91191013457442 * H1x2_5 +
-2.38736049861996 * H1x2_6 ;
1817902   +   H2x2_4  = H2x2_4  +    -0.06792429668775 * H1x2_1
1817903   +          +    -3.07222522712126 * H1x2_2  +     0.01320929156379 * H1x2_3
1817904   +          +     0.84459091213222 * H1x2_4  +    -0.95949143247045 * H1x2_5
1817905   +          +     0.02632878191094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.06792429668775 * H1x2_1 + -3.07222522712126 *
H1x2_2 + 0.01320929156379 * H1x2_3 + 0.84459091213222 * H1x2_4 + -0.95949143247045 * H1x2_5 +
0.02632878191094 * H1x2_6 ;
1817906   +   H2x2_5  = H2x2_5  +     0.13831659235384 * H1x2_1
1817907   +          +    -1.75598160312232 * H1x2_2  +     0.17047671926062 * H1x2_3
1817908   +          +    -0.45409084878331 * H1x2_4  +    -1.17540122389603 * H1x2_5
1817909   +          +     0.79706245066425 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 0.13831659235384 * H1x2_1 + -1.75598160312232 * H1x2_2
+ 0.17047671926062 * H1x2_3 + -0.45409084878331 * H1x2_4 + -1.17540122389603 * H1x2_5 +
0.79706245066425 * H1x2_6 ;
1817910   +   H2x2_6  = H2x2_6  +     1.74450762507234 * H1x2_1
1817911   +          +    -0.18999736448811 * H1x2_2  +    -0.82200918268165 * H1x2_3
1817912   +          +      1.8752098314092 * H1x2_4  +    -0.55366925571085 * H1x2_5
1817913   +          +     1.96032751350518 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.74450762507234 * H1x2_1 + -0.18999736448811 * H1x2_2
+ -0.82200918268165 * H1x2_3 + 1.8752098314092 * H1x2_4 + -0.55366925571085 * H1x2_5 +
1.96032751350518 * H1x2_6 ;
1817914   +   H2x2_1  = H2x2_1  +     1.05088385328525 * H1x3_1
1817915   +          +    -1.18748050069472 * H1x3_2  +     0.33686598960541 * H1x3_3
1817916   +          +     0.60467968457853 * H1x3_4  +     0.44997942659683 * H1x3_5
1817917   +          +     0.86372067144364 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.05088385328525 * H1x3_1 + -1.18748050069472 * H1x3_2
+ 0.33686598960541 * H1x3_3 + 0.60467968457853 * H1x3_4 + 0.44997942659683 * H1x3_5 +
0.86372067144364 * H1x3_6 ;
1817918   +   H2x2_2  = H2x2_2  +     0.54489966189284 * H1x3_1
1817919   +          +     0.63828892530684 * H1x3_2  +     1.36576672067523 * H1x3_3
1817920   +          +    -0.93080386349548 * H1x3_4  +    -0.53645684858865 * H1x3_5
1817921   +          +     0.80254310887989 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54489966189284 * H1x3_1 + 0.63828892530684 * H1x3_2
+ 1.36576672067523 * H1x3_3 + -0.93080386349548 * H1x3_4 + -0.53645684858865 * H1x3_5 +
0.80254310887989 * H1x3_6 ;
1817922   +   H2x2_3  = H2x2_3  +    -0.43326705547287 * H1x3_1
1817923   +          +     1.62130917530395 * H1x3_2  +     -1.9569471371487 * H1x3_3
1817924   +          +    -0.16690355216427 * H1x3_4  +     0.76588074497881 * H1x3_5
1817925   +          +    -0.80961698509146 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.43326705547287 * H1x3_1 + 1.62130917530395 * H1x3_2
+ -1.9569471371487 * H1x3_3 + -0.16690355216427 * H1x3_4 + 0.76588074497881 * H1x3_5 +
-0.80961698509146 * H1x3_6 ;
1817926   +   H2x2_4  = H2x2_4  +     0.14186336769381 * H1x3_1
1817927   +          +    -0.40313769302155 * H1x3_2  +     0.32907477170578 * H1x3_3
1817928   +          +    -0.09559287343495 * H1x3_4  +     1.23870853269954 * H1x3_5
1817929   +          +    -1.29909553454934 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.14186336769381 * H1x3_1 + -0.40313769302155 * H1x3_2
+ 0.32907477170578 * H1x3_3 + -0.09559287343495 * H1x3_4 + 1.23870853269954 * H1x3_5 +
-1.29909553454934 * H1x3_6 ;
1817930   +   H2x2_5  = H2x2_5  +    -0.23962567636847 * H1x3_1
1817931   +          +    -0.40709618711343 * H1x3_2  +    -1.68479406479753 * H1x3_3
1817932   +          +     0.70815879664382 * H1x3_4  +    -0.08013794063462 * H1x3_5
1817933   +          +      0.3854653698129 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.23962567636847 * H1x3_1 + -0.40709618711343 *
H1x3_2 + -1.68479406479753 * H1x3_3 + 0.70815879664382 * H1x3_4 + -0.08013794063462 * H1x3_5 +
0.3854653698129 * H1x3_6 ;
1817934   +   H2x2_6  = H2x2_6  +     0.30227974563111 * H1x3_1
1817935   +          +    -0.74687752968448 * H1x3_2  +     1.36415251312446 * H1x3_3
1817936   +          +     1.81088044806083 * H1x3_4  +     1.05534281539066 * H1x3_5
1817937   +          +    -0.43429796112944 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.30227974563111 * H1x3_1 + -0.74687752968448 * H1x3_2
+ 1.36415251312446 * H1x3_3 + 1.81088044806083 * H1x3_4 + 1.05534281539066 * H1x3_5 +
-0.43429796112944 * H1x3_6 ;
1817938   +   H2x2_1  =     0.63184708368306 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63184708368306 + H2x2_1 ;
1817939   +   H2x2_2  =     0.84907350596357 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.84907350596357 + H2x2_2 ;
1817940   +   H2x2_3  =    -0.73809203587584 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.73809203587584 + H2x2_3 ;
1817941   +   H2x2_4  =    -0.43815853180498 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.43815853180498 + H2x2_4 ;
1817942   +   H2x2_5  =     0.21738444698009 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.21738444698009 + H2x2_5 ;
1817943   +   H2x2_6  =     0.35336989078545 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.35336989078545 + H2x2_6 ;
1817944   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1817945   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1817946   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
1817947   +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
1817948   +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
1817949   +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
1817950   +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
1817951   +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
1817952   +END;
MPRINT(EM_DIAGRAM):   END;
1817953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1817954   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1817955   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1817956   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1817957   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1817958   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1817959   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
1817960   +END;
MPRINT(EM_DIAGRAM):   END;
1817961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817962   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1817963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1817964   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1817965   +   H3x1_1  =     0.88232318111379 * H2x1_1  +     0.33230222316203 * H2x1_2
1817966   +          +     1.74392107555271 * H2x1_3  +    -1.04185063882146 * H2x1_4
1817967   +          +    -0.63105511848819 * H2x1_5  +    -1.05088304858423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.88232318111379 * H2x1_1 + 0.33230222316203 * H2x1_2 +
1.74392107555271 * H2x1_3 + -1.04185063882146 * H2x1_4 + -0.63105511848819 * H2x1_5 +
-1.05088304858423 * H2x1_6 ;
1817968   +   H3x1_2  =     1.11736284857762 * H2x1_1  +     1.90660007278783 * H2x1_2
1817969   +          +    -0.38007206174956 * H2x1_3  +     0.37265047043174 * H2x1_4
1817970   +          +     2.27208664894129 * H2x1_5  +     0.87150445612099 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.11736284857762 * H2x1_1 + 1.90660007278783 * H2x1_2 +
-0.38007206174956 * H2x1_3 + 0.37265047043174 * H2x1_4 + 2.27208664894129 * H2x1_5 +
0.87150445612099 * H2x1_6 ;
1817971   +   H3x1_3  =    -1.47841270668706 * H2x1_1  +    -1.28441896803313 * H2x1_2
1817972   +          +     1.95549364222924 * H2x1_3  +    -2.50484940312791 * H2x1_4
1817973   +          +    -2.84934238039874 * H2x1_5  +     2.18013446750751 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.47841270668706 * H2x1_1 + -1.28441896803313 * H2x1_2 +
1.95549364222924 * H2x1_3 + -2.50484940312791 * H2x1_4 + -2.84934238039874 * H2x1_5 +
2.18013446750751 * H2x1_6 ;
1817974   +   H3x1_4  =     1.91981096223784 * H2x1_1  +     2.50981387206546 * H2x1_2
1817975   +          +     1.52848474440169 * H2x1_3  +    -1.77653121606781 * H2x1_4
1817976   +          +    -1.17059017641066 * H2x1_5  +     0.08630071934474 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.91981096223784 * H2x1_1 + 2.50981387206546 * H2x1_2 +
1.52848474440169 * H2x1_3 + -1.77653121606781 * H2x1_4 + -1.17059017641066 * H2x1_5 +
0.08630071934474 * H2x1_6 ;
1817977   +   H3x1_5  =    -0.90689901549977 * H2x1_1  +    -0.28920884601352 * H2x1_2
1817978   +          +     0.19367561691053 * H2x1_3  +    -1.64382922054024 * H2x1_4
1817979   +          +    -1.27645531071461 * H2x1_5  +     2.78368081292476 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.90689901549977 * H2x1_1 + -0.28920884601352 * H2x1_2 +
0.19367561691053 * H2x1_3 + -1.64382922054024 * H2x1_4 + -1.27645531071461 * H2x1_5 +
2.78368081292476 * H2x1_6 ;
1817980   +   H3x1_6  =     1.79097710546589 * H2x1_1  +     0.62195006841522 * H2x1_2
1817981   +          +     0.38238495192417 * H2x1_3  +     0.38117337455775 * H2x1_4
1817982   +          +     0.31232345193628 * H2x1_5  +     1.64288571863932 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.79097710546589 * H2x1_1 + 0.62195006841522 * H2x1_2 +
0.38238495192417 * H2x1_3 + 0.38117337455775 * H2x1_4 + 0.31232345193628 * H2x1_5 +
1.64288571863932 * H2x1_6 ;
1817983   +   H3x1_1  = H3x1_1  +    -0.29610176935088 * H2x2_1
1817984   +          +    -0.05687019870114 * H2x2_2  +     0.19276816813006 * H2x2_3
1817985   +          +    -0.02919428123272 * H2x2_4  +     -0.1225189756077 * H2x2_5
1817986   +          +     0.35216486042215 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.29610176935088 * H2x2_1 + -0.05687019870114 *
H2x2_2 + 0.19276816813006 * H2x2_3 + -0.02919428123272 * H2x2_4 + -0.1225189756077 * H2x2_5 +
0.35216486042215 * H2x2_6 ;
1817987   +   H3x1_2  = H3x1_2  +    -0.65560935360323 * H2x2_1
1817988   +          +     1.14492037534385 * H2x2_2  +    -0.73840836071645 * H2x2_3
1817989   +          +      1.3947576688638 * H2x2_4  +    -0.01317619212955 * H2x2_5
1817990   +          +    -0.91648595761636 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -0.65560935360323 * H2x2_1 + 1.14492037534385 * H2x2_2
+ -0.73840836071645 * H2x2_3 + 1.3947576688638 * H2x2_4 + -0.01317619212955 * H2x2_5 +
-0.91648595761636 * H2x2_6 ;
1817991   +   H3x1_3  = H3x1_3  +    -0.53127332055291 * H2x2_1
1817992   +          +     0.36262088215518 * H2x2_2  +     2.77585954813321 * H2x2_3
1817993   +          +     1.38261906942485 * H2x2_4  +    -0.22635906489825 * H2x2_5
1817994   +          +    -2.11281855575499 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.53127332055291 * H2x2_1 + 0.36262088215518 * H2x2_2
+ 2.77585954813321 * H2x2_3 + 1.38261906942485 * H2x2_4 + -0.22635906489825 * H2x2_5 +
-2.11281855575499 * H2x2_6 ;
1817995   +   H3x1_4  = H3x1_4  +     0.10255243516649 * H2x2_1
1817996   +          +    -0.19237607982949 * H2x2_2  +    -0.39440266749795 * H2x2_3
1817997   +          +     0.62091379272854 * H2x2_4  +    -0.71121773171613 * H2x2_5
1817998   +          +     0.57305821692201 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.10255243516649 * H2x2_1 + -0.19237607982949 * H2x2_2
+ -0.39440266749795 * H2x2_3 + 0.62091379272854 * H2x2_4 + -0.71121773171613 * H2x2_5 +
0.57305821692201 * H2x2_6 ;
1817999   +   H3x1_5  = H3x1_5  +     1.38760232745985 * H2x2_1
1818000   +          +    -0.67366859881604 * H2x2_2  +     0.73667853659073 * H2x2_3
1818001   +          +     0.48338791573814 * H2x2_4  +    -1.86204960161547 * H2x2_5
1818002   +          +     2.06401699674057 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 1.38760232745985 * H2x2_1 + -0.67366859881604 * H2x2_2
+ 0.73667853659073 * H2x2_3 + 0.48338791573814 * H2x2_4 + -1.86204960161547 * H2x2_5 +
2.06401699674057 * H2x2_6 ;
1818003   +   H3x1_6  = H3x1_6  +     1.58403061991045 * H2x2_1
1818004   +          +    -1.98415138001436 * H2x2_2  +    -2.65270828558486 * H2x2_3
1818005   +          +     0.24663962279095 * H2x2_4  +    -0.13610124747178 * H2x2_5
1818006   +          +     0.08850124295188 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.58403061991045 * H2x2_1 + -1.98415138001436 * H2x2_2
+ -2.65270828558486 * H2x2_3 + 0.24663962279095 * H2x2_4 + -0.13610124747178 * H2x2_5 +
0.08850124295188 * H2x2_6 ;
1818007   +   H3x1_1  =    -0.38359896864958 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.38359896864958 + H3x1_1 ;
1818008   +   H3x1_2  =     0.71155840570573 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.71155840570573 + H3x1_2 ;
1818009   +   H3x1_3  =     0.51799749231142 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.51799749231142 + H3x1_3 ;
1818010   +   H3x1_4  =     0.67952932286733 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.67952932286733 + H3x1_4 ;
1818011   +   H3x1_5  =    -0.81394067979603 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.81394067979603 + H3x1_5 ;
1818012   +   H3x1_6  =    -0.01596290366203 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.01596290366203 + H3x1_6 ;
1818013   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
1818014   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
1818015   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
1818016   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
1818017   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
1818018   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
1818019   +END;
MPRINT(EM_DIAGRAM):   END;
1818020   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1818021   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1818022   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1818023   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1818024   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1818025   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1818026   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
1818027   +END;
MPRINT(EM_DIAGRAM):   END;
1818028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818029   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1818030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818031   +
1818032   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1818033   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1818034   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1818035   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1818036   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1818037   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1818038   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1818039   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1818040   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1818041   +end;
MPRINT(EM_DIAGRAM):   end;
1818042   +else do;
MPRINT(EM_DIAGRAM):   else do;
1818043   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1818044   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1818045   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1818046   +   end;
MPRINT(EM_DIAGRAM):   end;
1818047   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1818048   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1818049   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1818050   +   end;
MPRINT(EM_DIAGRAM):   end;
1818051   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1818052   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1818053   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1818054   +   end;
MPRINT(EM_DIAGRAM):   end;
1818055   +end;
MPRINT(EM_DIAGRAM):   end;
1818056   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1818057   +   P_DepVar1  =     0.28094469007064 * H3x1_1  +     4.40543517205109 * H3x1_2
1818058   +          +     4.58780022403482 * H3x1_3  +    -1.49344393871597 * H3x1_4
1818059   +          +     3.15120047821915 * H3x1_5  +    -1.83744247169269 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28094469007064 * H3x1_1 + 4.40543517205109 * H3x1_2 +
4.58780022403482 * H3x1_3 + -1.49344393871597 * H3x1_4 + 3.15120047821915 * H3x1_5 +
-1.83744247169269 * H3x1_6 ;
1818060   +   P_DepVar1  =     -2.1680951408523 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.1680951408523 + P_DepVar1 ;
1818061   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1818062   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1818063   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1818064   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1818065   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1818066   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1818067   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1818068   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1818069   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1818070   +END;
MPRINT(EM_DIAGRAM):   END;
1818071   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1818072   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1818073   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1818074   +END;
MPRINT(EM_DIAGRAM):   END;
1818075   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1818076   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1818077   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1818078   +END;
MPRINT(EM_DIAGRAM):   END;
1818079   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1818080   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1818081   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1818082   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1818083   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1818084   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1818085   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1818086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818087   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1818088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818089   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1818090   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1818091   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1818092   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1818093   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1818094   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1818095   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1818096   +END;
MPRINT(EM_DIAGRAM):   END;
1818097   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1818098   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1818099   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1818100   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1818101   +* Renaming variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural28;
1818102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818103   +* Renaming Posterior variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural28;
1818104   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818105   +drop AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar1;
1818106   +AutoNeural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar1 = P_DepVar1;
1818107   +drop AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_P_DepVar0;
1818108   +AutoNeural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural28_P_DepVar0 = P_DepVar0;
1818109   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818110   +* Renaming Into variables for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural28;
1818111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818112   +length AutoNeural28_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural28_I_DepVar $32;
1818113   +drop AutoNeural28_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_I_DepVar;
1818114   +AutoNeural28_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural28_I_DepVar = I_DepVar;
1818115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818116   +* Renaming _WARN_ variable for AutoNeural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural28;
1818117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818118   +length AutoNeural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural28_WARN_ $4;
1818119   +drop AutoNeural28_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural28_WARN_;
1818120   +AutoNeural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural28_WARN_ = _WARN_;
1818121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818122   +* Ensmbl53: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Scoring Code of model 7 of 7;
1818123   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818125   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1818126   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1818127   +* NODE: AutoNeural29;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural29;
1818128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818129   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1818130   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1818131   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1818132   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1818133   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1818134   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1818135   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1818136   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1818137   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1818138   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1818139   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1818140   +LENGTH _WARN_ $4
1818141   +      F_DepVar  $ 12
1818142   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1818143   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1818144   +
1818145   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1818146   +
1818147   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1818148   +
1818149   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1818150   +
1818151   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1818152   +
1818153   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1818154   +
1818155   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1818156   +
1818157   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1818158   +
1818159   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1818160   +
1818161   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1818162   +
1818163   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1818164   +
1818165   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1818166   +
1818167   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1818168   +
1818169   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1818170   +
1818171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818172   +*** Checking missing input Interval
1818173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1818174   +
1818175   +IF NMISS(
1818176   +   AcceptedCmpTotal ,
1818177   +   Mnt ,
1818178   +   MntMeatProducts ,
1818179   +   NumCatalogPurchases ,
1818180   +   RFMstat ,
1818181   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1818182   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1818183   +
1818184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1818185   +END;
MPRINT(EM_DIAGRAM):   END;
1818186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818187   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1818188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818189   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1818190   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1818191   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1818192   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1818193   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1818194   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1818195   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1818196   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1818197   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1818198   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1818199   +END;
MPRINT(EM_DIAGRAM):   END;
1818200   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1818201   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1818202   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1818203   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1818204   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1818205   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1818206   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1818207   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1818208   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1818209   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1818210   +   ELSE S_NumCatalogPurchases
1818211   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1818212   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1818213   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1818214   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1818215   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1818216   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1818217   +END;
MPRINT(EM_DIAGRAM):   END;
1818218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818219   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1818220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818221   +
1818222   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1818223   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1818224   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1818225   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1818226   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1818227   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1818228   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1818229   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1818230   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1818231   +end;
MPRINT(EM_DIAGRAM):   end;
1818232   +else do;
MPRINT(EM_DIAGRAM):   else do;
1818233   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1818234   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1818235   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1818236   +   end;
MPRINT(EM_DIAGRAM):   end;
1818237   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1818238   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1818239   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1818240   +   end;
MPRINT(EM_DIAGRAM):   end;
1818241   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1818242   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1818243   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1818244   +   end;
MPRINT(EM_DIAGRAM):   end;
1818245   +end;
MPRINT(EM_DIAGRAM):   end;
1818246   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1818247   +   P_DepVar1  =     1.05169539250812 * S_AcceptedCmpTotal
1818248   +          +    -1.01535799807127 * S_Mnt  +     0.90249216466184 *
1818249   +        S_MntMeatProducts  +     0.55600820704456 * S_NumCatalogPurchases
1818250   +          +     0.11616609536854 * S_RFMstat  +    -1.16391829324819 *
1818251   +        S_Recency ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.05169539250812 * S_AcceptedCmpTotal + -1.01535799807127 *
S_Mnt + 0.90249216466184 * S_MntMeatProducts + 0.55600820704456 * S_NumCatalogPurchases +
0.11616609536854 * S_RFMstat + -1.16391829324819 * S_Recency ;
1818252   +   P_DepVar1  =    -2.23938090727264 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23938090727264 + P_DepVar1 ;
1818253   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1818254   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1818255   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1818256   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1818257   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1818258   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1818259   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1818260   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1818261   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1818262   +END;
MPRINT(EM_DIAGRAM):   END;
1818263   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1818264   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1818265   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1818266   +END;
MPRINT(EM_DIAGRAM):   END;
1818267   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1818268   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1818269   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1818270   +END;
MPRINT(EM_DIAGRAM):   END;
1818271   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1818272   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1818273   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1818274   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1818275   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1818276   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1818277   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1818278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818279   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1818280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818281   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1818282   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1818283   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1818284   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1818285   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1818286   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1818287   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1818288   +END;
MPRINT(EM_DIAGRAM):   END;
1818289   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1818290   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1818291   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1818292   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1818293   +* Renaming variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural29;
1818294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818295   +* Renaming Posterior variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural29;
1818296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818297   +drop AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar1;
1818298   +AutoNeural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar1 = P_DepVar1;
1818299   +drop AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_P_DepVar0;
1818300   +AutoNeural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural29_P_DepVar0 = P_DepVar0;
1818301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818302   +* Renaming Into variables for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming Into variables for AutoNeural29;
1818303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818304   +length AutoNeural29_I_DepVar $32;
MPRINT(EM_DIAGRAM):   length AutoNeural29_I_DepVar $32;
1818305   +drop AutoNeural29_I_DepVar;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_I_DepVar;
1818306   +AutoNeural29_I_DepVar = I_DepVar;
MPRINT(EM_DIAGRAM):   AutoNeural29_I_DepVar = I_DepVar;
1818307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818308   +* Renaming _WARN_ variable for AutoNeural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural29;
1818309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818310   +length AutoNeural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural29_WARN_ $4;
1818311   +drop AutoNeural29_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural29_WARN_;
1818312   +AutoNeural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural29_WARN_ = _WARN_;
1818313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818314   +* Ensmbl53: Voting to produce predicted target;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Voting to produce predicted target;
1818315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818316   +array Ensmbl53_post{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl53_post{2} _temporary_;
1818317   +array Ensmbl53_count{2} _temporary_;
MPRINT(EM_DIAGRAM):   array Ensmbl53_count{2} _temporary_;
1818318   +array Ensmbl53_level{2} $32 _temporary_ (
1818319   +"1"
1818320   +"0"
1818321   +);
MPRINT(EM_DIAGRAM):   array Ensmbl53_level{2} $32 _temporary_ ( "1" "0" );
1818322   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1818323   +Ensmbl53_post{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{i} = 0;
1818324   +Ensmbl53_count{i} = 0;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{i} = 0;
1818325   +end;
MPRINT(EM_DIAGRAM):   end;
1818326   +if AutoNeural30_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural30_I_DepVar = Ensmbl53_level{1} then do;
1818327   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1818328   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural30_P_DepVar1;
1818329   +end;
MPRINT(EM_DIAGRAM):   end;
1818330   +if AutoNeural31_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural31_I_DepVar = Ensmbl53_level{1} then do;
1818331   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1818332   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural31_P_DepVar1;
1818333   +end;
MPRINT(EM_DIAGRAM):   end;
1818334   +if AutoNeural32_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural32_I_DepVar = Ensmbl53_level{1} then do;
1818335   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1818336   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural32_P_DepVar1;
1818337   +end;
MPRINT(EM_DIAGRAM):   end;
1818338   +if AutoNeural33_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural33_I_DepVar = Ensmbl53_level{1} then do;
1818339   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1818340   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural33_P_DepVar1;
1818341   +end;
MPRINT(EM_DIAGRAM):   end;
1818342   +if AutoNeural27_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural27_I_DepVar = Ensmbl53_level{1} then do;
1818343   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1818344   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural27_P_DepVar1;
1818345   +end;
MPRINT(EM_DIAGRAM):   end;
1818346   +if AutoNeural28_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural28_I_DepVar = Ensmbl53_level{1} then do;
1818347   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1818348   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural28_P_DepVar1;
1818349   +end;
MPRINT(EM_DIAGRAM):   end;
1818350   +if AutoNeural29_I_DepVar = Ensmbl53_level{1} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural29_I_DepVar = Ensmbl53_level{1} then do;
1818351   +Ensmbl53_count{1} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{1} + 1;
1818352   +Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{1}=Ensmbl53_post{1}+ AutoNeural29_P_DepVar1;
1818353   +end;
MPRINT(EM_DIAGRAM):   end;
1818354   +if AutoNeural30_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural30_I_DepVar = Ensmbl53_level{2} then do;
1818355   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1818356   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural30_P_DepVar0;
1818357   +end;
MPRINT(EM_DIAGRAM):   end;
1818358   +if AutoNeural31_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural31_I_DepVar = Ensmbl53_level{2} then do;
1818359   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1818360   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural31_P_DepVar0;
1818361   +end;
MPRINT(EM_DIAGRAM):   end;
1818362   +if AutoNeural32_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural32_I_DepVar = Ensmbl53_level{2} then do;
1818363   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1818364   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural32_P_DepVar0;
1818365   +end;
MPRINT(EM_DIAGRAM):   end;
1818366   +if AutoNeural33_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural33_I_DepVar = Ensmbl53_level{2} then do;
1818367   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1818368   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural33_P_DepVar0;
1818369   +end;
MPRINT(EM_DIAGRAM):   end;
1818370   +if AutoNeural27_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural27_I_DepVar = Ensmbl53_level{2} then do;
1818371   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1818372   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural27_P_DepVar0;
1818373   +end;
MPRINT(EM_DIAGRAM):   end;
1818374   +if AutoNeural28_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural28_I_DepVar = Ensmbl53_level{2} then do;
1818375   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1818376   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural28_P_DepVar0;
1818377   +end;
MPRINT(EM_DIAGRAM):   end;
1818378   +if AutoNeural29_I_DepVar = Ensmbl53_level{2} then do;
MPRINT(EM_DIAGRAM):   if AutoNeural29_I_DepVar = Ensmbl53_level{2} then do;
1818379   +Ensmbl53_count{2} + 1;
MPRINT(EM_DIAGRAM):   Ensmbl53_count{2} + 1;
1818380   +Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl53_post{2}=Ensmbl53_post{2}+ AutoNeural29_P_DepVar0;
1818381   +end;
MPRINT(EM_DIAGRAM):   end;
1818382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818383   +* Ensmbl53: Determine Into Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Determine Into Variable;
1818384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818385   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1818386   +drop i vote_count vote_post;
MPRINT(EM_DIAGRAM):   drop i vote_count vote_post;
1818387   +vote_count = max(
1818388   +Ensmbl53_count{1} ,
1818389   +Ensmbl53_count{2}
1818390   +);
MPRINT(EM_DIAGRAM):   vote_count = max( Ensmbl53_count{1} , Ensmbl53_count{2} );
1818391   +do i=1 to 2;
MPRINT(EM_DIAGRAM):   do i=1 to 2;
1818392   +if Ensmbl53_count{i}=vote_count and Ensmbl53_post{i}>vote_post then do;
MPRINT(EM_DIAGRAM):   if Ensmbl53_count{i}=vote_count and Ensmbl53_post{i}>vote_post then do;
1818393   +I_DepVar = Ensmbl53_level{i};
MPRINT(EM_DIAGRAM):   I_DepVar = Ensmbl53_level{i};
1818394   +vote_post = Ensmbl53_count{i};
MPRINT(EM_DIAGRAM):   vote_post = Ensmbl53_count{i};
1818395   +end;
MPRINT(EM_DIAGRAM):   end;
1818396   +end;
MPRINT(EM_DIAGRAM):   end;
1818397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818398   +* Ensmbl53: Compute posterior vars using models predicting the chosen level;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Compute posterior vars using models predicting the chosen
level;
1818399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818400   +P_DepVar1 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1818401   +P_DepVar0 = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1818402   +if I_DepVar = AutoNeural30_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural30_I_DepVar then do;
1818403   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural30_P_DepVar1;
1818404   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural30_P_DepVar0;
1818405   +end;
MPRINT(EM_DIAGRAM):   end;
1818406   +if I_DepVar = AutoNeural31_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural31_I_DepVar then do;
1818407   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural31_P_DepVar1;
1818408   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural31_P_DepVar0;
1818409   +end;
MPRINT(EM_DIAGRAM):   end;
1818410   +if I_DepVar = AutoNeural32_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural32_I_DepVar then do;
1818411   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural32_P_DepVar1;
1818412   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural32_P_DepVar0;
1818413   +end;
MPRINT(EM_DIAGRAM):   end;
1818414   +if I_DepVar = AutoNeural33_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural33_I_DepVar then do;
1818415   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural33_P_DepVar1;
1818416   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural33_P_DepVar0;
1818417   +end;
MPRINT(EM_DIAGRAM):   end;
1818418   +if I_DepVar = AutoNeural27_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural27_I_DepVar then do;
1818419   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural27_P_DepVar1;
1818420   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural27_P_DepVar0;
1818421   +end;
MPRINT(EM_DIAGRAM):   end;
1818422   +if I_DepVar = AutoNeural28_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural28_I_DepVar then do;
1818423   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural28_P_DepVar1;
1818424   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural28_P_DepVar0;
1818425   +end;
MPRINT(EM_DIAGRAM):   end;
1818426   +if I_DepVar = AutoNeural29_I_DepVar then do;
MPRINT(EM_DIAGRAM):   if I_DepVar = AutoNeural29_I_DepVar then do;
1818427   +P_DEPVAR1 = P_DEPVAR1 + AutoNeural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   P_DEPVAR1 = P_DEPVAR1 + AutoNeural29_P_DepVar1;
1818428   +P_DEPVAR0 = P_DEPVAR0 + AutoNeural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   P_DEPVAR0 = P_DEPVAR0 + AutoNeural29_P_DepVar0;
1818429   +end;
MPRINT(EM_DIAGRAM):   end;
1818430   +* Ensmbl53: Averaging posterior;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Averaging posterior;
1818431   +P_DepVar1 = P_DepVar1/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1/vote_count;
1818432   +P_DepVar0 = P_DepVar0/vote_count;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0/vote_count;
1818433   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818434   +* Ensmbl53: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Producing Unformatted variable;
1818435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818436   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1818437   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1818438   +else
1818439   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1818440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818441   +* Ensmbl53: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Computing _WARN_ Variable;
1818442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818443   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1818444   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1818445   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1818446   +if index(AUTONEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1818446  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1818447   +if index(AUTONEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1818447  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1818448   +if index(AUTONEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1818448  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1818449   +if index(AUTONEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1818449  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1818450   +if index(AUTONEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1818450  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1818451   +if index(AUTONEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1818451  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1818452   +if index(AUTONEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1818452  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1818453   +if index(AUTONEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1818453  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1818454   +if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1818454  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1818455   +if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1818455  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1818456   +if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1818456  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1818457   +if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1818457  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1818458   +if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1818458  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1818459   +if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1818459  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1818460   +if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1818460  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1818461   +if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1818461  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1818462   +if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1818462  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1818463   +if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1818463  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1818464   +if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1818464  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1818465   +if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1818465  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1818466   +if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1818466  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1818467   +if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1818467  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1818468   +if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1818468  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1818469   +if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1818469  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1818470   +if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1818470  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1818471   +if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1818471  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1818472   +if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1818472  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1818473   +if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1818473  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1818474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818475   +* Ensmbl53: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Computing Residual Vars;
1818476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818477   +if
1818478   +F_DepVar NE '1'
1818479   +AND F_DepVar NE '0'
1818480   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1818481   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1818482   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1818483   +end;
MPRINT(EM_DIAGRAM):   end;
1818484   +else do;
MPRINT(EM_DIAGRAM):   else do;
1818485   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1818486   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1818487   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1818488   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1818489   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1818490   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1818491   +END;
MPRINT(EM_DIAGRAM):   END;
1818492   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1818493    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL53_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL30_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1818494    quit;
1818495    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl53_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl53_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl53_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1818555    filename _pref
1818555  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural30\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural30\EMPUBLISHSCORE.sas";
1818556    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1818557    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural30\EMPUBLISHSCORE.sas.
1818558   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1818559   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1818560   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1818561   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1818562   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1818563   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1818564   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1818565   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1818566   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1818567   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1818568   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1818569   +LENGTH _WARN_ $4
1818570   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1818571   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1818572   +
1818573   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1818574   +
1818575   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1818576   +
1818577   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1818578   +
1818579   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1818580   +
1818581   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1818582   +
1818583   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1818584   +
1818585   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1818586   +
1818587   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1818588   +
1818589   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1818590   +
1818591   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1818592   +
1818593   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1818594   +
1818595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818596   +*** Checking missing input Interval
1818597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1818598   +
1818599   +IF NMISS(
1818600   +   AcceptedCmpTotal ,
1818601   +   Mnt ,
1818602   +   MntMeatProducts ,
1818603   +   NumCatalogPurchases ,
1818604   +   RFMstat ,
1818605   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1818606   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1818607   +
1818608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1818609   +END;
MPRINT(EM_DIAGRAM):   END;
1818610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818611   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1818612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818613   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1818614   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1818615   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1818616   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1818617   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1818618   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1818619   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1818620   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1818621   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1818622   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1818623   +END;
MPRINT(EM_DIAGRAM):   END;
1818624   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1818625   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1818626   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1818627   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1818628   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1818629   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1818630   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1818631   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1818632   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1818633   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1818634   +   ELSE S_NumCatalogPurchases
1818635   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1818636   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1818637   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1818638   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1818639   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1818640   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1818641   +END;
MPRINT(EM_DIAGRAM):   END;
1818642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818643   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1818644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818645   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1818646   +   H1x1_1  =    -10.2196367325197 * S_AcceptedCmpTotal
1818647   +          +     73.8468810244622 * S_Mnt  +    -37.1568918433377 *
1818648   +        S_MntMeatProducts  +    -6.41798758194194 * S_NumCatalogPurchases
1818649   +          +     8.70227685660232 * S_RFMstat  +      6.0315592275084 *
1818650   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -10.2196367325197 * S_AcceptedCmpTotal + 73.8468810244622 *
S_Mnt + -37.1568918433377 * S_MntMeatProducts + -6.41798758194194 * S_NumCatalogPurchases +
8.70227685660232 * S_RFMstat + 6.0315592275084 * S_Recency ;
1818651   +   H1x1_1  =     13.2334413528619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 13.2334413528619 + H1x1_1 ;
1818652   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1818653   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1818654   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1818655   +END;
MPRINT(EM_DIAGRAM):   END;
1818656   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1818657   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1818658   +END;
MPRINT(EM_DIAGRAM):   END;
1818659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818660   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1818661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818662   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1818663   +   P_DepVar1  =    -2.47422582638078 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.47422582638078 * H1x1_1 ;
1818664   +   P_DepVar1  =    -1.87932369728474 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.87932369728474 + P_DepVar1 ;
1818665   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1818666   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1818667   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1818668   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1818669   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1818670   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1818671   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1818672   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1818673   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1818674   +END;
MPRINT(EM_DIAGRAM):   END;
1818675   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1818676   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1818677   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1818678   +END;
MPRINT(EM_DIAGRAM):   END;
1818679   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1818680   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1818681   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1818682   +END;
MPRINT(EM_DIAGRAM):   END;
1818683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818684   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1818685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1818686   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1818687   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1818688   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1818689   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1818690   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1818691   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1818692   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1818693   +END;
MPRINT(EM_DIAGRAM):   END;
1818694   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1818695   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1818696   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1818697   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1818698    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1818699    quit;
1818700    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1818701    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1818702    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1818703    retain ID 2 Node "AutoNeural30";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural30";
1818704    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1818705    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 325 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 325 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818706    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1818707    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 325 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 325 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818709    proc sort data=EMWS8.AutoNeural30_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural30_variableset out=_temp2(keep=NAME
CREATOR);
1818710    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL30_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1818712    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818713    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1818714    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1818715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818716    proc contents data=EMWS8.AutoNeural30_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural30_train out=_meta(keep=NAME) noprint;
1818717    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1818718    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1818719    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818720    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818721    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818722    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1818723    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818724    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818725    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1818726    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1818726  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 158 rows and 5 columns.
 
1818727    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818728    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1818729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 158 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 158 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1818730    filename _pref
1818730  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1818731    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1818732    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1818733   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1818734   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1818735   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1818736   +
1818737   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1818738   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1818739   +
1818740   +
1818741   +
1818742   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1818743   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1818744   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1818745    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1818746    quit;
1818747    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1818748    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1818749    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1818750    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1818751    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1818752    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818753    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1818754    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818756    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1818757    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1818759    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818760    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1818761    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1818762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818763    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1818764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1818765    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1818766    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818768    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818769    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1818770    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818771    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818772    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1818773    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1818773  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.
 
1818774    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818775    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1818776    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 158 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818777    filename _pref
1818777  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1818778    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1818779    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1818780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818781   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1818782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1818783   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1818784   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1818785   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1818786    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1818787    quit;
1818788    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1818789    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1818790    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1818791    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1818792    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1818793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1818794    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1818795    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818797    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1818798    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818800    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818801    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1818802    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1818803    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818804    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1818805    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1818806    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1818807    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818809    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818810    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1818811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818812    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818813    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1818814    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1818814  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1818815    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818816    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1818817    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 162 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818818    filename _pref
1818818  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1818819    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1818820    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1818821   +
1818822   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1818823   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1818823  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1818824   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1818825   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1818826   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1818827   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1818828   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1818829    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1818830    quit;
1818831    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1818832    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1818833    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1818834    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1818835    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1818836    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818837    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1818838    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818839    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1818840    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1818841    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818843    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818844    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1818845    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1818846    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1818847    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1818848    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818849    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1818850    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818851    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1818852    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818853    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1818854    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818855    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818856    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1818857    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1818857  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1818858    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818859    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1818860    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 201 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1818861    filename _pref
1818861  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1818862    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1818863    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1818864   +
1818865   +
1818866   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1818867   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1818868   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1818869   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1818870   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1818871   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1818872   +
1818873   +
1818874   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1818875   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1818876   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1818877   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1818878   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1818879   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1818880   +
1818881   +
1818882   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1818883   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1818884   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1818885   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1818886   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1818887   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1818888   +
1818889   +
1818890   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1818891   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1818892   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1818893   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1818894   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1818895   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1818896   +
1818897   +
1818898   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1818899   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1818900   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1818901   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1818902   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1818903   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1818904   +
1818905   +
1818906   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1818907   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1818908   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1818909   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1818910   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1818911   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1818912   +
1818913   +
1818914   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1818915   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1818916   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1818917   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1818918   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1818919   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1818920   +
1818921   +
1818922   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1818923   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1818924   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1818925   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1818926   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1818927   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1818928   +if
1818929   +_FILTERNORM1 not in ( '.')
1818930   + and
1818931   +_FILTERNORM2 not in ( '.')
1818932   + and
1818933   +_FILTERNORM3 not in ( '.')
1818934   + and
1818935   +_FILTERNORM4 not in ( '.')
1818936   + and
1818937   +_FILTERNORM5 not in ( '.')
1818938   + and
1818939   +_FILTERNORM6 not in ( '.')
1818940   + and
1818941   +_FILTERNORM7 not in ( ' ')
1818942   + and
1818943   +_FILTERNORM8 not in ( ' ')
1818944   +and
1818945   +( Dt_Customer ne .)
1818946   +and ( Income ne . and (Income<=107000))
1818947   +and ( Kidhome ne .)
1818948   +and ( MntFishProducts ne .)
1818949   +and ( MntFruits ne .)
1818950   +and ( MntGoldProds ne .)
1818951   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1818952   +and ( MntSweetProducts ne .)
1818953   +and ( MntWines ne .)
1818954   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1818955   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1818956   +and ( NumStorePurchases ne .)
1818957   +and ( NumWebPurchases ne .)
1818958   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1818959   +and ( Recency ne .)
1818960   +and ( Teenhome ne .)
1818961   +and ( Year_Birth ne .)
1818962   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1818963   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1818964   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1818965   +end;
MPRINT(EM_DIAGRAM):   end;
1818966   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1818967   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1818968    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1818969    quit;
1818970    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1818971    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1818972    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1818973    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1818974    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1818975    run;
MPRINT(EM_DIAGRAM):   run;
 
The SAS System
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818976    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1818977    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818979    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1818980    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818981    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1818982    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818983    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1818984    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1818985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818986    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1818987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1818988    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1818989    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818991    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1818992    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1818993    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1818994    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1818995    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1818996    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1818996  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1818997    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1818998    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1818999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 267 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819000    %macro varDept(fcmpdata=,id=);
1819001    %global nobs&id scoreFlag&id;
1819002    %let scoreFlag&id = 0;
1819003    %if &id=1 or ^&fcmpStart %then %do;
1819004    proc sort data=&fcmpdata out=_temp&id nodupkey;
1819005    by NAME;
1819006    where id=&id and LHS in( %let j=1;
1819007    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1819008    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1819009    "&var" %let j = %eval(&j+1);
1819010    %end;
1819011    );
1819012    run;
1819013    %let dsid = %sysfunc(open(_temp&id));
1819014    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1819015    %let dsid = %sysfunc(close(&dsid));
1819016    %if &&nobs&id %then %do;
1819017    %let scoreFlag&id = 1;
1819018    %let fcmpStart = 1;
1819019    %end;
1819020    %else %let fcmpStart = 0;
1819021    %end;
1819022    %else %do;
1819023    proc sort data=&fcmpdata out=_tempid;
1819024    where id=&id;
1819025    by LHS;
1819026    run;
1819027    %let dsid = %sysfunc(open(_tempid));
1819028    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1819029    %let dsid = %sysfunc(close(&dsid));
1819030    %if ^&&nobs&id %then %do;
1819031    proc datasets lib=work nolist;
1819032    delete _tempid;
1819033    run;
1819034    quit;
1819035    %end;
1819036    %else %do;
1819037    data _tempAll;
1819038    set %let j=%eval(&id-1);
1819039    %do x=1 %to &j;
1819040    %if &&nobs&x %then %do;
1819041    _temp&x %end;
1819042    %end;
1819043    ;
1819044    run;
1819045    proc sql;
1819046    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1819046  ! work._tempid p2 where p.name=p2.lhs;
1819047    quit;
1819048    data _temp&id;
1819049    set _temp&id;
1819050    where LHS ne '' and NAME ne '' and Node ne '';
1819051    run;
1819052    proc datasets lib=work nolist;
1819053    delete _tempAll;
1819054    run;
1819055    %let dsid = %sysfunc(open(_temp&id));
1819056    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1819057    %let dsid = %sysfunc(close(&dsid));
1819058    %if ^&&nobs&id %then %do;
1819059    proc datasets lib=work nolist;
1819060    delete _temp&id;
1819061    run;
1819062    quit;
1819063    %end;
1819064    %else %do;
1819065    %let scoreFlag&id = 1;
1819066    data _temp&id;
1819067    set _temp&id;
1819068    where LHS ne NAME and node ne '';
1819069    run;
1819070    %let dsid = %sysfunc(open(_temp&id));
1819071    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1819072    %let dsid = %sysfunc(close(&dsid));
1819073    %if ^&&nobs&id %then %do;
1819074    proc datasets lib=work nolist;
1819075    delete _temp&id;
1819076    run;
1819077    quit;
1819078    %end;
1819079    %else %do;
1819080    proc sort data=_temp&id nodupkey;
1819081    by LHS NAME;
1819082    run;
1819083    %end;
1819084    %end;
1819085    %end;
1819086    %end;
1819087    %mend varDept;
1819088    %macro optCode(outdata=fcmpdata);
1819089    %global fcmpStart;
1819090    %let fcmpStart = 0;
1819091    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1819092    %let NumNodes=9;
1819093    %do k=1 %to &NumNodes;
1819094    %vardept(fcmpdata=&outdata, id=&k);
1819095    %end;
1819096    %mend optCode;
1819097    %optcode(outData=EMWS8.Ensmbl53_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 24 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 9 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1819098    filename _pref
1819098  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMPUBLISHSCORE.sas";
1819099    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819100    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural31\EMPUBLISHSCORE.sas.
1819101   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1819102   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1819103   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1819104   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1819105   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1819106   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1819107   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1819108   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1819109   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1819110   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1819111   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1819112   +LENGTH _WARN_ $4
1819113   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1819114   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1819115   +
1819116   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1819117   +
1819118   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1819119   +
1819120   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1819121   +
1819122   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1819123   +
1819124   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1819125   +
1819126   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1819127   +
1819128   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1819129   +
1819130   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1819131   +
1819132   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1819133   +
1819134   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1819135   +
1819136   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1819137   +
1819138   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1819139   +
1819140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819141   +*** Checking missing input Interval
1819142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1819143   +
1819144   +IF NMISS(
1819145   +   AcceptedCmpTotal ,
1819146   +   Mnt ,
1819147   +   MntMeatProducts ,
1819148   +   NumCatalogPurchases ,
1819149   +   RFMstat ,
1819150   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1819151   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1819152   +
1819153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1819154   +END;
MPRINT(EM_DIAGRAM):   END;
1819155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819156   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1819157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819158   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1819159   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1819160   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1819161   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1819162   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1819163   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1819164   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1819165   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1819166   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1819167   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1819168   +END;
MPRINT(EM_DIAGRAM):   END;
1819169   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1819170   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1819171   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1819172   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1819173   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1819174   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1819175   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1819176   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1819177   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1819178   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1819179   +   ELSE S_NumCatalogPurchases
1819180   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1819181   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1819182   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1819183   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1819184   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1819185   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1819186   +END;
MPRINT(EM_DIAGRAM):   END;
1819187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819188   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1819189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819190   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1819191   +   H1x1_1  =     0.88877074263455 * S_AcceptedCmpTotal
1819192   +          +     -6.8647547731997 * S_Mnt  +     3.38470731995645 *
1819193   +        S_MntMeatProducts  +     0.45686791470898 * S_NumCatalogPurchases
1819194   +          +    -0.12981013682039 * S_RFMstat  +    -0.01175498343834 *
1819195   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.88877074263455 * S_AcceptedCmpTotal + -6.8647547731997 *
S_Mnt + 3.38470731995645 * S_MntMeatProducts + 0.45686791470898 * S_NumCatalogPurchases +
-0.12981013682039 * S_RFMstat + -0.01175498343834 * S_Recency ;
1819196   +   H1x1_2  =    -0.11003981472254 * S_AcceptedCmpTotal
1819197   +          +    -0.85647328083992 * S_Mnt  +     10.0358306583456 *
1819198   +        S_MntMeatProducts  +     1.92503432752831 * S_NumCatalogPurchases
1819199   +          +     0.92971820927182 * S_RFMstat  +    -0.12489463268487 *
1819200   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.11003981472254 * S_AcceptedCmpTotal + -0.85647328083992 *
S_Mnt + 10.0358306583456 * S_MntMeatProducts + 1.92503432752831 * S_NumCatalogPurchases +
0.92971820927182 * S_RFMstat + -0.12489463268487 * S_Recency ;
1819201   +   H1x1_1  =    -2.35812752137322 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.35812752137322 + H1x1_1 ;
1819202   +   H1x1_2  =     8.68969383477576 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 8.68969383477576 + H1x1_2 ;
1819203   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1819204   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1819205   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1819206   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1819207   +END;
MPRINT(EM_DIAGRAM):   END;
1819208   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1819209   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1819210   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1819211   +END;
MPRINT(EM_DIAGRAM):   END;
1819212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819213   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1819214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819215   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1819216   +   P_DepVar1  =     6.72682466184772 * H1x1_1  +     8.11139972991132 * H1x1_2
1819217   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 6.72682466184772 * H1x1_1 + 8.11139972991132 * H1x1_2 ;
1819218   +   P_DepVar1  =    -12.3654701108229 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.3654701108229 + P_DepVar1 ;
1819219   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1819220   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1819221   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1819222   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1819223   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1819224   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1819225   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1819226   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1819227   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1819228   +END;
MPRINT(EM_DIAGRAM):   END;
1819229   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1819230   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1819231   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1819232   +END;
MPRINT(EM_DIAGRAM):   END;
1819233   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1819234   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1819235   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1819236   +END;
MPRINT(EM_DIAGRAM):   END;
1819237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819238   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1819239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819240   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1819241   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1819242   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1819243   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1819244   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1819245   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1819246   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1819247   +END;
MPRINT(EM_DIAGRAM):   END;
1819248   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1819249   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1819250   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1819251   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1819252    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1819253    quit;
1819254    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1819255    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1819256    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1819257    retain ID 2 Node "AutoNeural31";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural31";
1819258    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1819259    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 377 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 377 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819260    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1819261    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 377 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 377 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819263    proc sort data=EMWS8.AutoNeural31_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural31_variableset out=_temp2(keep=NAME
CREATOR);
1819264    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819265    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL31_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819266    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819267    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1819268    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1819269    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819270    proc contents data=EMWS8.AutoNeural31_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural31_train out=_meta(keep=NAME) noprint;
1819271    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819272    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1819273    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819275    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819276    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1819277    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819278    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819279    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1819280    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1819280  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 182 rows and 5 columns.
 
1819281    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819282    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1819283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 182 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 182 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1819284    filename _pref
1819284  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1819285    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819286    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1819287   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1819288   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1819289   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1819290   +
1819291   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1819292   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1819293   +
1819294   +
1819295   +
1819296   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1819297   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1819298   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1819299    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1819300    quit;
1819301    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1819302    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1819303    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1819304    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1819305    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1819306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819307    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1819308    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819310    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1819311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819313    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819314    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1819315    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1819316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819317    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1819318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819319    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1819320    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819322    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819323    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1819324    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819325    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819326    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1819327    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1819327  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.
 
1819328    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819329    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1819330    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 182 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819331    filename _pref
1819331  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1819332    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819333    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1819334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1819335   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1819336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1819337   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1819338   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1819339   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1819340    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1819341    quit;
1819342    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1819343    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1819344    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1819345    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1819346    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1819347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819348    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1819349    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819351    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1819352    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819353    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1819354    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819355    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1819356    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1819357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819358    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1819359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1819360    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1819361    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819362    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819363    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819364    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1819365    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819366    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819367    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1819368    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1819368  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1819369    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819370    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1819371    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 186 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819372    filename _pref
1819372  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1819373    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819374    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1819375   +
1819376   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1819377   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1819377  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1819378   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1819379   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1819380   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1819381   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1819382   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1819383    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1819384    quit;
1819385    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1819386    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1819387    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1819388    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1819389    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1819390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1819391    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1819392    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819393    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819394    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1819395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819396    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819397    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819398    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1819399    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1819400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819401    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1819402    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819403    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1819404    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819405    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819406    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819407    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1819408    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819409    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819410    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1819411    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1819411  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1819412    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819413    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1819414    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 225 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819415    filename _pref
1819415  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1819416    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819417    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1819418   +
1819419   +
1819420   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1819421   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1819422   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1819423   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1819424   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1819425   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819426   +
1819427   +
1819428   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1819429   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1819430   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1819431   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1819432   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1819433   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819434   +
1819435   +
1819436   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1819437   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1819438   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1819439   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1819440   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1819441   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819442   +
1819443   +
1819444   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1819445   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1819446   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1819447   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1819448   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1819449   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819450   +
1819451   +
1819452   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1819453   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1819454   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1819455   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1819456   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1819457   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819458   +
1819459   +
1819460   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1819461   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1819462   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1819463   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1819464   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1819465   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819466   +
1819467   +
1819468   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1819469   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1819470   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1819471   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1819472   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1819473   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819474   +
1819475   +
1819476   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1819477   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1819478   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1819479   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1819480   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1819481   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819482   +if
1819483   +_FILTERNORM1 not in ( '.')
1819484   + and
1819485   +_FILTERNORM2 not in ( '.')
1819486   + and
1819487   +_FILTERNORM3 not in ( '.')
1819488   + and
1819489   +_FILTERNORM4 not in ( '.')
1819490   + and
1819491   +_FILTERNORM5 not in ( '.')
1819492   + and
1819493   +_FILTERNORM6 not in ( '.')
1819494   + and
1819495   +_FILTERNORM7 not in ( ' ')
1819496   + and
1819497   +_FILTERNORM8 not in ( ' ')
1819498   +and
1819499   +( Dt_Customer ne .)
1819500   +and ( Income ne . and (Income<=107000))
1819501   +and ( Kidhome ne .)
1819502   +and ( MntFishProducts ne .)
1819503   +and ( MntFruits ne .)
1819504   +and ( MntGoldProds ne .)
1819505   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1819506   +and ( MntSweetProducts ne .)
1819507   +and ( MntWines ne .)
1819508   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1819509   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1819510   +and ( NumStorePurchases ne .)
1819511   +and ( NumWebPurchases ne .)
1819512   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1819513   +and ( Recency ne .)
1819514   +and ( Teenhome ne .)
1819515   +and ( Year_Birth ne .)
1819516   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1819517   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1819518   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1819519   +end;
MPRINT(EM_DIAGRAM):   end;
1819520   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1819521   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1819522    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1819523    quit;
1819524    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1819525    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1819526    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1819527    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1819528    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1819529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819530    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1819531    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819532    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819533    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1819534    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819535    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819536    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819537    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1819538    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1819539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819540    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1819541    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1819542    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1819543    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819544    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819545    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819546    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1819547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819548    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819549    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1819550    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1819550  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1819551    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819552    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1819553    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819554    %macro varDept(fcmpdata=,id=);
1819555    %global nobs&id scoreFlag&id;
1819556    %let scoreFlag&id = 0;
1819557    %if &id=1 or ^&fcmpStart %then %do;
1819558    proc sort data=&fcmpdata out=_temp&id nodupkey;
1819559    by NAME;
1819560    where id=&id and LHS in( %let j=1;
1819561    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1819562    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1819563    "&var" %let j = %eval(&j+1);
1819564    %end;
1819565    );
1819566    run;
1819567    %let dsid = %sysfunc(open(_temp&id));
1819568    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1819569    %let dsid = %sysfunc(close(&dsid));
1819570    %if &&nobs&id %then %do;
1819571    %let scoreFlag&id = 1;
1819572    %let fcmpStart = 1;
1819573    %end;
1819574    %else %let fcmpStart = 0;
1819575    %end;
1819576    %else %do;
1819577    proc sort data=&fcmpdata out=_tempid;
1819578    where id=&id;
1819579    by LHS;
1819580    run;
1819581    %let dsid = %sysfunc(open(_tempid));
1819582    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1819583    %let dsid = %sysfunc(close(&dsid));
1819584    %if ^&&nobs&id %then %do;
1819585    proc datasets lib=work nolist;
1819586    delete _tempid;
1819587    run;
1819588    quit;
1819589    %end;
1819590    %else %do;
1819591    data _tempAll;
1819592    set %let j=%eval(&id-1);
1819593    %do x=1 %to &j;
1819594    %if &&nobs&x %then %do;
1819595    _temp&x %end;
1819596    %end;
1819597    ;
1819598    run;
1819599    proc sql;
1819600    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1819600  ! work._tempid p2 where p.name=p2.lhs;
1819601    quit;
1819602    data _temp&id;
1819603    set _temp&id;
1819604    where LHS ne '' and NAME ne '' and Node ne '';
1819605    run;
1819606    proc datasets lib=work nolist;
1819607    delete _tempAll;
1819608    run;
1819609    %let dsid = %sysfunc(open(_temp&id));
1819610    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1819611    %let dsid = %sysfunc(close(&dsid));
1819612    %if ^&&nobs&id %then %do;
1819613    proc datasets lib=work nolist;
1819614    delete _temp&id;
1819615    run;
1819616    quit;
1819617    %end;
1819618    %else %do;
1819619    %let scoreFlag&id = 1;
1819620    data _temp&id;
1819621    set _temp&id;
1819622    where LHS ne NAME and node ne '';
1819623    run;
1819624    %let dsid = %sysfunc(open(_temp&id));
1819625    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1819626    %let dsid = %sysfunc(close(&dsid));
1819627    %if ^&&nobs&id %then %do;
1819628    proc datasets lib=work nolist;
1819629    delete _temp&id;
1819630    run;
1819631    quit;
1819632    %end;
1819633    %else %do;
1819634    proc sort data=_temp&id nodupkey;
1819635    by LHS NAME;
1819636    run;
1819637    %end;
1819638    %end;
1819639    %end;
1819640    %end;
1819641    %mend varDept;
1819642    %macro optCode(outdata=fcmpdata);
1819643    %global fcmpStart;
1819644    %let fcmpStart = 0;
1819645    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1819646    %let NumNodes=9;
1819647    %do k=1 %to &NumNodes;
1819648    %vardept(fcmpdata=&outdata, id=&k);
1819649    %end;
1819650    %mend optCode;
1819651    %optcode(outData=EMWS8.Ensmbl53_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 26 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 10 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1819652    filename _pref
1819652  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas";
1819653    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819654    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural32\EMPUBLISHSCORE.sas.
1819655   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1819656   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1819657   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1819658   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1819659   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1819660   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1819661   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1819662   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1819663   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1819664   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1819665   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1819666   +LENGTH _WARN_ $4
1819667   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1819668   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1819669   +
1819670   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1819671   +
1819672   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1819673   +
1819674   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1819675   +
1819676   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1819677   +
1819678   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1819679   +
1819680   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1819681   +
1819682   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1819683   +
1819684   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1819685   +
1819686   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1819687   +
1819688   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1819689   +
1819690   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1819691   +
1819692   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1819693   +
1819694   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1819695   +
1819696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819697   +*** Checking missing input Interval
1819698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1819699   +
1819700   +IF NMISS(
1819701   +   AcceptedCmpTotal ,
1819702   +   Mnt ,
1819703   +   MntMeatProducts ,
1819704   +   NumCatalogPurchases ,
1819705   +   RFMstat ,
1819706   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1819707   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1819708   +
1819709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1819710   +END;
MPRINT(EM_DIAGRAM):   END;
1819711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819712   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1819713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819714   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1819715   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1819716   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1819717   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1819718   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1819719   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1819720   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1819721   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1819722   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1819723   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1819724   +END;
MPRINT(EM_DIAGRAM):   END;
1819725   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1819726   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1819727   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1819728   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1819729   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1819730   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1819731   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1819732   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1819733   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1819734   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1819735   +   ELSE S_NumCatalogPurchases
1819736   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1819737   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1819738   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1819739   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1819740   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1819741   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1819742   +END;
MPRINT(EM_DIAGRAM):   END;
1819743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819744   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1819745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819746   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1819747   +   H1x1_1  =    -0.14955504394548 * S_AcceptedCmpTotal
1819748   +          +    -1.51573020728474 * S_Mnt  +      0.4607268669617 *
1819749   +        S_MntMeatProducts  +     -0.3334944156024 * S_NumCatalogPurchases
1819750   +          +     0.09267374022355 * S_RFMstat  +     0.47606901130176 *
1819751   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.14955504394548 * S_AcceptedCmpTotal + -1.51573020728474 *
S_Mnt + 0.4607268669617 * S_MntMeatProducts + -0.3334944156024 * S_NumCatalogPurchases +
0.09267374022355 * S_RFMstat + 0.47606901130176 * S_Recency ;
1819752   +   H1x1_2  =      0.2468028004293 * S_AcceptedCmpTotal
1819753   +          +    -0.77717776485086 * S_Mnt  +     7.40002044896531 *
1819754   +        S_MntMeatProducts  +     1.60897655452635 * S_NumCatalogPurchases
1819755   +          +     0.67552122628568 * S_RFMstat  +    -0.32443547406066 *
1819756   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2468028004293 * S_AcceptedCmpTotal + -0.77717776485086 *
S_Mnt + 7.40002044896531 * S_MntMeatProducts + 1.60897655452635 * S_NumCatalogPurchases +
0.67552122628568 * S_RFMstat + -0.32443547406066 * S_Recency ;
1819757   +   H1x1_3  =     6.59800324692585 * S_AcceptedCmpTotal
1819758   +          +    -28.0912205253849 * S_Mnt  +     13.5059679211684 *
1819759   +        S_MntMeatProducts  +     5.32084702602181 * S_NumCatalogPurchases
1819760   +          +    -1.75455080633468 * S_RFMstat  +    -3.56741217768456 *
1819761   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 6.59800324692585 * S_AcceptedCmpTotal + -28.0912205253849 *
S_Mnt + 13.5059679211684 * S_MntMeatProducts + 5.32084702602181 * S_NumCatalogPurchases +
-1.75455080633468 * S_RFMstat + -3.56741217768456 * S_Recency ;
1819762   +   H1x1_1  =     2.30670471730853 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.30670471730853 + H1x1_1 ;
1819763   +   H1x1_2  =     6.72353576768002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 6.72353576768002 + H1x1_2 ;
1819764   +   H1x1_3  =    -10.2093918588588 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -10.2093918588588 + H1x1_3 ;
1819765   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1819766   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1819767   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1819768   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1819769   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1819770   +END;
MPRINT(EM_DIAGRAM):   END;
1819771   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1819772   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1819773   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1819774   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1819775   +END;
MPRINT(EM_DIAGRAM):   END;
1819776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819777   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1819778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819779   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1819780   +   P_DepVar1  =    -13.8690336647034 * H1x1_1  +     12.3879569416654 * H1x1_2
1819781   +          +     2.67685271681444 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -13.8690336647034 * H1x1_1 + 12.3879569416654 * H1x1_2 +
2.67685271681444 * H1x1_3 ;
1819782   +   P_DepVar1  =    -2.88709627935044 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.88709627935044 + P_DepVar1 ;
1819783   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1819784   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1819785   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1819786   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1819787   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1819788   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1819789   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1819790   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1819791   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1819792   +END;
MPRINT(EM_DIAGRAM):   END;
1819793   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1819794   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1819795   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1819796   +END;
MPRINT(EM_DIAGRAM):   END;
1819797   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1819798   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1819799   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1819800   +END;
MPRINT(EM_DIAGRAM):   END;
1819801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819802   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1819803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1819804   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1819805   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1819806   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1819807   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1819808   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1819809   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1819810   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1819811   +END;
MPRINT(EM_DIAGRAM):   END;
1819812   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1819813   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1819814   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1819815   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1819816    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1819817    quit;
1819818    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1819819    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1819820    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1819821    retain ID 2 Node "AutoNeural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural32";
1819822    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1819823    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 429 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 429 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819824    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1819825    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819826    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 429 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 429 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819827    proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural32_variableset out=_temp2(keep=NAME
CREATOR);
1819828    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819830    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819831    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1819832    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1819833    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819834    proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural32_train out=_meta(keep=NAME) noprint;
1819835    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1819836    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1819837    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819838    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819839    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819840    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1819841    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819842    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819843    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1819844    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1819844  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 206 rows and 5 columns.
 
1819845    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819846    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1819847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 206 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819848    filename _pref
1819848  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1819849    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819850    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1819851   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1819852   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1819853   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1819854   +
1819855   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1819856   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1819857   +
1819858   +
1819859   +
1819860   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1819861   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1819862   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1819863    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1819864    quit;
1819865    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1819866    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1819867    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1819868    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1819869    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1819870    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819871    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1819872    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819873    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819874    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1819875    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819876    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819877    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819878    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1819879    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1819880    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819881    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1819882    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819883    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1819884    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819885    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819886    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819887    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1819888    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819889    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819890    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1819891    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1819891  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.
 
1819892    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819893    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1819894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819895    filename _pref
1819895  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1819896    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819897    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1819898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1819899   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1819900   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1819901   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1819902   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1819903   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1819904    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1819905    quit;
1819906    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1819907    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1819908    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1819909    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1819910    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1819911    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819912    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1819913    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819914    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819915    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1819916    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819917    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819918    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819919    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1819920    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1819921    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819922    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1819923    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1819924    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1819925    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819926    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819927    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819928    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1819929    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819930    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819931    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1819932    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1819932  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1819933    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819934    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1819935    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 210 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819936    filename _pref
1819936  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1819937    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819938    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1819939   +
1819940   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1819941   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1819941  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1819942   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1819943   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1819944   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1819945   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1819946   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1819947    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1819948    quit;
1819949    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1819950    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1819951    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1819952    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1819953    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1819954    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819955    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1819956    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819957    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819958    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1819959    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819961    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819962    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1819963    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1819964    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819965    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1819966    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819967    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1819968    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819969    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1819970    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1819971    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1819972    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1819973    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819974    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1819975    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1819975  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1819976    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819977    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1819978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1819979    filename _pref
1819979  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1819980    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1819981    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1819982   +
1819983   +
1819984   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1819985   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1819986   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1819987   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1819988   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1819989   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819990   +
1819991   +
1819992   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1819993   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1819994   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1819995   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1819996   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1819997   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1819998   +
1819999   +
1820000   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1820001   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1820002   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1820003   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1820004   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1820005   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820006   +
1820007   +
1820008   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1820009   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1820010   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1820011   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1820012   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1820013   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820014   +
1820015   +
1820016   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1820017   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1820018   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1820019   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1820020   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1820021   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820022   +
1820023   +
1820024   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1820025   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1820026   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1820027   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1820028   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1820029   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820030   +
1820031   +
1820032   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1820033   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1820034   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1820035   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1820036   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1820037   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820038   +
1820039   +
1820040   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1820041   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1820042   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1820043   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1820044   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1820045   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820046   +if
1820047   +_FILTERNORM1 not in ( '.')
1820048   + and
1820049   +_FILTERNORM2 not in ( '.')
1820050   + and
1820051   +_FILTERNORM3 not in ( '.')
1820052   + and
1820053   +_FILTERNORM4 not in ( '.')
1820054   + and
1820055   +_FILTERNORM5 not in ( '.')
1820056   + and
1820057   +_FILTERNORM6 not in ( '.')
1820058   + and
1820059   +_FILTERNORM7 not in ( ' ')
1820060   + and
1820061   +_FILTERNORM8 not in ( ' ')
1820062   +and
1820063   +( Dt_Customer ne .)
1820064   +and ( Income ne . and (Income<=107000))
1820065   +and ( Kidhome ne .)
1820066   +and ( MntFishProducts ne .)
1820067   +and ( MntFruits ne .)
1820068   +and ( MntGoldProds ne .)
1820069   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1820070   +and ( MntSweetProducts ne .)
1820071   +and ( MntWines ne .)
1820072   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1820073   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1820074   +and ( NumStorePurchases ne .)
1820075   +and ( NumWebPurchases ne .)
1820076   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1820077   +and ( Recency ne .)
1820078   +and ( Teenhome ne .)
1820079   +and ( Year_Birth ne .)
1820080   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1820081   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1820082   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1820083   +end;
MPRINT(EM_DIAGRAM):   end;
1820084   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1820085   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1820086    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1820087    quit;
1820088    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1820089    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1820090    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1820091    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1820092    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1820093    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820094    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1820095    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820097    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1820098    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820100    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820101    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1820102    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1820103    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820104    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1820105    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
1820106    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1820107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820108    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820109    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820110    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1820111    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820112    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820113    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1820114    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1820114  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1820115    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820116    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1820117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 315 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820118    %macro varDept(fcmpdata=,id=);
1820119    %global nobs&id scoreFlag&id;
1820120    %let scoreFlag&id = 0;
1820121    %if &id=1 or ^&fcmpStart %then %do;
1820122    proc sort data=&fcmpdata out=_temp&id nodupkey;
1820123    by NAME;
1820124    where id=&id and LHS in( %let j=1;
1820125    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1820126    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1820127    "&var" %let j = %eval(&j+1);
1820128    %end;
1820129    );
1820130    run;
1820131    %let dsid = %sysfunc(open(_temp&id));
1820132    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1820133    %let dsid = %sysfunc(close(&dsid));
1820134    %if &&nobs&id %then %do;
1820135    %let scoreFlag&id = 1;
1820136    %let fcmpStart = 1;
1820137    %end;
1820138    %else %let fcmpStart = 0;
1820139    %end;
1820140    %else %do;
1820141    proc sort data=&fcmpdata out=_tempid;
1820142    where id=&id;
1820143    by LHS;
1820144    run;
1820145    %let dsid = %sysfunc(open(_tempid));
1820146    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1820147    %let dsid = %sysfunc(close(&dsid));
1820148    %if ^&&nobs&id %then %do;
1820149    proc datasets lib=work nolist;
1820150    delete _tempid;
1820151    run;
1820152    quit;
1820153    %end;
1820154    %else %do;
1820155    data _tempAll;
1820156    set %let j=%eval(&id-1);
1820157    %do x=1 %to &j;
1820158    %if &&nobs&x %then %do;
1820159    _temp&x %end;
1820160    %end;
1820161    ;
1820162    run;
1820163    proc sql;
1820164    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1820164  ! work._tempid p2 where p.name=p2.lhs;
1820165    quit;
1820166    data _temp&id;
1820167    set _temp&id;
1820168    where LHS ne '' and NAME ne '' and Node ne '';
1820169    run;
1820170    proc datasets lib=work nolist;
1820171    delete _tempAll;
1820172    run;
1820173    %let dsid = %sysfunc(open(_temp&id));
1820174    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1820175    %let dsid = %sysfunc(close(&dsid));
1820176    %if ^&&nobs&id %then %do;
1820177    proc datasets lib=work nolist;
1820178    delete _temp&id;
1820179    run;
1820180    quit;
1820181    %end;
1820182    %else %do;
1820183    %let scoreFlag&id = 1;
1820184    data _temp&id;
1820185    set _temp&id;
1820186    where LHS ne NAME and node ne '';
1820187    run;
1820188    %let dsid = %sysfunc(open(_temp&id));
1820189    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1820190    %let dsid = %sysfunc(close(&dsid));
1820191    %if ^&&nobs&id %then %do;
1820192    proc datasets lib=work nolist;
1820193    delete _temp&id;
1820194    run;
1820195    quit;
1820196    %end;
1820197    %else %do;
1820198    proc sort data=_temp&id nodupkey;
1820199    by LHS NAME;
1820200    run;
1820201    %end;
1820202    %end;
1820203    %end;
1820204    %end;
1820205    %mend varDept;
1820206    %macro optCode(outdata=fcmpdata);
1820207    %global fcmpStart;
1820208    %let fcmpStart = 0;
1820209    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1820210    %let NumNodes=9;
1820211    %do k=1 %to &NumNodes;
1820212    %vardept(fcmpdata=&outdata, id=&k);
1820213    %end;
1820214    %mend optCode;
1820215    %optcode(outData=EMWS8.Ensmbl53_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 28 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1820216    filename _pref
1820216  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas";
1820217    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1820218    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural33\EMPUBLISHSCORE.sas.
1820219   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1820220   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1820221   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1820222   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1820223   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1820224   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1820225   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1820226   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1820227   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1820228   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1820229   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1820230   +LENGTH _WARN_ $4
1820231   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1820232   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1820233   +
1820234   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1820235   +
1820236   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1820237   +
1820238   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1820239   +
1820240   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1820241   +
1820242   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1820243   +
1820244   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1820245   +
1820246   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1820247   +
1820248   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1820249   +
1820250   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1820251   +
1820252   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1820253   +
1820254   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1820255   +
1820256   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1820257   +
1820258   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1820259   +
1820260   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1820261   +
1820262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820263   +*** Checking missing input Interval
1820264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1820265   +
1820266   +IF NMISS(
1820267   +   AcceptedCmpTotal ,
1820268   +   Mnt ,
1820269   +   MntMeatProducts ,
1820270   +   NumCatalogPurchases ,
1820271   +   RFMstat ,
1820272   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1820273   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1820274   +
1820275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1820276   +END;
MPRINT(EM_DIAGRAM):   END;
1820277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820278   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1820279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820280   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1820281   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1820282   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1820283   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1820284   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1820285   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1820286   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1820287   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1820288   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1820289   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1820290   +END;
MPRINT(EM_DIAGRAM):   END;
1820291   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1820292   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1820293   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1820294   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1820295   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1820296   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1820297   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1820298   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1820299   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1820300   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1820301   +   ELSE S_NumCatalogPurchases
1820302   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1820303   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1820304   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1820305   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1820306   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1820307   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1820308   +END;
MPRINT(EM_DIAGRAM):   END;
1820309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820310   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1820311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820312   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1820313   +   H1x1_1  =     0.21234921669572 * S_AcceptedCmpTotal
1820314   +          +     0.01945817648377 * S_Mnt  +     0.10373621819131 *
1820315   +        S_MntMeatProducts  +     0.14724080002257 * S_NumCatalogPurchases
1820316   +          +     0.01465421656969 * S_RFMstat  +    -0.37839603073195 *
1820317   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.21234921669572 * S_AcceptedCmpTotal + 0.01945817648377 *
S_Mnt + 0.10373621819131 * S_MntMeatProducts + 0.14724080002257 * S_NumCatalogPurchases +
0.01465421656969 * S_RFMstat + -0.37839603073195 * S_Recency ;
1820318   +   H1x1_2  =      1.6456490248475 * S_AcceptedCmpTotal
1820319   +          +    -4.36126689821345 * S_Mnt  +    -5.34341350667797 *
1820320   +        S_MntMeatProducts  +    -0.50775340376834 * S_NumCatalogPurchases
1820321   +          +    -3.77547933008523 * S_RFMstat  +    -0.35687395481612 *
1820322   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.6456490248475 * S_AcceptedCmpTotal + -4.36126689821345 *
S_Mnt + -5.34341350667797 * S_MntMeatProducts + -0.50775340376834 * S_NumCatalogPurchases +
-3.77547933008523 * S_RFMstat + -0.35687395481612 * S_Recency ;
1820323   +   H1x1_3  =     2.25495773414966 * S_AcceptedCmpTotal
1820324   +          +     -11.006968240108 * S_Mnt  +     5.29014268166876 *
1820325   +        S_MntMeatProducts  +     1.38527755695319 * S_NumCatalogPurchases
1820326   +          +    -0.25229120510632 * S_RFMstat  +    -0.96545690161812 *
1820327   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.25495773414966 * S_AcceptedCmpTotal + -11.006968240108 *
S_Mnt + 5.29014268166876 * S_MntMeatProducts + 1.38527755695319 * S_NumCatalogPurchases +
-0.25229120510632 * S_RFMstat + -0.96545690161812 * S_Recency ;
1820328   +   H1x1_1  =    -1.44629643725438 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.44629643725438 + H1x1_1 ;
1820329   +   H1x1_2  =    -8.96045510766511 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -8.96045510766511 + H1x1_2 ;
1820330   +   H1x1_3  =    -3.43663513496723 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.43663513496723 + H1x1_3 ;
1820331   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1820332   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1820333   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1820334   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1820335   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1820336   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1820337   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1820338   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1820339   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1820340   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1820341   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1820342   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1820343   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1820344   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1820345   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1820346   +END;
MPRINT(EM_DIAGRAM):   END;
1820347   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1820348   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1820349   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1820350   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1820351   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1820352   +END;
MPRINT(EM_DIAGRAM):   END;
1820353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820354   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1820355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820356   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1820357   +   P_DepVar1  =     15.9155817268417 * H1x1_1  +    -26.1877719603903 * H1x1_2
1820358   +          +     3.03900855168824 * H1x1_3  +    -8.12584282800012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.9155817268417 * H1x1_1 + -26.1877719603903 * H1x1_2 +
3.03900855168824 * H1x1_3 + -8.12584282800012 * H1x1_4 ;
1820359   +   P_DepVar1  =    -0.43873072735423 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.43873072735423 + P_DepVar1 ;
1820360   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1820361   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1820362   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1820363   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1820364   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1820365   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1820366   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1820367   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1820368   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1820369   +END;
MPRINT(EM_DIAGRAM):   END;
1820370   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1820371   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1820372   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1820373   +END;
MPRINT(EM_DIAGRAM):   END;
1820374   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1820375   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1820376   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1820377   +END;
MPRINT(EM_DIAGRAM):   END;
1820378   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820379   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1820380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820381   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1820382   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1820383   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1820384   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1820385   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1820386   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1820387   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1820388   +END;
MPRINT(EM_DIAGRAM):   END;
1820389   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1820390   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1820391   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1820392   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1820393    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1820394    quit;
1820395    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1820396    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1820397    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1820398    retain ID 2 Node "AutoNeural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural33";
1820399    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1820400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 560 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 560 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820401    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1820402    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820403    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 560 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 560 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820404    proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural33_variableset out=_temp2(keep=NAME
CREATOR);
1820405    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820406    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820407    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820408    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1820409    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1820410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1820411    proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural33_train out=_meta(keep=NAME) noprint;
1820412    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
1820413    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1820414    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820415    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820416    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820417    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1820418    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820419    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820420    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1820421    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1820421  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 264 rows and 5 columns.
 
1820422    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820423    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1820424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 264 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 264 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820425    filename _pref
1820425  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1820426    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1820427    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1820428   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1820429   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1820430   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1820431   +
1820432   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1820433   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1820434   +
1820435   +
1820436   +
1820437   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1820438   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1820439   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1820440    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1820441    quit;
1820442    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1820443    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1820444    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1820445    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1820446    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1820447    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820448    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1820449    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820450    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820451    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1820452    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820453    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820454    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820455    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1820456    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1820457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820458    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1820459    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1820460    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1820461    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820462    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820463    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820464    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1820465    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820466    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820467    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1820468    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1820468  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.
 
1820469    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820470    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1820471    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 264 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820472    filename _pref
1820472  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1820473    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1820474    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1820475   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1820476   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1820477   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1820478   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1820479   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1820480   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1820481    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1820482    quit;
1820483    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1820484    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1820485    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1820486    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1820487    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1820488    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820489    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1820490    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820491    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820492    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1820493    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820494    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820495    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820496    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1820497    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1820498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820499    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1820500    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1820501    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1820502    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820504    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820505    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1820506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820507    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820508    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1820509    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1820509  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1820510    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820511    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1820512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 268 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820513    filename _pref
1820513  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1820514    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1820515    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1820516   +
1820517   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1820518   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1820518  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1820519   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1820520   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1820521   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1820522   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1820523   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1820524    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1820525    quit;
1820526    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1820527    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1820528    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1820529    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1820530    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1820531    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820532    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1820533    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820535    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1820536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820537    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820538    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820539    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1820540    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1820541    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820542    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1820543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820544    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1820545    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820547    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820548    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1820549    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820550    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820551    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1820552    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1820552  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1820553    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820554    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1820555    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 307 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820556    filename _pref
1820556  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1820557    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1820558    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1820559   +
1820560   +
1820561   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1820562   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1820563   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1820564   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1820565   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1820566   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820567   +
1820568   +
1820569   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1820570   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1820571   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1820572   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1820573   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1820574   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820575   +
1820576   +
1820577   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1820578   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1820579   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1820580   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1820581   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1820582   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820583   +
1820584   +
1820585   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1820586   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1820587   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1820588   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1820589   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1820590   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820591   +
1820592   +
1820593   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1820594   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1820595   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1820596   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1820597   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1820598   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820599   +
1820600   +
1820601   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1820602   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1820603   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1820604   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1820605   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1820606   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820607   +
1820608   +
1820609   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1820610   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1820611   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1820612   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1820613   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1820614   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820615   +
1820616   +
1820617   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1820618   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1820619   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1820620   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1820621   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1820622   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1820623   +if
1820624   +_FILTERNORM1 not in ( '.')
1820625   + and
1820626   +_FILTERNORM2 not in ( '.')
1820627   + and
1820628   +_FILTERNORM3 not in ( '.')
1820629   + and
1820630   +_FILTERNORM4 not in ( '.')
1820631   + and
1820632   +_FILTERNORM5 not in ( '.')
1820633   + and
1820634   +_FILTERNORM6 not in ( '.')
1820635   + and
1820636   +_FILTERNORM7 not in ( ' ')
1820637   + and
1820638   +_FILTERNORM8 not in ( ' ')
1820639   +and
1820640   +( Dt_Customer ne .)
1820641   +and ( Income ne . and (Income<=107000))
1820642   +and ( Kidhome ne .)
1820643   +and ( MntFishProducts ne .)
1820644   +and ( MntFruits ne .)
1820645   +and ( MntGoldProds ne .)
1820646   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1820647   +and ( MntSweetProducts ne .)
1820648   +and ( MntWines ne .)
1820649   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1820650   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1820651   +and ( NumStorePurchases ne .)
1820652   +and ( NumWebPurchases ne .)
1820653   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1820654   +and ( Recency ne .)
1820655   +and ( Teenhome ne .)
1820656   +and ( Year_Birth ne .)
1820657   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1820658   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1820659   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1820660   +end;
MPRINT(EM_DIAGRAM):   end;
1820661   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1820662   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1820663    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1820664    quit;
1820665    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1820666    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1820667    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1820668    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1820669    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1820670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820671    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1820672    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820673    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820674    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1820675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820676    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820677    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820678    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1820679    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1820680    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1820681    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1820682    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820683    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1820684    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820685    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820686    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820687    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1820688    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820689    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820690    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1820691    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1820691  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1820692    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820693    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1820694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 373 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820695    %macro varDept(fcmpdata=,id=);
1820696    %global nobs&id scoreFlag&id;
1820697    %let scoreFlag&id = 0;
1820698    %if &id=1 or ^&fcmpStart %then %do;
1820699    proc sort data=&fcmpdata out=_temp&id nodupkey;
1820700    by NAME;
1820701    where id=&id and LHS in( %let j=1;
1820702    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1820703    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1820704    "&var" %let j = %eval(&j+1);
1820705    %end;
1820706    );
1820707    run;
1820708    %let dsid = %sysfunc(open(_temp&id));
1820709    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1820710    %let dsid = %sysfunc(close(&dsid));
1820711    %if &&nobs&id %then %do;
1820712    %let scoreFlag&id = 1;
1820713    %let fcmpStart = 1;
1820714    %end;
1820715    %else %let fcmpStart = 0;
1820716    %end;
1820717    %else %do;
1820718    proc sort data=&fcmpdata out=_tempid;
1820719    where id=&id;
1820720    by LHS;
1820721    run;
1820722    %let dsid = %sysfunc(open(_tempid));
1820723    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1820724    %let dsid = %sysfunc(close(&dsid));
1820725    %if ^&&nobs&id %then %do;
1820726    proc datasets lib=work nolist;
1820727    delete _tempid;
1820728    run;
1820729    quit;
1820730    %end;
1820731    %else %do;
1820732    data _tempAll;
1820733    set %let j=%eval(&id-1);
1820734    %do x=1 %to &j;
1820735    %if &&nobs&x %then %do;
1820736    _temp&x %end;
1820737    %end;
1820738    ;
1820739    run;
1820740    proc sql;
1820741    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1820741  ! work._tempid p2 where p.name=p2.lhs;
1820742    quit;
1820743    data _temp&id;
1820744    set _temp&id;
1820745    where LHS ne '' and NAME ne '' and Node ne '';
1820746    run;
1820747    proc datasets lib=work nolist;
1820748    delete _tempAll;
1820749    run;
1820750    %let dsid = %sysfunc(open(_temp&id));
1820751    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1820752    %let dsid = %sysfunc(close(&dsid));
1820753    %if ^&&nobs&id %then %do;
1820754    proc datasets lib=work nolist;
1820755    delete _temp&id;
1820756    run;
1820757    quit;
1820758    %end;
1820759    %else %do;
1820760    %let scoreFlag&id = 1;
1820761    data _temp&id;
1820762    set _temp&id;
1820763    where LHS ne NAME and node ne '';
1820764    run;
1820765    %let dsid = %sysfunc(open(_temp&id));
1820766    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1820767    %let dsid = %sysfunc(close(&dsid));
1820768    %if ^&&nobs&id %then %do;
1820769    proc datasets lib=work nolist;
1820770    delete _temp&id;
1820771    run;
1820772    quit;
1820773    %end;
1820774    %else %do;
1820775    proc sort data=_temp&id nodupkey;
1820776    by LHS NAME;
1820777    run;
1820778    %end;
1820779    %end;
1820780    %end;
1820781    %end;
1820782    %mend varDept;
1820783    %macro optCode(outdata=fcmpdata);
1820784    %global fcmpStart;
1820785    %let fcmpStart = 0;
1820786    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1820787    %let NumNodes=9;
1820788    %do k=1 %to &NumNodes;
1820789    %vardept(fcmpdata=&outdata, id=&k);
1820790    %end;
1820791    %mend optCode;
1820792    %optcode(outData=EMWS8.Ensmbl53_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 42 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 30 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1820793    filename _pref
1820793  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas";
1820794    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1820795    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMPUBLISHSCORE.sas.
1820796   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1820797   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1820798   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1820799   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1820800   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1820801   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1820802   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1820803   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1820804   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1820805   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1820806   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1820807   +LENGTH _WARN_ $4
1820808   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1820809   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1820810   +
1820811   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1820812   +
1820813   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1820814   +
1820815   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1820816   +
1820817   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1820818   +
1820819   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1820820   +
1820821   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1820822   +
1820823   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1820824   +
1820825   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1820826   +
1820827   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1820828   +
1820829   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1820830   +
1820831   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1820832   +
1820833   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1820834   +
1820835   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1820836   +
1820837   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1820838   +
1820839   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1820840   +
1820841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820842   +*** Checking missing input Interval
1820843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1820844   +
1820845   +IF NMISS(
1820846   +   AcceptedCmpTotal ,
1820847   +   Mnt ,
1820848   +   MntMeatProducts ,
1820849   +   NumCatalogPurchases ,
1820850   +   RFMstat ,
1820851   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1820852   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1820853   +
1820854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1820855   +END;
MPRINT(EM_DIAGRAM):   END;
1820856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820857   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1820858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820859   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1820860   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1820861   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1820862   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1820863   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1820864   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1820865   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1820866   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1820867   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1820868   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1820869   +END;
MPRINT(EM_DIAGRAM):   END;
1820870   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1820871   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1820872   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1820873   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1820874   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1820875   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1820876   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1820877   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1820878   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1820879   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1820880   +   ELSE S_NumCatalogPurchases
1820881   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1820882   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1820883   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1820884   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1820885   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1820886   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1820887   +END;
MPRINT(EM_DIAGRAM):   END;
1820888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820889   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1820890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820891   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1820892   +   H1x1_1  =     0.20171954292418 * S_AcceptedCmpTotal
1820893   +          +     0.29079116229788 * S_Mnt  +     0.23711535602944 *
1820894   +        S_MntMeatProducts  +     0.42529081995564 * S_NumCatalogPurchases
1820895   +          +     0.18062808343642 * S_RFMstat  +    -0.63318995037874 *
1820896   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.20171954292418 * S_AcceptedCmpTotal + 0.29079116229788 *
S_Mnt + 0.23711535602944 * S_MntMeatProducts + 0.42529081995564 * S_NumCatalogPurchases +
0.18062808343642 * S_RFMstat + -0.63318995037874 * S_Recency ;
1820897   +   H1x1_2  =    -1.98920342874828 * S_AcceptedCmpTotal
1820898   +          +      10.493361229847 * S_Mnt  +    -5.26684519238396 *
1820899   +        S_MntMeatProducts  +     -1.3815052580097 * S_NumCatalogPurchases
1820900   +          +     0.33275103937215 * S_RFMstat  +     0.91614898624506 *
1820901   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.98920342874828 * S_AcceptedCmpTotal + 10.493361229847 *
S_Mnt + -5.26684519238396 * S_MntMeatProducts + -1.3815052580097 * S_NumCatalogPurchases +
0.33275103937215 * S_RFMstat + 0.91614898624506 * S_Recency ;
1820902   +   H1x1_3  =     0.73206551950569 * S_AcceptedCmpTotal
1820903   +          +    -1.01976407347302 * S_Mnt  +    -1.13350661445888 *
1820904   +        S_MntMeatProducts  +    -0.07125936639892 * S_NumCatalogPurchases
1820905   +          +    -0.39616853923675 * S_RFMstat  +    -0.82914022268456 *
1820906   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.73206551950569 * S_AcceptedCmpTotal + -1.01976407347302 *
S_Mnt + -1.13350661445888 * S_MntMeatProducts + -0.07125936639892 * S_NumCatalogPurchases +
-0.39616853923675 * S_RFMstat + -0.82914022268456 * S_Recency ;
1820907   +   H1x1_4  =    -0.34492981088566 * S_AcceptedCmpTotal
1820908   +          +     1.21190291017614 * S_Mnt  +    -8.17509176920502 *
1820909   +        S_MntMeatProducts  +    -1.48783679196456 * S_NumCatalogPurchases
1820910   +          +     -0.9509465201423 * S_RFMstat  +     0.48054774355638 *
1820911   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34492981088566 * S_AcceptedCmpTotal + 1.21190291017614 *
S_Mnt + -8.17509176920502 * S_MntMeatProducts + -1.48783679196456 * S_NumCatalogPurchases +
-0.9509465201423 * S_RFMstat + 0.48054774355638 * S_Recency ;
1820912   +   H1x1_5  =    -1.52519083391934 * S_AcceptedCmpTotal
1820913   +          +    -3.64608769152407 * S_Mnt  +    -6.52923883290239 *
1820914   +        S_MntMeatProducts  +      2.7900190963798 * S_NumCatalogPurchases
1820915   +          +     4.27091451171932 * S_RFMstat  +     2.19744854544492 *
1820916   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.52519083391934 * S_AcceptedCmpTotal + -3.64608769152407 *
S_Mnt + -6.52923883290239 * S_MntMeatProducts + 2.7900190963798 * S_NumCatalogPurchases +
4.27091451171932 * S_RFMstat + 2.19744854544492 * S_Recency ;
1820917   +   H1x1_1  =    -3.14760700594037 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -3.14760700594037 + H1x1_1 ;
1820918   +   H1x1_2  =     3.74367981551949 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 3.74367981551949 + H1x1_2 ;
1820919   +   H1x1_3  =     0.87862388051597 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.87862388051597 + H1x1_3 ;
1820920   +   H1x1_4  =    -7.01266539803621 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.01266539803621 + H1x1_4 ;
1820921   +   H1x1_5  =     4.82694309436143 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 4.82694309436143 + H1x1_5 ;
1820922   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1820923   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1820924   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1820925   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1820926   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1820927   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1820928   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1820929   +END;
MPRINT(EM_DIAGRAM):   END;
1820930   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1820931   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1820932   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1820933   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1820934   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1820935   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1820936   +END;
MPRINT(EM_DIAGRAM):   END;
1820937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820938   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1820939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820940   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1820941   +   P_DepVar1  =     15.5046788281633 * H1x1_1  +    -4.66397711541227 * H1x1_2
1820942   +          +     4.82395074522384 * H1x1_3  +    -12.9633946998053 * H1x1_4
1820943   +          +    -2.45163227816589 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.5046788281633 * H1x1_1 + -4.66397711541227 * H1x1_2 +
4.82395074522384 * H1x1_3 + -12.9633946998053 * H1x1_4 + -2.45163227816589 * H1x1_5 ;
1820944   +   P_DepVar1  =    -0.48464899477516 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.48464899477516 + P_DepVar1 ;
1820945   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1820946   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1820947   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1820948   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1820949   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1820950   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1820951   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1820952   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1820953   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1820954   +END;
MPRINT(EM_DIAGRAM):   END;
1820955   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1820956   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1820957   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1820958   +END;
MPRINT(EM_DIAGRAM):   END;
1820959   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1820960   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1820961   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1820962   +END;
MPRINT(EM_DIAGRAM):   END;
1820963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820964   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1820965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1820966   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1820967   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1820968   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1820969   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1820970   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1820971   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1820972   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1820973   +END;
MPRINT(EM_DIAGRAM):   END;
1820974   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1820975   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1820976   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1820977   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1820978    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1820979    quit;
1820980    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1820981    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1820982    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1820983    retain ID 2 Node "AutoNeural27";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural27";
1820984    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1820985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 533 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 533 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820986    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1820987    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 533 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 533 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820989    proc sort data=EMWS8.AutoNeural27_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural27_variableset out=_temp2(keep=NAME
CREATOR);
1820990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1820991    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL27_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1820992    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1820993    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1820994    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1820995    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1820996    proc contents data=EMWS8.AutoNeural27_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural27_train out=_meta(keep=NAME) noprint;
1820997    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1820998    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1820999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821001    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1821002    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1821003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821004    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821005    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1821006    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1821006  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 254 rows and 5 columns.
 
1821007    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1821008    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1821009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 254 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 254 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821010    filename _pref
1821010  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1821011    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1821012    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1821013   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1821014   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1821015   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1821016   +
1821017   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1821018   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1821019   +
1821020   +
1821021   +
1821022   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1821023   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1821024   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1821025    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1821026    quit;
1821027    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1821028    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1821029    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1821030    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1821031    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1821032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821033    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1821034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821035    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821036    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1821037    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1821039    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1821040    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1821041    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1821042    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821043    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1821044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1821045    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1821046    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821048    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1821049    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1821050    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821051    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1821052    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1821053    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1821053  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.
 
1821054    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821055    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1821056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 254 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821057    filename _pref
1821057  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1821058    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1821059    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1821060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1821061   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1821062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1821063   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1821064   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1821065   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1821066    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1821067    quit;
1821068    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1821069    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1821070    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1821071    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1821072    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1821073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821074    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1821075    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1821077    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1821078    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821080    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1821081    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1821082    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1821083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821084    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1821085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1821086    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1821087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821089    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1821090    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1821091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821092    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1821093    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1821094    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1821094  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1821095    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821096    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1821097    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 258 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821098    filename _pref
1821098  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1821099    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1821100    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1821101   +
1821102   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1821103   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1821103  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1821104   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1821105   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1821106   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1821107   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1821108   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1821109    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1821110    quit;
1821111    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1821112    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1821113    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1821114    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1821115    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1821116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1821117    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1821118    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821120    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1821121    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821123    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1821124    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1821125    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1821126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1821127    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1821128    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821129    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1821130    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821132    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1821133    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1821134    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821135    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1821136    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1821137    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1821137  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1821138    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821139    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1821140    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 297 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821141    filename _pref
1821141  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1821142    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1821143    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1821144   +
1821145   +
1821146   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1821147   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1821148   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1821149   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1821150   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1821151   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1821152   +
1821153   +
1821154   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1821155   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1821156   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1821157   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1821158   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1821159   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1821160   +
1821161   +
1821162   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1821163   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1821164   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1821165   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1821166   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1821167   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1821168   +
1821169   +
1821170   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1821171   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1821172   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1821173   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1821174   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1821175   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1821176   +
1821177   +
1821178   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1821179   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1821180   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1821181   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1821182   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1821183   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1821184   +
1821185   +
1821186   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1821187   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1821188   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1821189   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1821190   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1821191   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1821192   +
1821193   +
1821194   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1821195   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1821196   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1821197   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1821198   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1821199   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1821200   +
1821201   +
1821202   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1821203   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1821204   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1821205   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1821206   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1821207   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1821208   +if
1821209   +_FILTERNORM1 not in ( '.')
1821210   + and
1821211   +_FILTERNORM2 not in ( '.')
1821212   + and
1821213   +_FILTERNORM3 not in ( '.')
1821214   + and
1821215   +_FILTERNORM4 not in ( '.')
1821216   + and
1821217   +_FILTERNORM5 not in ( '.')
1821218   + and
1821219   +_FILTERNORM6 not in ( '.')
1821220   + and
1821221   +_FILTERNORM7 not in ( ' ')
1821222   + and
1821223   +_FILTERNORM8 not in ( ' ')
1821224   +and
1821225   +( Dt_Customer ne .)
1821226   +and ( Income ne . and (Income<=107000))
1821227   +and ( Kidhome ne .)
1821228   +and ( MntFishProducts ne .)
1821229   +and ( MntFruits ne .)
1821230   +and ( MntGoldProds ne .)
1821231   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1821232   +and ( MntSweetProducts ne .)
1821233   +and ( MntWines ne .)
1821234   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1821235   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1821236   +and ( NumStorePurchases ne .)
1821237   +and ( NumWebPurchases ne .)
1821238   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1821239   +and ( Recency ne .)
1821240   +and ( Teenhome ne .)
1821241   +and ( Year_Birth ne .)
1821242   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1821243   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1821244   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1821245   +end;
MPRINT(EM_DIAGRAM):   end;
1821246   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1821247   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1821248    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1821249    quit;
1821250    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1821251    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1821252    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1821253    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1821254    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1821255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821256    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1821257    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821259    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1821260    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1821262    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1821263    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1821264    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1821265    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821266    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1821267    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1821268    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1821269    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821271    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1821272    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1821273    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1821274    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821275    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1821276    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1821276  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1821277    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821278    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1821279    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1821280    %macro varDept(fcmpdata=,id=);
1821281    %global nobs&id scoreFlag&id;
1821282    %let scoreFlag&id = 0;
1821283    %if &id=1 or ^&fcmpStart %then %do;
1821284    proc sort data=&fcmpdata out=_temp&id nodupkey;
1821285    by NAME;
1821286    where id=&id and LHS in( %let j=1;
1821287    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1821288    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1821289    "&var" %let j = %eval(&j+1);
1821290    %end;
1821291    );
1821292    run;
1821293    %let dsid = %sysfunc(open(_temp&id));
1821294    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1821295    %let dsid = %sysfunc(close(&dsid));
1821296    %if &&nobs&id %then %do;
1821297    %let scoreFlag&id = 1;
1821298    %let fcmpStart = 1;
1821299    %end;
1821300    %else %let fcmpStart = 0;
1821301    %end;
1821302    %else %do;
1821303    proc sort data=&fcmpdata out=_tempid;
1821304    where id=&id;
1821305    by LHS;
1821306    run;
1821307    %let dsid = %sysfunc(open(_tempid));
1821308    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1821309    %let dsid = %sysfunc(close(&dsid));
1821310    %if ^&&nobs&id %then %do;
1821311    proc datasets lib=work nolist;
1821312    delete _tempid;
1821313    run;
1821314    quit;
1821315    %end;
1821316    %else %do;
1821317    data _tempAll;
1821318    set %let j=%eval(&id-1);
1821319    %do x=1 %to &j;
1821320    %if &&nobs&x %then %do;
1821321    _temp&x %end;
1821322    %end;
1821323    ;
1821324    run;
1821325    proc sql;
1821326    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1821326  ! work._tempid p2 where p.name=p2.lhs;
1821327    quit;
1821328    data _temp&id;
1821329    set _temp&id;
1821330    where LHS ne '' and NAME ne '' and Node ne '';
1821331    run;
1821332    proc datasets lib=work nolist;
1821333    delete _tempAll;
1821334    run;
1821335    %let dsid = %sysfunc(open(_temp&id));
1821336    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1821337    %let dsid = %sysfunc(close(&dsid));
1821338    %if ^&&nobs&id %then %do;
1821339    proc datasets lib=work nolist;
1821340    delete _temp&id;
1821341    run;
1821342    quit;
1821343    %end;
1821344    %else %do;
1821345    %let scoreFlag&id = 1;
1821346    data _temp&id;
1821347    set _temp&id;
1821348    where LHS ne NAME and node ne '';
1821349    run;
1821350    %let dsid = %sysfunc(open(_temp&id));
1821351    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1821352    %let dsid = %sysfunc(close(&dsid));
1821353    %if ^&&nobs&id %then %do;
1821354    proc datasets lib=work nolist;
1821355    delete _temp&id;
1821356    run;
1821357    quit;
1821358    %end;
1821359    %else %do;
1821360    proc sort data=_temp&id nodupkey;
1821361    by LHS NAME;
1821362    run;
1821363    %end;
1821364    %end;
1821365    %end;
1821366    %end;
1821367    %mend varDept;
1821368    %macro optCode(outdata=fcmpdata);
1821369    %global fcmpStart;
1821370    %let fcmpStart = 0;
1821371    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1821372    %let NumNodes=9;
1821373    %do k=1 %to &NumNodes;
1821374    %vardept(fcmpdata=&outdata, id=&k);
1821375    %end;
1821376    %mend optCode;
1821377    %optcode(outData=EMWS8.Ensmbl53_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 45 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 32 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1821378    filename _pref
1821378  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas";
1821379    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1821380    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMPUBLISHSCORE.sas.
1821381   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1821382   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1821383   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1821384   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1821385   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1821386   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1821387   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1821388   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1821389   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1821390   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1821391   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1821392   +LENGTH _WARN_ $4
1821393   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1821394   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1821395   +
1821396   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1821397   +
1821398   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1821399   +
1821400   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1821401   +
1821402   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1821403   +
1821404   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1821405   +
1821406   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1821407   +
1821408   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1821409   +
1821410   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1821411   +
1821412   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1821413   +
1821414   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1821415   +
1821416   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1821417   +
1821418   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1821419   +
1821420   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1821421   +
1821422   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1821423   +
1821424   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1821425   +
1821426   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1821427   +
1821428   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1821429   +
1821430   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1821431   +
1821432   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1821433   +
1821434   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1821435   +
1821436   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1821437   +
1821438   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1821439   +
1821440   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
1821441   +
1821442   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1821443   +
1821444   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1821445   +
1821446   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1821447   +
1821448   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1821449   +
1821450   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1821451   +
1821452   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1821453   +
1821454   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1821455   +
1821456   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1821457   +
1821458   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1821459   +
1821460   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1821461   +
1821462   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1821463   +
1821464   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
1821465   +
1821466   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1821467   +
1821468   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1821469   +
1821470   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1821471   +
1821472   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1821473   +
1821474   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1821475   +
1821476   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
1821477   +
1821478   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1821479   +
1821480   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1821481   +
1821482   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1821483   +
1821484   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1821485   +
1821486   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1821487   +
1821488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821489   +*** Checking missing input Interval
1821490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1821491   +
1821492   +IF NMISS(
1821493   +   AcceptedCmpTotal ,
1821494   +   Mnt ,
1821495   +   MntMeatProducts ,
1821496   +   NumCatalogPurchases ,
1821497   +   RFMstat ,
1821498   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1821499   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1821500   +
1821501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1821502   +END;
MPRINT(EM_DIAGRAM):   END;
1821503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821504   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1821505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821506   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1821507   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1821508   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1821509   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1821510   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1821511   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1821512   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1821513   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1821514   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1821515   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1821516   +END;
MPRINT(EM_DIAGRAM):   END;
1821517   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1821518   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1821519   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1821520   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1821521   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1821522   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1821523   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1821524   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1821525   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1821526   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1821527   +   ELSE S_NumCatalogPurchases
1821528   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1821529   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1821530   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1821531   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1821532   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1821533   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1821534   +END;
MPRINT(EM_DIAGRAM):   END;
1821535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821536   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1821537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821538   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1821539   +   H1x1_1  =     2.10717134491045 * S_AcceptedCmpTotal
1821540   +          +    -10.9799187882689 * S_Mnt  +     3.17619086363109 *
1821541   +        S_MntMeatProducts  +     0.58522050540174 * S_NumCatalogPurchases
1821542   +          +     0.10457500953086 * S_RFMstat  +    -0.59708195840656 *
1821543   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.10717134491045 * S_AcceptedCmpTotal + -10.9799187882689 *
S_Mnt + 3.17619086363109 * S_MntMeatProducts + 0.58522050540174 * S_NumCatalogPurchases +
0.10457500953086 * S_RFMstat + -0.59708195840656 * S_Recency ;
1821544   +   H1x1_2  =    -1.09600222674288 * S_AcceptedCmpTotal
1821545   +          +    -2.75188573882189 * S_Mnt  +     2.38829776780629 *
1821546   +        S_MntMeatProducts  +     2.37290115499231 * S_NumCatalogPurchases
1821547   +          +    -1.67864747205449 * S_RFMstat  +    -1.87700204299542 *
1821548   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.09600222674288 * S_AcceptedCmpTotal + -2.75188573882189 *
S_Mnt + 2.38829776780629 * S_MntMeatProducts + 2.37290115499231 * S_NumCatalogPurchases +
-1.67864747205449 * S_RFMstat + -1.87700204299542 * S_Recency ;
1821549   +   H1x1_3  =     0.24593136036671 * S_AcceptedCmpTotal
1821550   +          +     0.98275447305236 * S_Mnt  +     1.52686649163215 *
1821551   +        S_MntMeatProducts  +     1.08491172792697 * S_NumCatalogPurchases
1821552   +          +    -6.31220731697864 * S_RFMstat  +    -2.08472878456829 *
1821553   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.24593136036671 * S_AcceptedCmpTotal + 0.98275447305236 *
S_Mnt + 1.52686649163215 * S_MntMeatProducts + 1.08491172792697 * S_NumCatalogPurchases +
-6.31220731697864 * S_RFMstat + -2.08472878456829 * S_Recency ;
1821554   +   H1x1_4  =     1.35296744918554 * S_AcceptedCmpTotal
1821555   +          +    -3.58727753695297 * S_Mnt  +    -6.35187991517409 *
1821556   +        S_MntMeatProducts  +    -1.41725838894141 * S_NumCatalogPurchases
1821557   +          +     -2.5174617752956 * S_RFMstat  +     0.27284317719271 *
1821558   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.35296744918554 * S_AcceptedCmpTotal + -3.58727753695297 *
S_Mnt + -6.35187991517409 * S_MntMeatProducts + -1.41725838894141 * S_NumCatalogPurchases +
-2.5174617752956 * S_RFMstat + 0.27284317719271 * S_Recency ;
1821559   +   H1x1_5  =     1.41560412529603 * S_AcceptedCmpTotal
1821560   +          +     2.25142479190183 * S_Mnt  +      0.2775616702254 *
1821561   +        S_MntMeatProducts  +     -0.4118907005017 * S_NumCatalogPurchases
1821562   +          +     0.38803464834347 * S_RFMstat  +    -0.81750268679565 *
1821563   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.41560412529603 * S_AcceptedCmpTotal + 2.25142479190183 *
S_Mnt + 0.2775616702254 * S_MntMeatProducts + -0.4118907005017 * S_NumCatalogPurchases +
0.38803464834347 * S_RFMstat + -0.81750268679565 * S_Recency ;
1821564   +   H1x1_1  =    -1.94381314805925 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.94381314805925 + H1x1_1 ;
1821565   +   H1x1_2  =     -1.4831757685406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.4831757685406 + H1x1_2 ;
1821566   +   H1x1_3  =    -0.53539803191548 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.53539803191548 + H1x1_3 ;
1821567   +   H1x1_4  =    -5.07257058520645 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -5.07257058520645 + H1x1_4 ;
1821568   +   H1x1_5  =    -3.95581011117601 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.95581011117601 + H1x1_5 ;
1821569   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1821570   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1821571   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1821572   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1821573   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1821574   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1821575   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1821576   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1821577   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1821578   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1821579   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1821580   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1821581   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1821582   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1821583   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1821584   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1821585   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1821586   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1821587   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1821588   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1821589   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1821590   +END;
MPRINT(EM_DIAGRAM):   END;
1821591   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1821592   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1821593   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1821594   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1821595   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1821596   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1821597   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1821598   +END;
MPRINT(EM_DIAGRAM):   END;
1821599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821600   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1821601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821602   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1821603   +   H1x2_1  =    -1.55686119998165 * S_AcceptedCmpTotal
1821604   +          +    -0.26111571781978 * S_Mnt  +    -1.44938218805988 *
1821605   +        S_MntMeatProducts  +     0.04086123541942 * S_NumCatalogPurchases
1821606   +          +    -0.80214702507913 * S_RFMstat  +     0.70413979175849 *
1821607   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.55686119998165 * S_AcceptedCmpTotal + -0.26111571781978 *
S_Mnt + -1.44938218805988 * S_MntMeatProducts + 0.04086123541942 * S_NumCatalogPurchases +
-0.80214702507913 * S_RFMstat + 0.70413979175849 * S_Recency ;
1821608   +   H1x2_2  =    -1.89013114756444 * S_AcceptedCmpTotal
1821609   +          +     2.02645277032883 * S_Mnt  +     0.33300450318575 *
1821610   +        S_MntMeatProducts  +    -3.49523435320164 * S_NumCatalogPurchases
1821611   +          +    -0.54366042810185 * S_RFMstat  +    -0.96821243793862 *
1821612   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.89013114756444 * S_AcceptedCmpTotal + 2.02645277032883 *
S_Mnt + 0.33300450318575 * S_MntMeatProducts + -3.49523435320164 * S_NumCatalogPurchases +
-0.54366042810185 * S_RFMstat + -0.96821243793862 * S_Recency ;
1821613   +   H1x2_3  =    -0.37493223935971 * S_AcceptedCmpTotal
1821614   +          +     0.44222577344261 * S_Mnt  +    -2.29203252552751 *
1821615   +        S_MntMeatProducts  +    -2.51799836083289 * S_NumCatalogPurchases
1821616   +          +     0.79676408136588 * S_RFMstat  +    -1.33777715205059 *
1821617   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.37493223935971 * S_AcceptedCmpTotal + 0.44222577344261 *
S_Mnt + -2.29203252552751 * S_MntMeatProducts + -2.51799836083289 * S_NumCatalogPurchases +
0.79676408136588 * S_RFMstat + -1.33777715205059 * S_Recency ;
1821618   +   H1x2_4  =     0.61023216239118 * S_AcceptedCmpTotal
1821619   +          +     -1.2504451910923 * S_Mnt  +     1.08805550572067 *
1821620   +        S_MntMeatProducts  +     0.42462128634087 * S_NumCatalogPurchases
1821621   +          +     0.47301106041065 * S_RFMstat  +    -2.61753144043135 *
1821622   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.61023216239118 * S_AcceptedCmpTotal + -1.2504451910923 *
S_Mnt + 1.08805550572067 * S_MntMeatProducts + 0.42462128634087 * S_NumCatalogPurchases +
0.47301106041065 * S_RFMstat + -2.61753144043135 * S_Recency ;
1821623   +   H1x2_5  =    -1.41618915627784 * S_AcceptedCmpTotal
1821624   +          +    -1.13785141950187 * S_Mnt  +    -1.73667107974481 *
1821625   +        S_MntMeatProducts  +      3.1366199093076 * S_NumCatalogPurchases
1821626   +          +    -1.94563130199796 * S_RFMstat  +       2.512838942818 *
1821627   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.41618915627784 * S_AcceptedCmpTotal + -1.13785141950187 *
S_Mnt + -1.73667107974481 * S_MntMeatProducts + 3.1366199093076 * S_NumCatalogPurchases +
-1.94563130199796 * S_RFMstat + 2.512838942818 * S_Recency ;
1821628   +   H1x2_1  =     0.73112846873387 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73112846873387 + H1x2_1 ;
1821629   +   H1x2_2  =    -0.66717106615524 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.66717106615524 + H1x2_2 ;
1821630   +   H1x2_3  =      2.7125530739338 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.7125530739338 + H1x2_3 ;
1821631   +   H1x2_4  =    -1.39079027168122 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.39079027168122 + H1x2_4 ;
1821632   +   H1x2_5  =     -1.5266283403396 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.5266283403396 + H1x2_5 ;
1821633   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1821634   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1821635   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1821636   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1821637   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1821638   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1821639   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1821640   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1821641   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1821642   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1821643   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1821644   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1821645   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1821646   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1821647   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1821648   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1821649   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1821650   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1821651   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1821652   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1821653   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1821654   +END;
MPRINT(EM_DIAGRAM):   END;
1821655   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1821656   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1821657   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1821658   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1821659   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1821660   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1821661   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1821662   +END;
MPRINT(EM_DIAGRAM):   END;
1821663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821664   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1821665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821666   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1821667   +   H1x3_1  =     1.55893522013734 * S_AcceptedCmpTotal
1821668   +          +    -1.16802167955541 * S_Mnt  +    -1.60360119780136 *
1821669   +        S_MntMeatProducts  +     0.47774394371528 * S_NumCatalogPurchases
1821670   +          +      -0.530718682766 * S_RFMstat  +    -2.44187650282709 *
1821671   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.55893522013734 * S_AcceptedCmpTotal + -1.16802167955541 *
S_Mnt + -1.60360119780136 * S_MntMeatProducts + 0.47774394371528 * S_NumCatalogPurchases +
-0.530718682766 * S_RFMstat + -2.44187650282709 * S_Recency ;
1821672   +   H1x3_2  =     1.06465525219753 * S_AcceptedCmpTotal
1821673   +          +    -4.15619528335918 * S_Mnt  +     1.95067813512976 *
1821674   +        S_MntMeatProducts  +    -2.07670102753791 * S_NumCatalogPurchases
1821675   +          +     0.49910286851075 * S_RFMstat  +     0.93996026298479 *
1821676   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.06465525219753 * S_AcceptedCmpTotal + -4.15619528335918 *
S_Mnt + 1.95067813512976 * S_MntMeatProducts + -2.07670102753791 * S_NumCatalogPurchases +
0.49910286851075 * S_RFMstat + 0.93996026298479 * S_Recency ;
1821677   +   H1x3_3  =    -0.29105397796174 * S_AcceptedCmpTotal
1821678   +          +     2.11159454800566 * S_Mnt  +     1.67840031691295 *
1821679   +        S_MntMeatProducts  +    -2.40711178902336 * S_NumCatalogPurchases
1821680   +          +    -1.13747844076384 * S_RFMstat  +    -0.88756656082469 *
1821681   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.29105397796174 * S_AcceptedCmpTotal + 2.11159454800566 *
S_Mnt + 1.67840031691295 * S_MntMeatProducts + -2.40711178902336 * S_NumCatalogPurchases +
-1.13747844076384 * S_RFMstat + -0.88756656082469 * S_Recency ;
1821682   +   H1x3_4  =    -1.15703505358845 * S_AcceptedCmpTotal
1821683   +          +     0.30100889287849 * S_Mnt  +     0.55319963517684 *
1821684   +        S_MntMeatProducts  +    -0.02272785613118 * S_NumCatalogPurchases
1821685   +          +     0.43699534320691 * S_RFMstat  +     2.22910491450126 *
1821686   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.15703505358845 * S_AcceptedCmpTotal + 0.30100889287849 *
S_Mnt + 0.55319963517684 * S_MntMeatProducts + -0.02272785613118 * S_NumCatalogPurchases +
0.43699534320691 * S_RFMstat + 2.22910491450126 * S_Recency ;
1821687   +   H1x3_5  =    -0.42268650148557 * S_AcceptedCmpTotal
1821688   +          +    -2.38416083526034 * S_Mnt  +     2.41579845516974 *
1821689   +        S_MntMeatProducts  +     0.60973384003689 * S_NumCatalogPurchases
1821690   +          +    -1.12415629345715 * S_RFMstat  +    -0.59274912531616 *
1821691   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.42268650148557 * S_AcceptedCmpTotal + -2.38416083526034 *
S_Mnt + 2.41579845516974 * S_MntMeatProducts + 0.60973384003689 * S_NumCatalogPurchases +
-1.12415629345715 * S_RFMstat + -0.59274912531616 * S_Recency ;
1821692   +   H1x3_1  =     0.20894643335542 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.20894643335542 + H1x3_1 ;
1821693   +   H1x3_2  =     2.19187718990043 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 2.19187718990043 + H1x3_2 ;
1821694   +   H1x3_3  =    -0.63127842492526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.63127842492526 + H1x3_3 ;
1821695   +   H1x3_4  =     0.25735048029686 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25735048029686 + H1x3_4 ;
1821696   +   H1x3_5  =     0.02632857468412 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.02632857468412 + H1x3_5 ;
1821697   +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
1821698   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
1821699   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1821700   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
1821701   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
1821702   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
1821703   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
1821704   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
1821705   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
1821706   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
1821707   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
1821708   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
1821709   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
1821710   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
1821711   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
1821712   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
1821713   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
1821714   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
1821715   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
1821716   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
1821717   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
1821718   +END;
MPRINT(EM_DIAGRAM):   END;
1821719   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1821720   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1821721   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1821722   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1821723   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1821724   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1821725   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
1821726   +END;
MPRINT(EM_DIAGRAM):   END;
1821727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821728   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1821729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821730   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1821731   +   H2x1_1  =    -1.91284328958208 * H1x1_1  +     1.01368252878712 * H1x1_2
1821732   +          +     0.88385633780482 * H1x1_3  +     0.77249497316744 * H1x1_4
1821733   +          +    -1.68467525644522 * H1x1_5  +     0.22872788371043 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.91284328958208 * H1x1_1 + 1.01368252878712 * H1x1_2 +
0.88385633780482 * H1x1_3 + 0.77249497316744 * H1x1_4 + -1.68467525644522 * H1x1_5 +
0.22872788371043 * H1x1_6 ;
1821734   +   H2x1_2  =    -0.08913678495622 * H1x1_1  +    -0.95704614273187 * H1x1_2
1821735   +          +    -1.13959611313765 * H1x1_3  +    -0.83269840840553 * H1x1_4
1821736   +          +    -1.34839441082903 * H1x1_5  +      1.4617930846853 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.08913678495622 * H1x1_1 + -0.95704614273187 * H1x1_2 +
-1.13959611313765 * H1x1_3 + -0.83269840840553 * H1x1_4 + -1.34839441082903 * H1x1_5 +
1.4617930846853 * H1x1_6 ;
1821737   +   H2x1_3  =     1.19406467163652 * H1x1_1  +     1.10561638775412 * H1x1_2
1821738   +          +     3.50091937687106 * H1x1_3  +     -0.7408464567923 * H1x1_4
1821739   +          +     1.07741096211456 * H1x1_5  +     -1.0098240718302 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.19406467163652 * H1x1_1 + 1.10561638775412 * H1x1_2 +
3.50091937687106 * H1x1_3 + -0.7408464567923 * H1x1_4 + 1.07741096211456 * H1x1_5 +
-1.0098240718302 * H1x1_6 ;
1821740   +   H2x1_4  =    -3.50840251474163 * H1x1_1  +    -0.53688540920235 * H1x1_2
1821741   +          +    -2.44435438360824 * H1x1_3  +     4.64213676100195 * H1x1_4
1821742   +          +     0.36171420259161 * H1x1_5  +     0.11106499550345 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.50840251474163 * H1x1_1 + -0.53688540920235 * H1x1_2 +
-2.44435438360824 * H1x1_3 + 4.64213676100195 * H1x1_4 + 0.36171420259161 * H1x1_5 +
0.11106499550345 * H1x1_6 ;
1821743   +   H2x1_5  =    -0.92126735850423 * H1x1_1  +    -0.50015259068425 * H1x1_2
1821744   +          +    -2.75013936022633 * H1x1_3  +     1.29804156504555 * H1x1_4
1821745   +          +    -2.88854985509185 * H1x1_5  +     3.51037817476003 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.92126735850423 * H1x1_1 + -0.50015259068425 * H1x1_2 +
-2.75013936022633 * H1x1_3 + 1.29804156504555 * H1x1_4 + -2.88854985509185 * H1x1_5 +
3.51037817476003 * H1x1_6 ;
1821746   +   H2x1_6  =      2.7601365695399 * H1x1_1  +     0.60343333315883 * H1x1_2
1821747   +          +    -4.84088835213795 * H1x1_3  +     0.04677091451384 * H1x1_4
1821748   +          +     1.99119511166544 * H1x1_5  +    -1.84413878989067 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 2.7601365695399 * H1x1_1 + 0.60343333315883 * H1x1_2 +
-4.84088835213795 * H1x1_3 + 0.04677091451384 * H1x1_4 + 1.99119511166544 * H1x1_5 +
-1.84413878989067 * H1x1_6 ;
1821749   +   H2x1_1  = H2x1_1  +    -0.55299168308518 * H1x2_1
1821750   +          +    -0.70728759829892 * H1x2_2  +     0.02028723479846 * H1x2_3
1821751   +          +      2.1534144925678 * H1x2_4  +    -0.60181736829464 * H1x2_5
1821752   +          +    -0.96627475596267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.55299168308518 * H1x2_1 + -0.70728759829892 *
H1x2_2 + 0.02028723479846 * H1x2_3 + 2.1534144925678 * H1x2_4 + -0.60181736829464 * H1x2_5 +
-0.96627475596267 * H1x2_6 ;
1821753   +   H2x1_2  = H2x1_2  +     1.02776882707138 * H1x2_1
1821754   +          +    -0.26186544699712 * H1x2_2  +    -0.59804813597981 * H1x2_3
1821755   +          +     0.13683572328121 * H1x2_4  +     -0.4527430044725 * H1x2_5
1821756   +          +     0.09804477894859 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.02776882707138 * H1x2_1 + -0.26186544699712 * H1x2_2
+ -0.59804813597981 * H1x2_3 + 0.13683572328121 * H1x2_4 + -0.4527430044725 * H1x2_5 +
0.09804477894859 * H1x2_6 ;
1821757   +   H2x1_3  = H2x1_3  +    -1.37372644240513 * H1x2_1
1821758   +          +    -1.41411080054855 * H1x2_2  +    -0.85635388175337 * H1x2_3
1821759   +          +     1.78033736245689 * H1x2_4  +    -0.32277639652206 * H1x2_5
1821760   +          +    -0.10095907241792 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.37372644240513 * H1x2_1 + -1.41411080054855 *
H1x2_2 + -0.85635388175337 * H1x2_3 + 1.78033736245689 * H1x2_4 + -0.32277639652206 * H1x2_5 +
-0.10095907241792 * H1x2_6 ;
1821761   +   H2x1_4  = H2x1_4  +     0.38975073179429 * H1x2_1
1821762   +          +      1.7999626274739 * H1x2_2  +    -0.54595798920563 * H1x2_3
1821763   +          +    -2.87794569741229 * H1x2_4  +     2.24407851876424 * H1x2_5
1821764   +          +    -0.78007016861264 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.38975073179429 * H1x2_1 + 1.7999626274739 * H1x2_2 +
-0.54595798920563 * H1x2_3 + -2.87794569741229 * H1x2_4 + 2.24407851876424 * H1x2_5 +
-0.78007016861264 * H1x2_6 ;
1821765   +   H2x1_5  = H2x1_5  +     1.68407538128685 * H1x2_1
1821766   +          +     2.69111816059998 * H1x2_2  +     0.12927675826764 * H1x2_3
1821767   +          +     -1.7263485913587 * H1x2_4  +    -2.15741343790643 * H1x2_5
1821768   +          +     1.95855676074934 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.68407538128685 * H1x2_1 + 2.69111816059998 * H1x2_2
+ 0.12927675826764 * H1x2_3 + -1.7263485913587 * H1x2_4 + -2.15741343790643 * H1x2_5 +
1.95855676074934 * H1x2_6 ;
1821769   +   H2x1_6  = H2x1_6  +     0.31146846941645 * H1x2_1
1821770   +          +     0.33682375646593 * H1x2_2  +      1.6527641940739 * H1x2_3
1821771   +          +    -0.96403239328063 * H1x2_4  +    -1.11790253982232 * H1x2_5
1821772   +          +     -1.4251132059225 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 0.31146846941645 * H1x2_1 + 0.33682375646593 * H1x2_2
+ 1.6527641940739 * H1x2_3 + -0.96403239328063 * H1x2_4 + -1.11790253982232 * H1x2_5 +
-1.4251132059225 * H1x2_6 ;
1821773   +   H2x1_1  = H2x1_1  +     0.47301275142195 * H1x3_1
1821774   +          +    -1.23391488243925 * H1x3_2  +    -1.81348351496647 * H1x3_3
1821775   +          +    -0.66473016828009 * H1x3_4  +     1.27670685567846 * H1x3_5
1821776   +          +     0.38481934719452 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.47301275142195 * H1x3_1 + -1.23391488243925 * H1x3_2
+ -1.81348351496647 * H1x3_3 + -0.66473016828009 * H1x3_4 + 1.27670685567846 * H1x3_5 +
0.38481934719452 * H1x3_6 ;
1821777   +   H2x1_2  = H2x1_2  +     0.35549808536734 * H1x3_1
1821778   +          +     0.36201179536458 * H1x3_2  +     1.04726425834791 * H1x3_3
1821779   +          +    -1.08276187248251 * H1x3_4  +     0.74248193765521 * H1x3_5
1821780   +          +     1.87596859340821 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.35549808536734 * H1x3_1 + 0.36201179536458 * H1x3_2
+ 1.04726425834791 * H1x3_3 + -1.08276187248251 * H1x3_4 + 0.74248193765521 * H1x3_5 +
1.87596859340821 * H1x3_6 ;
1821781   +   H2x1_3  = H2x1_3  +    -0.36667720681998 * H1x3_1
1821782   +          +      0.5256210995417 * H1x3_2  +    -0.44860423311788 * H1x3_3
1821783   +          +    -0.20913840911463 * H1x3_4  +    -0.76258888517092 * H1x3_5
1821784   +          +     0.20457555210609 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.36667720681998 * H1x3_1 + 0.5256210995417 * H1x3_2
+ -0.44860423311788 * H1x3_3 + -0.20913840911463 * H1x3_4 + -0.76258888517092 * H1x3_5 +
0.20457555210609 * H1x3_6 ;
1821785   +   H2x1_4  = H2x1_4  +     -0.5052323966606 * H1x3_1
1821786   +          +     0.57348008947054 * H1x3_2  +     0.36313882476736 * H1x3_3
1821787   +          +     2.54509537428676 * H1x3_4  +    -1.40462445002153 * H1x3_5
1821788   +          +     1.76488988390401 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.5052323966606 * H1x3_1 + 0.57348008947054 * H1x3_2
+ 0.36313882476736 * H1x3_3 + 2.54509537428676 * H1x3_4 + -1.40462445002153 * H1x3_5 +
1.76488988390401 * H1x3_6 ;
1821789   +   H2x1_5  = H2x1_5  +     -0.4555917406867 * H1x3_1
1821790   +          +     0.52745581365834 * H1x3_2  +    -0.82303556180885 * H1x3_3
1821791   +          +    -0.78981386250305 * H1x3_4  +     0.09307958113664 * H1x3_5
1821792   +          +     1.63202351822216 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.4555917406867 * H1x3_1 + 0.52745581365834 * H1x3_2
+ -0.82303556180885 * H1x3_3 + -0.78981386250305 * H1x3_4 + 0.09307958113664 * H1x3_5 +
1.63202351822216 * H1x3_6 ;
1821793   +   H2x1_6  = H2x1_6  +    -0.57563015009902 * H1x3_1
1821794   +          +     2.47575184377805 * H1x3_2  +    -0.91958118957044 * H1x3_3
1821795   +          +    -1.67916721690516 * H1x3_4  +     0.69514147486102 * H1x3_5
1821796   +          +    -0.75070900812889 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.57563015009902 * H1x3_1 + 2.47575184377805 * H1x3_2
+ -0.91958118957044 * H1x3_3 + -1.67916721690516 * H1x3_4 + 0.69514147486102 * H1x3_5 +
-0.75070900812889 * H1x3_6 ;
1821797   +   H2x1_1  =     0.44089803005479 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.44089803005479 + H2x1_1 ;
1821798   +   H2x1_2  =     0.84182794358826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84182794358826 + H2x1_2 ;
1821799   +   H2x1_3  =     0.09803371201388 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.09803371201388 + H2x1_3 ;
1821800   +   H2x1_4  =      -0.624591248343 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.624591248343 + H2x1_4 ;
1821801   +   H2x1_5  =      0.7596943675806 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.7596943675806 + H2x1_5 ;
1821802   +   H2x1_6  =     1.86613856151687 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.86613856151687 + H2x1_6 ;
1821803   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1821804   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1821805   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1821806   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1821807   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1821808   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1821809   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1821810   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1821811   +END;
MPRINT(EM_DIAGRAM):   END;
1821812   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1821813   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1821814   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1821815   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1821816   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1821817   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1821818   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1821819   +END;
MPRINT(EM_DIAGRAM):   END;
1821820   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821821   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1821822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821823   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1821824   +   H2x2_1  =    -0.67599100831955 * H1x1_1  +     0.24077189312828 * H1x1_2
1821825   +          +      0.2000763543409 * H1x1_3  +    -1.82199808794926 * H1x1_4
1821826   +          +    -0.63614429983717 * H1x1_5  +     0.35027369588915 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.67599100831955 * H1x1_1 + 0.24077189312828 * H1x1_2 +
0.2000763543409 * H1x1_3 + -1.82199808794926 * H1x1_4 + -0.63614429983717 * H1x1_5 +
0.35027369588915 * H1x1_6 ;
1821827   +   H2x2_2  =    -2.86273409671688 * H1x1_1  +    -1.17210014090039 * H1x1_2
1821828   +          +     2.79815832312648 * H1x1_3  +     0.46361776813305 * H1x1_4
1821829   +          +      0.0798677597958 * H1x1_5  +    -0.75991454790943 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -2.86273409671688 * H1x1_1 + -1.17210014090039 * H1x1_2 +
2.79815832312648 * H1x1_3 + 0.46361776813305 * H1x1_4 + 0.0798677597958 * H1x1_5 +
-0.75991454790943 * H1x1_6 ;
1821830   +   H2x2_3  =     -0.6739829418862 * H1x1_1  +    -2.31169428380278 * H1x1_2
1821831   +          +     2.10300119718615 * H1x1_3  +    -0.00742357063683 * H1x1_4
1821832   +          +    -1.51041651747244 * H1x1_5  +    -0.17010696636548 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.6739829418862 * H1x1_1 + -2.31169428380278 * H1x1_2 +
2.10300119718615 * H1x1_3 + -0.00742357063683 * H1x1_4 + -1.51041651747244 * H1x1_5 +
-0.17010696636548 * H1x1_6 ;
1821833   +   H2x2_4  =    -1.50678102953218 * H1x1_1  +    -0.89959733379076 * H1x1_2
1821834   +          +     1.08933879000366 * H1x1_3  +      0.4160027440208 * H1x1_4
1821835   +          +     0.96602358671281 * H1x1_5  +     2.49695921665153 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.50678102953218 * H1x1_1 + -0.89959733379076 * H1x1_2 +
1.08933879000366 * H1x1_3 + 0.4160027440208 * H1x1_4 + 0.96602358671281 * H1x1_5 +
2.49695921665153 * H1x1_6 ;
1821836   +   H2x2_5  =      0.7197781324018 * H1x1_1  +     0.65156339723506 * H1x1_2
1821837   +          +     1.10688522196469 * H1x1_3  +    -0.18317373714845 * H1x1_4
1821838   +          +    -0.41607265841802 * H1x1_5  +    -1.97247962280317 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.7197781324018 * H1x1_1 + 0.65156339723506 * H1x1_2 +
1.10688522196469 * H1x1_3 + -0.18317373714845 * H1x1_4 + -0.41607265841802 * H1x1_5 +
-1.97247962280317 * H1x1_6 ;
1821839   +   H2x2_6  =     0.54986188496659 * H1x1_1  +    -1.79839449870258 * H1x1_2
1821840   +          +    -1.15036560870119 * H1x1_3  +     1.47969678061941 * H1x1_4
1821841   +          +     0.10597867235187 * H1x1_5  +     0.90300533681641 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.54986188496659 * H1x1_1 + -1.79839449870258 * H1x1_2 +
-1.15036560870119 * H1x1_3 + 1.47969678061941 * H1x1_4 + 0.10597867235187 * H1x1_5 +
0.90300533681641 * H1x1_6 ;
1821842   +   H2x2_1  = H2x2_1  +    -0.21000305943834 * H1x2_1
1821843   +          +    -0.32875528993365 * H1x2_2  +    -2.01191741391886 * H1x2_3
1821844   +          +     0.25433844143017 * H1x2_4  +    -0.22353514971516 * H1x2_5
1821845   +          +    -1.39994531215362 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21000305943834 * H1x2_1 + -0.32875528993365 *
H1x2_2 + -2.01191741391886 * H1x2_3 + 0.25433844143017 * H1x2_4 + -0.22353514971516 * H1x2_5 +
-1.39994531215362 * H1x2_6 ;
1821846   +   H2x2_2  = H2x2_2  +     0.97984435202354 * H1x2_1
1821847   +          +    -0.32249690006833 * H1x2_2  +    -1.39997315416199 * H1x2_3
1821848   +          +     -2.7808281862933 * H1x2_4  +    -0.16292745421241 * H1x2_5
1821849   +          +    -0.40444669273525 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.97984435202354 * H1x2_1 + -0.32249690006833 * H1x2_2
+ -1.39997315416199 * H1x2_3 + -2.7808281862933 * H1x2_4 + -0.16292745421241 * H1x2_5 +
-0.40444669273525 * H1x2_6 ;
1821850   +   H2x2_3  = H2x2_3  +      1.7332207906399 * H1x2_1
1821851   +          +     0.48772690844604 * H1x2_2  +    -0.03702571322482 * H1x2_3
1821852   +          +    -0.04073364631727 * H1x2_4  +    -0.91191013457442 * H1x2_5
1821853   +          +    -2.38736049861996 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.7332207906399 * H1x2_1 + 0.48772690844604 * H1x2_2 +
-0.03702571322482 * H1x2_3 + -0.04073364631727 * H1x2_4 + -0.91191013457442 * H1x2_5 +
-2.38736049861996 * H1x2_6 ;
1821854   +   H2x2_4  = H2x2_4  +    -0.06792429668775 * H1x2_1
1821855   +          +    -3.07222522712126 * H1x2_2  +     0.01320929156379 * H1x2_3
1821856   +          +     0.84459091213222 * H1x2_4  +    -0.95949143247045 * H1x2_5
1821857   +          +     0.02632878191094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.06792429668775 * H1x2_1 + -3.07222522712126 *
H1x2_2 + 0.01320929156379 * H1x2_3 + 0.84459091213222 * H1x2_4 + -0.95949143247045 * H1x2_5 +
0.02632878191094 * H1x2_6 ;
1821858   +   H2x2_5  = H2x2_5  +     0.13831659235384 * H1x2_1
1821859   +          +    -1.75598160312232 * H1x2_2  +     0.17047671926062 * H1x2_3
1821860   +          +    -0.45409084878331 * H1x2_4  +    -1.17540122389603 * H1x2_5
1821861   +          +     0.79706245066425 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 0.13831659235384 * H1x2_1 + -1.75598160312232 * H1x2_2
+ 0.17047671926062 * H1x2_3 + -0.45409084878331 * H1x2_4 + -1.17540122389603 * H1x2_5 +
0.79706245066425 * H1x2_6 ;
1821862   +   H2x2_6  = H2x2_6  +     1.74450762507234 * H1x2_1
1821863   +          +    -0.18999736448811 * H1x2_2  +    -0.82200918268165 * H1x2_3
1821864   +          +      1.8752098314092 * H1x2_4  +    -0.55366925571085 * H1x2_5
1821865   +          +     1.96032751350518 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.74450762507234 * H1x2_1 + -0.18999736448811 * H1x2_2
+ -0.82200918268165 * H1x2_3 + 1.8752098314092 * H1x2_4 + -0.55366925571085 * H1x2_5 +
1.96032751350518 * H1x2_6 ;
1821866   +   H2x2_1  = H2x2_1  +     1.05088385328525 * H1x3_1
1821867   +          +    -1.18748050069472 * H1x3_2  +     0.33686598960541 * H1x3_3
1821868   +          +     0.60467968457853 * H1x3_4  +     0.44997942659683 * H1x3_5
1821869   +          +     0.86372067144364 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.05088385328525 * H1x3_1 + -1.18748050069472 * H1x3_2
+ 0.33686598960541 * H1x3_3 + 0.60467968457853 * H1x3_4 + 0.44997942659683 * H1x3_5 +
0.86372067144364 * H1x3_6 ;
1821870   +   H2x2_2  = H2x2_2  +     0.54489966189284 * H1x3_1
1821871   +          +     0.63828892530684 * H1x3_2  +     1.36576672067523 * H1x3_3
1821872   +          +    -0.93080386349548 * H1x3_4  +    -0.53645684858865 * H1x3_5
1821873   +          +     0.80254310887989 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54489966189284 * H1x3_1 + 0.63828892530684 * H1x3_2
+ 1.36576672067523 * H1x3_3 + -0.93080386349548 * H1x3_4 + -0.53645684858865 * H1x3_5 +
0.80254310887989 * H1x3_6 ;
1821874   +   H2x2_3  = H2x2_3  +    -0.43326705547287 * H1x3_1
1821875   +          +     1.62130917530395 * H1x3_2  +     -1.9569471371487 * H1x3_3
1821876   +          +    -0.16690355216427 * H1x3_4  +     0.76588074497881 * H1x3_5
1821877   +          +    -0.80961698509146 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.43326705547287 * H1x3_1 + 1.62130917530395 * H1x3_2
+ -1.9569471371487 * H1x3_3 + -0.16690355216427 * H1x3_4 + 0.76588074497881 * H1x3_5 +
-0.80961698509146 * H1x3_6 ;
1821878   +   H2x2_4  = H2x2_4  +     0.14186336769381 * H1x3_1
1821879   +          +    -0.40313769302155 * H1x3_2  +     0.32907477170578 * H1x3_3
1821880   +          +    -0.09559287343495 * H1x3_4  +     1.23870853269954 * H1x3_5
1821881   +          +    -1.29909553454934 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.14186336769381 * H1x3_1 + -0.40313769302155 * H1x3_2
+ 0.32907477170578 * H1x3_3 + -0.09559287343495 * H1x3_4 + 1.23870853269954 * H1x3_5 +
-1.29909553454934 * H1x3_6 ;
1821882   +   H2x2_5  = H2x2_5  +    -0.23962567636847 * H1x3_1
1821883   +          +    -0.40709618711343 * H1x3_2  +    -1.68479406479753 * H1x3_3
1821884   +          +     0.70815879664382 * H1x3_4  +    -0.08013794063462 * H1x3_5
1821885   +          +      0.3854653698129 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.23962567636847 * H1x3_1 + -0.40709618711343 *
H1x3_2 + -1.68479406479753 * H1x3_3 + 0.70815879664382 * H1x3_4 + -0.08013794063462 * H1x3_5 +
0.3854653698129 * H1x3_6 ;
1821886   +   H2x2_6  = H2x2_6  +     0.30227974563111 * H1x3_1
1821887   +          +    -0.74687752968448 * H1x3_2  +     1.36415251312446 * H1x3_3
1821888   +          +     1.81088044806083 * H1x3_4  +     1.05534281539066 * H1x3_5
1821889   +          +    -0.43429796112944 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.30227974563111 * H1x3_1 + -0.74687752968448 * H1x3_2
+ 1.36415251312446 * H1x3_3 + 1.81088044806083 * H1x3_4 + 1.05534281539066 * H1x3_5 +
-0.43429796112944 * H1x3_6 ;
1821890   +   H2x2_1  =     0.63184708368306 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63184708368306 + H2x2_1 ;
1821891   +   H2x2_2  =     0.84907350596357 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.84907350596357 + H2x2_2 ;
1821892   +   H2x2_3  =    -0.73809203587584 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.73809203587584 + H2x2_3 ;
1821893   +   H2x2_4  =    -0.43815853180498 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.43815853180498 + H2x2_4 ;
1821894   +   H2x2_5  =     0.21738444698009 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.21738444698009 + H2x2_5 ;
1821895   +   H2x2_6  =     0.35336989078545 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.35336989078545 + H2x2_6 ;
1821896   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1821897   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1821898   +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
1821899   +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
1821900   +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
1821901   +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
1821902   +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
1821903   +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
1821904   +END;
MPRINT(EM_DIAGRAM):   END;
1821905   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1821906   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1821907   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1821908   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1821909   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1821910   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1821911   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
1821912   +END;
MPRINT(EM_DIAGRAM):   END;
1821913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821914   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1821915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821916   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1821917   +   H3x1_1  =     0.88232318111379 * H2x1_1  +     0.33230222316203 * H2x1_2
1821918   +          +     1.74392107555271 * H2x1_3  +    -1.04185063882146 * H2x1_4
1821919   +          +    -0.63105511848819 * H2x1_5  +    -1.05088304858423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.88232318111379 * H2x1_1 + 0.33230222316203 * H2x1_2 +
1.74392107555271 * H2x1_3 + -1.04185063882146 * H2x1_4 + -0.63105511848819 * H2x1_5 +
-1.05088304858423 * H2x1_6 ;
1821920   +   H3x1_2  =     1.11736284857762 * H2x1_1  +     1.90660007278783 * H2x1_2
1821921   +          +    -0.38007206174956 * H2x1_3  +     0.37265047043174 * H2x1_4
1821922   +          +     2.27208664894129 * H2x1_5  +     0.87150445612099 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.11736284857762 * H2x1_1 + 1.90660007278783 * H2x1_2 +
-0.38007206174956 * H2x1_3 + 0.37265047043174 * H2x1_4 + 2.27208664894129 * H2x1_5 +
0.87150445612099 * H2x1_6 ;
1821923   +   H3x1_3  =    -1.47841270668706 * H2x1_1  +    -1.28441896803313 * H2x1_2
1821924   +          +     1.95549364222924 * H2x1_3  +    -2.50484940312791 * H2x1_4
1821925   +          +    -2.84934238039874 * H2x1_5  +     2.18013446750751 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.47841270668706 * H2x1_1 + -1.28441896803313 * H2x1_2 +
1.95549364222924 * H2x1_3 + -2.50484940312791 * H2x1_4 + -2.84934238039874 * H2x1_5 +
2.18013446750751 * H2x1_6 ;
1821926   +   H3x1_4  =     1.91981096223784 * H2x1_1  +     2.50981387206546 * H2x1_2
1821927   +          +     1.52848474440169 * H2x1_3  +    -1.77653121606781 * H2x1_4
1821928   +          +    -1.17059017641066 * H2x1_5  +     0.08630071934474 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.91981096223784 * H2x1_1 + 2.50981387206546 * H2x1_2 +
1.52848474440169 * H2x1_3 + -1.77653121606781 * H2x1_4 + -1.17059017641066 * H2x1_5 +
0.08630071934474 * H2x1_6 ;
1821929   +   H3x1_5  =    -0.90689901549977 * H2x1_1  +    -0.28920884601352 * H2x1_2
1821930   +          +     0.19367561691053 * H2x1_3  +    -1.64382922054024 * H2x1_4
1821931   +          +    -1.27645531071461 * H2x1_5  +     2.78368081292476 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.90689901549977 * H2x1_1 + -0.28920884601352 * H2x1_2 +
0.19367561691053 * H2x1_3 + -1.64382922054024 * H2x1_4 + -1.27645531071461 * H2x1_5 +
2.78368081292476 * H2x1_6 ;
1821932   +   H3x1_6  =     1.79097710546589 * H2x1_1  +     0.62195006841522 * H2x1_2
1821933   +          +     0.38238495192417 * H2x1_3  +     0.38117337455775 * H2x1_4
1821934   +          +     0.31232345193628 * H2x1_5  +     1.64288571863932 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.79097710546589 * H2x1_1 + 0.62195006841522 * H2x1_2 +
0.38238495192417 * H2x1_3 + 0.38117337455775 * H2x1_4 + 0.31232345193628 * H2x1_5 +
1.64288571863932 * H2x1_6 ;
1821935   +   H3x1_1  = H3x1_1  +    -0.29610176935088 * H2x2_1
1821936   +          +    -0.05687019870114 * H2x2_2  +     0.19276816813006 * H2x2_3
1821937   +          +    -0.02919428123272 * H2x2_4  +     -0.1225189756077 * H2x2_5
1821938   +          +     0.35216486042215 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.29610176935088 * H2x2_1 + -0.05687019870114 *
H2x2_2 + 0.19276816813006 * H2x2_3 + -0.02919428123272 * H2x2_4 + -0.1225189756077 * H2x2_5 +
0.35216486042215 * H2x2_6 ;
1821939   +   H3x1_2  = H3x1_2  +    -0.65560935360323 * H2x2_1
1821940   +          +     1.14492037534385 * H2x2_2  +    -0.73840836071645 * H2x2_3
1821941   +          +      1.3947576688638 * H2x2_4  +    -0.01317619212955 * H2x2_5
1821942   +          +    -0.91648595761636 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -0.65560935360323 * H2x2_1 + 1.14492037534385 * H2x2_2
+ -0.73840836071645 * H2x2_3 + 1.3947576688638 * H2x2_4 + -0.01317619212955 * H2x2_5 +
-0.91648595761636 * H2x2_6 ;
1821943   +   H3x1_3  = H3x1_3  +    -0.53127332055291 * H2x2_1
1821944   +          +     0.36262088215518 * H2x2_2  +     2.77585954813321 * H2x2_3
1821945   +          +     1.38261906942485 * H2x2_4  +    -0.22635906489825 * H2x2_5
1821946   +          +    -2.11281855575499 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.53127332055291 * H2x2_1 + 0.36262088215518 * H2x2_2
+ 2.77585954813321 * H2x2_3 + 1.38261906942485 * H2x2_4 + -0.22635906489825 * H2x2_5 +
-2.11281855575499 * H2x2_6 ;
1821947   +   H3x1_4  = H3x1_4  +     0.10255243516649 * H2x2_1
1821948   +          +    -0.19237607982949 * H2x2_2  +    -0.39440266749795 * H2x2_3
1821949   +          +     0.62091379272854 * H2x2_4  +    -0.71121773171613 * H2x2_5
1821950   +          +     0.57305821692201 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.10255243516649 * H2x2_1 + -0.19237607982949 * H2x2_2
+ -0.39440266749795 * H2x2_3 + 0.62091379272854 * H2x2_4 + -0.71121773171613 * H2x2_5 +
0.57305821692201 * H2x2_6 ;
1821951   +   H3x1_5  = H3x1_5  +     1.38760232745985 * H2x2_1
1821952   +          +    -0.67366859881604 * H2x2_2  +     0.73667853659073 * H2x2_3
1821953   +          +     0.48338791573814 * H2x2_4  +    -1.86204960161547 * H2x2_5
1821954   +          +     2.06401699674057 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 1.38760232745985 * H2x2_1 + -0.67366859881604 * H2x2_2
+ 0.73667853659073 * H2x2_3 + 0.48338791573814 * H2x2_4 + -1.86204960161547 * H2x2_5 +
2.06401699674057 * H2x2_6 ;
1821955   +   H3x1_6  = H3x1_6  +     1.58403061991045 * H2x2_1
1821956   +          +    -1.98415138001436 * H2x2_2  +    -2.65270828558486 * H2x2_3
1821957   +          +     0.24663962279095 * H2x2_4  +    -0.13610124747178 * H2x2_5
1821958   +          +     0.08850124295188 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.58403061991045 * H2x2_1 + -1.98415138001436 * H2x2_2
+ -2.65270828558486 * H2x2_3 + 0.24663962279095 * H2x2_4 + -0.13610124747178 * H2x2_5 +
0.08850124295188 * H2x2_6 ;
1821959   +   H3x1_1  =    -0.38359896864958 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.38359896864958 + H3x1_1 ;
1821960   +   H3x1_2  =     0.71155840570573 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.71155840570573 + H3x1_2 ;
1821961   +   H3x1_3  =     0.51799749231142 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.51799749231142 + H3x1_3 ;
1821962   +   H3x1_4  =     0.67952932286733 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.67952932286733 + H3x1_4 ;
1821963   +   H3x1_5  =    -0.81394067979603 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.81394067979603 + H3x1_5 ;
1821964   +   H3x1_6  =    -0.01596290366203 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.01596290366203 + H3x1_6 ;
1821965   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
1821966   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
1821967   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
1821968   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
1821969   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
1821970   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
1821971   +END;
MPRINT(EM_DIAGRAM):   END;
1821972   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1821973   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1821974   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1821975   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1821976   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1821977   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1821978   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
1821979   +END;
MPRINT(EM_DIAGRAM):   END;
1821980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821981   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1821982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1821983   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1821984   +   P_DepVar1  =     0.28094469007064 * H3x1_1  +     4.40543517205109 * H3x1_2
1821985   +          +     4.58780022403482 * H3x1_3  +    -1.49344393871597 * H3x1_4
1821986   +          +     3.15120047821915 * H3x1_5  +    -1.83744247169269 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28094469007064 * H3x1_1 + 4.40543517205109 * H3x1_2 +
4.58780022403482 * H3x1_3 + -1.49344393871597 * H3x1_4 + 3.15120047821915 * H3x1_5 +
-1.83744247169269 * H3x1_6 ;
1821987   +   P_DepVar1  =     -2.1680951408523 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.1680951408523 + P_DepVar1 ;
1821988   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1821989   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1821990   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1821991   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1821992   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1821993   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1821994   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1821995   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1821996   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1821997   +END;
MPRINT(EM_DIAGRAM):   END;
1821998   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1821999   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1822000   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1822001   +END;
MPRINT(EM_DIAGRAM):   END;
1822002   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1822003   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1822004   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1822005   +END;
MPRINT(EM_DIAGRAM):   END;
1822006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1822007   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1822008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1822009   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1822010   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1822011   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1822012   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1822013   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1822014   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1822015   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1822016   +END;
MPRINT(EM_DIAGRAM):   END;
1822017   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1822018   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1822019   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1822020   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822021    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822022    quit;
1822023    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822024    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822025    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822026    retain ID 2 Node "AutoNeural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural28";
1822027    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822028    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7689 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822029    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822030    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7689 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822032    proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural28_variableset out=_temp2(keep=NAME
CREATOR);
1822033    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822034    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822035    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822036    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822037    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822039    proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural28_train out=_meta(keep=NAME) noprint;
1822040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1822041    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822042    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822043    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822044    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822045    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822046    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822047    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 89 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822048    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822049    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822049  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3662 rows and 5 columns.
 
1822050    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822051    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822052    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3662 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 3662 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822053    filename _pref
1822053  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1822054    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1822055    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1822056   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1822057   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1822058   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1822059   +
1822060   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1822061   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1822062   +
1822063   +
1822064   +
1822065   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1822066   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1822067   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822068    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822069    quit;
1822070    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822071    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822072    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822073    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1822074    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822075    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822076    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822079    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1822080    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822081    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822082    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822083    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822084    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822086    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1822087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1822088    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822090    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822091    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822092    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822094    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822095    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822096    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822096  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.
 
1822097    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822098    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 3662 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822100    filename _pref
1822100  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1822101    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1822102    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1822103   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1822104   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1822105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1822106   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1822107   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1822108   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822109    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822110    quit;
1822111    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822112    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822113    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822114    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1822115    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822117    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822118    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822120    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1822121    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822123    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822124    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822125    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822127    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1822128    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1822129    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822130    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822132    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822133    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822134    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822135    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822136    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822137    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822137  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1822138    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822139    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822140    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 3666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822141    filename _pref
1822141  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1822142    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1822143    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1822144   +
1822145   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1822146   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1822146  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1822147   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1822148   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1822149   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1822150   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1822151   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822152    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822153    quit;
1822154    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822155    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822156    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822157    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1822158    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822160    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822161    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822163    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1822164    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822166    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822167    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822168    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1822170    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1822171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822172    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822173    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822174    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1822175    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822176    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822177    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822178    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822179    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822180    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822180  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1822181    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822182    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822183    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 3705 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1822184    filename _pref
1822184  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1822185    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1822186    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1822187   +
1822188   +
1822189   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1822190   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1822191   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1822192   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1822193   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1822194   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822195   +
1822196   +
1822197   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1822198   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1822199   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1822200   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1822201   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1822202   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822203   +
1822204   +
1822205   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1822206   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1822207   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1822208   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1822209   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1822210   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822211   +
1822212   +
1822213   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1822214   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1822215   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1822216   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1822217   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1822218   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822219   +
1822220   +
1822221   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1822222   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1822223   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1822224   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1822225   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1822226   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822227   +
1822228   +
1822229   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1822230   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1822231   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1822232   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1822233   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1822234   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822235   +
1822236   +
1822237   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1822238   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1822239   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1822240   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1822241   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1822242   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822243   +
1822244   +
1822245   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1822246   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1822247   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1822248   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1822249   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1822250   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822251   +if
1822252   +_FILTERNORM1 not in ( '.')
1822253   + and
1822254   +_FILTERNORM2 not in ( '.')
1822255   + and
1822256   +_FILTERNORM3 not in ( '.')
1822257   + and
1822258   +_FILTERNORM4 not in ( '.')
1822259   + and
1822260   +_FILTERNORM5 not in ( '.')
1822261   + and
1822262   +_FILTERNORM6 not in ( '.')
1822263   + and
1822264   +_FILTERNORM7 not in ( ' ')
1822265   + and
1822266   +_FILTERNORM8 not in ( ' ')
1822267   +and
1822268   +( Dt_Customer ne .)
1822269   +and ( Income ne . and (Income<=107000))
1822270   +and ( Kidhome ne .)
1822271   +and ( MntFishProducts ne .)
1822272   +and ( MntFruits ne .)
1822273   +and ( MntGoldProds ne .)
1822274   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1822275   +and ( MntSweetProducts ne .)
1822276   +and ( MntWines ne .)
1822277   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1822278   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1822279   +and ( NumStorePurchases ne .)
1822280   +and ( NumWebPurchases ne .)
1822281   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1822282   +and ( Recency ne .)
1822283   +and ( Teenhome ne .)
1822284   +and ( Year_Birth ne .)
1822285   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1822286   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1822287   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1822288   +end;
MPRINT(EM_DIAGRAM):   end;
1822289   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1822290   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822291    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822292    quit;
1822293    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822294    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822295    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822296    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1822297    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822299    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822300    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822302    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1822303    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822304    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822305    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822306    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822307    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822309    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1822310    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822311    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822312    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822313    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822314    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822315    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822316    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822317    run;
MPRINT(EM_DIAGRAM):   run;
 
The SAS System
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822318    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822319    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822319  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1822320    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822321    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 3771 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822323    %macro varDept(fcmpdata=,id=);
1822324    %global nobs&id scoreFlag&id;
1822325    %let scoreFlag&id = 0;
1822326    %if &id=1 or ^&fcmpStart %then %do;
1822327    proc sort data=&fcmpdata out=_temp&id nodupkey;
1822328    by NAME;
1822329    where id=&id and LHS in( %let j=1;
1822330    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1822331    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1822332    "&var" %let j = %eval(&j+1);
1822333    %end;
1822334    );
1822335    run;
1822336    %let dsid = %sysfunc(open(_temp&id));
1822337    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1822338    %let dsid = %sysfunc(close(&dsid));
1822339    %if &&nobs&id %then %do;
1822340    %let scoreFlag&id = 1;
1822341    %let fcmpStart = 1;
1822342    %end;
1822343    %else %let fcmpStart = 0;
1822344    %end;
1822345    %else %do;
1822346    proc sort data=&fcmpdata out=_tempid;
1822347    where id=&id;
1822348    by LHS;
1822349    run;
1822350    %let dsid = %sysfunc(open(_tempid));
1822351    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1822352    %let dsid = %sysfunc(close(&dsid));
1822353    %if ^&&nobs&id %then %do;
1822354    proc datasets lib=work nolist;
1822355    delete _tempid;
1822356    run;
1822357    quit;
1822358    %end;
1822359    %else %do;
1822360    data _tempAll;
1822361    set %let j=%eval(&id-1);
1822362    %do x=1 %to &j;
1822363    %if &&nobs&x %then %do;
1822364    _temp&x %end;
1822365    %end;
1822366    ;
1822367    run;
1822368    proc sql;
1822369    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1822369  ! work._tempid p2 where p.name=p2.lhs;
1822370    quit;
1822371    data _temp&id;
1822372    set _temp&id;
1822373    where LHS ne '' and NAME ne '' and Node ne '';
1822374    run;
1822375    proc datasets lib=work nolist;
1822376    delete _tempAll;
1822377    run;
1822378    %let dsid = %sysfunc(open(_temp&id));
1822379    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1822380    %let dsid = %sysfunc(close(&dsid));
1822381    %if ^&&nobs&id %then %do;
1822382    proc datasets lib=work nolist;
1822383    delete _temp&id;
1822384    run;
1822385    quit;
1822386    %end;
1822387    %else %do;
1822388    %let scoreFlag&id = 1;
1822389    data _temp&id;
1822390    set _temp&id;
1822391    where LHS ne NAME and node ne '';
1822392    run;
1822393    %let dsid = %sysfunc(open(_temp&id));
1822394    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1822395    %let dsid = %sysfunc(close(&dsid));
1822396    %if ^&&nobs&id %then %do;
1822397    proc datasets lib=work nolist;
1822398    delete _temp&id;
1822399    run;
1822400    quit;
1822401    %end;
1822402    %else %do;
1822403    proc sort data=_temp&id nodupkey;
1822404    by LHS NAME;
1822405    run;
1822406    %end;
1822407    %end;
1822408    %end;
1822409    %end;
1822410    %mend varDept;
1822411    %macro optCode(outdata=fcmpdata);
1822412    %global fcmpStart;
1822413    %let fcmpStart = 0;
1822414    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1822415    %let NumNodes=9;
1822416    %do k=1 %to &NumNodes;
1822417    %vardept(fcmpdata=&outdata, id=&k);
1822418    %end;
1822419    %mend optCode;
1822420    %optcode(outData=EMWS8.Ensmbl53_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 138 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 94 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 44 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 44 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 44 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 44 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 67 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1822421    filename _pref
1822421  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas";
1822422    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1822423    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural29\EMPUBLISHSCORE.sas.
1822424   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1822425   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1822426   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1822427   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1822428   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1822429   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1822430   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1822431   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1822432   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1822433   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1822434   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1822435   +LENGTH _WARN_ $4
1822436   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1822437   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1822438   +
1822439   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1822440   +
1822441   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1822442   +
1822443   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1822444   +
1822445   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1822446   +
1822447   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1822448   +
1822449   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1822450   +
1822451   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1822452   +
1822453   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1822454   +
1822455   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1822456   +
1822457   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1822458   +
1822459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1822460   +*** Checking missing input Interval
1822461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1822462   +
1822463   +IF NMISS(
1822464   +   AcceptedCmpTotal ,
1822465   +   Mnt ,
1822466   +   MntMeatProducts ,
1822467   +   NumCatalogPurchases ,
1822468   +   RFMstat ,
1822469   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases
, RFMstat , Recency ) THEN DO;
1822470   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1822471   +
1822472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1822473   +END;
MPRINT(EM_DIAGRAM):   END;
1822474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1822475   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1822476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1822477   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1822478   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1822479   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1822480   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1822481   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1822482   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1822483   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1822484   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1822485   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1822486   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1822487   +END;
MPRINT(EM_DIAGRAM):   END;
1822488   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1822489   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1822490   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1822491   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1822492   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1822493   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1822494   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1822495   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1822496   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1822497   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1822498   +   ELSE S_NumCatalogPurchases
1822499   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1822500   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1822501   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1822502   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1822503   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1822504   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1822505   +END;
MPRINT(EM_DIAGRAM):   END;
1822506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1822507   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1822508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1822509   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1822510   +   P_DepVar1  =     1.05169539250812 * S_AcceptedCmpTotal
1822511   +          +    -1.01535799807127 * S_Mnt  +     0.90249216466184 *
1822512   +        S_MntMeatProducts  +     0.55600820704456 * S_NumCatalogPurchases
1822513   +          +     0.11616609536854 * S_RFMstat  +    -1.16391829324819 *
1822514   +        S_Recency ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.05169539250812 * S_AcceptedCmpTotal + -1.01535799807127 *
S_Mnt + 0.90249216466184 * S_MntMeatProducts + 0.55600820704456 * S_NumCatalogPurchases +
0.11616609536854 * S_RFMstat + -1.16391829324819 * S_Recency ;
1822515   +   P_DepVar1  =    -2.23938090727264 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.23938090727264 + P_DepVar1 ;
1822516   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1822517   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1822518   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1822519   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1822520   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1822521   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1822522   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1822523   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1822524   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1822525   +END;
MPRINT(EM_DIAGRAM):   END;
1822526   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1822527   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1822528   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1822529   +END;
MPRINT(EM_DIAGRAM):   END;
1822530   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1822531   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1822532   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1822533   +END;
MPRINT(EM_DIAGRAM):   END;
1822534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1822535   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1822536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1822537   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1822538   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1822539   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1822540   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1822541   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1822542   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1822543   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1822544   +END;
MPRINT(EM_DIAGRAM):   END;
1822545   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1822546   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1822547   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1822548   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822549    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822550    quit;
1822551    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822552    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822553    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822554    retain ID 2 Node "AutoNeural29";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural29";
1822555    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822556    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 256 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822557    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822558    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822559    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 256 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822560    proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural29_variableset out=_temp2(keep=NAME
CREATOR);
1822561    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822562    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL29_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822563    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822564    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822565    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822566    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822567    proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural29_train out=_meta(keep=NAME) noprint;
1822568    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1822569    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822570    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822571    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822572    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822573    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822574    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822575    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822576    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822577    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822577  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 128 rows and 5 columns.
 
1822578    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822579    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 128 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 128 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822581    filename _pref
1822581  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1822582    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1822583    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1822584   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1822585   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1822586   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1822587   +
1822588   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1822589   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1822590   +
1822591   +
1822592   +
1822593   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1822594   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1822595   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822596    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822597    quit;
1822598    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822599    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822600    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822601    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1822602    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822603    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822604    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822605    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822606    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._TEMP has 0 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822607    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1822608    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822609    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1822610    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822611    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822612    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822614    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1822615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1822616    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822617    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 46 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822619    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822620    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822621    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822622    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 46 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 46 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822623    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822624    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822624  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 0 rows and 5 columns.
 
1822625    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822626    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 0 observations read from the data set WORK._TEMPX.
NOTE: 0 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 128 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822628    filename _pref
1822628  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1822629    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1822630    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1822631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1822632   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1822633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1822634   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1822635   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1822636   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822637    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822638    quit;
1822639    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822640    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822641    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822642    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1822643    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822645    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822648    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1822649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822651    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822652    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822653    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822655    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1822656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1822657    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822658    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822660    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822661    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822663    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822664    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822665    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822665  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1822666    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822667    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 132 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822669    filename _pref
1822669  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1822670    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1822671    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1822672   +
1822673   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1822674   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1822674  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1822675   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1822676   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1822677   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1822678   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1822679   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822680    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822681    quit;
1822682    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822683    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822684    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822685    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1822686    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822687    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822688    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822689    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822691    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1822692    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822693    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822694    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822695    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822696    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822697    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822698    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1822699    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822700    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822701    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822703    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822704    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822706    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822707    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822708    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822708  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1822709    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822710    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 171 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822712    filename _pref
1822712  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1822713    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1822714    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1822715   +
1822716   +
1822717   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1822718   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1822719   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1822720   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1822721   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1822722   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822723   +
1822724   +
1822725   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1822726   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1822727   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1822728   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1822729   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1822730   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822731   +
1822732   +
1822733   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1822734   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1822735   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1822736   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1822737   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1822738   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822739   +
1822740   +
1822741   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1822742   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1822743   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1822744   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1822745   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1822746   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822747   +
1822748   +
1822749   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1822750   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1822751   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1822752   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1822753   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1822754   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822755   +
1822756   +
1822757   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1822758   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1822759   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1822760   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1822761   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1822762   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822763   +
1822764   +
1822765   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1822766   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1822767   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1822768   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1822769   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1822770   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822771   +
1822772   +
1822773   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1822774   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1822775   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1822776   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1822777   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1822778   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1822779   +if
1822780   +_FILTERNORM1 not in ( '.')
1822781   + and
1822782   +_FILTERNORM2 not in ( '.')
1822783   + and
1822784   +_FILTERNORM3 not in ( '.')
1822785   + and
1822786   +_FILTERNORM4 not in ( '.')
1822787   + and
1822788   +_FILTERNORM5 not in ( '.')
1822789   + and
1822790   +_FILTERNORM6 not in ( '.')
1822791   + and
1822792   +_FILTERNORM7 not in ( ' ')
1822793   + and
1822794   +_FILTERNORM8 not in ( ' ')
1822795   +and
1822796   +( Dt_Customer ne .)
1822797   +and ( Income ne . and (Income<=107000))
1822798   +and ( Kidhome ne .)
1822799   +and ( MntFishProducts ne .)
1822800   +and ( MntFruits ne .)
1822801   +and ( MntGoldProds ne .)
1822802   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1822803   +and ( MntSweetProducts ne .)
1822804   +and ( MntWines ne .)
1822805   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1822806   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1822807   +and ( NumStorePurchases ne .)
1822808   +and ( NumWebPurchases ne .)
1822809   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1822810   +and ( Recency ne .)
1822811   +and ( Teenhome ne .)
1822812   +and ( Year_Birth ne .)
1822813   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1822814   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1822815   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1822816   +end;
MPRINT(EM_DIAGRAM):   end;
1822817   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1822818   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1822819    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1822820    quit;
1822821    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1822822    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1822823    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1822824    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1822825    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1822826    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1822827    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1822828    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822830    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1822831    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822832    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822833    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822834    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1822835    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1822836    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822837    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1822838    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822839    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1822840    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1822842    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1822843    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1822844    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1822845    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822846    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1822847    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1822847  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1822848    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822849    proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl53_FCMP data=_tempx;
1822850    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL53_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL53_FCMP has 237 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1822851    %macro varDept(fcmpdata=,id=);
1822852    %global nobs&id scoreFlag&id;
1822853    %let scoreFlag&id = 0;
1822854    %if &id=1 or ^&fcmpStart %then %do;
1822855    proc sort data=&fcmpdata out=_temp&id nodupkey;
1822856    by NAME;
1822857    where id=&id and LHS in( %let j=1;
1822858    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1822859    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1822860    "&var" %let j = %eval(&j+1);
1822861    %end;
1822862    );
1822863    run;
1822864    %let dsid = %sysfunc(open(_temp&id));
1822865    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1822866    %let dsid = %sysfunc(close(&dsid));
1822867    %if &&nobs&id %then %do;
1822868    %let scoreFlag&id = 1;
1822869    %let fcmpStart = 1;
1822870    %end;
1822871    %else %let fcmpStart = 0;
1822872    %end;
1822873    %else %do;
1822874    proc sort data=&fcmpdata out=_tempid;
1822875    where id=&id;
1822876    by LHS;
1822877    run;
1822878    %let dsid = %sysfunc(open(_tempid));
1822879    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1822880    %let dsid = %sysfunc(close(&dsid));
1822881    %if ^&&nobs&id %then %do;
1822882    proc datasets lib=work nolist;
1822883    delete _tempid;
1822884    run;
1822885    quit;
1822886    %end;
1822887    %else %do;
1822888    data _tempAll;
1822889    set %let j=%eval(&id-1);
1822890    %do x=1 %to &j;
1822891    %if &&nobs&x %then %do;
1822892    _temp&x %end;
1822893    %end;
1822894    ;
1822895    run;
1822896    proc sql;
1822897    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1822897  ! work._tempid p2 where p.name=p2.lhs;
1822898    quit;
1822899    data _temp&id;
1822900    set _temp&id;
1822901    where LHS ne '' and NAME ne '' and Node ne '';
1822902    run;
1822903    proc datasets lib=work nolist;
1822904    delete _tempAll;
1822905    run;
1822906    %let dsid = %sysfunc(open(_temp&id));
1822907    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1822908    %let dsid = %sysfunc(close(&dsid));
1822909    %if ^&&nobs&id %then %do;
1822910    proc datasets lib=work nolist;
1822911    delete _temp&id;
1822912    run;
1822913    quit;
1822914    %end;
1822915    %else %do;
1822916    %let scoreFlag&id = 1;
1822917    data _temp&id;
1822918    set _temp&id;
1822919    where LHS ne NAME and node ne '';
1822920    run;
1822921    %let dsid = %sysfunc(open(_temp&id));
1822922    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1822923    %let dsid = %sysfunc(close(&dsid));
1822924    %if ^&&nobs&id %then %do;
1822925    proc datasets lib=work nolist;
1822926    delete _temp&id;
1822927    run;
1822928    quit;
1822929    %end;
1822930    %else %do;
1822931    proc sort data=_temp&id nodupkey;
1822932    by LHS NAME;
1822933    run;
1822934    %end;
1822935    %end;
1822936    %end;
1822937    %end;
1822938    %mend varDept;
1822939    %macro optCode(outdata=fcmpdata);
1822940    %global fcmpStart;
1822941    %let fcmpStart = 0;
1822942    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1822943    %let NumNodes=9;
1822944    %do k=1 %to &NumNodes;
1822945    %vardept(fcmpdata=&outdata, id=&k);
1822946    %end;
1822947    %mend optCode;
1822948    %optcode(outData=EMWS8.Ensmbl53_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 22 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 8 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 23 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl53_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1822949    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1822950    * Ensmbl53: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Computing metadata for TRAIN data;
1822951    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL53_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl53_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl53_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl53_TRAIN out=WORK.M0C_DP_W noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0C_DP_W;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0C_DP_W(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0C_DP_W;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0C_DP_W;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M18D7INJ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M18D7INJ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M18D7INJ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1C3S2H_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M18D7INJ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M18D7INJ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M18D7INJ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M18D7INJ;
MPRINT(EMADVISECOLUMNS):   set WORK.M18D7INJ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural30_TRAIN noprint
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural30_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl53";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl53";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl53";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl53";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl53";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl53";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl53";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl53";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl53";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl53";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl53: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl53";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1823271    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1823272    set EMWS8.Ensmbl53_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_EMINFO;
1823273    where DATA='Ensmbl53' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl53' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1823274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL53_EMINFO.
      WHERE (DATA='Ensmbl53') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1823275    data EMWS8.Ensmbl53_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl53_EMINFO;
1823276    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1823277    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1823278    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL53_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1823282    run;
1823283    data EMWS8.Ensmbl53_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_EMINFO;
1823284    set EMWS8.Ensmbl53_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_EMINFO WORK.MODELTEMP_INFO;
1823285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL53_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL53_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1823286    proc sort data = EMWS8.Ensmbl53_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl53_EMINFO NOTHREADS;
1823287    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1823288    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL53_EMINFO.
NOTE: The data set EMWS8.ENSMBL53_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1823289    proc sort data = EMWS8.AutoNeural30_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural30_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
1823290    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1823291    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL30_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1823292    proc sort data = EMWS8.Ensmbl53_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl53_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1823293    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1823294    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL53_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1823295    data EMWS8.Ensmbl53_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_EMINFO;
1823296    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1823297    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1823298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL53_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1823299    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1823300    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1823301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1823302    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.ENSMBL53_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL53_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.37 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                17.37 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1FIAEVN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl53\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1FIAEVN new;
MPRINT(EM_DIAGRAM):   run;
1823326    data EMWS8.Ensmbl53_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl53_EMOUTFIT;
1823327    set EMWS8.Ensmbl53_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_EMOUTFIT;
1823328    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1823329    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1823329  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1823330    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1823331    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL53_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL53_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1823332    proc sort data=EMWS8.Ensmbl53_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl53_EMREPORTFIT nothreads;
1823333    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1823334    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL53_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL53_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1823335    %let _EMwarndup = 0;
1823336    %let _EMtargetdup =;
1823337    %let _EMASEtargetdup =;
1823338    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1823339    set EMWS8.Ensmbl53_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_EMOUTFIT;
1823340    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1823341    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1823342    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1823343    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1823344    end;
MPRINT(EM_DIAGRAM):   end;
1823345    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL53_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1823346    proc sort data=EMWS8.AutoNeural29_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural29_CMeta_TRAIN out=WORK.SUBSETINMETA;
1823347    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1823348    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set EMWS8.AUTONEURAL29_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 17 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1823349    proc sort data=EMWS8.Ensmbl53_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl53_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1823350    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1823351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.ENSMBL53_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1823352    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1823353    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1823354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1823355    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 7 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1823356    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1823357    set EMWS8.Ensmbl53_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_CMeta_TRAIN;
1823358    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1823358  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1823359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL53_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1823360    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1823361    set EMWS8.Ensmbl53_TRAIN(keep=
1823362    F_DepVar
1823363    I_DepVar
1823364    P_DepVar0
1823365    P_DepVar1
1823366    R_DepVar0
1823367    R_DepVar1
1823368    U_DepVar
1823369    _WARN_
1823370    DepVar
1823371    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1823372    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: View EMWS8.ENSMBL53_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL30_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL53_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl53_09BPUJL nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl53_09BPUJL;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl53_09BPUJL(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl53_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl53_09BPUJL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl53_09BPUJL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl53_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural29_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0030423171 OVLMAX 0.9977021255 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1827638    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1827639    set EMWS8.Ensmbl53_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_CMeta_TRAIN;
1827640    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1827640  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1827641    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL53_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1827642    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1827643    set EMWS8.Ensmbl53_VALIDATE(keep=
1827644    F_DepVar
1827645    I_DepVar
1827646    P_DepVar0
1827647    P_DepVar1
1827648    R_DepVar0
1827649    R_DepVar1
1827650    U_DepVar
1827651    _WARN_
1827652    DepVar
1827653    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1827654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.VARSEL_VALIDATE.
NOTE: View EMWS8.ENSMBL53_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL30_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL53_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl53_394UM5M nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl53_394UM5M;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl53_394UM5M(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl53_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_EMCLASSIFICATION WORK.Ensmbl53_394UM5M;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl53_394UM5M;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl53_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural29_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.003237594 OVLMAX 0.9946837631 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1831929    %let _cn = %sysfunc(getoption(CENTER));
1831930    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1831931    proc print data=EMWS8.Ensmbl53_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl53_EMREPORTFIT noobs label;
1831932    var STAT LABEL TRAIN
1831933    VALIDATE
1831934    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1831935    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1831936    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1831937    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1831938    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL53_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1539.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1831939    title10;
MPRINT(EM_DIAGRAM):   title10;
1831940    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1831941    proc sort data=EMWS8.Ensmbl53_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl53_EMCLASSIFICATION nothreads;
1831942    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1831943    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL53_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL53_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1831944    %let _cn = %sysfunc(getoption(CENTER));
1831945    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1831946    proc print data=EMWS8.Ensmbl53_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl53_EMCLASSIFICATION noobs label;
1831947    var from into pct_row pct_col count percent
1831948    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1831949    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1831950    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1831951    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1831952    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1831953    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1831954    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1831955    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1831956    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1831957    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1831958    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1831959    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL53_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1540.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1831960    title9;
MPRINT(EM_DIAGRAM):   title9;
1831961    title10;
MPRINT(EM_DIAGRAM):   title10;
1831962    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1831963    %let _cn = %sysfunc(getoption(CENTER));
1831964    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1831965    data EMWS8.Ensmbl53_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl53_EMEVENTREPORT;
1831966    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1831966  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1831967    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1831967  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1831967  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1831967  ! FALSEEVENT
1831968    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1831968  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1831968  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1831969       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1831970    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1831971    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1831972    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1831973    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1831974    set EMWS8.Ensmbl53_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl53_EMEVENTREPORT;
1831975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL53_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL53_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1831976    proc print data=EMWS8.Ensmbl53_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl53_EMEVENTREPORT noobs label;
1831977    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1831978    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1831979    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1831980    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL53_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1541.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1831981    title10;
MPRINT(EM_DIAGRAM):   title10;
1831982    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1831983    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1831984    modify Ensmbl53_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl53_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1831985    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1831986    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1831986  ! ;
MPRINT(EM_DIAGRAM):   run;
1831987    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL53_EMRANK.DATA.
1831988    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
1831989    %let _cn = %sysfunc(getoption(CENTER));
1831990    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1831991    proc print data=EMWS8.Ensmbl53_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl53_EMRANK label noobs;
1831992    var
1831993    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1831994    by
1831995    notsorted DATAROLE
1831996    notsorted TARGET
1831997    notsorted TARGETLABEL
1831998    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1831999    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1832000    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1832001    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL53_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1542.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1832002    title10;
MPRINT(EM_DIAGRAM):   title10;
1832003    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1832004    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1832005    modify Ensmbl53_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl53_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1832006    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1832006  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1832007    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1832007  ! ;
MPRINT(EM_DIAGRAM):   run;
1832008    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL53_EMSCOREDIST.DATA.
1832009    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl53_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
