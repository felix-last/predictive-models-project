*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                09.21 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.09 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                09.09 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2WGJUDP
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2WGJUDP new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.09 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.09 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
1188906    proc freq data=EMWS8.AutoNeural28_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural28_VariableSet noprint;
1188907    table ROLE*LEVEL/out=WORK.AutoNeural28META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural28META;
1188908    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL28_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL28META has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1188909    proc print data=WORK.AutoNeural28META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural28META label noobs;
1188910    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1188911    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1188911  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1188911  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1188912    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1188913    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1188914    run;
 
NOTE: There were 3 observations read from the data set WORK.AUTONEURAL28META.
NOTE: The PROCEDURE PRINT printed page 1072.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1188915    title10;
MPRINT(EM_DIAGRAM):   title10;
1188916    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Varsel_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
The SAS System
 
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural28_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural28_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural28_DepVar_DD
out=EMWS8.AutoNeural28_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
1188963    data WORK.AutoNeural28_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural28_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1188964    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1188965    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1188965  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1188965  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1188966       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1188966  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1188966  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1188967    set EMWS8.AUTONEURAL28_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL28_DEPVAR_DM( where=(_TYPE_="TARGET"));
1188968    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1188969    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1188970    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1188971    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1188972    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1188973    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1188974    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1188975    end;
MPRINT(EM_DIAGRAM):   end;
1188976    output;
MPRINT(EM_DIAGRAM):   output;
1188977    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL28_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1188978    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1188979    proc print data=WORK.AutoNeural28_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural28_EVENT noobs label;
1188980    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1188981    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1188982    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1188983    run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL28_EVENT.
NOTE: The PROCEDURE PRINT printed page 1073.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1188984    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1188985    proc print data = EMWS8.AutoNeural28_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural28_DepVar_DM noobs label;
1188986    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1188987    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1188988    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1188988  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1188988  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1188989    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1188990    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1188991    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL28_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1074.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1188992    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M16VE8D2;
MPRINT(EM_DIAGRAM):   set WORK.M16VE8D2;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
1189001    data WORK.M16VE8D2;
MPRINT(EM_DIAGRAM):    data WORK.M16VE8D2;
1189002    set WORK.M16VE8D2 end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M16VE8D2 end=eof;
1189003    output;
MPRINT(EM_DIAGRAM):   output;
1189004    if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
1189005    NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
1189006    ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
1189007    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
1189008    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
1189009    output;
MPRINT(EM_DIAGRAM):   output;
1189010    end;
MPRINT(EM_DIAGRAM):   end;
1189011    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M16VE8D2.
NOTE: The data set WORK.M16VE8D2 has 14 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL28_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
1189012    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1189013    * AutoNeural28: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Create decision matrix;
1189014    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189015    data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
1189016      length   DepVar                           $  32
1189017               COUNT                                8
1189018               DATAPRIOR                            8
1189019               TRAINPRIOR                           8
1189020               DECPRIOR                             8
1189021               DECISION1                            8
1189022               DECISION2                            8
1189023               ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
1189024
1189025      label    COUNT="Level Counts"
1189026               DATAPRIOR="Data Proportions"
1189027               TRAINPRIOR="Training Proportions"
1189028               DECPRIOR="Decision Priors"
1189029               DECISION1="1"
1189030               DECISION2="0"
1189031               ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
1189032      format   COUNT 10.
1189033               ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
1189034    DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
1189034  ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
1189035    output;
MPRINT(EM_DIAGRAM):   output;
1189036    DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
1189036  ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
1189037    output;
MPRINT(EM_DIAGRAM):   output;
1189038    ;
MPRINT(EM_DIAGRAM):   ;
1189039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189040    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1189041    modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
1189042    label DECISION1= '1';
1189043    label DECISION2= '0';
1189044    run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
1189045    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1189046    data EM_AutoNeural28;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural28;
1189047    set EMWS8.Varsel_TRAIN(keep=
1189048    AcceptedCmpTotal DepVar Frq G_Marital_Status Income Mnt MntGoldProds
1189049    MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency );
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN(keep= AcceptedCmpTotal DepVar Frq
G_Marital_Status Income Mnt MntGoldProds MntMeatProducts MntWines NumDistPurchases RFMstat
RMntFrq Recency );
1189050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural28: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189051    *------------------------------------------------------------* ;
1189052    * AutoNeural28: DMDBClass Macro ;
1189053    *------------------------------------------------------------* ;
1189054    %macro DMDBClass;
1189055        DepVar(DESC) G_Marital_Status(ASC)
1189056    %mend DMDBClass;
1189057    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189058    * AutoNeural28: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural28: DMDBVar Macro ;
1189059    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189060    %macro DMDBVar;
1189061        AcceptedCmpTotal Frq Income Mnt MntGoldProds MntMeatProducts MntWines
1189062       NumDistPurchases RFMstat RMntFrq Recency
1189063    %mend DMDBVar;
1189064    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189065    * AutoNeural28: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Create DMDB;
1189066    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189067    proc dmdb batch data=WORK.EM_AutoNeural28
1189068    dmdbcat=WORK.AutoNeural28_DMDB
1189069    maxlevel = 513
1189070    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1189071    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) G_Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1189072    var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Income Mnt MntGoldProds MntMeatProducts MntWines
NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):  ;
1189073    target
1189074    DepVar
1189075    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1189076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL28.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1189077    quit;
1189078    *--- end code ---*;
 
1189079    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1189080    * AutoNeural28: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Interval Inputs Macro ;
1189081    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189082    %macro INTINPUTS;
1189083        AcceptedCmpTotal Frq Income Mnt MntGoldProds MntMeatProducts MntWines
1189084       NumDistPurchases RFMstat RMntFrq Recency
1189085    %mend INTINPUTS;
1189086    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189087    * AutoNeural28: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Binary Inputs Macro ;
1189088    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189089    %macro BININPUTS;
1189090
1189091    %mend BININPUTS;
1189092    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189093    * AutoNeural28: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Nominal Inputs Macro ;
1189094    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189095    %macro NOMINPUTS;
1189096        G_Marital_Status
1189097    %mend NOMINPUTS;
1189098    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189099    * AutoNeural28: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Ordinal Inputs Macro ;
1189100    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1189101    %macro ORDINPUTS;
1189102
1189103    %mend ORDINPUTS;
1189104    * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
1189105    ;
MPRINT(EM_DIAGRAM):   ;
1189106    options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
1189107    options pagesize = 6000;
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
1189108    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1189109    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1189110    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
1189111    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189112    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
1189112  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
1189113    *;
 
1189114    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189115    * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
1189116    ;
MPRINT(EM_DIAGRAM):   ;
1189117    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189118    *;
MPRINT(EM_DIAGRAM):   *;
 
1189119    *;
MPRINT(EM_DIAGRAM):    *;
1189120    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1189121    validdata=EMWS8.Varsel_VALIDATE
1189122    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1189123    *;
MPRINT(EM_DIAGRAM):   *;
1189124    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1189125    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1189126    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1189127    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1189128    target DepVar / level=NOMINAL id=DepVar
1189129    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1189130    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189131    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1189132    ;
MPRINT(EM_DIAGRAM):   ;
1189133    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189134    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1189135    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1189136    *;
MPRINT(EM_DIAGRAM):   *;
1189137    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1189138    *;
MPRINT(EM_DIAGRAM):   *;
1189139    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189140    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1189140  ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 26 observations and 29 variables.
NOTE: The data set WORK._ANFIT has 22 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1189141    train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1189142    tech = Default;
1189143    ;
1189144    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.30 seconds
      cpu time            0.29 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.30 seconds
      cpu time            0.31 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189145    *;
1189146    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1189147    var _iter_ _aic_ _averr_ _misc_
1189148    _vaverr_ _vmisc_
1189149    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1075.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189151    *------------------------------------------------------------*;
1189152    * Extract best iteration;
1189153    ;
1189154    *------------------------------------------------------------*;
1189155    %global _iter;
1189156    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1189157    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1189158    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1189159    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1189160    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1189161    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1189162    end;
MPRINT(EM_DIAGRAM):   end;
1189163    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189164    *;
 
1189165    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1189166    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1189167    if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
1189168    output;
MPRINT(EM_DIAGRAM):   output;
1189169    stop;
MPRINT(EM_DIAGRAM):   stop;
1189170    end;
MPRINT(EM_DIAGRAM):   end;
1189171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189172    *;
1189173    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189174    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1189175    if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
1189176    output;
MPRINT(EM_DIAGRAM):   output;
1189177    stop;
MPRINT(EM_DIAGRAM):   stop;
1189178    end;
MPRINT(EM_DIAGRAM):   end;
1189179    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189180    *;
MPRINT(EM_DIAGRAM):    *;
1189181    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189182    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1189182  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1189183    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1189184    var _iter_ _aic_ _averr_ _misc_
1189185    _vaverr_ _vmisc_
1189186    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189187    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1076.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189188    title9;
MPRINT(EM_DIAGRAM):   title9;
1189189    title10;
MPRINT(EM_DIAGRAM):   title10;
1189190    %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
1189191    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189192    length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
1189193    label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
1189193  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
1189194    label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
1189194  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
1189195    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
1189195  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
1189196    label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
1189196  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
1189197    _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
1189198    _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
1189199    _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
1189200    set
1189201    _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
1189202    ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
1189203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189204    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189205    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189206    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189208    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189209    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189210    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189212    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1189213    ;
MPRINT(EM_DIAGRAM):   ;
1189214    data WORK.SAVEDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1DLGQCI;
1189215    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1189216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1DLGQCI has 1 observations and 29
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189217    data EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_BESTDS;
1189218    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1189219    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_BESTDS has 1 observations and 29
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189220    data WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1DLGQCI;
1189221    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1DLGQCI has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189223    * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
1189224    ;
MPRINT(EM_DIAGRAM):   ;
1189225    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189226    set EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY;
1189227    _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
1189228    _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
1189229    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189230    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1189231    ;
MPRINT(EM_DIAGRAM):   ;
1189232    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189233    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189234    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1189235    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1189236    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1189237    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1189238    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1189239    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189240    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189241    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1189242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189243    *;
MPRINT(EM_DIAGRAM):    *;
1189244    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1189245    validdata=EMWS8.Varsel_VALIDATE
1189246    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1189247    *;
MPRINT(EM_DIAGRAM):   *;
1189248    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1189249    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1189250    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1189251    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1189252    target DepVar / level=NOMINAL id=DepVar
1189253    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1189254    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189255    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1189256    ;
MPRINT(EM_DIAGRAM):   ;
1189257    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189258    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1189259    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1189260    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1189261    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1189262    *;
MPRINT(EM_DIAGRAM):   *;
1189263    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1189264    *;
MPRINT(EM_DIAGRAM):   *;
1189265    initial
1189266    ;
MPRINT(EM_DIAGRAM):   initial ;
1189267    *;
MPRINT(EM_DIAGRAM):   *;
1189268    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189269    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1189269  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 106 variables.
MPRINT(EM_DIAGRAM):   *;
1189270    prelim 24 outest=_anpre pretime=37 preiter=25
1189271    tech = Default
1189272    ;
1189273    *;
1189274    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189275    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1189275  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 144 observations and 106 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1189276    train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1189277    tech = Default;
1189278    ;
1189279    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           34.59 seconds
      cpu time            34.08 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1077.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           34.59 seconds
      cpu time            34.08 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189280    *;
1189281    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1189282    var _iter_ _aic_ _averr_ _misc_
1189283    _vaverr_ _vmisc_
1189284    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1078.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189286    *------------------------------------------------------------*;
1189287    * Extract best iteration;
1189288    ;
1189289    *------------------------------------------------------------*;
1189290    %global _iter;
1189291    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1189292    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1189293    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1189294    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1189295    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1189296    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1189297    end;
MPRINT(EM_DIAGRAM):   end;
1189298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189299    *;
 
1189300    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1189301    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1189302    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1189303    output;
MPRINT(EM_DIAGRAM):   output;
1189304    stop;
MPRINT(EM_DIAGRAM):   stop;
1189305    end;
MPRINT(EM_DIAGRAM):   end;
1189306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 106
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189307    *;
1189308    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189309    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1189310    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1189311    output;
MPRINT(EM_DIAGRAM):   output;
1189312    stop;
MPRINT(EM_DIAGRAM):   stop;
1189313    end;
MPRINT(EM_DIAGRAM):   end;
1189314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189315    *;
MPRINT(EM_DIAGRAM):    *;
1189316    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189317    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1189317  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1189318    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1189319    var _iter_ _aic_ _averr_ _misc_
1189320    _vaverr_ _vmisc_
1189321    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1079.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189323    title9;
MPRINT(EM_DIAGRAM):   title9;
1189324    title10;
MPRINT(EM_DIAGRAM):   title10;
1189325    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189326    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189327    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189329    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189330    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189331    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189332    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189333    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1189334    ;
MPRINT(EM_DIAGRAM):   ;
1189335    data WORK.SAVEDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1DLGQCI;
1189336    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1189337    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1DLGQCI has 1 observations and 106
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189338    data EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_BESTDS;
1189339    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1189340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_BESTDS has 1 observations and 106
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189341    data WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1DLGQCI;
1189342    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189343    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1DLGQCI has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189344    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1189345    ;
MPRINT(EM_DIAGRAM):   ;
1189346    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189347    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189348    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1189349    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1189350    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1189351    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1189352    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1189353    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189354    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189355    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1189356    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189357    *;
MPRINT(EM_DIAGRAM):    *;
1189358    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1189359    validdata=EMWS8.Varsel_VALIDATE
1189360    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1189361    *;
MPRINT(EM_DIAGRAM):   *;
1189362    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1189363    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1189364    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1189365    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1189366    target DepVar / level=NOMINAL id=DepVar
1189367    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1189368    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189369    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1189370    ;
MPRINT(EM_DIAGRAM):   ;
1189371    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189372    Hidden 6 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SINE;
1189373    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1189374    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1189375    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1189376    *;
MPRINT(EM_DIAGRAM):   *;
1189377    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1189378    *;
MPRINT(EM_DIAGRAM):   *;
1189379    initial
1189380    ;
MPRINT(EM_DIAGRAM):   initial ;
1189381    *;
MPRINT(EM_DIAGRAM):   *;
1189382    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189383    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1189383  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 106 variables.
MPRINT(EM_DIAGRAM):   *;
1189384    prelim 24 outest=_anpre pretime=37 preiter=25
1189385    tech = Default
1189386    ;
1189387    *;
1189388    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189389    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1189389  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=891
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 144 observations and 106 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1189390    train estiter=1 outest=_anest outfit=_anfit maxtime=891 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1189391    tech = Default;
1189392    ;
1189393    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           33.86 seconds
      cpu time            33.60 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1080.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           33.86 seconds
      cpu time            33.60 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189394    *;
1189395    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1189396    var _iter_ _aic_ _averr_ _misc_
1189397    _vaverr_ _vmisc_
1189398    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1081.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189400    *------------------------------------------------------------*;
1189401    * Extract best iteration;
1189402    ;
1189403    *------------------------------------------------------------*;
1189404    %global _iter;
1189405    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1189406    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1189407    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1189408    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1189409    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1189410    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1189411    end;
MPRINT(EM_DIAGRAM):   end;
1189412    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189413    *;
 
1189414    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1189415    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1189416    if _ITER_ eq 46 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 46 then do;
1189417    output;
MPRINT(EM_DIAGRAM):   output;
1189418    stop;
MPRINT(EM_DIAGRAM):   stop;
1189419    end;
MPRINT(EM_DIAGRAM):   end;
1189420    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 106
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189421    *;
1189422    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189423    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1189424    if _ITER_ eq 46 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 46 and _NAME_ eq "OVERALL" then do;
1189425    output;
MPRINT(EM_DIAGRAM):   output;
1189426    stop;
MPRINT(EM_DIAGRAM):   stop;
1189427    end;
MPRINT(EM_DIAGRAM):   end;
1189428    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 94 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189429    *;
MPRINT(EM_DIAGRAM):    *;
1189430    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189431    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1189431  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1189432    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1189433    var _iter_ _aic_ _averr_ _misc_
1189434    _vaverr_ _vmisc_
1189435    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189436    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1082.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189437    title9;
MPRINT(EM_DIAGRAM):   title9;
1189438    title10;
MPRINT(EM_DIAGRAM):   title10;
1189439    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189440    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189441    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189442    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189443    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189444    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189445    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189446    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189447    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1189448    ;
MPRINT(EM_DIAGRAM):   ;
1189449    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189450    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189451    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1189452    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1189453    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1189454    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1189455    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1189456    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189457    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189458    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1189459    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189460    *;
MPRINT(EM_DIAGRAM):    *;
1189461    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1189462    validdata=EMWS8.Varsel_VALIDATE
1189463    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1189464    *;
MPRINT(EM_DIAGRAM):   *;
1189465    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1189466    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1189467    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1189468    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1189469    target DepVar / level=NOMINAL id=DepVar
1189470    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1189471    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189472    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1189473    ;
MPRINT(EM_DIAGRAM):   ;
1189474    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189475    Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
1189476    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1189477    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1189478    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1189479    *;
MPRINT(EM_DIAGRAM):   *;
1189480    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1189481    *;
MPRINT(EM_DIAGRAM):   *;
1189482    initial
1189483    ;
MPRINT(EM_DIAGRAM):   initial ;
1189484    *;
MPRINT(EM_DIAGRAM):   *;
1189485    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189486    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1189486  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=36 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 92 variables.
MPRINT(EM_DIAGRAM):   *;
1189487    prelim 24 outest=_anpre pretime=36 preiter=25
1189488    tech = Default
1189489    ;
1189490    *;
1189491    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189492    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1189492  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=882
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 130 observations and 92 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1189493    train estiter=1 outest=_anest outfit=_anfit maxtime=882 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1189494    tech = Default;
1189495    ;
1189496    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           26.89 seconds
      cpu time            26.64 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1083.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           26.89 seconds
      cpu time            26.64 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189497    *;
1189498    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1189499    var _iter_ _aic_ _averr_ _misc_
1189500    _vaverr_ _vmisc_
1189501    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189502    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1084.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189503    *------------------------------------------------------------*;
1189504    * Extract best iteration;
1189505    ;
1189506    *------------------------------------------------------------*;
1189507    %global _iter;
1189508    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1189509    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1189510    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1189511    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1189512    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1189513    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1189514    end;
MPRINT(EM_DIAGRAM):   end;
1189515    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189516    *;
 
1189517    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1189518    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1189519    if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
1189520    output;
MPRINT(EM_DIAGRAM):   output;
1189521    stop;
MPRINT(EM_DIAGRAM):   stop;
1189522    end;
MPRINT(EM_DIAGRAM):   end;
1189523    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 92 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189524    *;
1189525    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189526    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1189527    if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
1189528    output;
MPRINT(EM_DIAGRAM):   output;
1189529    stop;
MPRINT(EM_DIAGRAM):   stop;
1189530    end;
MPRINT(EM_DIAGRAM):   end;
1189531    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189532    *;
MPRINT(EM_DIAGRAM):    *;
1189533    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189534    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1189534  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1189535    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1189536    var _iter_ _aic_ _averr_ _misc_
1189537    _vaverr_ _vmisc_
1189538    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1085.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189540    title9;
MPRINT(EM_DIAGRAM):   title9;
1189541    title10;
MPRINT(EM_DIAGRAM):   title10;
1189542    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189543    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189544    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189546    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189547    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189548    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189550    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1189551    ;
MPRINT(EM_DIAGRAM):   ;
1189552    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189553    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189554    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1189555    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1189556    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1189557    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1189558    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1189559    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189560    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189561    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1189562    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189563    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1189564    ;
MPRINT(EM_DIAGRAM):   ;
1189565    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1189566    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1189567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 106
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189568    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189569    set WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1DLGQCI;
1189570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1DLGQCI.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189571    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1189572    ;
MPRINT(EM_DIAGRAM):   ;
1189573    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189574    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189575    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1189576    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1189577    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1189578    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1189579    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1189580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189581    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189582    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1189583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189584    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189585    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189586    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189587    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189588    *;
MPRINT(EM_DIAGRAM):    *;
1189589    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1189590    validdata=EMWS8.Varsel_VALIDATE
1189591    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1189592    *;
MPRINT(EM_DIAGRAM):   *;
1189593    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1189594    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1189595    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1189596    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1189597    target DepVar / level=NOMINAL id=DepVar
1189598    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1189599    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189600    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1189601    ;
MPRINT(EM_DIAGRAM):   ;
1189602    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189603    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1189604    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1189605    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189606    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1189607    ;
MPRINT(EM_DIAGRAM):   ;
1189608    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189609    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1189610    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1189611    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1189612    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1189613    *;
MPRINT(EM_DIAGRAM):   *;
1189614    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1189615    *;
MPRINT(EM_DIAGRAM):   *;
1189616    initial
1189617    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 106
      variables.
1189618    ;
MPRINT(EM_DIAGRAM):   ;
1189619    *;
MPRINT(EM_DIAGRAM):   *;
1189620    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189621    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1189621  ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
1189622    prelim 24 outest=_anpre pretime=36 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=36 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 119 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 106
      variables.
MPRINT(EM_DIAGRAM):   *;
1189623    tech = Default
1189624    inest = EMWS8.AutoNeural28_ESTDS bylabel
1189625    ;
1189626    *;
1189627    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189628    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1189628  ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=876
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 119 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1189629    train estiter=1 outest=_anest outfit=_anfit maxtime=876 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1189630    tech = Default;
1189631    ;
1189632    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.92 seconds
      cpu time            0.88 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1086.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.93 seconds
      cpu time            0.88 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189633    *;
1189634    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1189635    var _iter_ _aic_ _averr_ _misc_
1189636    _vaverr_ _vmisc_
1189637    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189638    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1087.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189639    *------------------------------------------------------------*;
1189640    * Extract best iteration;
1189641    ;
1189642    *------------------------------------------------------------*;
1189643    %global _iter;
1189644    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1189645    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1189646    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1189647    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1189648    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1189649    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1189650    end;
MPRINT(EM_DIAGRAM):   end;
1189651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189652    *;
 
1189653    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1189654    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1189655    if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
1189656    output;
MPRINT(EM_DIAGRAM):   output;
1189657    stop;
MPRINT(EM_DIAGRAM):   stop;
1189658    end;
MPRINT(EM_DIAGRAM):   end;
1189659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189660    *;
1189661    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189662    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1189663    if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
1189664    output;
MPRINT(EM_DIAGRAM):   output;
1189665    stop;
MPRINT(EM_DIAGRAM):   stop;
1189666    end;
MPRINT(EM_DIAGRAM):   end;
1189667    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189668    *;
MPRINT(EM_DIAGRAM):    *;
1189669    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189670    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1189670  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1189671    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1189672    var _iter_ _aic_ _averr_ _misc_
1189673    _vaverr_ _vmisc_
1189674    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1088.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189676    title9;
MPRINT(EM_DIAGRAM):   title9;
1189677    title10;
MPRINT(EM_DIAGRAM):   title10;
1189678    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189679    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189680    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189681    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189682    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189683    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189684    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189685    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189686    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1189687    ;
MPRINT(EM_DIAGRAM):   ;
1189688    data WORK.SAVEDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1DLGQCI;
1189689    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1189690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1DLGQCI has 1 observations and 119
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189691    data EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_BESTDS;
1189692    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1189693    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_BESTDS has 1 observations and 119
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189694    data WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1DLGQCI;
1189695    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1DLGQCI has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189697    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1189698    ;
MPRINT(EM_DIAGRAM):   ;
1189699    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189700    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189701    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1189702    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1189703    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1189704    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1189705    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1189706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189707    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189708    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1189709    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189710    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1189711    ;
MPRINT(EM_DIAGRAM):   ;
1189712    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1189713    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1189714    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189715    *;
MPRINT(EM_DIAGRAM):    *;
1189716    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1189717    validdata=EMWS8.Varsel_VALIDATE
1189718    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1189719    *;
MPRINT(EM_DIAGRAM):   *;
1189720    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1189721    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1189722    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1189723    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1189724    target DepVar / level=NOMINAL id=DepVar
1189725    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1189726    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189727    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1189728    ;
MPRINT(EM_DIAGRAM):   ;
1189729    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189730    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1189731    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1189732    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1189733    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1189734    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1189735    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1189736    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189737    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1189738    ;
MPRINT(EM_DIAGRAM):   ;
1189739    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189740    Hidden 6 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=LOG;
1189741    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1189742    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1189743    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1189744    *;
MPRINT(EM_DIAGRAM):   *;
1189745    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1189746    *;
MPRINT(EM_DIAGRAM):   *;
1189747    initial
1189748    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
1189749    ;
MPRINT(EM_DIAGRAM):   ;
1189750    *;
MPRINT(EM_DIAGRAM):   *;
1189751    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189752    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1189752  ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
1189753    prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 268 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
MPRINT(EM_DIAGRAM):   *;
1189754    tech = Default
1189755    inest = EMWS8.AutoNeural28_ESTDS bylabel
1189756    ;
1189757    *;
1189758    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189759    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1189759  ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=875
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 268 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1189760    train estiter=1 outest=_anest outfit=_anfit maxtime=875 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1189761    tech = Default;
1189762    ;
1189763    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           13.92 seconds
      cpu time            13.80 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1089.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           13.93 seconds
      cpu time            13.82 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189764    *;
1189765    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1189766    var _iter_ _aic_ _averr_ _misc_
1189767    _vaverr_ _vmisc_
1189768    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189769    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1090.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189770    *------------------------------------------------------------*;
1189771    * Extract best iteration;
1189772    ;
1189773    *------------------------------------------------------------*;
1189774    %global _iter;
1189775    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1189776    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1189777    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1189778    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1189779    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1189780    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1189781    end;
MPRINT(EM_DIAGRAM):   end;
1189782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189783    *;
 
1189784    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1189785    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1189786    if _ITER_ eq 12 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 then do;
1189787    output;
MPRINT(EM_DIAGRAM):   output;
1189788    stop;
MPRINT(EM_DIAGRAM):   stop;
1189789    end;
MPRINT(EM_DIAGRAM):   end;
1189790    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 268
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189791    *;
1189792    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189793    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1189794    if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
1189795    output;
MPRINT(EM_DIAGRAM):   output;
1189796    stop;
MPRINT(EM_DIAGRAM):   stop;
1189797    end;
MPRINT(EM_DIAGRAM):   end;
1189798    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189799    *;
MPRINT(EM_DIAGRAM):    *;
1189800    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189801    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1189801  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1189802    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1189803    var _iter_ _aic_ _averr_ _misc_
1189804    _vaverr_ _vmisc_
1189805    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189806    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1091.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189807    title9;
MPRINT(EM_DIAGRAM):   title9;
1189808    title10;
MPRINT(EM_DIAGRAM):   title10;
1189809    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189810    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189811    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189812    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189813    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189814    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189815    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189817    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1189818    ;
MPRINT(EM_DIAGRAM):   ;
1189819    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189820    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189821    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1189822    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1189823    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1189824    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1189825    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1189826    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189827    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189828    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1189829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189830    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1189831    ;
MPRINT(EM_DIAGRAM):   ;
1189832    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1189833    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1189834    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189835    *;
MPRINT(EM_DIAGRAM):    *;
1189836    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1189837    validdata=EMWS8.Varsel_VALIDATE
1189838    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1189839    *;
MPRINT(EM_DIAGRAM):   *;
1189840    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1189841    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1189842    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1189843    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1189844    target DepVar / level=NOMINAL id=DepVar
1189845    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1189846    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189847    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1189848    ;
MPRINT(EM_DIAGRAM):   ;
1189849    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189850    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1189851    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1189852    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1189853    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1189854    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1189855    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1189856    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189857    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1189858    ;
MPRINT(EM_DIAGRAM):   ;
1189859    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189860    Hidden 6 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SINE;
1189861    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1189862    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1189863    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1189864    *;
MPRINT(EM_DIAGRAM):   *;
1189865    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1189866    *;
MPRINT(EM_DIAGRAM):   *;
1189867    initial
1189868    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
1189869    ;
MPRINT(EM_DIAGRAM):   ;
1189870    *;
MPRINT(EM_DIAGRAM):   *;
1189871    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189872    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1189872  ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
1189873    prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 268 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
MPRINT(EM_DIAGRAM):   *;
1189874    tech = Default
1189875    inest = EMWS8.AutoNeural28_ESTDS bylabel
1189876    ;
1189877    *;
1189878    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189879    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1189879  ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=872
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 268 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1189880    train estiter=1 outest=_anest outfit=_anfit maxtime=872 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1189881    tech = Default;
1189882    ;
1189883    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           12.98 seconds
      cpu time            12.83 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1092.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           12.99 seconds
      cpu time            12.85 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189884    *;
1189885    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1189886    var _iter_ _aic_ _averr_ _misc_
1189887    _vaverr_ _vmisc_
1189888    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189889    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1093.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189890    *------------------------------------------------------------*;
1189891    * Extract best iteration;
1189892    ;
1189893    *------------------------------------------------------------*;
1189894    %global _iter;
1189895    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1189896    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1189897    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1189898    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1189899    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1189900    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1189901    end;
MPRINT(EM_DIAGRAM):   end;
1189902    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189903    *;
 
1189904    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1189905    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1189906    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1189907    output;
MPRINT(EM_DIAGRAM):   output;
1189908    stop;
MPRINT(EM_DIAGRAM):   stop;
1189909    end;
MPRINT(EM_DIAGRAM):   end;
1189910    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 268
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1189911    *;
1189912    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189913    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1189914    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1189915    output;
MPRINT(EM_DIAGRAM):   output;
1189916    stop;
MPRINT(EM_DIAGRAM):   stop;
1189917    end;
MPRINT(EM_DIAGRAM):   end;
1189918    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189919    *;
MPRINT(EM_DIAGRAM):    *;
1189920    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189921    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1189921  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1189922    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1189923    var _iter_ _aic_ _averr_ _misc_
1189924    _vaverr_ _vmisc_
1189925    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1189926    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1094.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189927    title9;
MPRINT(EM_DIAGRAM):   title9;
1189928    title10;
MPRINT(EM_DIAGRAM):   title10;
1189929    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189930    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189931    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189932    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189933    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1189934    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189935    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1189936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189937    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1189938    ;
MPRINT(EM_DIAGRAM):   ;
1189939    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1189940    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1189941    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1189942    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1189943    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1189944    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1189945    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1189946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189947    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1189948    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1189949    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1189950    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1189951    ;
MPRINT(EM_DIAGRAM):   ;
1189952    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1189953    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1189954    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1189955    *;
MPRINT(EM_DIAGRAM):    *;
1189956    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1189957    validdata=EMWS8.Varsel_VALIDATE
1189958    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1189959    *;
MPRINT(EM_DIAGRAM):   *;
1189960    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1189961    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1189962    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1189963    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1189964    target DepVar / level=NOMINAL id=DepVar
1189965    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1189966    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189967    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1189968    ;
MPRINT(EM_DIAGRAM):   ;
1189969    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189970    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1189971    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1189972    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1189973    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1189974    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1189975    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1189976    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189977    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1189978    ;
MPRINT(EM_DIAGRAM):   ;
1189979    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1189980    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1189981    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1189982    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1189983    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1189984    *;
MPRINT(EM_DIAGRAM):   *;
1189985    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1189986    *;
MPRINT(EM_DIAGRAM):   *;
1189987    initial
1189988    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
1189989    ;
MPRINT(EM_DIAGRAM):   ;
1189990    *;
MPRINT(EM_DIAGRAM):   *;
1189991    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189992    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1189992  ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
1189993    prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 255 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 119
      variables.
MPRINT(EM_DIAGRAM):   *;
1189994    tech = Default
1189995    inest = EMWS8.AutoNeural28_ESTDS bylabel
1189996    ;
1189997    *;
1189998    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1189999    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1189999  ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=869
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 255 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1190000    train estiter=1 outest=_anest outfit=_anfit maxtime=869 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1190001    tech = Default;
1190002    ;
1190003    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           13.99 seconds
      cpu time            13.93 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1095.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           14.00 seconds
      cpu time            13.93 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190004    *;
1190005    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1190006    var _iter_ _aic_ _averr_ _misc_
1190007    _vaverr_ _vmisc_
1190008    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1096.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190010    *------------------------------------------------------------*;
1190011    * Extract best iteration;
1190012    ;
1190013    *------------------------------------------------------------*;
1190014    %global _iter;
1190015    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1190016    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1190017    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1190018    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1190019    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1190020    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1190021    end;
MPRINT(EM_DIAGRAM):   end;
1190022    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190023    *;
 
1190024    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1190025    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1190026    if _ITER_ eq 41 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 41 then do;
1190027    output;
MPRINT(EM_DIAGRAM):   output;
1190028    stop;
MPRINT(EM_DIAGRAM):   stop;
1190029    end;
MPRINT(EM_DIAGRAM):   end;
1190030    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190031    *;
1190032    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190033    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1190034    if _ITER_ eq 41 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 41 and _NAME_ eq "OVERALL" then do;
1190035    output;
MPRINT(EM_DIAGRAM):   output;
1190036    stop;
MPRINT(EM_DIAGRAM):   stop;
1190037    end;
MPRINT(EM_DIAGRAM):   end;
1190038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 84 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190039    *;
MPRINT(EM_DIAGRAM):    *;
1190040    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190041    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1190041  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1190042    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1190043    var _iter_ _aic_ _averr_ _misc_
1190044    _vaverr_ _vmisc_
1190045    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190046    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1097.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190047    title9;
MPRINT(EM_DIAGRAM):   title9;
1190048    title10;
MPRINT(EM_DIAGRAM):   title10;
1190049    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190050    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190051    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190052    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190053    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190054    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190055    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190057    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1190058    ;
MPRINT(EM_DIAGRAM):   ;
1190059    data WORK.SAVEDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1DLGQCI;
1190060    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1190061    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1DLGQCI has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190062    data EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_BESTDS;
1190063    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1190064    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_BESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190065    data WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1DLGQCI;
1190066    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1DLGQCI has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190068    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1190069    ;
MPRINT(EM_DIAGRAM):   ;
1190070    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190071    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190072    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1190073    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1190074    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1190075    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1190076    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1190077    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190078    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1190079    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1190080    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190081    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1190082    ;
MPRINT(EM_DIAGRAM):   ;
1190083    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1190084    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1190085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190086    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190087    set WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1DLGQCI;
1190088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1DLGQCI.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190089    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1190090    ;
MPRINT(EM_DIAGRAM):   ;
1190091    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190092    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190093    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1190094    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1190095    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1190096    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1190097    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1190098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190099    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1190100    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1190101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190102    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190103    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190104    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190105    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190106    *;
MPRINT(EM_DIAGRAM):    *;
1190107    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1190108    validdata=EMWS8.Varsel_VALIDATE
1190109    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1190110    *;
MPRINT(EM_DIAGRAM):   *;
1190111    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1190112    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1190113    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1190114    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1190115    target DepVar / level=NOMINAL id=DepVar
1190116    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1190117    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190118    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1190119    ;
MPRINT(EM_DIAGRAM):   ;
1190120    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190121    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1190122    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1190123    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190124    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1190125    ;
MPRINT(EM_DIAGRAM):   ;
1190126    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190127    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1190128    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1190129    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1190130    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1190131    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1190132    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1190133    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190134    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1190135    ;
MPRINT(EM_DIAGRAM):   ;
1190136    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190137    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1190138    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1190139    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1190140    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1190141    *;
MPRINT(EM_DIAGRAM):   *;
1190142    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1190143    *;
MPRINT(EM_DIAGRAM):   *;
1190144    initial
1190145    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
1190146    ;
MPRINT(EM_DIAGRAM):   ;
1190147    *;
MPRINT(EM_DIAGRAM):   *;
1190148    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190149    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1190149  ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
1190150    prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 268 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
MPRINT(EM_DIAGRAM):   *;
1190151    tech = Default
1190152    inest = EMWS8.AutoNeural28_ESTDS bylabel
1190153    ;
1190154    *;
1190155    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190156    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1190156  ! Search # 3 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=865
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 268 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1190157    train estiter=1 outest=_anest outfit=_anfit maxtime=865 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1190158    tech = Default;
1190159    ;
1190160    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           1.38 seconds
      cpu time            1.38 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1098.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.39 seconds
      cpu time            1.42 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190161    *;
1190162    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1190163    var _iter_ _aic_ _averr_ _misc_
1190164    _vaverr_ _vmisc_
1190165    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1099.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190167    *------------------------------------------------------------*;
1190168    * Extract best iteration;
1190169    ;
1190170    *------------------------------------------------------------*;
1190171    %global _iter;
1190172    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1190173    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1190174    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1190175    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1190176    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1190177    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1190178    end;
MPRINT(EM_DIAGRAM):   end;
1190179    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190180    *;
 
1190181    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1190182    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1190183    if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
1190184    output;
MPRINT(EM_DIAGRAM):   output;
1190185    stop;
MPRINT(EM_DIAGRAM):   stop;
1190186    end;
MPRINT(EM_DIAGRAM):   end;
1190187    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 268
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190188    *;
1190189    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190190    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1190191    if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
1190192    output;
MPRINT(EM_DIAGRAM):   output;
1190193    stop;
MPRINT(EM_DIAGRAM):   stop;
1190194    end;
MPRINT(EM_DIAGRAM):   end;
1190195    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190196    *;
MPRINT(EM_DIAGRAM):    *;
1190197    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190198    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1190198  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1190199    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1190200    var _iter_ _aic_ _averr_ _misc_
1190201    _vaverr_ _vmisc_
1190202    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1100.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190204    title9;
MPRINT(EM_DIAGRAM):   title9;
1190205    title10;
MPRINT(EM_DIAGRAM):   title10;
1190206    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190207    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190208    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190210    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190211    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190212    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190213    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190214    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1190215    ;
MPRINT(EM_DIAGRAM):   ;
1190216    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190217    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190218    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1190219    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1190220    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1190221    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1190222    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1190223    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190224    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1190225    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1190226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190227    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1190228    ;
MPRINT(EM_DIAGRAM):   ;
1190229    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1190230    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1190231    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190232    *;
MPRINT(EM_DIAGRAM):    *;
1190233    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1190234    validdata=EMWS8.Varsel_VALIDATE
1190235    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1190236    *;
MPRINT(EM_DIAGRAM):   *;
1190237    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1190238    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1190239    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1190240    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1190241    target DepVar / level=NOMINAL id=DepVar
1190242    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1190243    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190244    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1190245    ;
MPRINT(EM_DIAGRAM):   ;
1190246    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190247    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1190248    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1190249    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1190250    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1190251    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1190252    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1190253    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1190254    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1190255    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1190256    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190257    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1190258    ;
MPRINT(EM_DIAGRAM):   ;
1190259    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190260    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1190261    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1190262    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1190263    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1190264    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1190265    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1190266    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1190267    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1190268    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190269    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1190270    ;
MPRINT(EM_DIAGRAM):   ;
1190271    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190272    Hidden 6 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=LOG;
1190273    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1190274    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1190275    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
1190276    *;
MPRINT(EM_DIAGRAM):   *;
1190277    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1190278    *;
MPRINT(EM_DIAGRAM):   *;
1190279    initial
1190280    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
1190281    ;
MPRINT(EM_DIAGRAM):   ;
1190282    *;
MPRINT(EM_DIAGRAM):   *;
1190283    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190284    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1190284  ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
1190285    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 542 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
MPRINT(EM_DIAGRAM):   *;
1190286    tech = Default
1190287    inest = EMWS8.AutoNeural28_ESTDS bylabel
1190288    ;
1190289    *;
1190290    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190291    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1190291  ! Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=865
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 542 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1190292    train estiter=1 outest=_anest outfit=_anfit maxtime=865 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1190293    tech = Default;
1190294    ;
1190295    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           34.64 seconds
      cpu time            34.41 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1101.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           34.64 seconds
      cpu time            34.41 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190296    *;
1190297    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1190298    var _iter_ _aic_ _averr_ _misc_
1190299    _vaverr_ _vmisc_
1190300    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1102.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190302    *------------------------------------------------------------*;
1190303    * Extract best iteration;
1190304    ;
1190305    *------------------------------------------------------------*;
1190306    %global _iter;
1190307    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1190308    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1190309    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1190310    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1190311    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1190312    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1190313    end;
MPRINT(EM_DIAGRAM):   end;
1190314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190315    *;
 
1190316    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1190317    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1190318    if _ITER_ eq 20 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 then do;
1190319    output;
MPRINT(EM_DIAGRAM):   output;
1190320    stop;
MPRINT(EM_DIAGRAM):   stop;
1190321    end;
MPRINT(EM_DIAGRAM):   end;
1190322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 542
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190323    *;
1190324    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190325    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1190326    if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
1190327    output;
MPRINT(EM_DIAGRAM):   output;
1190328    stop;
MPRINT(EM_DIAGRAM):   stop;
1190329    end;
MPRINT(EM_DIAGRAM):   end;
1190330    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190331    *;
MPRINT(EM_DIAGRAM):    *;
1190332    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190333    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1190333  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1190334    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1190335    var _iter_ _aic_ _averr_ _misc_
1190336    _vaverr_ _vmisc_
1190337    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1103.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190339    title9;
MPRINT(EM_DIAGRAM):   title9;
1190340    title10;
MPRINT(EM_DIAGRAM):   title10;
1190341    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190342    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190343    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190344    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190345    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190346    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190347    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190348    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190349    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1190350    ;
MPRINT(EM_DIAGRAM):   ;
1190351    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190352    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190353    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1190354    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1190355    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1190356    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1190357    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1190358    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190359    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1190360    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1190361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190362    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1190363    ;
MPRINT(EM_DIAGRAM):   ;
1190364    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1190365    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1190366    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190367    *;
MPRINT(EM_DIAGRAM):    *;
1190368    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1190369    validdata=EMWS8.Varsel_VALIDATE
1190370    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1190371    *;
MPRINT(EM_DIAGRAM):   *;
1190372    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1190373    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1190374    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1190375    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1190376    target DepVar / level=NOMINAL id=DepVar
1190377    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1190378    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190379    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1190380    ;
MPRINT(EM_DIAGRAM):   ;
1190381    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190382    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1190383    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1190384    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1190385    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1190386    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1190387    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1190388    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1190389    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1190390    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1190391    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190392    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1190393    ;
MPRINT(EM_DIAGRAM):   ;
1190394    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190395    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1190396    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1190397    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1190398    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1190399    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1190400    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1190401    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1190402    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1190403    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190404    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1190405    ;
MPRINT(EM_DIAGRAM):   ;
1190406    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190407    Hidden 6 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SINE;
1190408    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1190409    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1190410    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
1190411    *;
MPRINT(EM_DIAGRAM):   *;
1190412    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1190413    *;
MPRINT(EM_DIAGRAM):   *;
1190414    initial
1190415    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
1190416    ;
MPRINT(EM_DIAGRAM):   ;
1190417    *;
MPRINT(EM_DIAGRAM):   *;
1190418    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190419    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1190419  ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
1190420    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 542 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
MPRINT(EM_DIAGRAM):   *;
1190421    tech = Default
1190422    inest = EMWS8.AutoNeural28_ESTDS bylabel
1190423    ;
1190424    *;
1190425    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190426    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1190426  ! Search # 3 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=856
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 542 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1190427    train estiter=1 outest=_anest outfit=_anfit maxtime=856 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1190428    tech = Default;
1190429    ;
1190430    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           32.70 seconds
      cpu time            32.41 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1104.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           32.71 seconds
      cpu time            32.41 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190431    *;
1190432    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1190433    var _iter_ _aic_ _averr_ _misc_
1190434    _vaverr_ _vmisc_
1190435    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190436    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1105.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190437    *------------------------------------------------------------*;
1190438    * Extract best iteration;
1190439    ;
1190440    *------------------------------------------------------------*;
1190441    %global _iter;
1190442    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1190443    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1190444    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1190445    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1190446    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1190447    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1190448    end;
MPRINT(EM_DIAGRAM):   end;
1190449    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190450    *;
 
1190451    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1190452    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1190453    if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
1190454    output;
MPRINT(EM_DIAGRAM):   output;
1190455    stop;
MPRINT(EM_DIAGRAM):   stop;
1190456    end;
MPRINT(EM_DIAGRAM):   end;
1190457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 542
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190458    *;
1190459    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190460    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1190461    if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
1190462    output;
MPRINT(EM_DIAGRAM):   output;
1190463    stop;
MPRINT(EM_DIAGRAM):   stop;
1190464    end;
MPRINT(EM_DIAGRAM):   end;
1190465    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190466    *;
MPRINT(EM_DIAGRAM):    *;
1190467    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190468    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1190468  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1190469    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1190470    var _iter_ _aic_ _averr_ _misc_
1190471    _vaverr_ _vmisc_
1190472    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1106.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190474    title9;
MPRINT(EM_DIAGRAM):   title9;
1190475    title10;
MPRINT(EM_DIAGRAM):   title10;
1190476    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190477    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190478    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190479    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190480    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190481    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190482    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190483    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190484    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1190485    ;
MPRINT(EM_DIAGRAM):   ;
1190486    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190487    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190488    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1190489    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1190490    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1190491    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1190492    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1190493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190494    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1190495    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1190496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190497    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1190498    ;
MPRINT(EM_DIAGRAM):   ;
1190499    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1190500    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1190501    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190502    *;
MPRINT(EM_DIAGRAM):    *;
1190503    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1190504    validdata=EMWS8.Varsel_VALIDATE
1190505    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1190506    *;
MPRINT(EM_DIAGRAM):   *;
1190507    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1190508    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1190509    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1190510    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1190511    target DepVar / level=NOMINAL id=DepVar
1190512    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1190513    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190514    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1190515    ;
MPRINT(EM_DIAGRAM):   ;
1190516    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190517    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1190518    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1190519    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1190520    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1190521    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1190522    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1190523    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1190524    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1190525    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1190526    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190527    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1190528    ;
MPRINT(EM_DIAGRAM):   ;
1190529    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190530    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1190531    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1190532    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1190533    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1190534    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1190535    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1190536    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1190537    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1190538    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190539    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1190540    ;
MPRINT(EM_DIAGRAM):   ;
1190541    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190542    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1190543    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1190544    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1190545    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
1190546    *;
MPRINT(EM_DIAGRAM):   *;
1190547    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1190548    *;
MPRINT(EM_DIAGRAM):   *;
1190549    initial
1190550    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
1190551    ;
MPRINT(EM_DIAGRAM):   ;
1190552    *;
MPRINT(EM_DIAGRAM):   *;
1190553    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190554    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1190554  ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
1190555    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 529 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 255
      variables.
MPRINT(EM_DIAGRAM):   *;
1190556    tech = Default
1190557    inest = EMWS8.AutoNeural28_ESTDS bylabel
1190558    ;
1190559    *;
1190560    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190561    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1190561  ! Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=848
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 529 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1190562    train estiter=1 outest=_anest outfit=_anfit maxtime=848 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1190563    tech = Default;
1190564    ;
1190565    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           35.56 seconds
      cpu time            35.17 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1107.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           35.57 seconds
      cpu time            35.19 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190566    *;
1190567    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1190568    var _iter_ _aic_ _averr_ _misc_
1190569    _vaverr_ _vmisc_
1190570    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190571    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1108.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190572    *------------------------------------------------------------*;
1190573    * Extract best iteration;
1190574    ;
1190575    *------------------------------------------------------------*;
1190576    %global _iter;
1190577    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1190578    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1190579    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1190580    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1190581    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1190582    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1190583    end;
MPRINT(EM_DIAGRAM):   end;
1190584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190585    *;
 
1190586    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1190587    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1190588    if _ITER_ eq 22 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 22 then do;
1190589    output;
MPRINT(EM_DIAGRAM):   output;
1190590    stop;
MPRINT(EM_DIAGRAM):   stop;
1190591    end;
MPRINT(EM_DIAGRAM):   end;
1190592    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190593    *;
1190594    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190595    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1190596    if _ITER_ eq 22 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 22 and _NAME_ eq "OVERALL" then do;
1190597    output;
MPRINT(EM_DIAGRAM):   output;
1190598    stop;
MPRINT(EM_DIAGRAM):   stop;
1190599    end;
MPRINT(EM_DIAGRAM):   end;
1190600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190601    *;
MPRINT(EM_DIAGRAM):    *;
1190602    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190603    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1190603  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1190604    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1190605    var _iter_ _aic_ _averr_ _misc_
1190606    _vaverr_ _vmisc_
1190607    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1109.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190609    title9;
MPRINT(EM_DIAGRAM):   title9;
1190610    title10;
MPRINT(EM_DIAGRAM):   title10;
1190611    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190612    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190613    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190615    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190616    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190617    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1190619    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1190620    ;
MPRINT(EM_DIAGRAM):   ;
1190621    data WORK.SAVEDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1DLGQCI;
1190622    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1190623    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1DLGQCI has 1 observations and 529
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190624    data EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_BESTDS;
1190625    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1190626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_BESTDS has 1 observations and 529
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1190627    data WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1DLGQCI;
1190628    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1DLGQCI has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190630    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1190631    ;
MPRINT(EM_DIAGRAM):   ;
1190632    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190633    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190634    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1190635    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1190636    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1190637    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1190638    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1190639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190640    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1190641    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1190642    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1190643    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1190644    ;
MPRINT(EM_DIAGRAM):   ;
1190645    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1190646    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1190647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190648    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190649    set WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1DLGQCI;
1190650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1DLGQCI.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190651    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1190652    ;
MPRINT(EM_DIAGRAM):   ;
1190653    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190654    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190655    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1190656    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1190657    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1190658    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1190659    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1190660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190661    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1190662    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1190663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190664    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190665    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190666    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190667    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190668    *;
MPRINT(EM_DIAGRAM):    *;
1190669    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1190670    validdata=EMWS8.Varsel_VALIDATE
1190671    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1190672    *;
MPRINT(EM_DIAGRAM):   *;
1190673    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1190674    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1190675    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1190676    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1190677    target DepVar / level=NOMINAL id=DepVar
1190678    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1190679    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190680    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1190681    ;
MPRINT(EM_DIAGRAM):   ;
1190682    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190683    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1190684    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1190685    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190686    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1190687    ;
MPRINT(EM_DIAGRAM):   ;
1190688    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190689    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1190690    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1190691    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1190692    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1190693    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1190694    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1190695    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1190696    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1190697    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1190698    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190699    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1190700    ;
MPRINT(EM_DIAGRAM):   ;
1190701    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190702    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1190703    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1190704    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1190705    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1190706    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1190707    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1190708    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1190709    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1190710    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190711    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1190712    ;
MPRINT(EM_DIAGRAM):   ;
1190713    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190714    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1190715    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1190716    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1190717    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
1190718    *;
MPRINT(EM_DIAGRAM):   *;
1190719    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1190720    *;
MPRINT(EM_DIAGRAM):   *;
1190721    initial
1190722    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
1190723    ;
MPRINT(EM_DIAGRAM):   ;
1190724    *;
MPRINT(EM_DIAGRAM):   *;
1190725    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190726    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1190726  ! Search # 4 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
1190727    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 542 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
MPRINT(EM_DIAGRAM):   *;
1190728    tech = Default
1190729    inest = EMWS8.AutoNeural28_ESTDS bylabel
1190730    ;
1190731    *;
1190732    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190733    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1190733  ! Search # 4 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=839
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 542 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1190734    train estiter=1 outest=_anest outfit=_anfit maxtime=839 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1190735    tech = Default;
1190736    ;
1190737    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           2.95 seconds
      cpu time            2.93 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1110.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.96 seconds
      cpu time            2.93 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190738    *;
1190739    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1190740    var _iter_ _aic_ _averr_ _misc_
1190741    _vaverr_ _vmisc_
1190742    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190743    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1111.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190744    *------------------------------------------------------------*;
1190745    * Extract best iteration;
1190746    ;
1190747    *------------------------------------------------------------*;
1190748    %global _iter;
1190749    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1190750    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
The SAS System
 
1190751    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1190752    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1190753    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1190754    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1190755    end;
MPRINT(EM_DIAGRAM):   end;
1190756    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190757    *;
 
1190758    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1190759    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1190760    if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
1190761    output;
MPRINT(EM_DIAGRAM):   output;
1190762    stop;
MPRINT(EM_DIAGRAM):   stop;
1190763    end;
MPRINT(EM_DIAGRAM):   end;
1190764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 542
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190765    *;
1190766    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190767    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1190768    if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
1190769    output;
MPRINT(EM_DIAGRAM):   output;
1190770    stop;
MPRINT(EM_DIAGRAM):   stop;
1190771    end;
MPRINT(EM_DIAGRAM):   end;
1190772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190773    *;
MPRINT(EM_DIAGRAM):    *;
1190774    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190775    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1190775  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1190776    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1190777    var _iter_ _aic_ _averr_ _misc_
1190778    _vaverr_ _vmisc_
1190779    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190780    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1112.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190781    title9;
MPRINT(EM_DIAGRAM):   title9;
1190782    title10;
MPRINT(EM_DIAGRAM):   title10;
1190783    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190784    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190785    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190787    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190788    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190789    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190790    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190791    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1190792    ;
MPRINT(EM_DIAGRAM):   ;
1190793    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190794    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190795    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1190796    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1190797    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1190798    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
1190799    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1190800    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190801    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1190802    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1190803    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 17 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190804    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1190805    ;
MPRINT(EM_DIAGRAM):   ;
1190806    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1190807    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1190808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190809    *;
MPRINT(EM_DIAGRAM):    *;
1190810    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1190811    validdata=EMWS8.Varsel_VALIDATE
1190812    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1190813    *;
MPRINT(EM_DIAGRAM):   *;
1190814    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1190815    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1190816    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1190817    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1190818    target DepVar / level=NOMINAL id=DepVar
1190819    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1190820    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190821    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1190822    ;
MPRINT(EM_DIAGRAM):   ;
1190823    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190824    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1190825    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1190826    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1190827    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1190828    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1190829    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1190830    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1190831    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1190832    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1190833    Hidden 6 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=LOG;
1190834    connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
1190835    connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
1190836    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190837    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1190838    ;
MPRINT(EM_DIAGRAM):   ;
1190839    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190840    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1190841    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1190842    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1190843    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1190844    connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
1190845    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1190846    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1190847    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1190848    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1190849    connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
1190850    Hidden 6 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=SOFTMAX;
1190851    connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
1190852    connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
1190853    connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
1190854    connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
1190855    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190856    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1190857    ;
MPRINT(EM_DIAGRAM):   ;
1190858    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190859    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1190860    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1190861    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1190862    connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
1190863    Hidden 6 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SOFTMAX;
1190864    connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
1190865    connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
1190866    connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
1190867    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190868    * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
1190869    ;
MPRINT(EM_DIAGRAM):   ;
1190870    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190871    Hidden 6 / id = H4x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=LOG;
1190872    connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
1190873    connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
1190874    connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
1190875    *;
MPRINT(EM_DIAGRAM):   *;
1190876    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1190877    *;
MPRINT(EM_DIAGRAM):   *;
1190878    initial
1190879    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
1190880    ;
MPRINT(EM_DIAGRAM):   ;
1190881    *;
MPRINT(EM_DIAGRAM):   *;
1190882    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190883    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1190883  ! Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
1190884    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1001 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
MPRINT(EM_DIAGRAM):   *;
1190885    tech = Default
1190886    inest = EMWS8.AutoNeural28_ESTDS bylabel
1190887    ;
1190888    *;
1190889    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190890    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1190890  ! Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=838
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1001 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1190891    train estiter=1 outest=_anest outfit=_anfit maxtime=838 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1190892    tech = Default;
1190893    ;
1190894    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           1:01.18
      cpu time            1:00.70
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1113.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:01.19
      cpu time            1:00.71
 
 
MPRINT(EM_DIAGRAM):   *;
1190895    *;
1190896    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1190897    var _iter_ _aic_ _averr_ _misc_
1190898    _vaverr_ _vmisc_
1190899    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190900    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1114.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190901    *------------------------------------------------------------*;
1190902    * Extract best iteration;
1190903    ;
1190904    *------------------------------------------------------------*;
1190905    %global _iter;
1190906    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1190907    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1190908    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1190909    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1190910    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1190911    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1190912    end;
MPRINT(EM_DIAGRAM):   end;
1190913    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190914    *;
 
1190915    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1190916    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1190917    if _ITER_ eq 21 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 21 then do;
1190918    output;
MPRINT(EM_DIAGRAM):   output;
1190919    stop;
MPRINT(EM_DIAGRAM):   stop;
1190920    end;
MPRINT(EM_DIAGRAM):   end;
1190921    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 1001
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1190922    *;
1190923    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190924    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1190925    if _ITER_ eq 21 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 21 and _NAME_ eq "OVERALL" then do;
1190926    output;
MPRINT(EM_DIAGRAM):   output;
1190927    stop;
MPRINT(EM_DIAGRAM):   stop;
1190928    end;
MPRINT(EM_DIAGRAM):   end;
1190929    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190930    *;
MPRINT(EM_DIAGRAM):    *;
1190931    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1190932    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1190932  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1190933    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1190934    var _iter_ _aic_ _averr_ _misc_
1190935    _vaverr_ _vmisc_
1190936    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1190937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1115.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190938    title9;
MPRINT(EM_DIAGRAM):   title9;
1190939    title10;
MPRINT(EM_DIAGRAM):   title10;
1190940    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190941    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190942    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190943    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190944    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1190945    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190946    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1190947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190948    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1190949    ;
MPRINT(EM_DIAGRAM):   ;
1190950    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1190951    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1190952    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1190953    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1190954    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1190955    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
1190956    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1190957    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190958    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1190959    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1190960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 18 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1190961    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1190962    ;
MPRINT(EM_DIAGRAM):   ;
1190963    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1190964    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1190965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1190966    *;
MPRINT(EM_DIAGRAM):    *;
1190967    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1190968    validdata=EMWS8.Varsel_VALIDATE
1190969    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1190970    *;
MPRINT(EM_DIAGRAM):   *;
1190971    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1190972    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1190973    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1190974    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1190975    target DepVar / level=NOMINAL id=DepVar
1190976    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1190977    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190978    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1190979    ;
MPRINT(EM_DIAGRAM):   ;
1190980    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190981    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1190982    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1190983    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1190984    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1190985    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1190986    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1190987    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1190988    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1190989    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1190990    Hidden 6 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=LOG;
1190991    connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
1190992    connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
1190993    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190994    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1190995    ;
MPRINT(EM_DIAGRAM):   ;
1190996    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1190997    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1190998    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1190999    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1191000    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1191001    connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
1191002    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1191003    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1191004    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1191005    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1191006    connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
1191007    Hidden 6 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=SOFTMAX;
1191008    connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
1191009    connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
1191010    connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
1191011    connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
1191012    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191013    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1191014    ;
MPRINT(EM_DIAGRAM):   ;
1191015    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191016    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1191017    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1191018    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1191019    connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
1191020    Hidden 6 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SOFTMAX;
1191021    connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
1191022    connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
1191023    connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
1191024    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191025    * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
1191026    ;
MPRINT(EM_DIAGRAM):   ;
1191027    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191028    Hidden 6 / id = H4x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SINE;
1191029    connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
1191030    connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
1191031    connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
1191032    *;
MPRINT(EM_DIAGRAM):   *;
1191033    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1191034    *;
MPRINT(EM_DIAGRAM):   *;
1191035    initial
1191036    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
1191037    ;
MPRINT(EM_DIAGRAM):   ;
1191038    *;
MPRINT(EM_DIAGRAM):   *;
1191039    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191040    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1191040  ! Search # 4 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
1191041    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1001 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
MPRINT(EM_DIAGRAM):   *;
1191042    tech = Default
1191043    inest = EMWS8.AutoNeural28_ESTDS bylabel
1191044    ;
1191045    *;
1191046    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191047    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1191047  ! Search # 4 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=823
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1001 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1191048    train estiter=1 outest=_anest outfit=_anfit maxtime=823 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1191049    tech = Default;
1191050    ;
1191051    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           55.85 seconds
      cpu time            55.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1116.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           55.86 seconds
      cpu time            55.06 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191052    *;
1191053    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1191054    var _iter_ _aic_ _averr_ _misc_
1191055    _vaverr_ _vmisc_
1191056    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191057    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1117.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191058    *------------------------------------------------------------*;
1191059    * Extract best iteration;
1191060    ;
1191061    *------------------------------------------------------------*;
1191062    %global _iter;
1191063    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1191064    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1191065    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1191066    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1191067    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1191068    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1191069    end;
MPRINT(EM_DIAGRAM):   end;
1191070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191071    *;
 
1191072    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1191073    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1191074    if _ITER_ eq 17 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 17 then do;
1191075    output;
MPRINT(EM_DIAGRAM):   output;
1191076    stop;
MPRINT(EM_DIAGRAM):   stop;
1191077    end;
MPRINT(EM_DIAGRAM):   end;
1191078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 1001
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191079    *;
1191080    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191081    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1191082    if _ITER_ eq 17 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 17 and _NAME_ eq "OVERALL" then do;
1191083    output;
MPRINT(EM_DIAGRAM):   output;
1191084    stop;
MPRINT(EM_DIAGRAM):   stop;
1191085    end;
MPRINT(EM_DIAGRAM):   end;
1191086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191087    *;
MPRINT(EM_DIAGRAM):    *;
1191088    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191089    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1191089  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1191090    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1191091    var _iter_ _aic_ _averr_ _misc_
1191092    _vaverr_ _vmisc_
1191093    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191094    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1118.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191095    title9;
MPRINT(EM_DIAGRAM):   title9;
1191096    title10;
MPRINT(EM_DIAGRAM):   title10;
1191097    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191098    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191099    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191100    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191101    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191102    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191103    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191104    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191105    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1191106    ;
MPRINT(EM_DIAGRAM):   ;
1191107    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191108    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191109    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1191110    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1191111    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1191112    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
1191113    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1191114    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191115    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1191116    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1191117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 19 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191118    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1191119    ;
MPRINT(EM_DIAGRAM):   ;
1191120    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1191121    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1191122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191123    *;
MPRINT(EM_DIAGRAM):    *;
1191124    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1191125    validdata=EMWS8.Varsel_VALIDATE
1191126    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1191127    *;
MPRINT(EM_DIAGRAM):   *;
1191128    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1191129    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1191130    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1191131    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1191132    target DepVar / level=NOMINAL id=DepVar
1191133    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1191134    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191135    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1191136    ;
MPRINT(EM_DIAGRAM):   ;
1191137    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191138    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1191139    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1191140    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1191141    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1191142    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1191143    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1191144    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1191145    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1191146    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1191147    Hidden 6 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=LOG;
1191148    connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
1191149    connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
1191150    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191151    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1191152    ;
MPRINT(EM_DIAGRAM):   ;
1191153    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191154    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1191155    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1191156    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1191157    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1191158    connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
1191159    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1191160    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1191161    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1191162    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1191163    connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
1191164    Hidden 6 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=SOFTMAX;
1191165    connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
1191166    connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
1191167    connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
1191168    connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
1191169    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191170    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1191171    ;
MPRINT(EM_DIAGRAM):   ;
1191172    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191173    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1191174    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1191175    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1191176    connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
1191177    Hidden 6 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SOFTMAX;
1191178    connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
1191179    connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
1191180    connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
1191181    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191182    * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
1191183    ;
MPRINT(EM_DIAGRAM):   ;
1191184    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191185    Hidden 6 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SOFTMAX;
1191186    connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
1191187    connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
1191188    connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
1191189    *;
MPRINT(EM_DIAGRAM):   *;
1191190    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1191191    *;
MPRINT(EM_DIAGRAM):   *;
1191192    initial
1191193    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
1191194    ;
MPRINT(EM_DIAGRAM):   ;
1191195    *;
MPRINT(EM_DIAGRAM):   *;
1191196    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191197    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1191197  ! Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
1191198    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 988 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 529
      variables.
MPRINT(EM_DIAGRAM):   *;
1191199    tech = Default
1191200    inest = EMWS8.AutoNeural28_ESTDS bylabel
1191201    ;
1191202    *;
1191203    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191204    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1191204  ! Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=809
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 988 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1191205    train estiter=1 outest=_anest outfit=_anfit maxtime=809 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1191206    tech = Default;
1191207    ;
1191208    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           1:01.89
      cpu time            1:01.60
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1119.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:01.89
      cpu time            1:01.60
 
 
MPRINT(EM_DIAGRAM):   *;
1191209    *;
1191210    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1191211    var _iter_ _aic_ _averr_ _misc_
1191212    _vaverr_ _vmisc_
1191213    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1120.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191215    *------------------------------------------------------------*;
1191216    * Extract best iteration;
1191217    ;
1191218    *------------------------------------------------------------*;
1191219    %global _iter;
1191220    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1191221    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1191222    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1191223    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1191224    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1191225    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1191226    end;
MPRINT(EM_DIAGRAM):   end;
1191227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191228    *;
 
1191229    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1191230    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1191231    if _ITER_ eq 47 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 47 then do;
1191232    output;
MPRINT(EM_DIAGRAM):   output;
1191233    stop;
MPRINT(EM_DIAGRAM):   stop;
1191234    end;
MPRINT(EM_DIAGRAM):   end;
1191235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191236    *;
1191237    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191238    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1191239    if _ITER_ eq 47 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 47 and _NAME_ eq "OVERALL" then do;
1191240    output;
MPRINT(EM_DIAGRAM):   output;
1191241    stop;
MPRINT(EM_DIAGRAM):   stop;
1191242    end;
MPRINT(EM_DIAGRAM):   end;
1191243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 96 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191244    *;
MPRINT(EM_DIAGRAM):    *;
1191245    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191246    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1191246  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1191247    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1191248    var _iter_ _aic_ _averr_ _misc_
1191249    _vaverr_ _vmisc_
1191250    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191251    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1121.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191252    title9;
MPRINT(EM_DIAGRAM):   title9;
1191253    title10;
MPRINT(EM_DIAGRAM):   title10;
1191254    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191255    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191256    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191257    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191258    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191259    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191260    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191262    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1191263    ;
MPRINT(EM_DIAGRAM):   ;
1191264    data WORK.SAVEDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1DLGQCI;
1191265    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1191266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1DLGQCI has 1 observations and 988
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191267    data EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_BESTDS;
1191268    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1191269    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_BESTDS has 1 observations and 988
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191270    data WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1DLGQCI;
1191271    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191272    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1DLGQCI has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191273    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1191274    ;
MPRINT(EM_DIAGRAM):   ;
1191275    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191276    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191277    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1191278    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1191279    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1191280    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
1191281    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1191282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191283    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1191284    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1191285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 20 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191286    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1191287    ;
MPRINT(EM_DIAGRAM):   ;
1191288    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1191289    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1191290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191291    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191292    set WORK.BFITDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1DLGQCI;
1191293    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1DLGQCI.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191294    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1191295    ;
MPRINT(EM_DIAGRAM):   ;
1191296    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191297    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191298    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1191299    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1191300    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1191301    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
1191302    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1191303    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191304    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1191305    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1191306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 21 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191307    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191308    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191309    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191310    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191311    *;
MPRINT(EM_DIAGRAM):    *;
1191312    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1191313    validdata=EMWS8.Varsel_VALIDATE
1191314    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1191315    *;
MPRINT(EM_DIAGRAM):   *;
1191316    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1191317    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1191318    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1191319    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1191320    target DepVar / level=NOMINAL id=DepVar
1191321    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1191322    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191323    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1191324    ;
MPRINT(EM_DIAGRAM):   ;
1191325    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191326    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1191327    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1191328    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191329    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1191330    ;
MPRINT(EM_DIAGRAM):   ;
1191331    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191332    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1191333    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1191334    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1191335    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1191336    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1191337    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1191338    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1191339    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1191340    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1191341    Hidden 6 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=LOG;
1191342    connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
1191343    connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
1191344    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191345    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1191346    ;
MPRINT(EM_DIAGRAM):   ;
1191347    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191348    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1191349    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1191350    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1191351    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1191352    connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
1191353    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1191354    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1191355    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1191356    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1191357    connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
1191358    Hidden 6 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=SOFTMAX;
1191359    connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
1191360    connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
1191361    connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
1191362    connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
1191363    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191364    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1191365    ;
MPRINT(EM_DIAGRAM):   ;
1191366    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191367    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1191368    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1191369    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1191370    connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
1191371    Hidden 6 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SOFTMAX;
1191372    connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
1191373    connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
1191374    connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
1191375    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191376    * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
1191377    ;
MPRINT(EM_DIAGRAM):   ;
1191378    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191379    Hidden 6 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SOFTMAX;
1191380    connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
1191381    connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
1191382    connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
1191383    *;
MPRINT(EM_DIAGRAM):   *;
1191384    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1191385    *;
MPRINT(EM_DIAGRAM):   *;
1191386    initial
1191387    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
1191388    ;
MPRINT(EM_DIAGRAM):   ;
1191389    *;
MPRINT(EM_DIAGRAM):   *;
1191390    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191391    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1191391  ! Search # 5 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
1191392    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 1001 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
MPRINT(EM_DIAGRAM):   *;
1191393    tech = Default
1191394    inest = EMWS8.AutoNeural28_ESTDS bylabel
1191395    ;
1191396    *;
1191397    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191398    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1191398  ! Search # 5 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=793
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1001 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1191399    train estiter=1 outest=_anest outfit=_anfit maxtime=793 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1191400    tech = Default;
1191401    ;
1191402    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           4.47 seconds
      cpu time            4.46 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1122.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           4.48 seconds
      cpu time            4.47 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191403    *;
1191404    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1191405    var _iter_ _aic_ _averr_ _misc_
1191406    _vaverr_ _vmisc_
1191407    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191408    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1123.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191409    *------------------------------------------------------------*;
1191410    * Extract best iteration;
1191411    ;
1191412    *------------------------------------------------------------*;
1191413    %global _iter;
1191414    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1191415    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1191416    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1191417    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1191418    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1191419    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1191420    end;
MPRINT(EM_DIAGRAM):   end;
1191421    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191422    *;
 
1191423    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1191424    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1191425    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1191426    output;
MPRINT(EM_DIAGRAM):   output;
1191427    stop;
MPRINT(EM_DIAGRAM):   stop;
1191428    end;
MPRINT(EM_DIAGRAM):   end;
1191429    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 1001
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191430    *;
1191431    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191432    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1191433    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1191434    output;
MPRINT(EM_DIAGRAM):   output;
1191435    stop;
MPRINT(EM_DIAGRAM):   stop;
1191436    end;
MPRINT(EM_DIAGRAM):   end;
1191437    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191438    *;
MPRINT(EM_DIAGRAM):    *;
1191439    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191440    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1191440  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1191441    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1191442    var _iter_ _aic_ _averr_ _misc_
1191443    _vaverr_ _vmisc_
1191444    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191445    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1124.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191446    title9;
MPRINT(EM_DIAGRAM):   title9;
1191447    title10;
MPRINT(EM_DIAGRAM):   title10;
1191448    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191449    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191450    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191451    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191452    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191453    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191454    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191455    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191456    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1191457    ;
MPRINT(EM_DIAGRAM):   ;
1191458    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191459    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191460    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1191461    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1191462    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1191463    _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
1191464    _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
1191465    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191466    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1191467    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1191468    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 22 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191469    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1191470    ;
MPRINT(EM_DIAGRAM):   ;
1191471    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1191472    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1191473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191474    *;
MPRINT(EM_DIAGRAM):    *;
1191475    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1191476    validdata=EMWS8.Varsel_VALIDATE
1191477    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1191478    *;
MPRINT(EM_DIAGRAM):   *;
1191479    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1191480    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1191481    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1191482    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1191483    target DepVar / level=NOMINAL id=DepVar
1191484    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1191485    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191486    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1191487    ;
MPRINT(EM_DIAGRAM):   ;
1191488    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191489    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1191490    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1191491    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1191492    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1191493    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1191494    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1191495    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1191496    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1191497    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1191498    Hidden 6 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=LOG;
1191499    connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
1191500    connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
1191501    Hidden 6 / id = H1x5_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x5_ act=LOG;
1191502    connect interval H1x5_;
MPRINT(EM_DIAGRAM):   connect interval H1x5_;
1191503    connect nominal H1x5_;
MPRINT(EM_DIAGRAM):   connect nominal H1x5_;
1191504    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191505    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1191506    ;
MPRINT(EM_DIAGRAM):   ;
1191507    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191508    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1191509    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1191510    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1191511    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1191512    connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
1191513    connect H1x5_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x1_;
1191514    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1191515    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1191516    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1191517    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1191518    connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
1191519    connect H1x5_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x2_;
1191520    Hidden 6 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=SOFTMAX;
1191521    connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
1191522    connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
1191523    connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
1191524    connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
1191525    connect H1x5_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x3_;
1191526    Hidden 6 / id = H2x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x4_ act=SOFTMAX;
1191527    connect H1x1_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x4_;
1191528    connect H1x2_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x4_;
1191529    connect H1x3_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x4_;
1191530    connect H1x4_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x4_;
1191531    connect H1x5_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x4_;
1191532    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191533    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1191534    ;
MPRINT(EM_DIAGRAM):   ;
1191535    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191536    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1191537    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1191538    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1191539    connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
1191540    connect H2x4_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x4_ H3x1_;
1191541    Hidden 6 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SOFTMAX;
1191542    connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
1191543    connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
1191544    connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
1191545    connect H2x4_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x4_ H3x2_;
1191546    Hidden 6 / id = H3x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x3_ act=SOFTMAX;
1191547    connect H2x1_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x3_;
1191548    connect H2x2_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x3_;
1191549    connect H2x3_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x3_;
1191550    connect H2x4_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x4_ H3x3_;
1191551    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191552    * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
1191553    ;
MPRINT(EM_DIAGRAM):   ;
1191554    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191555    Hidden 6 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SOFTMAX;
1191556    connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
1191557    connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
1191558    connect H3x3_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x3_ H4x1_;
1191559    Hidden 6 / id = H4x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x2_ act=SOFTMAX;
1191560    connect H3x1_ H4x2_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x2_;
1191561    connect H3x2_ H4x2_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x2_;
1191562    connect H3x3_ H4x2_;
MPRINT(EM_DIAGRAM):   connect H3x3_ H4x2_;
1191563    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191564    * Layer #5;
MPRINT(EM_DIAGRAM):   * Layer #5;
1191565    ;
MPRINT(EM_DIAGRAM):   ;
1191566    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191567    Hidden 6 / id = H5x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H5x1_ act=LOG;
1191568    connect H4x1_ H5x1_;
MPRINT(EM_DIAGRAM):   connect H4x1_ H5x1_;
1191569    connect H4x2_ H5x1_;
MPRINT(EM_DIAGRAM):   connect H4x2_ H5x1_;
1191570    connect H5x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H5x1_ DepVar;
1191571    *;
MPRINT(EM_DIAGRAM):   *;
1191572    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1191573    *;
MPRINT(EM_DIAGRAM):   *;
1191574    initial
1191575    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
1191576    ;
MPRINT(EM_DIAGRAM):   ;
1191577    *;
MPRINT(EM_DIAGRAM):   *;
1191578    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191579    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1191579  ! Search # 5 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
1191580    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1705 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
MPRINT(EM_DIAGRAM):   *;
1191581    tech = Default
1191582    inest = EMWS8.AutoNeural28_ESTDS bylabel
1191583    ;
1191584    *;
1191585    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191586    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1191586  ! Search # 5 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=792
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1705 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1191587    train estiter=1 outest=_anest outfit=_anfit maxtime=792 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1191588    tech = Default;
1191589    ;
1191590    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           1:39.60
      cpu time            1:37.45
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1125.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:39.61
      cpu time            1:37.46
 
 
MPRINT(EM_DIAGRAM):   *;
1191591    *;
1191592    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1191593    var _iter_ _aic_ _averr_ _misc_
1191594    _vaverr_ _vmisc_
1191595    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191596    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1126.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191597    *------------------------------------------------------------*;
1191598    * Extract best iteration;
1191599    ;
1191600    *------------------------------------------------------------*;
1191601    %global _iter;
1191602    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1191603    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1191604    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1191605    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1191606    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1191607    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1191608    end;
MPRINT(EM_DIAGRAM):   end;
1191609    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191610    *;
 
1191611    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1191612    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1191613    if _ITER_ eq 20 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 then do;
1191614    output;
MPRINT(EM_DIAGRAM):   output;
1191615    stop;
MPRINT(EM_DIAGRAM):   stop;
1191616    end;
MPRINT(EM_DIAGRAM):   end;
1191617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 1705
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191618    *;
1191619    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191620    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1191621    if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 20 and _NAME_ eq "OVERALL" then do;
1191622    output;
MPRINT(EM_DIAGRAM):   output;
1191623    stop;
MPRINT(EM_DIAGRAM):   stop;
1191624    end;
MPRINT(EM_DIAGRAM):   end;
1191625    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191626    *;
MPRINT(EM_DIAGRAM):    *;
1191627    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191628    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1191628  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1191629    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1191630    var _iter_ _aic_ _averr_ _misc_
1191631    _vaverr_ _vmisc_
1191632    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1127.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191634    title9;
MPRINT(EM_DIAGRAM):   title9;
1191635    title10;
MPRINT(EM_DIAGRAM):   title10;
1191636    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191637    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191638    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191640    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191641    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191642    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191644    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1191645    ;
MPRINT(EM_DIAGRAM):   ;
1191646    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191647    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191648    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1191649    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1191650    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1191651    _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
1191652    _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
1191653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191654    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1191655    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1191656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 23 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191657    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1191658    ;
MPRINT(EM_DIAGRAM):   ;
1191659    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1191660    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1191661    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191662    *;
MPRINT(EM_DIAGRAM):    *;
1191663    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1191664    validdata=EMWS8.Varsel_VALIDATE
1191665    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1191666    *;
MPRINT(EM_DIAGRAM):   *;
1191667    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1191668    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1191669    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1191670    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1191671    target DepVar / level=NOMINAL id=DepVar
1191672    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1191673    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191674    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1191675    ;
MPRINT(EM_DIAGRAM):   ;
1191676    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191677    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1191678    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1191679    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1191680    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1191681    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1191682    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1191683    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1191684    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1191685    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1191686    Hidden 6 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=LOG;
1191687    connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
1191688    connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
1191689    Hidden 6 / id = H1x5_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x5_ act=LOG;
1191690    connect interval H1x5_;
MPRINT(EM_DIAGRAM):   connect interval H1x5_;
1191691    connect nominal H1x5_;
MPRINT(EM_DIAGRAM):   connect nominal H1x5_;
1191692    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191693    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1191694    ;
MPRINT(EM_DIAGRAM):   ;
1191695    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191696    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1191697    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1191698    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1191699    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1191700    connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
1191701    connect H1x5_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x1_;
1191702    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1191703    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1191704    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1191705    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1191706    connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
1191707    connect H1x5_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x2_;
1191708    Hidden 6 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=SOFTMAX;
1191709    connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
1191710    connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
1191711    connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
1191712    connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
1191713    connect H1x5_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x3_;
1191714    Hidden 6 / id = H2x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x4_ act=SOFTMAX;
1191715    connect H1x1_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x4_;
1191716    connect H1x2_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x4_;
1191717    connect H1x3_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x4_;
1191718    connect H1x4_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x4_;
1191719    connect H1x5_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x4_;
1191720    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191721    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1191722    ;
MPRINT(EM_DIAGRAM):   ;
1191723    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191724    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1191725    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1191726    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1191727    connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
1191728    connect H2x4_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x4_ H3x1_;
1191729    Hidden 6 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SOFTMAX;
1191730    connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
1191731    connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
1191732    connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
1191733    connect H2x4_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x4_ H3x2_;
1191734    Hidden 6 / id = H3x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x3_ act=SOFTMAX;
1191735    connect H2x1_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x3_;
1191736    connect H2x2_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x3_;
1191737    connect H2x3_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x3_;
1191738    connect H2x4_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x4_ H3x3_;
1191739    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191740    * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
1191741    ;
MPRINT(EM_DIAGRAM):   ;
1191742    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191743    Hidden 6 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SOFTMAX;
1191744    connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
1191745    connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
1191746    connect H3x3_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x3_ H4x1_;
1191747    Hidden 6 / id = H4x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x2_ act=SOFTMAX;
1191748    connect H3x1_ H4x2_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x2_;
1191749    connect H3x2_ H4x2_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x2_;
1191750    connect H3x3_ H4x2_;
MPRINT(EM_DIAGRAM):   connect H3x3_ H4x2_;
1191751    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191752    * Layer #5;
MPRINT(EM_DIAGRAM):   * Layer #5;
1191753    ;
MPRINT(EM_DIAGRAM):   ;
1191754    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191755    Hidden 6 / id = H5x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H5x1_ act=SINE;
1191756    connect H4x1_ H5x1_;
MPRINT(EM_DIAGRAM):   connect H4x1_ H5x1_;
1191757    connect H4x2_ H5x1_;
MPRINT(EM_DIAGRAM):   connect H4x2_ H5x1_;
1191758    connect H5x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H5x1_ DepVar;
1191759    *;
MPRINT(EM_DIAGRAM):   *;
1191760    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1191761    *;
MPRINT(EM_DIAGRAM):   *;
1191762    initial
1191763    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
1191764    ;
MPRINT(EM_DIAGRAM):   ;
1191765    *;
MPRINT(EM_DIAGRAM):   *;
1191766    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191767    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1191767  ! Search # 5 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
1191768    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1705 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
MPRINT(EM_DIAGRAM):   *;
1191769    tech = Default
1191770    inest = EMWS8.AutoNeural28_ESTDS bylabel
1191771    ;
1191772    *;
1191773    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191774    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1191774  ! Search # 5 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=767
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1705 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1191775    train estiter=1 outest=_anest outfit=_anfit maxtime=767 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1191776    tech = Default;
1191777    ;
1191778    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           1:24.28
      cpu time            1:23.97
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1128.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:24.30
      cpu time            1:23.99
 
 
MPRINT(EM_DIAGRAM):   *;
1191779    *;
1191780    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1191781    var _iter_ _aic_ _averr_ _misc_
1191782    _vaverr_ _vmisc_
1191783    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191784    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1129.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191785    *------------------------------------------------------------*;
1191786    * Extract best iteration;
1191787    ;
1191788    *------------------------------------------------------------*;
1191789    %global _iter;
1191790    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1191791    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1191792    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1191793    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1191794    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1191795    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1191796    end;
MPRINT(EM_DIAGRAM):   end;
1191797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191798    *;
 
1191799    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1191800    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1191801    if _ITER_ eq 10 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 then do;
1191802    output;
MPRINT(EM_DIAGRAM):   output;
1191803    stop;
MPRINT(EM_DIAGRAM):   stop;
1191804    end;
MPRINT(EM_DIAGRAM):   end;
1191805    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 1705
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191806    *;
1191807    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191808    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1191809    if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 10 and _NAME_ eq "OVERALL" then do;
1191810    output;
MPRINT(EM_DIAGRAM):   output;
1191811    stop;
MPRINT(EM_DIAGRAM):   stop;
1191812    end;
MPRINT(EM_DIAGRAM):   end;
1191813    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191814    *;
MPRINT(EM_DIAGRAM):    *;
1191815    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191816    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1191816  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1191817    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1191818    var _iter_ _aic_ _averr_ _misc_
1191819    _vaverr_ _vmisc_
1191820    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191821    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1130.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191822    title9;
MPRINT(EM_DIAGRAM):   title9;
1191823    title10;
MPRINT(EM_DIAGRAM):   title10;
1191824    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191825    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191826    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191827    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191828    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1191829    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191830    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1191831    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191832    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1191833    ;
MPRINT(EM_DIAGRAM):   ;
1191834    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191835    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1191836    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1191837    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1191838    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1191839    _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
1191840    _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
1191841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191842    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1191843    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1191844    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 24 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1191845    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1191846    ;
MPRINT(EM_DIAGRAM):   ;
1191847    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_ESTDS;
1191848    set EMWS8.AutoNeural28_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_BESTDS;
1191849    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1191850    *;
MPRINT(EM_DIAGRAM):    *;
1191851    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1191852    validdata=EMWS8.Varsel_VALIDATE
1191853    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1191854    *;
MPRINT(EM_DIAGRAM):   *;
1191855    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1191856    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1191857    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1191858    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1191859    target DepVar / level=NOMINAL id=DepVar
1191860    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1191861    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191862    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1191863    ;
MPRINT(EM_DIAGRAM):   ;
1191864    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191865    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1191866    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1191867    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1191868    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1191869    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1191870    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1191871    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1191872    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1191873    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1191874    Hidden 6 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=LOG;
1191875    connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
1191876    connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
1191877    Hidden 6 / id = H1x5_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x5_ act=LOG;
1191878    connect interval H1x5_;
MPRINT(EM_DIAGRAM):   connect interval H1x5_;
1191879    connect nominal H1x5_;
MPRINT(EM_DIAGRAM):   connect nominal H1x5_;
1191880    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191881    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1191882    ;
MPRINT(EM_DIAGRAM):   ;
1191883    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191884    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1191885    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1191886    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1191887    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1191888    connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
1191889    connect H1x5_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x1_;
1191890    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1191891    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1191892    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1191893    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1191894    connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
1191895    connect H1x5_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x2_;
1191896    Hidden 6 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=SOFTMAX;
1191897    connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
1191898    connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
1191899    connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
1191900    connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
1191901    connect H1x5_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x3_;
1191902    Hidden 6 / id = H2x4_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x4_ act=SOFTMAX;
1191903    connect H1x1_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x4_;
1191904    connect H1x2_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x4_;
1191905    connect H1x3_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x4_;
1191906    connect H1x4_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x4_;
1191907    connect H1x5_ H2x4_;
MPRINT(EM_DIAGRAM):   connect H1x5_ H2x4_;
1191908    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191909    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1191910    ;
MPRINT(EM_DIAGRAM):   ;
1191911    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191912    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1191913    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1191914    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1191915    connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
1191916    connect H2x4_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x4_ H3x1_;
1191917    Hidden 6 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SOFTMAX;
1191918    connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
1191919    connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
1191920    connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
1191921    connect H2x4_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x4_ H3x2_;
1191922    Hidden 6 / id = H3x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x3_ act=SOFTMAX;
1191923    connect H2x1_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x3_;
1191924    connect H2x2_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x3_;
1191925    connect H2x3_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x3_;
1191926    connect H2x4_ H3x3_;
MPRINT(EM_DIAGRAM):   connect H2x4_ H3x3_;
1191927    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191928    * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
1191929    ;
MPRINT(EM_DIAGRAM):   ;
1191930    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191931    Hidden 6 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SOFTMAX;
1191932    connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
1191933    connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
1191934    connect H3x3_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x3_ H4x1_;
1191935    Hidden 6 / id = H4x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x2_ act=SOFTMAX;
1191936    connect H3x1_ H4x2_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x2_;
1191937    connect H3x2_ H4x2_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x2_;
1191938    connect H3x3_ H4x2_;
MPRINT(EM_DIAGRAM):   connect H3x3_ H4x2_;
1191939    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191940    * Layer #5;
MPRINT(EM_DIAGRAM):   * Layer #5;
1191941    ;
MPRINT(EM_DIAGRAM):   ;
1191942    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191943    Hidden 6 / id = H5x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H5x1_ act=SOFTMAX;
1191944    connect H4x1_ H5x1_;
MPRINT(EM_DIAGRAM):   connect H4x1_ H5x1_;
1191945    connect H4x2_ H5x1_;
MPRINT(EM_DIAGRAM):   connect H4x2_ H5x1_;
1191946    connect H5x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H5x1_ DepVar;
1191947    *;
MPRINT(EM_DIAGRAM):   *;
1191948    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1191949    *;
MPRINT(EM_DIAGRAM):   *;
1191950    initial
1191951    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
1191952    ;
MPRINT(EM_DIAGRAM):   ;
1191953    *;
MPRINT(EM_DIAGRAM):   *;
1191954    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191955    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1191955  ! Search # 5 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
1191956    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1692 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
MPRINT(EM_DIAGRAM):   *;
1191957    tech = Default
1191958    inest = EMWS8.AutoNeural28_ESTDS bylabel
1191959    ;
1191960    *;
1191961    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1191962    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1191962  ! Search # 5 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=746
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1692 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1191963    train estiter=1 outest=_anest outfit=_anfit maxtime=746 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1191964    tech = Default;
1191965    ;
1191966    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           1:29.23
      cpu time            1:29.18
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1131.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:29.24
      cpu time            1:29.18
 
 
MPRINT(EM_DIAGRAM):   *;
1191967    *;
1191968    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1191969    var _iter_ _aic_ _averr_ _misc_
1191970    _vaverr_ _vmisc_
1191971    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1191972    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1132.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1191973    *------------------------------------------------------------*;
1191974    * Extract best iteration;
1191975    ;
1191976    *------------------------------------------------------------*;
1191977    %global _iter;
1191978    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1191979    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1191980    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1191981    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1191982    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1191983    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1191984    end;
MPRINT(EM_DIAGRAM):   end;
1191985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191986    *;
 
1191987    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1191988    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1191989    if _ITER_ eq 18 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 18 then do;
1191990    output;
MPRINT(EM_DIAGRAM):   output;
1191991    stop;
MPRINT(EM_DIAGRAM):   stop;
1191992    end;
MPRINT(EM_DIAGRAM):   end;
1191993    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 1692
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1191994    *;
1191995    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1191996    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1191997    if _ITER_ eq 18 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 18 and _NAME_ eq "OVERALL" then do;
1191998    output;
MPRINT(EM_DIAGRAM):   output;
1191999    stop;
MPRINT(EM_DIAGRAM):   stop;
1192000    end;
MPRINT(EM_DIAGRAM):   end;
1192001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1192002    *;
MPRINT(EM_DIAGRAM):    *;
1192003    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1192004    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1192004  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1192005    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1192006    var _iter_ _aic_ _averr_ _misc_
1192007    _vaverr_ _vmisc_
1192008    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1192009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1133.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192010    title9;
MPRINT(EM_DIAGRAM):   title9;
1192011    title10;
MPRINT(EM_DIAGRAM):   title10;
1192012    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1192013    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1192014    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1192015    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192016    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1192017    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1192018    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1192019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192020    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1192021    ;
MPRINT(EM_DIAGRAM):   ;
1192022    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1192023    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1192024    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1192025    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1192026    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1192027    _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
1192028    _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
1192029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192030    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1192031    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1192032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 25 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1192033    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1192034    set WORK.SAVEDS_AUTONEUR_1DLGQCI;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_1DLGQCI;
1192035    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_1DLGQCI.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192036    *;
MPRINT(EM_DIAGRAM):    *;
1192037    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1192038    validdata=EMWS8.Varsel_VALIDATE
1192039    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1192040    *;
MPRINT(EM_DIAGRAM):   *;
1192041    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1192042    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1192043    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1192044    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1192045    target DepVar / level=NOMINAL id=DepVar
1192046    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1192047    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192048    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1192049    ;
MPRINT(EM_DIAGRAM):   ;
1192050    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192051    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1192052    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1192053    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1192054    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1192055    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1192056    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1192057    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1192058    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1192059    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1192060    Hidden 6 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=LOG;
1192061    connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
1192062    connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
1192063    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192064    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1192065    ;
MPRINT(EM_DIAGRAM):   ;
1192066    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192067    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1192068    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1192069    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1192070    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1192071    connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
1192072    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1192073    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1192074    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1192075    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1192076    connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
1192077    Hidden 6 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=SOFTMAX;
1192078    connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
1192079    connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
1192080    connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
1192081    connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
1192082    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192083    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1192084    ;
MPRINT(EM_DIAGRAM):   ;
1192085    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192086    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1192087    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1192088    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1192089    connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
1192090    Hidden 6 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SOFTMAX;
1192091    connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
1192092    connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
1192093    connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
1192094    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192095    * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
1192096    ;
MPRINT(EM_DIAGRAM):   ;
1192097    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192098    Hidden 6 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SOFTMAX;
1192099    connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
1192100    connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
1192101    connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
1192102    *;
MPRINT(EM_DIAGRAM):   *;
1192103    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1192104    *;
MPRINT(EM_DIAGRAM):   *;
1192105    initial
1192106    inest = EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
1192107    ;
MPRINT(EM_DIAGRAM):   ;
1192108    *;
MPRINT(EM_DIAGRAM):   *;
1192109    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1192110    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1192110  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
1192111    prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural28_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 988 variables.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
MPRINT(EM_DIAGRAM):   *;
1192112    tech = Default
1192113    inest = EMWS8.AutoNeural28_ESTDS bylabel
1192114    ;
1192115    *;
1192116    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1192117    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1192117  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=723
maxiter=5 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 988 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1192118    train estiter=1 outest=_anest outfit=_anfit maxtime=723 maxiter=5
MPRINT(EM_DIAGRAM):   run;
1192119    tech = Default;
1192120    ;
1192121    run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           2.14 seconds
      cpu time            2.13 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 1134.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.15 seconds
      cpu time            2.16 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1192122    *;
1192123    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1192124    var _iter_ _aic_ _averr_ _misc_
1192125    _vaverr_ _vmisc_
1192126    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1192127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 1135.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192128    *------------------------------------------------------------*;
1192129    * Extract best iteration;
1192130    ;
1192131    *------------------------------------------------------------*;
1192132    %global _iter;
1192133    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1192134    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1192135    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1192136    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1192137    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1192138    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1192139    end;
MPRINT(EM_DIAGRAM):   end;
1192140    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1192141    *;
 
1192142    data EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_ESTDS;
1192143    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1192144    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1192145    output;
MPRINT(EM_DIAGRAM):   output;
1192146    stop;
MPRINT(EM_DIAGRAM):   stop;
1192147    end;
MPRINT(EM_DIAGRAM):   end;
1192148    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1192149    *;
1192150    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1192151    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1192152    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1192153    output;
MPRINT(EM_DIAGRAM):   output;
1192154    stop;
MPRINT(EM_DIAGRAM):   stop;
1192155    end;
MPRINT(EM_DIAGRAM):   end;
1192156    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192157    *;
MPRINT(EM_DIAGRAM):    *;
1192158    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1192159    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1192159  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1192160    proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_OUTFIT noobs;
1192161    var _iter_ _aic_ _averr_ _misc_
1192162    _vaverr_ _vmisc_
1192163    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1192164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 1136.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192165    title9;
MPRINT(EM_DIAGRAM):   title9;
1192166    title10;
MPRINT(EM_DIAGRAM):   title10;
1192167    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1192168    ;
MPRINT(EM_DIAGRAM):   ;
1192169    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1192170    set EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT;
1192171    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1192172    _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
1192173    _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
1192174    _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
1192175    _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
1192176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1192177    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_HISTORY;
1192178    set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY EMWS8.AutoNeural28_OUTFIT;
1192179    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL28_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 26 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192180    title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
1192181    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
1192181  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
1192182    proc print data=EMWS8.AutoNeural28_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_HISTORY noobs;
1192183    var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
1192184    _vaverr_ _vmisc_
1192185    ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
1192186    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: The PROCEDURE PRINT printed page 1137.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192187    data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
1192188    set EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY;
1192189    if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
1192190    if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
1192191    else neurons=6;
MPRINT(EM_DIAGRAM):   else neurons=6;
1192192    label neurons="%sysfunc(sasmsg(sashelp.dmine,
1192192  ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
1192193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set
      EMWS8.AUTONEURAL28_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 4 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1192194    title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
1192195    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
1192195  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
1192196    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
1192196  ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
1192196  ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
1192197    proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
1192198    var _func_ _averr_
1192199    _vaverr_
1192200    neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
1192201    sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
1192202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 1138.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192203    title8;
MPRINT(EM_DIAGRAM):   title8;
1192204    title9;
MPRINT(EM_DIAGRAM):   title9;
1192205    title10;
MPRINT(EM_DIAGRAM):   title10;
1192206    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192207    * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
1192208    ;
MPRINT(EM_DIAGRAM):   ;
1192209    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192210    *;
MPRINT(EM_DIAGRAM):   *;
1192211    proc neural data=EM_AutoNeural28 dmdbcat=WORK.AutoNeural28_DMDB
1192212    validdata=EMWS8.Varsel_VALIDATE
1192213    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural28
dmdbcat=WORK.AutoNeural28_DMDB validdata=EMWS8.Varsel_VALIDATE ;
1192214    *;
MPRINT(EM_DIAGRAM):   *;
1192215    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1192216    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1192217    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Income Mnt MntGoldProds
MntMeatProducts MntWines NumDistPurchases RFMstat RMntFrq Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1192218    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   G_Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1192219    target DepVar / level=NOMINAL id=DepVar
1192220    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1192221    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192222    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1192223    ;
MPRINT(EM_DIAGRAM):   ;
1192224    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192225    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1192226    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1192227    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1192228    Hidden 6 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x2_ act=LOG;
1192229    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1192230    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1192231    Hidden 6 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x3_ act=LOG;
1192232    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1192233    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1192234    Hidden 6 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x4_ act=LOG;
1192235    connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
1192236    connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
1192237    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192238    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1192239    ;
MPRINT(EM_DIAGRAM):   ;
1192240    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192241    Hidden 6 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x1_ act=SOFTMAX;
1192242    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1192243    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1192244    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1192245    connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
1192246    Hidden 6 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x2_ act=SOFTMAX;
1192247    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1192248    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1192249    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1192250    connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
1192251    Hidden 6 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H2x3_ act=SOFTMAX;
1192252    connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
1192253    connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
1192254    connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
1192255    connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
1192256    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192257    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1192258    ;
MPRINT(EM_DIAGRAM):   ;
1192259    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192260    Hidden 6 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x1_ act=SOFTMAX;
1192261    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1192262    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1192263    connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
1192264    Hidden 6 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H3x2_ act=SOFTMAX;
1192265    connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
1192266    connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
1192267    connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
1192268    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192269    * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
1192270    ;
MPRINT(EM_DIAGRAM):   ;
1192271    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192272    Hidden 6 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H4x1_ act=SOFTMAX;
1192273    connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
1192274    connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
1192275    connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
1192276    *;
MPRINT(EM_DIAGRAM):   *;
1192277    initial inest= EMWS8.AutoNeural28_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural28_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL28_ESTDS has 1 observations and 988
      variables.
1192278    train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
1192279    code
1192279  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\SCO
1192279  ! RECODE.sas"
1192280    group=AutoNeural28
1192281    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\SCORECODE.sas"
 group=AutoNeural28 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\SCORECODE.sas
      opened.
1192282    ;
MPRINT(EM_DIAGRAM):   ;
1192283    code
1192283  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\RES
1192283  ! IDUALSCORECODE.sas"
1192284    group=AutoNeural28
1192285    residual
1192286    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\RESIDUALSCOREC
ODE.sas" group=AutoNeural28 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\RESIDUALSCOREC
      ODE.sas opened.
1192287    ;
MPRINT(EM_DIAGRAM):   ;
1192288    score data=EMWS8.Varsel_TRAIN out=_NULL_
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
1192289    outfit=WORK.FIT1
1192290    role=TRAIN
1192291    outkey=EMWS8.AutoNeural28_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Varsel_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural28_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL28_OUTKEY has 85 observations and 8
      variables.
NOTE: The data set EMWS8.VARSEL_TRAIN has . observations and 47 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
1192292    score data=EMWS8.Varsel_VALIDATE out=_NULL_
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
1192293    outfit=WORK.FIT2
1192294    outkey=EMWS8.AutoNeural28_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Varsel_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural28_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL28_OUTKEY has 85 observations and 8
      variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
1192295    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL28 has 2374 observations and 13 variables.
NOTE: The data set EMWS8.VARSEL_VALIDATE has . observations and 47 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.28 seconds
      cpu time            0.29 seconds
 
 
1192296    data EMWS8.AutoNeural28_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_OUTFIT;
1192297    merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
1192298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192299    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192300    * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
1192301    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1192302    data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
1192302  ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
1192303    set EMWS8.AutoNeural28_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_ESTDS;
1192304    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 980 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1192305    proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
1192306    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1192307    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 980 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1192308    proc transpose data=tempweight out=EMWS8.AutoNeural28_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural28_WEIGHTS;
1192309    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1192310    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL28_WEIGHTS has 978 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1192311    data EMWS8.AutoNeural28_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_WEIGHTS;
1192312    set EMWS8.AutoNeural28_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_WEIGHTS;
1192313    FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
1192314    TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
1192315    WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
1192316    if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
1192317    label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
1192317  ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
1192317  ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
1192317  ! NOQUOTE))" WEIGHT =
1192318       "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
1192319    keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
1192320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 978 observations read from the data set
      EMWS8.AUTONEURAL28_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL28_WEIGHTS has 973 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
1192321    * restore printing options;
1192322    ;
1192323    title10;
MPRINT(EM_DIAGRAM):   title10;
1192324    options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
1192325    options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
1192326    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1192327    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1192328    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
1192329    *;
1192330    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1192331    delete EM_AutoNeural28;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural28;
1192332    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL28 (memtype=DATA).
1192333    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1192334    data EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_HISTORY;
1192335    set EMWS8.AutoNeural28_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_HISTORY;
1192336    label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
1192337    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
1192337  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
1192338    _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
1192339    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.AUTONEURAL28_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL28_HISTORY has 26 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.21 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                09.21 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O09MY6E1
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O09MY6E1 new;
MPRINT(EM_DIAGRAM):   run;
1192441    filename emflow
1192441  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192442    *------------------------------------------------------------*;
1192443    * AutoNeural28: Scoring DATA data;
1192444    *------------------------------------------------------------*;
1192445    data EMWS8.AutoNeural28_TRAIN
1192446    / view=EMWS8.AutoNeural28_TRAIN
1192447    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_TRAIN / view=EMWS8.AutoNeural28_TRAIN ;
1192448    set EMWS8.Varsel_TRAIN
1192449    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
1192450    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas.
1192451   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1192452   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1192453   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1192454   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1192455   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1192456   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1192457   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1192458   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1192459   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1192460   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1192461   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1192462   +LENGTH _WARN_ $4
1192463   +      F_DepVar  $ 12
1192464   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1192465   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1192466   +
1192467   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1192468   +
1192469   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1192470   +
1192471   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1192472   +
1192473   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1192474   +
1192475   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1192476   +
1192477   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1192478   +
1192479   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1192480   +
1192481   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1192482   +
1192483   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1192484   +
1192485   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1192486   +
1192487   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1192488   +
1192489   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1192490   +
1192491   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1192492   +
1192493   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1192494   +
1192495   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1192496   +
1192497   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1192498   +
1192499   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1192500   +
1192501   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1192502   +
1192503   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1192504   +
1192505   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1192506   +
1192507   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1192508   +
1192509   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1192510   +
1192511   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1192512   +
1192513   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1192514   +
1192515   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1192516   +
1192517   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1192518   +
1192519   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1192520   +
1192521   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1192522   +
1192523   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1192524   +
1192525   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
1192526   +
1192527   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1192528   +
1192529   +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
1192530   +
1192531   +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
1192532   +
1192533   +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
1192534   +
1192535   +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
1192536   +
1192537   +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
1192538   +
1192539   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1192540   +
1192541   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1192542   +
1192543   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1192544   +
1192545   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1192546   +
1192547   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1192548   +
1192549   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1192550   +
1192551   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1192552   +
1192553   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1192554   +
1192555   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1192556   +
1192557   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1192558   +
1192559   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1192560   +
1192561   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
1192562   +
1192563   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1192564   +
1192565   +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
1192566   +
1192567   +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
1192568   +
1192569   +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
1192570   +
1192571   +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
1192572   +
1192573   +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
1192574   +
1192575   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1192576   +
1192577   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1192578   +
1192579   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1192580   +
1192581   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1192582   +
1192583   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1192584   +
1192585   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
1192586   +
1192587   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1192588   +
1192589   +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
1192590   +
1192591   +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
1192592   +
1192593   +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
1192594   +
1192595   +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
1192596   +
1192597   +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
1192598   +
1192599   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1192600   +
1192601   +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
1192602   +
1192603   +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
1192604   +
1192605   +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
1192606   +
1192607   +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
1192608   +
1192609   +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
1192610   +
1192611   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1192612   +
1192613   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1192614   +
1192615   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1192616   +
1192617   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1192618   +
1192619   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1192620   +
1192621   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1192622   +
1192623   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1192624   +
1192625   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1192626   +
1192627   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1192628   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1192629   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1192630   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1192631   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1192632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192634   +end;
MPRINT(EM_DIAGRAM):   end;
1192635   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192636   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192637   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1192638   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192639   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1192640   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1192641   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1192642   +   end;
MPRINT(EM_DIAGRAM):   end;
1192643   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1192644   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1192645   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1192646   +   end;
MPRINT(EM_DIAGRAM):   end;
1192647   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1192648   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1192649   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1192650   +   end;
MPRINT(EM_DIAGRAM):   end;
1192651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192652   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1192653   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1192654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192656   +   end;
MPRINT(EM_DIAGRAM):   end;
1192657   +end;
MPRINT(EM_DIAGRAM):   end;
1192658   +
1192659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192660   +*** Checking missing input Interval
1192661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1192662   +
1192663   +IF NMISS(
1192664   +   AcceptedCmpTotal ,
1192665   +   Frq ,
1192666   +   Income ,
1192667   +   Mnt ,
1192668   +   MntGoldProds ,
1192669   +   MntMeatProducts ,
1192670   +   MntWines ,
1192671   +   NumDistPurchases ,
1192672   +   RFMstat ,
1192673   +   RMntFrq ,
1192674   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1192675   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1192676   +
1192677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192678   +END;
MPRINT(EM_DIAGRAM):   END;
1192679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192680   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1192681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192682   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192683   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1192684   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1192685   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1192686   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1192687   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1192688   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1192689   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1192690   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1192691   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1192692   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1192693   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1192694   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1192695   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1192696   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1192697   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1192698   +END;
MPRINT(EM_DIAGRAM):   END;
1192699   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192700   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1192701   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1192702   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1192703   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1192704   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1192705   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1192706   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1192707   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1192708   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1192709   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1192710   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1192711   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1192712   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1192713   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1192714   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1192715   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1192716   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1192717   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1192718   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1192719   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1192720   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1192721   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1192722   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1192723   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1192724   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1192725   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1192726   +END;
MPRINT(EM_DIAGRAM):   END;
1192727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192728   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1192729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192731   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1192732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192733   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192734   +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
1192735   +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
1192736   +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
1192737   +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
1192738   +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
1192739   +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
1192740   +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
1192741   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 *
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 *
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines +
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 *
S_RMntFrq + -5.00157954960261 * S_Recency ;
1192742   +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
1192743   +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
1192744   +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
1192745   +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
1192746   +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
1192747   +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
1192748   +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
1192749   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 *
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 *
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines +
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 *
S_RMntFrq + 0.376849190211 * S_Recency ;
1192750   +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
1192751   +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
1192752   +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
1192753   +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
1192754   +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
1192755   +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
1192756   +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
1192757   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 *
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 *
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines +
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 *
S_RMntFrq + 1.45489277444882 * S_Recency ;
1192758   +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
1192759   +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
1192760   +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
1192761   +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
1192762   +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
1192763   +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
1192764   +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
1192765   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 *
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 *
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines +
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 *
S_RMntFrq + -1.62001903467763 * S_Recency ;
1192766   +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
1192767   +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
1192768   +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
1192769   +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
1192770   +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
1192771   +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
1192772   +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
1192773   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 *
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 *
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines +
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 *
S_RMntFrq + 0.51475149451235 * S_Recency ;
1192774   +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
1192775   +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
1192776   +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
1192777   +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
1192778   +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
1192779   +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
1192780   +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
1192781   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 *
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 *
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines +
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 *
S_RMntFrq + -1.97053621157132 * S_Recency ;
1192782   +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
1192783   +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 +
0.90195662603521 * G_Marital_Status1 ;
1192784   +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
1192785   +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 +
-0.49019446056296 * G_Marital_Status1 ;
1192786   +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
1192787   +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 +
1.10544938214372 * G_Marital_Status1 ;
1192788   +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
1192789   +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 +
0.87683669160259 * G_Marital_Status1 ;
1192790   +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
1192791   +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 +
-0.13246180955576 * G_Marital_Status1 ;
1192792   +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
1192793   +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 +
0.24707257141342 * G_Marital_Status1 ;
1192794   +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
1192795   +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
1192796   +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
1192797   +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
1192798   +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
1192799   +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
1192800   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1192801   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1192802   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1192803   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1192804   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1192805   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1192806   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1192807   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1192808   +END;
MPRINT(EM_DIAGRAM):   END;
1192809   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192810   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1192811   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1192812   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1192813   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1192814   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1192815   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1192816   +END;
MPRINT(EM_DIAGRAM):   END;
1192817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192818   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1192819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192820   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192821   +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
1192822   +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
1192823   +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
1192824   +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
1192825   +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
1192826   +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
1192827   +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
1192828   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 *
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 *
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines +
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 *
S_RMntFrq + 0.2335216261547 * S_Recency ;
1192829   +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
1192830   +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
1192831   +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
1192832   +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
1192833   +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
1192834   +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
1192835   +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
1192836   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 *
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 *
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines +
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 *
S_RMntFrq + -2.14859674388241 * S_Recency ;
1192837   +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
1192838   +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
1192839   +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
1192840   +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
1192841   +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
1192842   +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
1192843   +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
1192844   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 *
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 *
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines +
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 *
S_RMntFrq + 0.72727673065668 * S_Recency ;
1192845   +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
1192846   +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
1192847   +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
1192848   +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
1192849   +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
1192850   +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
1192851   +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
1192852   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 *
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 *
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines +
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 *
S_RMntFrq + -1.42094697023704 * S_Recency ;
1192853   +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
1192854   +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
1192855   +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
1192856   +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
1192857   +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
1192858   +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
1192859   +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
1192860   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 *
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 *
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines +
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 *
S_RMntFrq + -0.08024855242737 * S_Recency ;
1192861   +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
1192862   +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
1192863   +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
1192864   +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
1192865   +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
1192866   +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
1192867   +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
1192868   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 *
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 *
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines +
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 *
S_RMntFrq + 1.79661996586627 * S_Recency ;
1192869   +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
1192870   +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 +
0.61190614442174 * G_Marital_Status1 ;
1192871   +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
1192872   +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 +
-0.43943770039245 * G_Marital_Status1 ;
1192873   +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
1192874   +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 +
0.36969296112687 * G_Marital_Status1 ;
1192875   +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
1192876   +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 +
-0.48897798100871 * G_Marital_Status1 ;
1192877   +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
1192878   +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 +
-0.0768652239427 * G_Marital_Status1 ;
1192879   +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
1192880   +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 +
-0.58590001312977 * G_Marital_Status1 ;
1192881   +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
1192882   +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
1192883   +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
1192884   +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
1192885   +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
1192886   +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
1192887   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1192888   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1192889   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1192890   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1192891   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1192892   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1192893   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1192894   +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
1192895   +END;
MPRINT(EM_DIAGRAM):   END;
1192896   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192897   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1192898   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1192899   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1192900   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1192901   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1192902   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1192903   +END;
MPRINT(EM_DIAGRAM):   END;
1192904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192905   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1192906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192907   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192908   +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
1192909   +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
1192910   +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
1192911   +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
1192912   +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
1192913   +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
1192914   +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
1192915   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 *
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 *
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines +
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 *
S_RMntFrq + -0.05038100966606 * S_Recency ;
1192916   +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
1192917   +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
1192918   +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
1192919   +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
1192920   +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
1192921   +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
1192922   +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
1192923   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 *
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 *
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines +
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 *
S_RMntFrq + 0.90023461529092 * S_Recency ;
1192924   +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
1192925   +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
1192926   +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
1192927   +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
1192928   +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
1192929   +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
1192930   +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
1192931   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 *
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 *
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines +
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 *
S_RMntFrq + -1.00117301133743 * S_Recency ;
1192932   +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
1192933   +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
1192934   +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
1192935   +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
1192936   +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
1192937   +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
1192938   +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
1192939   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 *
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 *
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines +
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 *
S_RMntFrq + 1.51096273676103 * S_Recency ;
1192940   +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
1192941   +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
1192942   +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
1192943   +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
1192944   +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
1192945   +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
1192946   +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
1192947   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 *
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 *
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines +
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 *
S_RMntFrq + 0.65859109347516 * S_Recency ;
1192948   +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
1192949   +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
1192950   +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
1192951   +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
1192952   +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
1192953   +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
1192954   +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
1192955   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 *
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 *
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines +
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 *
S_RMntFrq + 0.40747604583851 * S_Recency ;
1192956   +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
1192957   +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 +
2.03049158937708 * G_Marital_Status1 ;
1192958   +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
1192959   +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 +
0.95456795317325 * G_Marital_Status1 ;
1192960   +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
1192961   +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 +
-0.64267205173982 * G_Marital_Status1 ;
1192962   +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
1192963   +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 +
-0.13878277097624 * G_Marital_Status1 ;
1192964   +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
1192965   +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983
* G_Marital_Status1 ;
1192966   +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
1192967   +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 +
-1.38939757582535 * G_Marital_Status1 ;
1192968   +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
1192969   +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
1192970   +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
1192971   +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
1192972   +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
1192973   +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
1192974   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1192975   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1192976   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1192977   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1192978   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1192979   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1192980   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1192981   +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
1192982   +END;
MPRINT(EM_DIAGRAM):   END;
1192983   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192984   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1192985   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1192986   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1192987   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1192988   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1192989   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
1192990   +END;
MPRINT(EM_DIAGRAM):   END;
1192991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192992   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1192993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192994   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192995   +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
1192996   +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
1192997   +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
1192998   +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
1192999   +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
1193000   +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
1193001   +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
1193002   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 *
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 *
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines +
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 *
S_RMntFrq + 1.46038466341548 * S_Recency ;
1193003   +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
1193004   +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
1193005   +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
1193006   +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
1193007   +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
1193008   +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
1193009   +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
1193010   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 *
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 *
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines +
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 *
S_RMntFrq + 1.48508197039719 * S_Recency ;
1193011   +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
1193012   +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
1193013   +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
1193014   +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
1193015   +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
1193016   +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
1193017   +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
1193018   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 *
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 *
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines +
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 *
S_RMntFrq + -0.15926282047245 * S_Recency ;
1193019   +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
1193020   +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
1193021   +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
1193022   +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
1193023   +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
1193024   +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
1193025   +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
1193026   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 *
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 *
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines +
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 *
S_RMntFrq + -0.01945293751142 * S_Recency ;
1193027   +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
1193028   +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
1193029   +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
1193030   +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
1193031   +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
1193032   +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
1193033   +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
1193034   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 *
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 *
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines +
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 *
S_RMntFrq + 0.74380794599056 * S_Recency ;
1193035   +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
1193036   +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
1193037   +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
1193038   +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
1193039   +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
1193040   +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
1193041   +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
1193042   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 *
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 *
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines +
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 *
S_RMntFrq + 0.85268992665591 * S_Recency ;
1193043   +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
1193044   +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 +
1.82577173192743 * G_Marital_Status1 ;
1193045   +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
1193046   +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 +
1.86494194086223 * G_Marital_Status1 ;
1193047   +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
1193048   +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 +
-0.78535196846115 * G_Marital_Status1 ;
1193049   +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
1193050   +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 +
-1.13643623224979 * G_Marital_Status1 ;
1193051   +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
1193052   +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 +
-0.50611098994468 * G_Marital_Status1 ;
1193053   +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
1193054   +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 +
1.05855030017376 * G_Marital_Status1 ;
1193055   +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
1193056   +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
1193057   +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
1193058   +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
1193059   +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
1193060   +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
1193061   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1193062   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1193063   +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
1193064   +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
1193065   +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
1193066   +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
1193067   +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
1193068   +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
1193069   +END;
MPRINT(EM_DIAGRAM):   END;
1193070   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193071   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
1193072   +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
1193073   +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
1193074   +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
1193075   +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
1193076   +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
1193077   +END;
MPRINT(EM_DIAGRAM):   END;
1193078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193079   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1193080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193081   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193082   +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
1193083   +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
1193084   +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 +
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 +
-0.85059681057218 * H1x1_6 ;
1193085   +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
1193086   +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
1193087   +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 +
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 +
-0.32310175742174 * H1x1_6 ;
1193088   +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
1193089   +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
1193090   +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 +
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 +
0.01697480121243 * H1x1_6 ;
1193091   +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
1193092   +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
1193093   +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 +
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 +
0.10016209874446 * H1x1_6 ;
1193094   +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
1193095   +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
1193096   +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 +
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 +
1.50580112761945 * H1x1_6 ;
1193097   +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
1193098   +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
1193099   +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
1193100   +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 +
-0.36964326956968 * H1x2_6 ;
1193101   +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
1193102   +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
1193103   +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
1193104   +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 +
-0.0675747785188 * H1x2_6 ;
1193105   +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
1193106   +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
1193107   +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
1193108   +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 +
0.20622228187831 * H1x2_6 ;
1193109   +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
1193110   +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
1193111   +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
1193112   +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 +
0.99704195296742 * H1x2_6 ;
1193113   +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
1193114   +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
1193115   +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
1193116   +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 +
0.52117926766363 * H1x2_6 ;
1193117   +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
1193118   +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
1193119   +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
1193120   +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 +
0.010792162082 * H1x3_6 ;
1193121   +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
1193122   +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
1193123   +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
1193124   +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 +
0.31051080747621 * H1x3_6 ;
1193125   +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
1193126   +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
1193127   +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
1193128   +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 +
0.4901677948096 * H1x3_6 ;
1193129   +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
1193130   +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
1193131   +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
1193132   +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 +
-0.35850032269696 * H1x3_6 ;
1193133   +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
1193134   +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
1193135   +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
1193136   +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 *
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 +
0.91538472149247 * H1x3_6 ;
1193137   +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
1193138   +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
1193139   +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
1193140   +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 *
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 +
1.46692133055956 * H1x4_6 ;
1193141   +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
1193142   +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
1193143   +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
1193144   +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 +
-0.4804481967354 * H1x4_6 ;
1193145   +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
1193146   +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
1193147   +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
1193148   +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 +
-0.79556185531974 * H1x4_6 ;
1193149   +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
1193150   +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
1193151   +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
1193152   +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 +
-0.22377472142722 * H1x4_6 ;
1193153   +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
1193154   +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
1193155   +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
1193156   +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 *
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 +
0.49805259687865 * H1x4_6 ;
1193157   +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
1193158   +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
1193159   +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
1193160   +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
1193161   +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
1193162   +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
1193163   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
1193164   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193165   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1193166   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1193167   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1193168   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1193169   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1193170   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1193171   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1193172   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1193173   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1193174   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1193175   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1193176   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1193177   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1193178   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1193179   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1193180   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1193181   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1193182   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1193183   +END;
MPRINT(EM_DIAGRAM):   END;
1193184   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193185   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1193186   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1193187   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1193188   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1193189   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1193190   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1193191   +END;
MPRINT(EM_DIAGRAM):   END;
1193192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193193   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1193194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193195   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193196   +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
1193197   +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
1193198   +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 +
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 +
1.73108900683337 * H1x1_6 ;
1193199   +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
1193200   +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
1193201   +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 +
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 +
1.44831802939799 * H1x1_6 ;
1193202   +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
1193203   +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
1193204   +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 +
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 +
-1.33423515707253 * H1x1_6 ;
1193205   +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
1193206   +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
1193207   +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 +
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 +
0.57571476480191 * H1x1_6 ;
1193208   +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
1193209   +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
1193210   +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 +
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 +
-2.01222927536337 * H1x1_6 ;
1193211   +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
1193212   +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
1193213   +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
1193214   +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 +
-0.86707973977777 * H1x2_6 ;
1193215   +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
1193216   +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
1193217   +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
1193218   +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 +
0.34775419906833 * H1x2_6 ;
1193219   +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
1193220   +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
1193221   +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
1193222   +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 +
-0.92757761378206 * H1x2_6 ;
1193223   +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
1193224   +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
1193225   +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
1193226   +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 *
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 +
1.22882033880531 * H1x2_6 ;
1193227   +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
1193228   +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
1193229   +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
1193230   +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 +
1.13665339513142 * H1x2_6 ;
1193231   +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
1193232   +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
1193233   +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
1193234   +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 *
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 +
-0.84355541605354 * H1x3_6 ;
1193235   +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
1193236   +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
1193237   +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
1193238   +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 +
-0.14832407235293 * H1x3_6 ;
1193239   +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
1193240   +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
1193241   +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
1193242   +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 +
0.41209753590668 * H1x3_6 ;
1193243   +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
1193244   +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
1193245   +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
1193246   +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 +
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 +
0.05356295771962 * H1x3_6 ;
1193247   +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
1193248   +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
1193249   +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
1193250   +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 +
1.3865980084186 * H1x3_6 ;
1193251   +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
1193252   +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
1193253   +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
1193254   +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 +
0.16602366912489 * H1x4_6 ;
1193255   +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
1193256   +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
1193257   +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
1193258   +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 +
-0.9577144624714 * H1x4_6 ;
1193259   +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
1193260   +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
1193261   +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
1193262   +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 *
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 +
-0.86962851115528 * H1x4_6 ;
1193263   +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
1193264   +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
1193265   +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
1193266   +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 +
2.01216139921959 * H1x4_6 ;
1193267   +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
1193268   +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
1193269   +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
1193270   +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 *
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 +
-0.19026348436175 * H1x4_6 ;
1193271   +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
1193272   +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
1193273   +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
1193274   +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
1193275   +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
1193276   +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
1193277   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
1193278   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193279   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1193280   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1193281   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1193282   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1193283   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1193284   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1193285   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1193286   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1193287   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1193288   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1193289   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
1193290   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
1193291   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1193292   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1193293   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1193294   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1193295   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1193296   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
1193297   +END;
MPRINT(EM_DIAGRAM):   END;
1193298   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193299   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1193300   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1193301   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1193302   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1193303   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1193304   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
1193305   +END;
MPRINT(EM_DIAGRAM):   END;
1193306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193307   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1193308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193309   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193310   +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
1193311   +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
1193312   +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 +
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 +
0.75959028005652 * H1x1_6 ;
1193313   +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
1193314   +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
1193315   +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 +
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 +
-0.79989554227284 * H1x1_6 ;
1193316   +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
1193317   +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
1193318   +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 +
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 +
1.46105111567983 * H1x1_6 ;
1193319   +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
1193320   +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
1193321   +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 +
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 +
-0.03142746343877 * H1x1_6 ;
1193322   +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
1193323   +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
1193324   +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 +
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 +
2.29818718782262 * H1x1_6 ;
1193325   +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
1193326   +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
1193327   +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
1193328   +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 *
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 +
-0.39006326539815 * H1x2_6 ;
1193329   +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
1193330   +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
1193331   +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
1193332   +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 +
0.87575796008942 * H1x2_6 ;
1193333   +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
1193334   +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
1193335   +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
1193336   +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 +
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 +
-0.99288712489296 * H1x2_6 ;
1193337   +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
1193338   +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
1193339   +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
1193340   +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 +
2.18684373678918 * H1x2_6 ;
1193341   +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
1193342   +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
1193343   +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
1193344   +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 +
0.0384736341173 * H1x2_6 ;
1193345   +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
1193346   +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
1193347   +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
1193348   +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 +
-0.65863037608331 * H1x3_6 ;
1193349   +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
1193350   +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
1193351   +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
1193352   +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 +
-0.2732767866426 * H1x3_6 ;
1193353   +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
1193354   +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
1193355   +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
1193356   +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 +
0.95358246629929 * H1x3_6 ;
1193357   +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
1193358   +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
1193359   +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
1193360   +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 +
-1.50364154763084 * H1x3_6 ;
1193361   +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
1193362   +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
1193363   +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
1193364   +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 *
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 +
0.3673818114501 * H1x3_6 ;
1193365   +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
1193366   +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
1193367   +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
1193368   +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 +
-0.876005602164 * H1x4_6 ;
1193369   +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
1193370   +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
1193371   +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
1193372   +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 +
0.51236653129509 * H1x4_6 ;
1193373   +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
1193374   +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
1193375   +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
1193376   +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 +
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 +
0.14855508666868 * H1x4_6 ;
1193377   +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
1193378   +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
1193379   +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
1193380   +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 +
1.60853840268286 * H1x4_6 ;
1193381   +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
1193382   +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
1193383   +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
1193384   +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 +
0.6650692994568 * H1x4_6 ;
1193385   +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
1193386   +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
1193387   +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
1193388   +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
1193389   +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
1193390   +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
1193391   +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
1193392   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193393   +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
1193394   +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
1193395   +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
1193396   +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
1193397   +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
1193398   +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
1193399   +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
1193400   +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
1193401   +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
1193402   +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
1193403   +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
1193404   +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
1193405   +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
1193406   +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
1193407   +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
1193408   +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
1193409   +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
1193410   +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
1193411   +END;
MPRINT(EM_DIAGRAM):   END;
1193412   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193413   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1193414   +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
1193415   +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
1193416   +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
1193417   +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
1193418   +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
1193419   +END;
MPRINT(EM_DIAGRAM):   END;
1193420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193421   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1193422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193423   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193424   +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
1193425   +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
1193426   +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 +
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 +
0.62066324264653 * H2x1_6 ;
1193427   +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
1193428   +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
1193429   +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 +
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 +
1.70699964755049 * H2x1_6 ;
1193430   +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
1193431   +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
1193432   +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 +
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 +
-0.60932405988373 * H2x1_6 ;
1193433   +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
1193434   +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
1193435   +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 +
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 +
-0.04997148078498 * H2x1_6 ;
1193436   +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
1193437   +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
1193438   +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 +
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 +
-1.98639459325872 * H2x1_6 ;
1193439   +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
1193440   +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
1193441   +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
1193442   +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 +
2.04617275364668 * H2x2_6 ;
1193443   +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
1193444   +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
1193445   +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
1193446   +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 +
-0.37660795680674 * H2x2_6 ;
1193447   +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
1193448   +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
1193449   +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
1193450   +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 +
-0.43453791992382 * H2x2_6 ;
1193451   +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
1193452   +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
1193453   +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
1193454   +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 +
-3.30381142208727 * H2x2_6 ;
1193455   +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
1193456   +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
1193457   +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
1193458   +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 +
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 +
-0.34019675397366 * H2x2_6 ;
1193459   +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
1193460   +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
1193461   +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
1193462   +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 +
0.59340663088806 * H2x3_6 ;
1193463   +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
1193464   +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
1193465   +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
1193466   +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 +
0.67050797164115 * H2x3_6 ;
1193467   +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
1193468   +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
1193469   +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
1193470   +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 *
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 +
-0.51274988768251 * H2x3_6 ;
1193471   +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
1193472   +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
1193473   +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
1193474   +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 +
-0.73773727947747 * H2x3_6 ;
1193475   +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
1193476   +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
1193477   +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
1193478   +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 *
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 +
-1.07137645697526 * H2x3_6 ;
1193479   +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
1193480   +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
1193481   +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
1193482   +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
1193483   +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
1193484   +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
1193485   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
1193486   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193487   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1193488   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1193489   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1193490   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1193491   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1193492   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1193493   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1193494   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1193495   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1193496   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1193497   +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
1193498   +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
1193499   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1193500   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1193501   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1193502   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1193503   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1193504   +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
1193505   +END;
MPRINT(EM_DIAGRAM):   END;
1193506   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193507   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1193508   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1193509   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1193510   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1193511   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1193512   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
1193513   +END;
MPRINT(EM_DIAGRAM):   END;
1193514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193515   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1193516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193517   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193518   +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
1193519   +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
1193520   +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 +
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 +
0.50683843245151 * H2x1_6 ;
1193521   +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
1193522   +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
1193523   +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 +
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 +
-0.00458488228083 * H2x1_6 ;
1193524   +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
1193525   +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
1193526   +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 +
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 +
0.23483419363088 * H2x1_6 ;
1193527   +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
1193528   +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
1193529   +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 +
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 +
-0.69393637888423 * H2x1_6 ;
1193530   +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
1193531   +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
1193532   +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 +
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 +
-0.03264500335093 * H2x1_6 ;
1193533   +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
1193534   +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
1193535   +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
1193536   +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 +
-0.6527392657117 * H2x2_6 ;
1193537   +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
1193538   +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
1193539   +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
1193540   +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 *
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 +
-0.40911363767301 * H2x2_6 ;
1193541   +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
1193542   +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
1193543   +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
1193544   +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 +
-1.14035867434772 * H2x2_6 ;
1193545   +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
1193546   +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
1193547   +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
1193548   +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 +
-1.32783167695801 * H2x2_6 ;
1193549   +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
1193550   +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
1193551   +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
1193552   +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 +
0.17488501957475 * H2x2_6 ;
1193553   +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
1193554   +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
1193555   +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
1193556   +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 +
-0.17544617255869 * H2x3_6 ;
1193557   +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
1193558   +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
1193559   +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
1193560   +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 +
1.14672043219259 * H2x3_6 ;
1193561   +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
1193562   +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
1193563   +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
1193564   +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 +
1.02889511152823 * H2x3_6 ;
1193565   +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
1193566   +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
1193567   +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
1193568   +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 *
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 +
0.10073869982371 * H2x3_6 ;
1193569   +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
1193570   +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
1193571   +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
1193572   +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 +
0.97496084656174 * H2x3_6 ;
1193573   +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
1193574   +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
1193575   +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
1193576   +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
1193577   +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
1193578   +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
1193579   +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
1193580   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193581   +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
1193582   +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
1193583   +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
1193584   +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
1193585   +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
1193586   +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
1193587   +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
1193588   +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
1193589   +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
1193590   +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
1193591   +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
1193592   +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
1193593   +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
1193594   +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
1193595   +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
1193596   +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
1193597   +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
1193598   +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
1193599   +END;
MPRINT(EM_DIAGRAM):   END;
1193600   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193601   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1193602   +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
1193603   +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
1193604   +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
1193605   +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
1193606   +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
1193607   +END;
MPRINT(EM_DIAGRAM):   END;
1193608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193609   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1193610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193611   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193612   +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
1193613   +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
1193614   +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 +
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 +
-0.66853997603718 * H3x1_6 ;
1193615   +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
1193616   +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
1193617   +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 +
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 +
0.99276034828548 * H3x1_6 ;
1193618   +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
1193619   +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
1193620   +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 +
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 +
-0.38609823936674 * H3x1_6 ;
1193621   +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
1193622   +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
1193623   +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 +
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 +
-0.80603399686936 * H3x1_6 ;
1193624   +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
1193625   +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
1193626   +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 +
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 +
-1.56166867584216 * H3x1_6 ;
1193627   +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
1193628   +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
1193629   +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
1193630   +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 +
0.77216806897502 * H3x2_6 ;
1193631   +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
1193632   +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
1193633   +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
1193634   +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 +
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 +
0.73971378600397 * H3x2_6 ;
1193635   +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
1193636   +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
1193637   +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
1193638   +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 +
0.90907054011344 * H3x2_6 ;
1193639   +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
1193640   +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
1193641   +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
1193642   +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 *
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 +
0.95412028439169 * H3x2_6 ;
1193643   +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
1193644   +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
1193645   +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
1193646   +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 +
-0.0058627670025 * H3x2_6 ;
1193647   +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
1193648   +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
1193649   +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
1193650   +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
1193651   +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
1193652   +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
1193653   +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
1193654   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193655   +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
1193656   +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
1193657   +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
1193658   +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
1193659   +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
1193660   +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
1193661   +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
1193662   +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
1193663   +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
1193664   +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
1193665   +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
1193666   +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
1193667   +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
1193668   +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
1193669   +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
1193670   +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
1193671   +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
1193672   +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
1193673   +END;
MPRINT(EM_DIAGRAM):   END;
1193674   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193675   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1193676   +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
1193677   +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
1193678   +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
1193679   +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
1193680   +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
1193681   +END;
MPRINT(EM_DIAGRAM):   END;
1193682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193683   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1193684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193685   +
1193686   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1193687   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1193688   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1193689   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1193690   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1193691   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193692   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1193693   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1193694   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1193695   +end;
MPRINT(EM_DIAGRAM):   end;
1193696   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193697   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1193698   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1193699   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1193700   +   end;
MPRINT(EM_DIAGRAM):   end;
1193701   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1193702   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1193703   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1193704   +   end;
MPRINT(EM_DIAGRAM):   end;
1193705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193706   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1193707   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1193708   +   end;
MPRINT(EM_DIAGRAM):   end;
1193709   +end;
MPRINT(EM_DIAGRAM):   end;
1193710   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1193711   +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
1193712   +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
1193713   +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 +
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 +
-2.63321710569292 * H4x1_6 ;
1193714   +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
1193715   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1193716   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1193717   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1193718   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1193719   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1193720   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1193721   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1193722   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1193723   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1193724   +END;
MPRINT(EM_DIAGRAM):   END;
1193725   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193726   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1193727   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1193728   +END;
MPRINT(EM_DIAGRAM):   END;
1193729   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1193730   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1193731   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1193732   +END;
MPRINT(EM_DIAGRAM):   END;
1193733   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1193734   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1193735   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1193736   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1193737   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1193738   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1193739   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1193740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193741   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1193742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193743   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1193744   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1193745   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1193746   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1193747   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1193748   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1193749   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1193750   +END;
MPRINT(EM_DIAGRAM):   END;
1193751   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1193752   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1193753   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1193754   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1193755    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL28_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1193756    quit;
1193757    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1193758    filename emflow
1193758  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193759    *------------------------------------------------------------*;
1193760    * AutoNeural28: Scoring VALIDATE data;
1193761    *------------------------------------------------------------*;
1193762    data EMWS8.AutoNeural28_VALIDATE
1193763    / view=EMWS8.AutoNeural28_VALIDATE
1193764    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_VALIDATE / view=EMWS8.AutoNeural28_VALIDATE ;
1193765    set EMWS8.Varsel_VALIDATE
1193766    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
1193767    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas.
1193768   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1193769   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1193770   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1193771   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1193772   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1193773   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1193774   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1193775   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1193776   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1193777   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1193778   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1193779   +LENGTH _WARN_ $4
1193780   +      F_DepVar  $ 12
1193781   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1193782   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1193783   +
1193784   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1193785   +
1193786   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1193787   +
1193788   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1193789   +
1193790   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1193791   +
1193792   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1193793   +
1193794   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1193795   +
1193796   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1193797   +
1193798   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1193799   +
1193800   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1193801   +
1193802   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1193803   +
1193804   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1193805   +
1193806   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1193807   +
1193808   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1193809   +
1193810   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1193811   +
1193812   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1193813   +
1193814   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1193815   +
1193816   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1193817   +
1193818   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1193819   +
1193820   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1193821   +
1193822   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1193823   +
1193824   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1193825   +
1193826   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1193827   +
1193828   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1193829   +
1193830   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1193831   +
1193832   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1193833   +
1193834   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1193835   +
1193836   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1193837   +
1193838   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1193839   +
1193840   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1193841   +
1193842   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
1193843   +
1193844   +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
1193845   +
1193846   +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
1193847   +
1193848   +      label H1x4_3 = 'Hidden: H1x4_=3' ;
MPRINT(EM_DIAGRAM):   label H1x4_3 = 'Hidden: H1x4_=3' ;
1193849   +
1193850   +      label H1x4_4 = 'Hidden: H1x4_=4' ;
MPRINT(EM_DIAGRAM):   label H1x4_4 = 'Hidden: H1x4_=4' ;
1193851   +
1193852   +      label H1x4_5 = 'Hidden: H1x4_=5' ;
MPRINT(EM_DIAGRAM):   label H1x4_5 = 'Hidden: H1x4_=5' ;
1193853   +
1193854   +      label H1x4_6 = 'Hidden: H1x4_=6' ;
MPRINT(EM_DIAGRAM):   label H1x4_6 = 'Hidden: H1x4_=6' ;
1193855   +
1193856   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1193857   +
1193858   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1193859   +
1193860   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1193861   +
1193862   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1193863   +
1193864   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1193865   +
1193866   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1193867   +
1193868   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1193869   +
1193870   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1193871   +
1193872   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1193873   +
1193874   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1193875   +
1193876   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1193877   +
1193878   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
1193879   +
1193880   +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
1193881   +
1193882   +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
1193883   +
1193884   +      label H2x3_3 = 'Hidden: H2x3_=3' ;
MPRINT(EM_DIAGRAM):   label H2x3_3 = 'Hidden: H2x3_=3' ;
1193885   +
1193886   +      label H2x3_4 = 'Hidden: H2x3_=4' ;
MPRINT(EM_DIAGRAM):   label H2x3_4 = 'Hidden: H2x3_=4' ;
1193887   +
1193888   +      label H2x3_5 = 'Hidden: H2x3_=5' ;
MPRINT(EM_DIAGRAM):   label H2x3_5 = 'Hidden: H2x3_=5' ;
1193889   +
1193890   +      label H2x3_6 = 'Hidden: H2x3_=6' ;
MPRINT(EM_DIAGRAM):   label H2x3_6 = 'Hidden: H2x3_=6' ;
1193891   +
1193892   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1193893   +
1193894   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1193895   +
1193896   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1193897   +
1193898   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1193899   +
1193900   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1193901   +
1193902   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
1193903   +
1193904   +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
1193905   +
1193906   +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
1193907   +
1193908   +      label H3x2_3 = 'Hidden: H3x2_=3' ;
MPRINT(EM_DIAGRAM):   label H3x2_3 = 'Hidden: H3x2_=3' ;
1193909   +
1193910   +      label H3x2_4 = 'Hidden: H3x2_=4' ;
MPRINT(EM_DIAGRAM):   label H3x2_4 = 'Hidden: H3x2_=4' ;
1193911   +
1193912   +      label H3x2_5 = 'Hidden: H3x2_=5' ;
MPRINT(EM_DIAGRAM):   label H3x2_5 = 'Hidden: H3x2_=5' ;
1193913   +
1193914   +      label H3x2_6 = 'Hidden: H3x2_=6' ;
MPRINT(EM_DIAGRAM):   label H3x2_6 = 'Hidden: H3x2_=6' ;
1193915   +
1193916   +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
1193917   +
1193918   +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
1193919   +
1193920   +      label H4x1_3 = 'Hidden: H4x1_=3' ;
MPRINT(EM_DIAGRAM):   label H4x1_3 = 'Hidden: H4x1_=3' ;
1193921   +
1193922   +      label H4x1_4 = 'Hidden: H4x1_=4' ;
MPRINT(EM_DIAGRAM):   label H4x1_4 = 'Hidden: H4x1_=4' ;
1193923   +
1193924   +      label H4x1_5 = 'Hidden: H4x1_=5' ;
MPRINT(EM_DIAGRAM):   label H4x1_5 = 'Hidden: H4x1_=5' ;
1193925   +
1193926   +      label H4x1_6 = 'Hidden: H4x1_=6' ;
MPRINT(EM_DIAGRAM):   label H4x1_6 = 'Hidden: H4x1_=6' ;
1193927   +
1193928   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1193929   +
1193930   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1193931   +
1193932   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1193933   +
1193934   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1193935   +
1193936   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1193937   +
1193938   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1193939   +
1193940   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1193941   +
1193942   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1193943   +
1193944   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1193945   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1193946   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1193947   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1193948   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1193949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193951   +end;
MPRINT(EM_DIAGRAM):   end;
1193952   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193953   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193954   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1193955   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193956   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1193957   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1193958   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1193959   +   end;
MPRINT(EM_DIAGRAM):   end;
1193960   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1193961   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1193962   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1193963   +   end;
MPRINT(EM_DIAGRAM):   end;
1193964   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1193965   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1193966   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1193967   +   end;
MPRINT(EM_DIAGRAM):   end;
1193968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193969   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1193970   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1193971   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193972   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193973   +   end;
MPRINT(EM_DIAGRAM):   end;
1193974   +end;
MPRINT(EM_DIAGRAM):   end;
1193975   +
1193976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193977   +*** Checking missing input Interval
1193978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1193979   +
1193980   +IF NMISS(
1193981   +   AcceptedCmpTotal ,
1193982   +   Frq ,
1193983   +   Income ,
1193984   +   Mnt ,
1193985   +   MntGoldProds ,
1193986   +   MntMeatProducts ,
1193987   +   MntWines ,
1193988   +   NumDistPurchases ,
1193989   +   RFMstat ,
1193990   +   RMntFrq ,
1193991   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1193992   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1193993   +
1193994   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193995   +END;
MPRINT(EM_DIAGRAM):   END;
1193996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193997   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1193998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1193999   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194000   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1194001   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1194002   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1194003   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1194004   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1194005   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1194006   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1194007   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1194008   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1194009   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1194010   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1194011   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1194012   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1194013   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1194014   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1194015   +END;
MPRINT(EM_DIAGRAM):   END;
1194016   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194017   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1194018   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1194019   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1194020   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1194021   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1194022   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1194023   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1194024   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1194025   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1194026   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1194027   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1194028   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1194029   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1194030   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1194031   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1194032   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1194033   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1194034   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1194035   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1194036   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1194037   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1194038   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1194039   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1194040   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1194041   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1194042   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1194043   +END;
MPRINT(EM_DIAGRAM):   END;
1194044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194045   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1194046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194048   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1194049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194050   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194051   +   H1x1_1  =     3.15417213555791 * S_AcceptedCmpTotal
1194052   +          +    -2.48200966202064 * S_Frq  +     1.79801309624052 * S_Income
1194053   +          +    -1.96453924225923 * S_Mnt  +    -0.73447750078211 *
1194054   +        S_MntGoldProds  +    -1.52540613833145 * S_MntMeatProducts
1194055   +          +    -2.34651136428537 * S_MntWines  +     1.78713249203795 *
1194056   +        S_NumDistPurchases  +    -1.89877446252459 * S_RFMstat
1194057   +          +     0.40523847190984 * S_RMntFrq  +    -5.00157954960261 *
1194058   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.15417213555791 * S_AcceptedCmpTotal + -2.48200966202064 *
S_Frq + 1.79801309624052 * S_Income + -1.96453924225923 * S_Mnt + -0.73447750078211 *
S_MntGoldProds + -1.52540613833145 * S_MntMeatProducts + -2.34651136428537 * S_MntWines +
1.78713249203795 * S_NumDistPurchases + -1.89877446252459 * S_RFMstat + 0.40523847190984 *
S_RMntFrq + -5.00157954960261 * S_Recency ;
1194059   +   H1x1_2  =     -0.4296332791258 * S_AcceptedCmpTotal
1194060   +          +     1.69454720747031 * S_Frq  +     0.65291994437462 * S_Income
1194061   +          +     4.94289741649285 * S_Mnt  +    -0.74724168333375 *
1194062   +        S_MntGoldProds  +    -4.37885511745275 * S_MntMeatProducts
1194063   +          +    -0.79918604028406 * S_MntWines  +    -2.55554908870931 *
1194064   +        S_NumDistPurchases  +      -0.357509020401 * S_RFMstat
1194065   +          +     2.81206015252461 * S_RMntFrq  +       0.376849190211 *
1194066   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.4296332791258 * S_AcceptedCmpTotal + 1.69454720747031 *
S_Frq + 0.65291994437462 * S_Income + 4.94289741649285 * S_Mnt + -0.74724168333375 *
S_MntGoldProds + -4.37885511745275 * S_MntMeatProducts + -0.79918604028406 * S_MntWines +
-2.55554908870931 * S_NumDistPurchases + -0.357509020401 * S_RFMstat + 2.81206015252461 *
S_RMntFrq + 0.376849190211 * S_Recency ;
1194067   +   H1x1_3  =     0.22275326994217 * S_AcceptedCmpTotal
1194068   +          +     1.30327962429821 * S_Frq  +     8.11675617892245 * S_Income
1194069   +          +     1.26763916951276 * S_Mnt  +     -0.2686825897259 *
1194070   +        S_MntGoldProds  +    -1.42114074651211 * S_MntMeatProducts
1194071   +          +    -1.76821642666458 * S_MntWines  +    -1.91323522505912 *
1194072   +        S_NumDistPurchases  +    -0.12369288380556 * S_RFMstat
1194073   +          +     -0.5961110037328 * S_RMntFrq  +     1.45489277444882 *
1194074   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.22275326994217 * S_AcceptedCmpTotal + 1.30327962429821 *
S_Frq + 8.11675617892245 * S_Income + 1.26763916951276 * S_Mnt + -0.2686825897259 *
S_MntGoldProds + -1.42114074651211 * S_MntMeatProducts + -1.76821642666458 * S_MntWines +
-1.91323522505912 * S_NumDistPurchases + -0.12369288380556 * S_RFMstat + -0.5961110037328 *
S_RMntFrq + 1.45489277444882 * S_Recency ;
1194075   +   H1x1_4  =     0.65694888778783 * S_AcceptedCmpTotal
1194076   +          +    -2.46645772884275 * S_Frq  +     2.56090496460471 * S_Income
1194077   +          +     1.47469720902355 * S_Mnt  +    -0.23044042020952 *
1194078   +        S_MntGoldProds  +     1.09436190473143 * S_MntMeatProducts
1194079   +          +    -0.07872477007968 * S_MntWines  +     2.35913880285028 *
1194080   +        S_NumDistPurchases  +     0.36553596420262 * S_RFMstat
1194081   +          +    -1.52014700293876 * S_RMntFrq  +    -1.62001903467763 *
1194082   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.65694888778783 * S_AcceptedCmpTotal + -2.46645772884275 *
S_Frq + 2.56090496460471 * S_Income + 1.47469720902355 * S_Mnt + -0.23044042020952 *
S_MntGoldProds + 1.09436190473143 * S_MntMeatProducts + -0.07872477007968 * S_MntWines +
2.35913880285028 * S_NumDistPurchases + 0.36553596420262 * S_RFMstat + -1.52014700293876 *
S_RMntFrq + -1.62001903467763 * S_Recency ;
1194083   +   H1x1_5  =    -0.06045586654134 * S_AcceptedCmpTotal
1194084   +          +    -1.51896554067022 * S_Frq  +    -0.77690899609172 * S_Income
1194085   +          +    -3.83443076797312 * S_Mnt  +    -0.49066287190692 *
1194086   +        S_MntGoldProds  +     7.74304126889741 * S_MntMeatProducts
1194087   +          +     0.97717560040665 * S_MntWines  +     2.55833904797689 *
1194088   +        S_NumDistPurchases  +     3.33552253786577 * S_RFMstat
1194089   +          +     2.15128325510301 * S_RMntFrq  +     0.51475149451235 *
1194090   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.06045586654134 * S_AcceptedCmpTotal + -1.51896554067022 *
S_Frq + -0.77690899609172 * S_Income + -3.83443076797312 * S_Mnt + -0.49066287190692 *
S_MntGoldProds + 7.74304126889741 * S_MntMeatProducts + 0.97717560040665 * S_MntWines +
2.55833904797689 * S_NumDistPurchases + 3.33552253786577 * S_RFMstat + 2.15128325510301 *
S_RMntFrq + 0.51475149451235 * S_Recency ;
1194091   +   H1x1_6  =    -2.00102225492393 * S_AcceptedCmpTotal
1194092   +          +    -0.55313430858805 * S_Frq  +    -2.80039880440251 * S_Income
1194093   +          +    -0.52613628819852 * S_Mnt  +    -1.25580169134654 *
1194094   +        S_MntGoldProds  +    -1.44511464402737 * S_MntMeatProducts
1194095   +          +    -0.66744558284147 * S_MntWines  +     3.15612301024597 *
1194096   +        S_NumDistPurchases  +    -0.57805918326136 * S_RFMstat
1194097   +          +     0.13349014037678 * S_RMntFrq  +    -1.97053621157132 *
1194098   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.00102225492393 * S_AcceptedCmpTotal + -0.55313430858805 *
S_Frq + -2.80039880440251 * S_Income + -0.52613628819852 * S_Mnt + -1.25580169134654 *
S_MntGoldProds + -1.44511464402737 * S_MntMeatProducts + -0.66744558284147 * S_MntWines +
3.15612301024597 * S_NumDistPurchases + -0.57805918326136 * S_RFMstat + 0.13349014037678 *
S_RMntFrq + -1.97053621157132 * S_Recency ;
1194099   +   H1x1_1  = H1x1_1  +     1.38825657874217 * G_Marital_Status0
1194100   +          +     0.90195662603521 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.38825657874217 * G_Marital_Status0 +
0.90195662603521 * G_Marital_Status1 ;
1194101   +   H1x1_2  = H1x1_2  +     0.88138395159348 * G_Marital_Status0
1194102   +          +    -0.49019446056296 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.88138395159348 * G_Marital_Status0 +
-0.49019446056296 * G_Marital_Status1 ;
1194103   +   H1x1_3  = H1x1_3  +     0.30990330359421 * G_Marital_Status0
1194104   +          +     1.10544938214372 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.30990330359421 * G_Marital_Status0 +
1.10544938214372 * G_Marital_Status1 ;
1194105   +   H1x1_4  = H1x1_4  +     1.70251598227875 * G_Marital_Status0
1194106   +          +     0.87683669160259 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 1.70251598227875 * G_Marital_Status0 +
0.87683669160259 * G_Marital_Status1 ;
1194107   +   H1x1_5  = H1x1_5  +    -0.14678805736317 * G_Marital_Status0
1194108   +          +    -0.13246180955576 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14678805736317 * G_Marital_Status0 +
-0.13246180955576 * G_Marital_Status1 ;
1194109   +   H1x1_6  = H1x1_6  +     -0.6511155024316 * G_Marital_Status0
1194110   +          +     0.24707257141342 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.6511155024316 * G_Marital_Status0 +
0.24707257141342 * G_Marital_Status1 ;
1194111   +   H1x1_1  =     4.82277728923766 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.82277728923766 + H1x1_1 ;
1194112   +   H1x1_2  =     2.49777705822347 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.49777705822347 + H1x1_2 ;
1194113   +   H1x1_3  =    -0.93289135595041 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93289135595041 + H1x1_3 ;
1194114   +   H1x1_4  =    -7.80421802944398 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -7.80421802944398 + H1x1_4 ;
1194115   +   H1x1_5  =     6.46115064589724 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 6.46115064589724 + H1x1_5 ;
1194116   +   H1x1_6  =     3.21096596966888 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.21096596966888 + H1x1_6 ;
1194117   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1194118   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1194119   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1194120   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1194121   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1194122   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1194123   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1194124   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1194125   +END;
MPRINT(EM_DIAGRAM):   END;
1194126   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194127   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1194128   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1194129   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1194130   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1194131   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1194132   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1194133   +END;
MPRINT(EM_DIAGRAM):   END;
1194134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194135   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1194136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194137   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194138   +   H1x2_1  =    -0.30711239275958 * S_AcceptedCmpTotal
1194139   +          +    -1.45395291114633 * S_Frq  +     0.87594950917085 * S_Income
1194140   +          +    -0.72639274085105 * S_Mnt  +    -2.47797355837112 *
1194141   +        S_MntGoldProds  +     0.68384082088335 * S_MntMeatProducts
1194142   +          +     0.65600644755641 * S_MntWines  +      0.8163360453447 *
1194143   +        S_NumDistPurchases  +    -1.09587924440912 * S_RFMstat
1194144   +          +     1.48347762248449 * S_RMntFrq  +      0.2335216261547 *
1194145   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.30711239275958 * S_AcceptedCmpTotal + -1.45395291114633 *
S_Frq + 0.87594950917085 * S_Income + -0.72639274085105 * S_Mnt + -2.47797355837112 *
S_MntGoldProds + 0.68384082088335 * S_MntMeatProducts + 0.65600644755641 * S_MntWines +
0.8163360453447 * S_NumDistPurchases + -1.09587924440912 * S_RFMstat + 1.48347762248449 *
S_RMntFrq + 0.2335216261547 * S_Recency ;
1194146   +   H1x2_2  =     2.57777770372275 * S_AcceptedCmpTotal
1194147   +          +    -0.08699050003337 * S_Frq  +      0.9048262025585 * S_Income
1194148   +          +     0.80716409242733 * S_Mnt  +     0.92862088643502 *
1194149   +        S_MntGoldProds  +     1.28722996014956 * S_MntMeatProducts
1194150   +          +    -0.78107065942411 * S_MntWines  +     2.29787925805392 *
1194151   +        S_NumDistPurchases  +     -0.7095984076797 * S_RFMstat
1194152   +          +    -0.75276407747323 * S_RMntFrq  +    -2.14859674388241 *
1194153   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 2.57777770372275 * S_AcceptedCmpTotal + -0.08699050003337 *
S_Frq + 0.9048262025585 * S_Income + 0.80716409242733 * S_Mnt + 0.92862088643502 *
S_MntGoldProds + 1.28722996014956 * S_MntMeatProducts + -0.78107065942411 * S_MntWines +
2.29787925805392 * S_NumDistPurchases + -0.7095984076797 * S_RFMstat + -0.75276407747323 *
S_RMntFrq + -2.14859674388241 * S_Recency ;
1194154   +   H1x2_3  =    -0.19225474668372 * S_AcceptedCmpTotal
1194155   +          +     -0.5399776824486 * S_Frq  +    -0.33342356858106 * S_Income
1194156   +          +      0.4662552460972 * S_Mnt  +    -0.83897697999245 *
1194157   +        S_MntGoldProds  +    -1.02069791829975 * S_MntMeatProducts
1194158   +          +    -0.77568646594215 * S_MntWines  +    -2.64172584610703 *
1194159   +        S_NumDistPurchases  +     1.22587043380457 * S_RFMstat
1194160   +          +    -1.22124295004478 * S_RMntFrq  +     0.72727673065668 *
1194161   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.19225474668372 * S_AcceptedCmpTotal + -0.5399776824486 *
S_Frq + -0.33342356858106 * S_Income + 0.4662552460972 * S_Mnt + -0.83897697999245 *
S_MntGoldProds + -1.02069791829975 * S_MntMeatProducts + -0.77568646594215 * S_MntWines +
-2.64172584610703 * S_NumDistPurchases + 1.22587043380457 * S_RFMstat + -1.22124295004478 *
S_RMntFrq + 0.72727673065668 * S_Recency ;
1194162   +   H1x2_4  =     1.07963833884217 * S_AcceptedCmpTotal
1194163   +          +    -1.30033554705908 * S_Frq  +     0.80740030463615 * S_Income
1194164   +          +    -1.73808129607223 * S_Mnt  +     1.21346647777818 *
1194165   +        S_MntGoldProds  +     0.69007605858806 * S_MntMeatProducts
1194166   +          +     0.31548401471349 * S_MntWines  +    -0.45355998387313 *
1194167   +        S_NumDistPurchases  +     1.13504256910361 * S_RFMstat
1194168   +          +    -0.45561637629388 * S_RMntFrq  +    -1.42094697023704 *
1194169   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.07963833884217 * S_AcceptedCmpTotal + -1.30033554705908 *
S_Frq + 0.80740030463615 * S_Income + -1.73808129607223 * S_Mnt + 1.21346647777818 *
S_MntGoldProds + 0.69007605858806 * S_MntMeatProducts + 0.31548401471349 * S_MntWines +
-0.45355998387313 * S_NumDistPurchases + 1.13504256910361 * S_RFMstat + -0.45561637629388 *
S_RMntFrq + -1.42094697023704 * S_Recency ;
1194170   +   H1x2_5  =     0.30163018627699 * S_AcceptedCmpTotal
1194171   +          +    -0.73947459722676 * S_Frq  +      0.3117229426353 * S_Income
1194172   +          +     1.78189396082002 * S_Mnt  +    -1.51478593904163 *
1194173   +        S_MntGoldProds  +    -1.30328540691967 * S_MntMeatProducts
1194174   +          +     0.48947220852953 * S_MntWines  +     0.25380878841531 *
1194175   +        S_NumDistPurchases  +    -0.09429027402746 * S_RFMstat
1194176   +          +     2.79720421337828 * S_RMntFrq  +    -0.08024855242737 *
1194177   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30163018627699 * S_AcceptedCmpTotal + -0.73947459722676 *
S_Frq + 0.3117229426353 * S_Income + 1.78189396082002 * S_Mnt + -1.51478593904163 *
S_MntGoldProds + -1.30328540691967 * S_MntMeatProducts + 0.48947220852953 * S_MntWines +
0.25380878841531 * S_NumDistPurchases + -0.09429027402746 * S_RFMstat + 2.79720421337828 *
S_RMntFrq + -0.08024855242737 * S_Recency ;
1194178   +   H1x2_6  =    -0.05006047355159 * S_AcceptedCmpTotal
1194179   +          +     0.01838632143297 * S_Frq  +    -1.04892137940395 * S_Income
1194180   +          +    -0.33949418476309 * S_Mnt  +     1.27820886482898 *
1194181   +        S_MntGoldProds  +      0.1541042926193 * S_MntMeatProducts
1194182   +          +    -0.30996391960135 * S_MntWines  +     0.69532310497927 *
1194183   +        S_NumDistPurchases  +    -0.51247610421467 * S_RFMstat
1194184   +          +    -0.87640728095011 * S_RMntFrq  +     1.79661996586627 *
1194185   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.05006047355159 * S_AcceptedCmpTotal + 0.01838632143297 *
S_Frq + -1.04892137940395 * S_Income + -0.33949418476309 * S_Mnt + 1.27820886482898 *
S_MntGoldProds + 0.1541042926193 * S_MntMeatProducts + -0.30996391960135 * S_MntWines +
0.69532310497927 * S_NumDistPurchases + -0.51247610421467 * S_RFMstat + -0.87640728095011 *
S_RMntFrq + 1.79661996586627 * S_Recency ;
1194186   +   H1x2_1  = H1x2_1  +    -1.52372947412233 * G_Marital_Status0
1194187   +          +     0.61190614442174 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.52372947412233 * G_Marital_Status0 +
0.61190614442174 * G_Marital_Status1 ;
1194188   +   H1x2_2  = H1x2_2  +     -0.2899112326334 * G_Marital_Status0
1194189   +          +    -0.43943770039245 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.2899112326334 * G_Marital_Status0 +
-0.43943770039245 * G_Marital_Status1 ;
1194190   +   H1x2_3  = H1x2_3  +    -1.30447843367338 * G_Marital_Status0
1194191   +          +     0.36969296112687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.30447843367338 * G_Marital_Status0 +
0.36969296112687 * G_Marital_Status1 ;
1194192   +   H1x2_4  = H1x2_4  +     1.06192432928756 * G_Marital_Status0
1194193   +          +    -0.48897798100871 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.06192432928756 * G_Marital_Status0 +
-0.48897798100871 * G_Marital_Status1 ;
1194194   +   H1x2_5  = H1x2_5  +     1.24023950705702 * G_Marital_Status0
1194195   +          +     -0.0768652239427 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.24023950705702 * G_Marital_Status0 +
-0.0768652239427 * G_Marital_Status1 ;
1194196   +   H1x2_6  = H1x2_6  +    -0.79854804689099 * G_Marital_Status0
1194197   +          +    -0.58590001312977 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.79854804689099 * G_Marital_Status0 +
-0.58590001312977 * G_Marital_Status1 ;
1194198   +   H1x2_1  =    -1.24057312487712 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.24057312487712 + H1x2_1 ;
1194199   +   H1x2_2  =    -0.68291139361923 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.68291139361923 + H1x2_2 ;
1194200   +   H1x2_3  =     1.06420344729961 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06420344729961 + H1x2_3 ;
1194201   +   H1x2_4  =    -2.69713708678823 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -2.69713708678823 + H1x2_4 ;
1194202   +   H1x2_5  =    -0.12447063994137 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.12447063994137 + H1x2_5 ;
1194203   +   H1x2_6  =     -1.0719988986801 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -1.0719988986801 + H1x2_6 ;
1194204   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1194205   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1194206   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1194207   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1194208   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1194209   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1194210   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1194211   +   H1x2_6  = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.0 / (1.0 + EXP(MIN( - H1x2_6 , _EXP_BAR)));
1194212   +END;
MPRINT(EM_DIAGRAM):   END;
1194213   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194214   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1194215   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1194216   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1194217   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1194218   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1194219   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1194220   +END;
MPRINT(EM_DIAGRAM):   END;
1194221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194222   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1194223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194224   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194225   +   H1x3_1  =     0.58141896766328 * S_AcceptedCmpTotal
1194226   +          +     0.88835106317195 * S_Frq  +     1.03397412242189 * S_Income
1194227   +          +    -0.19511498332885 * S_Mnt  +     0.79222351582255 *
1194228   +        S_MntGoldProds  +     1.84666352042484 * S_MntMeatProducts
1194229   +          +     0.26439819900146 * S_MntWines  +    -0.49316136014272 *
1194230   +        S_NumDistPurchases  +    -1.53931690693652 * S_RFMstat
1194231   +          +     0.66163259224518 * S_RMntFrq  +    -0.05038100966606 *
1194232   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.58141896766328 * S_AcceptedCmpTotal + 0.88835106317195 *
S_Frq + 1.03397412242189 * S_Income + -0.19511498332885 * S_Mnt + 0.79222351582255 *
S_MntGoldProds + 1.84666352042484 * S_MntMeatProducts + 0.26439819900146 * S_MntWines +
-0.49316136014272 * S_NumDistPurchases + -1.53931690693652 * S_RFMstat + 0.66163259224518 *
S_RMntFrq + -0.05038100966606 * S_Recency ;
1194233   +   H1x3_2  =    -0.66965742898236 * S_AcceptedCmpTotal
1194234   +          +     0.11439761295336 * S_Frq  +      0.4311111590428 * S_Income
1194235   +          +     0.56419594384106 * S_Mnt  +    -2.58586026844722 *
1194236   +        S_MntGoldProds  +     0.84843617907069 * S_MntMeatProducts
1194237   +          +    -0.40949465894409 * S_MntWines  +    -1.12254199224924 *
1194238   +        S_NumDistPurchases  +    -1.73672932018459 * S_RFMstat
1194239   +          +     0.60800652848154 * S_RMntFrq  +     0.90023461529092 *
1194240   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.66965742898236 * S_AcceptedCmpTotal + 0.11439761295336 *
S_Frq + 0.4311111590428 * S_Income + 0.56419594384106 * S_Mnt + -2.58586026844722 *
S_MntGoldProds + 0.84843617907069 * S_MntMeatProducts + -0.40949465894409 * S_MntWines +
-1.12254199224924 * S_NumDistPurchases + -1.73672932018459 * S_RFMstat + 0.60800652848154 *
S_RMntFrq + 0.90023461529092 * S_Recency ;
1194241   +   H1x3_3  =     0.64116254904887 * S_AcceptedCmpTotal
1194242   +          +     0.36521168161033 * S_Frq  +    -1.65592742965949 * S_Income
1194243   +          +    -1.13010637801203 * S_Mnt  +     1.18435160743823 *
1194244   +        S_MntGoldProds  +     0.61014939723339 * S_MntMeatProducts
1194245   +          +     0.57967362971329 * S_MntWines  +    -0.00705774722842 *
1194246   +        S_NumDistPurchases  +    -0.09732595050305 * S_RFMstat
1194247   +          +    -1.58268748567816 * S_RMntFrq  +    -1.00117301133743 *
1194248   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.64116254904887 * S_AcceptedCmpTotal + 0.36521168161033 *
S_Frq + -1.65592742965949 * S_Income + -1.13010637801203 * S_Mnt + 1.18435160743823 *
S_MntGoldProds + 0.61014939723339 * S_MntMeatProducts + 0.57967362971329 * S_MntWines +
-0.00705774722842 * S_NumDistPurchases + -0.09732595050305 * S_RFMstat + -1.58268748567816 *
S_RMntFrq + -1.00117301133743 * S_Recency ;
1194249   +   H1x3_4  =    -2.38943135123073 * S_AcceptedCmpTotal
1194250   +          +     0.50616478854457 * S_Frq  +     1.68985840818789 * S_Income
1194251   +          +    -0.51011802824515 * S_Mnt  +     1.25167622017055 *
1194252   +        S_MntGoldProds  +    -0.78430871718616 * S_MntMeatProducts
1194253   +          +     0.97685472578698 * S_MntWines  +    -0.66992601103029 *
1194254   +        S_NumDistPurchases  +    -0.28545877583545 * S_RFMstat
1194255   +          +     0.52712575990538 * S_RMntFrq  +     1.51096273676103 *
1194256   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -2.38943135123073 * S_AcceptedCmpTotal + 0.50616478854457 *
S_Frq + 1.68985840818789 * S_Income + -0.51011802824515 * S_Mnt + 1.25167622017055 *
S_MntGoldProds + -0.78430871718616 * S_MntMeatProducts + 0.97685472578698 * S_MntWines +
-0.66992601103029 * S_NumDistPurchases + -0.28545877583545 * S_RFMstat + 0.52712575990538 *
S_RMntFrq + 1.51096273676103 * S_Recency ;
1194257   +   H1x3_5  =     0.27293739636898 * S_AcceptedCmpTotal
1194258   +          +     0.44515009768765 * S_Frq  +     -0.4521347788574 * S_Income
1194259   +          +     0.43943223859703 * S_Mnt  +     1.17781847894182 *
1194260   +        S_MntGoldProds  +    -0.67700757595581 * S_MntMeatProducts
1194261   +          +    -1.46437355846341 * S_MntWines  +    -0.09365592083561 *
1194262   +        S_NumDistPurchases  +     0.94926901433762 * S_RFMstat
1194263   +          +     2.40216905424957 * S_RMntFrq  +     0.65859109347516 *
1194264   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.27293739636898 * S_AcceptedCmpTotal + 0.44515009768765 *
S_Frq + -0.4521347788574 * S_Income + 0.43943223859703 * S_Mnt + 1.17781847894182 *
S_MntGoldProds + -0.67700757595581 * S_MntMeatProducts + -1.46437355846341 * S_MntWines +
-0.09365592083561 * S_NumDistPurchases + 0.94926901433762 * S_RFMstat + 2.40216905424957 *
S_RMntFrq + 0.65859109347516 * S_Recency ;
1194265   +   H1x3_6  =     0.79944121174459 * S_AcceptedCmpTotal
1194266   +          +     0.19594924011495 * S_Frq  +     1.07233338144708 * S_Income
1194267   +          +    -0.39577530492174 * S_Mnt  +    -0.18122578134776 *
1194268   +        S_MntGoldProds  +    -0.26451891721245 * S_MntMeatProducts
1194269   +          +    -0.86856724355925 * S_MntWines  +    -1.81909916765471 *
1194270   +        S_NumDistPurchases  +     1.03983663011092 * S_RFMstat
1194271   +          +    -0.86768378180894 * S_RMntFrq  +     0.40747604583851 *
1194272   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.79944121174459 * S_AcceptedCmpTotal + 0.19594924011495 *
S_Frq + 1.07233338144708 * S_Income + -0.39577530492174 * S_Mnt + -0.18122578134776 *
S_MntGoldProds + -0.26451891721245 * S_MntMeatProducts + -0.86856724355925 * S_MntWines +
-1.81909916765471 * S_NumDistPurchases + 1.03983663011092 * S_RFMstat + -0.86768378180894 *
S_RMntFrq + 0.40747604583851 * S_Recency ;
1194273   +   H1x3_1  = H1x3_1  +    -1.44819834546359 * G_Marital_Status0
1194274   +          +     2.03049158937708 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.44819834546359 * G_Marital_Status0 +
2.03049158937708 * G_Marital_Status1 ;
1194275   +   H1x3_2  = H1x3_2  +     0.32142977922032 * G_Marital_Status0
1194276   +          +     0.95456795317325 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.32142977922032 * G_Marital_Status0 +
0.95456795317325 * G_Marital_Status1 ;
1194277   +   H1x3_3  = H1x3_3  +    -0.05546140673943 * G_Marital_Status0
1194278   +          +    -0.64267205173982 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.05546140673943 * G_Marital_Status0 +
-0.64267205173982 * G_Marital_Status1 ;
1194279   +   H1x3_4  = H1x3_4  +     0.67758459902812 * G_Marital_Status0
1194280   +          +    -0.13878277097624 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 0.67758459902812 * G_Marital_Status0 +
-0.13878277097624 * G_Marital_Status1 ;
1194281   +   H1x3_5  = H1x3_5  +      0.2080585980069 * G_Marital_Status0
1194282   +          +     0.39530416624983 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.2080585980069 * G_Marital_Status0 + 0.39530416624983
* G_Marital_Status1 ;
1194283   +   H1x3_6  = H1x3_6  +    -0.56268194068278 * G_Marital_Status0
1194284   +          +    -1.38939757582535 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -0.56268194068278 * G_Marital_Status0 +
-1.38939757582535 * G_Marital_Status1 ;
1194285   +   H1x3_1  =    -0.02110450300917 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.02110450300917 + H1x3_1 ;
1194286   +   H1x3_2  =     0.68400964836412 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.68400964836412 + H1x3_2 ;
1194287   +   H1x3_3  =     1.27295692924548 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.27295692924548 + H1x3_3 ;
1194288   +   H1x3_4  =     0.57759340173339 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.57759340173339 + H1x3_4 ;
1194289   +   H1x3_5  =     0.68658947855937 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.68658947855937 + H1x3_5 ;
1194290   +   H1x3_6  =     0.96960260915788 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.96960260915788 + H1x3_6 ;
1194291   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1194292   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1194293   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1194294   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1194295   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1194296   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1194297   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1194298   +   H1x3_6  = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.0 / (1.0 + EXP(MIN( - H1x3_6 , _EXP_BAR)));
1194299   +END;
MPRINT(EM_DIAGRAM):   END;
1194300   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194301   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1194302   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1194303   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1194304   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1194305   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1194306   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
1194307   +END;
MPRINT(EM_DIAGRAM):   END;
1194308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194309   +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
1194310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194311   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194312   +   H1x4_1  =     1.13261766886471 * S_AcceptedCmpTotal
1194313   +          +     0.78824304763496 * S_Frq  +    -1.86817100110189 * S_Income
1194314   +          +    -1.58760227599089 * S_Mnt  +     -1.1330886213304 *
1194315   +        S_MntGoldProds  +     0.82082069255126 * S_MntMeatProducts
1194316   +          +    -0.34149449572975 * S_MntWines  +     0.45944109671738 *
1194317   +        S_NumDistPurchases  +     2.00910621486809 * S_RFMstat
1194318   +          +     -1.8305685414059 * S_RMntFrq  +     1.46038466341548 *
1194319   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.13261766886471 * S_AcceptedCmpTotal + 0.78824304763496 *
S_Frq + -1.86817100110189 * S_Income + -1.58760227599089 * S_Mnt + -1.1330886213304 *
S_MntGoldProds + 0.82082069255126 * S_MntMeatProducts + -0.34149449572975 * S_MntWines +
0.45944109671738 * S_NumDistPurchases + 2.00910621486809 * S_RFMstat + -1.8305685414059 *
S_RMntFrq + 1.46038466341548 * S_Recency ;
1194320   +   H1x4_2  =    -0.63266188932348 * S_AcceptedCmpTotal
1194321   +          +    -0.01183486383209 * S_Frq  +    -1.07560568030024 * S_Income
1194322   +          +    -1.30988288899902 * S_Mnt  +     2.15841401397408 *
1194323   +        S_MntGoldProds  +    -1.27808965763357 * S_MntMeatProducts
1194324   +          +     2.04886920467378 * S_MntWines  +     0.09322121012781 *
1194325   +        S_NumDistPurchases  +    -0.37050311259862 * S_RFMstat
1194326   +          +     0.68085578996214 * S_RMntFrq  +     1.48508197039719 *
1194327   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -0.63266188932348 * S_AcceptedCmpTotal + -0.01183486383209 *
S_Frq + -1.07560568030024 * S_Income + -1.30988288899902 * S_Mnt + 2.15841401397408 *
S_MntGoldProds + -1.27808965763357 * S_MntMeatProducts + 2.04886920467378 * S_MntWines +
0.09322121012781 * S_NumDistPurchases + -0.37050311259862 * S_RFMstat + 0.68085578996214 *
S_RMntFrq + 1.48508197039719 * S_Recency ;
1194328   +   H1x4_3  =    -0.53647455024397 * S_AcceptedCmpTotal
1194329   +          +     0.24459727005497 * S_Frq  +     0.30319155437277 * S_Income
1194330   +          +     0.25206471395865 * S_Mnt  +     0.43917953957135 *
1194331   +        S_MntGoldProds  +    -0.10933570154764 * S_MntMeatProducts
1194332   +          +    -0.04059236687792 * S_MntWines  +     0.35677739352706 *
1194333   +        S_NumDistPurchases  +     1.38086899403811 * S_RFMstat
1194334   +          +    -0.32751457592661 * S_RMntFrq  +    -0.15926282047245 *
1194335   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_3 = -0.53647455024397 * S_AcceptedCmpTotal + 0.24459727005497 *
S_Frq + 0.30319155437277 * S_Income + 0.25206471395865 * S_Mnt + 0.43917953957135 *
S_MntGoldProds + -0.10933570154764 * S_MntMeatProducts + -0.04059236687792 * S_MntWines +
0.35677739352706 * S_NumDistPurchases + 1.38086899403811 * S_RFMstat + -0.32751457592661 *
S_RMntFrq + -0.15926282047245 * S_Recency ;
1194336   +   H1x4_4  =     0.24225159923716 * S_AcceptedCmpTotal
1194337   +          +    -0.83397540163538 * S_Frq  +     0.65454415304883 * S_Income
1194338   +          +     -2.1008417113285 * S_Mnt  +     1.46444392612369 *
1194339   +        S_MntGoldProds  +     1.98843066844745 * S_MntMeatProducts
1194340   +          +    -0.31310064337061 * S_MntWines  +     0.56236194506314 *
1194341   +        S_NumDistPurchases  +    -0.20512833160409 * S_RFMstat
1194342   +          +    -0.20631901696385 * S_RMntFrq  +    -0.01945293751142 *
1194343   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 0.24225159923716 * S_AcceptedCmpTotal + -0.83397540163538 *
S_Frq + 0.65454415304883 * S_Income + -2.1008417113285 * S_Mnt + 1.46444392612369 *
S_MntGoldProds + 1.98843066844745 * S_MntMeatProducts + -0.31310064337061 * S_MntWines +
0.56236194506314 * S_NumDistPurchases + -0.20512833160409 * S_RFMstat + -0.20631901696385 *
S_RMntFrq + -0.01945293751142 * S_Recency ;
1194344   +   H1x4_5  =     -0.2800504242999 * S_AcceptedCmpTotal
1194345   +          +     0.11767474732461 * S_Frq  +    -1.78109558633383 * S_Income
1194346   +          +    -0.83275451396797 * S_Mnt  +     0.13772739876237 *
1194347   +        S_MntGoldProds  +    -0.00084509726748 * S_MntMeatProducts
1194348   +          +     0.92081955236291 * S_MntWines  +    -0.84663906140096 *
1194349   +        S_NumDistPurchases  +     1.07425261538134 * S_RFMstat
1194350   +          +    -0.27830850445101 * S_RMntFrq  +     0.74380794599056 *
1194351   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_5 = -0.2800504242999 * S_AcceptedCmpTotal + 0.11767474732461 *
S_Frq + -1.78109558633383 * S_Income + -0.83275451396797 * S_Mnt + 0.13772739876237 *
S_MntGoldProds + -0.00084509726748 * S_MntMeatProducts + 0.92081955236291 * S_MntWines +
-0.84663906140096 * S_NumDistPurchases + 1.07425261538134 * S_RFMstat + -0.27830850445101 *
S_RMntFrq + 0.74380794599056 * S_Recency ;
1194352   +   H1x4_6  =     -1.1119291723593 * S_AcceptedCmpTotal
1194353   +          +     0.56304851350844 * S_Frq  +     0.73567113537541 * S_Income
1194354   +          +    -3.12306246450604 * S_Mnt  +    -0.91316403938439 *
1194355   +        S_MntGoldProds  +    -2.69628755197256 * S_MntMeatProducts
1194356   +          +     0.85746867824621 * S_MntWines  +    -0.36724035406906 *
1194357   +        S_NumDistPurchases  +     0.28568968295985 * S_RFMstat
1194358   +          +    -0.93954323577146 * S_RMntFrq  +     0.85268992665591 *
1194359   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_6 = -1.1119291723593 * S_AcceptedCmpTotal + 0.56304851350844 *
S_Frq + 0.73567113537541 * S_Income + -3.12306246450604 * S_Mnt + -0.91316403938439 *
S_MntGoldProds + -2.69628755197256 * S_MntMeatProducts + 0.85746867824621 * S_MntWines +
-0.36724035406906 * S_NumDistPurchases + 0.28568968295985 * S_RFMstat + -0.93954323577146 *
S_RMntFrq + 0.85268992665591 * S_Recency ;
1194360   +   H1x4_1  = H1x4_1  +    -0.41637670428316 * G_Marital_Status0
1194361   +          +     1.82577173192743 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + -0.41637670428316 * G_Marital_Status0 +
1.82577173192743 * G_Marital_Status1 ;
1194362   +   H1x4_2  = H1x4_2  +     1.30084682846119 * G_Marital_Status0
1194363   +          +     1.86494194086223 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + 1.30084682846119 * G_Marital_Status0 +
1.86494194086223 * G_Marital_Status1 ;
1194364   +   H1x4_3  = H1x4_3  +    -2.51039247492524 * G_Marital_Status0
1194365   +          +    -0.78535196846115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = H1x4_3 + -2.51039247492524 * G_Marital_Status0 +
-0.78535196846115 * G_Marital_Status1 ;
1194366   +   H1x4_4  = H1x4_4  +    -1.66536345681649 * G_Marital_Status0
1194367   +          +    -1.13643623224979 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = H1x4_4 + -1.66536345681649 * G_Marital_Status0 +
-1.13643623224979 * G_Marital_Status1 ;
1194368   +   H1x4_5  = H1x4_5  +     0.34381083459151 * G_Marital_Status0
1194369   +          +    -0.50611098994468 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = H1x4_5 + 0.34381083459151 * G_Marital_Status0 +
-0.50611098994468 * G_Marital_Status1 ;
1194370   +   H1x4_6  = H1x4_6  +    -0.50144547845039 * G_Marital_Status0
1194371   +          +     1.05855030017376 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = H1x4_6 + -0.50144547845039 * G_Marital_Status0 +
1.05855030017376 * G_Marital_Status1 ;
1194372   +   H1x4_1  =     0.23907181959326 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = 0.23907181959326 + H1x4_1 ;
1194373   +   H1x4_2  =    -1.57201194785995 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = -1.57201194785995 + H1x4_2 ;
1194374   +   H1x4_3  =     2.06322674265618 + H1x4_3 ;
MPRINT(EM_DIAGRAM):   H1x4_3 = 2.06322674265618 + H1x4_3 ;
1194375   +   H1x4_4  =     1.01469021578807 + H1x4_4 ;
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.01469021578807 + H1x4_4 ;
1194376   +   H1x4_5  =     1.07767489348013 + H1x4_5 ;
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.07767489348013 + H1x4_5 ;
1194377   +   H1x4_6  =     0.04477742816865 + H1x4_6 ;
MPRINT(EM_DIAGRAM):   H1x4_6 = 0.04477742816865 + H1x4_6 ;
1194378   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1194379   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1194380   +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
1194381   +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
1194382   +   H1x4_3  = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_3 = 1.0 / (1.0 + EXP(MIN( - H1x4_3 , _EXP_BAR)));
1194383   +   H1x4_4  = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_4 = 1.0 / (1.0 + EXP(MIN( - H1x4_4 , _EXP_BAR)));
1194384   +   H1x4_5  = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_5 = 1.0 / (1.0 + EXP(MIN( - H1x4_5 , _EXP_BAR)));
1194385   +   H1x4_6  = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_6 = 1.0 / (1.0 + EXP(MIN( - H1x4_6 , _EXP_BAR)));
1194386   +END;
MPRINT(EM_DIAGRAM):   END;
1194387   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194388   +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
1194389   +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
1194390   +   H1x4_3  = .;
MPRINT(EM_DIAGRAM):   H1x4_3 = .;
1194391   +   H1x4_4  = .;
MPRINT(EM_DIAGRAM):   H1x4_4 = .;
1194392   +   H1x4_5  = .;
MPRINT(EM_DIAGRAM):   H1x4_5 = .;
1194393   +   H1x4_6  = .;
MPRINT(EM_DIAGRAM):   H1x4_6 = .;
1194394   +END;
MPRINT(EM_DIAGRAM):   END;
1194395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194396   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1194397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194398   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194399   +   H2x1_1  =     1.57657363240028 * H1x1_1  +    -0.37699618626432 * H1x1_2
1194400   +          +    -0.60919993629457 * H1x1_3  +     2.97257779188857 * H1x1_4
1194401   +          +     4.47740938165819 * H1x1_5  +    -0.85059681057218 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.57657363240028 * H1x1_1 + -0.37699618626432 * H1x1_2 +
-0.60919993629457 * H1x1_3 + 2.97257779188857 * H1x1_4 + 4.47740938165819 * H1x1_5 +
-0.85059681057218 * H1x1_6 ;
1194402   +   H2x1_2  =     0.58245150995434 * H1x1_1  +     1.31825599717827 * H1x1_2
1194403   +          +    -0.46604129874265 * H1x1_3  +    -1.57880778011961 * H1x1_4
1194404   +          +      0.1296024356855 * H1x1_5  +    -0.32310175742174 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.58245150995434 * H1x1_1 + 1.31825599717827 * H1x1_2 +
-0.46604129874265 * H1x1_3 + -1.57880778011961 * H1x1_4 + 0.1296024356855 * H1x1_5 +
-0.32310175742174 * H1x1_6 ;
1194405   +   H2x1_3  =     0.08762368266386 * H1x1_1  +     -2.1587359786783 * H1x1_2
1194406   +          +     0.53603825884818 * H1x1_3  +    -0.24087329015868 * H1x1_4
1194407   +          +     0.03296173080719 * H1x1_5  +     0.01697480121243 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.08762368266386 * H1x1_1 + -2.1587359786783 * H1x1_2 +
0.53603825884818 * H1x1_3 + -0.24087329015868 * H1x1_4 + 0.03296173080719 * H1x1_5 +
0.01697480121243 * H1x1_6 ;
1194408   +   H2x1_4  =    -0.11182680657167 * H1x1_1  +     0.78238566788271 * H1x1_2
1194409   +          +    -0.32984662645651 * H1x1_3  +    -0.48952564803009 * H1x1_4
1194410   +          +    -1.99607614008712 * H1x1_5  +     0.10016209874446 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.11182680657167 * H1x1_1 + 0.78238566788271 * H1x1_2 +
-0.32984662645651 * H1x1_3 + -0.48952564803009 * H1x1_4 + -1.99607614008712 * H1x1_5 +
0.10016209874446 * H1x1_6 ;
1194411   +   H2x1_5  =     -1.2498866108229 * H1x1_1  +      3.2369796406078 * H1x1_2
1194412   +          +      2.8181066223344 * H1x1_3  +    -3.11752751718664 * H1x1_4
1194413   +          +    -0.69294382105442 * H1x1_5  +     1.50580112761945 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.2498866108229 * H1x1_1 + 3.2369796406078 * H1x1_2 +
2.8181066223344 * H1x1_3 + -3.11752751718664 * H1x1_4 + -0.69294382105442 * H1x1_5 +
1.50580112761945 * H1x1_6 ;
1194414   +   H2x1_1  = H2x1_1  +     1.23510627062479 * H1x2_1
1194415   +          +     0.24021661687189 * H1x2_2  +    -1.56696654026909 * H1x2_3
1194416   +          +     1.87814576627429 * H1x2_4  +     0.77581978719058 * H1x2_5
1194417   +          +    -0.36964326956968 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.23510627062479 * H1x2_1 + 0.24021661687189 * H1x2_2
+ -1.56696654026909 * H1x2_3 + 1.87814576627429 * H1x2_4 + 0.77581978719058 * H1x2_5 +
-0.36964326956968 * H1x2_6 ;
1194418   +   H2x1_2  = H2x1_2  +     0.92347023180909 * H1x2_1
1194419   +          +    -0.58884204034707 * H1x2_2  +     0.32527960762166 * H1x2_3
1194420   +          +    -2.67192710315835 * H1x2_4  +     1.11142627890507 * H1x2_5
1194421   +          +     -0.0675747785188 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.92347023180909 * H1x2_1 + -0.58884204034707 * H1x2_2
+ 0.32527960762166 * H1x2_3 + -2.67192710315835 * H1x2_4 + 1.11142627890507 * H1x2_5 +
-0.0675747785188 * H1x2_6 ;
1194422   +   H2x1_3  = H2x1_3  +    -0.92500735470206 * H1x2_1
1194423   +          +     0.02449601034461 * H1x2_2  +    -0.75716713196308 * H1x2_3
1194424   +          +     0.16672538074212 * H1x2_4  +    -1.03440004099384 * H1x2_5
1194425   +          +     0.20622228187831 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.92500735470206 * H1x2_1 + 0.02449601034461 * H1x2_2
+ -0.75716713196308 * H1x2_3 + 0.16672538074212 * H1x2_4 + -1.03440004099384 * H1x2_5 +
0.20622228187831 * H1x2_6 ;
1194426   +   H2x1_4  = H2x1_4  +     1.25485096748114 * H1x2_1
1194427   +          +     -0.2345670529973 * H1x2_2  +     1.00007865183196 * H1x2_3
1194428   +          +    -0.19520365006597 * H1x2_4  +     0.15141232788955 * H1x2_5
1194429   +          +     0.99704195296742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25485096748114 * H1x2_1 + -0.2345670529973 * H1x2_2
+ 1.00007865183196 * H1x2_3 + -0.19520365006597 * H1x2_4 + 0.15141232788955 * H1x2_5 +
0.99704195296742 * H1x2_6 ;
1194430   +   H2x1_5  = H2x1_5  +    -0.65666404502833 * H1x2_1
1194431   +          +     2.28944563427288 * H1x2_2  +    -0.53344610521696 * H1x2_3
1194432   +          +      -0.793597979143 * H1x2_4  +     -0.5657184003534 * H1x2_5
1194433   +          +     0.52117926766363 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.65666404502833 * H1x2_1 + 2.28944563427288 * H1x2_2
+ -0.53344610521696 * H1x2_3 + -0.793597979143 * H1x2_4 + -0.5657184003534 * H1x2_5 +
0.52117926766363 * H1x2_6 ;
1194434   +   H2x1_1  = H2x1_1  +    -0.22872297219456 * H1x3_1
1194435   +          +     0.44130997341488 * H1x3_2  +     0.85543947016407 * H1x3_3
1194436   +          +      0.9172319436964 * H1x3_4  +    -0.63323674278101 * H1x3_5
1194437   +          +       0.010792162082 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.22872297219456 * H1x3_1 + 0.44130997341488 * H1x3_2
+ 0.85543947016407 * H1x3_3 + 0.9172319436964 * H1x3_4 + -0.63323674278101 * H1x3_5 +
0.010792162082 * H1x3_6 ;
1194438   +   H2x1_2  = H2x1_2  +    -0.47961853683007 * H1x3_1
1194439   +          +     0.67283234118014 * H1x3_2  +    -0.12148381681871 * H1x3_3
1194440   +          +     0.11539127068604 * H1x3_4  +     0.71547134269459 * H1x3_5
1194441   +          +     0.31051080747621 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.47961853683007 * H1x3_1 + 0.67283234118014 * H1x3_2
+ -0.12148381681871 * H1x3_3 + 0.11539127068604 * H1x3_4 + 0.71547134269459 * H1x3_5 +
0.31051080747621 * H1x3_6 ;
1194442   +   H2x1_3  = H2x1_3  +     0.84914297140244 * H1x3_1
1194443   +          +     0.52803158023536 * H1x3_2  +    -1.39949725219783 * H1x3_3
1194444   +          +     0.69603350257472 * H1x3_4  +    -0.99298091528215 * H1x3_5
1194445   +          +      0.4901677948096 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.84914297140244 * H1x3_1 + 0.52803158023536 * H1x3_2
+ -1.39949725219783 * H1x3_3 + 0.69603350257472 * H1x3_4 + -0.99298091528215 * H1x3_5 +
0.4901677948096 * H1x3_6 ;
1194446   +   H2x1_4  = H2x1_4  +     1.25437670540229 * H1x3_1
1194447   +          +     0.10767112672867 * H1x3_2  +     -2.4886577317349 * H1x3_3
1194448   +          +    -1.19999974192227 * H1x3_4  +     2.65195856746166 * H1x3_5
1194449   +          +    -0.35850032269696 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.25437670540229 * H1x3_1 + 0.10767112672867 * H1x3_2
+ -2.4886577317349 * H1x3_3 + -1.19999974192227 * H1x3_4 + 2.65195856746166 * H1x3_5 +
-0.35850032269696 * H1x3_6 ;
1194450   +   H2x1_5  = H2x1_5  +    -0.18873569038601 * H1x3_1
1194451   +          +    -0.05695497456875 * H1x3_2  +    -1.09169714101723 * H1x3_3
1194452   +          +     0.66962829232535 * H1x3_4  +     0.68262583745167 * H1x3_5
1194453   +          +     0.91538472149247 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.18873569038601 * H1x3_1 + -0.05695497456875 *
H1x3_2 + -1.09169714101723 * H1x3_3 + 0.66962829232535 * H1x3_4 + 0.68262583745167 * H1x3_5 +
0.91538472149247 * H1x3_6 ;
1194454   +   H2x1_1  = H2x1_1  +    -0.77701371575001 * H1x4_1
1194455   +          +    -1.54239140939922 * H1x4_2  +    -0.26570372401877 * H1x4_3
1194456   +          +     0.00097824237229 * H1x4_4  +     0.57921309289721 * H1x4_5
1194457   +          +     1.46692133055956 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.77701371575001 * H1x4_1 + -1.54239140939922 *
H1x4_2 + -0.26570372401877 * H1x4_3 + 0.00097824237229 * H1x4_4 + 0.57921309289721 * H1x4_5 +
1.46692133055956 * H1x4_6 ;
1194458   +   H2x1_2  = H2x1_2  +     0.96564519202767 * H1x4_1
1194459   +          +    -0.06466152110331 * H1x4_2  +    -0.66659637249467 * H1x4_3
1194460   +          +     0.59673973270306 * H1x4_4  +     2.45492273841581 * H1x4_5
1194461   +          +     -0.4804481967354 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.96564519202767 * H1x4_1 + -0.06466152110331 * H1x4_2
+ -0.66659637249467 * H1x4_3 + 0.59673973270306 * H1x4_4 + 2.45492273841581 * H1x4_5 +
-0.4804481967354 * H1x4_6 ;
1194462   +   H2x1_3  = H2x1_3  +     0.75339074826799 * H1x4_1
1194463   +          +     1.26373188682879 * H1x4_2  +     0.49419374749947 * H1x4_3
1194464   +          +     1.26541916145956 * H1x4_4  +     0.10039190806961 * H1x4_5
1194465   +          +    -0.79556185531974 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.75339074826799 * H1x4_1 + 1.26373188682879 * H1x4_2
+ 0.49419374749947 * H1x4_3 + 1.26541916145956 * H1x4_4 + 0.10039190806961 * H1x4_5 +
-0.79556185531974 * H1x4_6 ;
1194466   +   H2x1_4  = H2x1_4  +    -0.28271287281925 * H1x4_1
1194467   +          +      2.1208193298333 * H1x4_2  +    -0.65223420232343 * H1x4_3
1194468   +          +     0.02666229497558 * H1x4_4  +     0.72865787458027 * H1x4_5
1194469   +          +    -0.22377472142722 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.28271287281925 * H1x4_1 + 2.1208193298333 * H1x4_2
+ -0.65223420232343 * H1x4_3 + 0.02666229497558 * H1x4_4 + 0.72865787458027 * H1x4_5 +
-0.22377472142722 * H1x4_6 ;
1194470   +   H2x1_5  = H2x1_5  +    -0.84067714042271 * H1x4_1
1194471   +          +    -1.59141777016956 * H1x4_2  +     0.46077797807782 * H1x4_3
1194472   +          +    -0.07031579794448 * H1x4_4  +     0.83754013895307 * H1x4_5
1194473   +          +     0.49805259687865 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.84067714042271 * H1x4_1 + -1.59141777016956 *
H1x4_2 + 0.46077797807782 * H1x4_3 + -0.07031579794448 * H1x4_4 + 0.83754013895307 * H1x4_5 +
0.49805259687865 * H1x4_6 ;
1194474   +   H2x1_1  =     1.86496757154162 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.86496757154162 + H2x1_1 ;
1194475   +   H2x1_2  =     0.46453634696909 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.46453634696909 + H2x1_2 ;
1194476   +   H2x1_3  =     0.36165501609225 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.36165501609225 + H2x1_3 ;
1194477   +   H2x1_4  =    -0.91790753889181 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.91790753889181 + H2x1_4 ;
1194478   +   H2x1_5  =     2.82445131106489 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.82445131106489 + H2x1_5 ;
1194479   +   H2x1_6  = 0;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0;
1194480   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 );
1194481   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1194482   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1194483   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1194484   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1194485   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1194486   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1194487   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1194488   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1194489   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1194490   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1194491   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1194492   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1194493   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1194494   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1194495   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1194496   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1194497   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1194498   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1194499   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1194500   +END;
MPRINT(EM_DIAGRAM):   END;
1194501   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194502   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1194503   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1194504   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1194505   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1194506   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1194507   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1194508   +END;
MPRINT(EM_DIAGRAM):   END;
1194509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194510   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1194511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194512   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194513   +   H2x2_1  =     0.06037434087051 * H1x1_1  +     2.10312669809986 * H1x1_2
1194514   +          +     0.25966374544266 * H1x1_3  +     -0.4604625015482 * H1x1_4
1194515   +          +    -0.04852853005798 * H1x1_5  +     1.73108900683337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.06037434087051 * H1x1_1 + 2.10312669809986 * H1x1_2 +
0.25966374544266 * H1x1_3 + -0.4604625015482 * H1x1_4 + -0.04852853005798 * H1x1_5 +
1.73108900683337 * H1x1_6 ;
1194516   +   H2x2_2  =    -1.98874787809729 * H1x1_1  +    -0.90575568783349 * H1x1_2
1194517   +          +     2.19451885005981 * H1x1_3  +     0.86127175797091 * H1x1_4
1194518   +          +     0.88302785384691 * H1x1_5  +     1.44831802939799 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.98874787809729 * H1x1_1 + -0.90575568783349 * H1x1_2 +
2.19451885005981 * H1x1_3 + 0.86127175797091 * H1x1_4 + 0.88302785384691 * H1x1_5 +
1.44831802939799 * H1x1_6 ;
1194519   +   H2x2_3  =     0.99020573159855 * H1x1_1  +    -0.25509107111568 * H1x1_2
1194520   +          +    -0.88380027397433 * H1x1_3  +     2.61444810707966 * H1x1_4
1194521   +          +     1.12768553693881 * H1x1_5  +    -1.33423515707253 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.99020573159855 * H1x1_1 + -0.25509107111568 * H1x1_2 +
-0.88380027397433 * H1x1_3 + 2.61444810707966 * H1x1_4 + 1.12768553693881 * H1x1_5 +
-1.33423515707253 * H1x1_6 ;
1194522   +   H2x2_4  =    -0.48971657670431 * H1x1_1  +    -2.03924441101145 * H1x1_2
1194523   +          +    -0.44598954940675 * H1x1_3  +    -0.38296699607675 * H1x1_4
1194524   +          +    -0.46829791763961 * H1x1_5  +     0.57571476480191 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.48971657670431 * H1x1_1 + -2.03924441101145 * H1x1_2 +
-0.44598954940675 * H1x1_3 + -0.38296699607675 * H1x1_4 + -0.46829791763961 * H1x1_5 +
0.57571476480191 * H1x1_6 ;
1194525   +   H2x2_5  =     1.15324249951205 * H1x1_1  +    -0.30656607959814 * H1x1_2
1194526   +          +    -0.26327906953925 * H1x1_3  +    -0.30055126052518 * H1x1_4
1194527   +          +     1.20108560127357 * H1x1_5  +    -2.01222927536337 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.15324249951205 * H1x1_1 + -0.30656607959814 * H1x1_2 +
-0.26327906953925 * H1x1_3 + -0.30055126052518 * H1x1_4 + 1.20108560127357 * H1x1_5 +
-2.01222927536337 * H1x1_6 ;
1194528   +   H2x2_1  = H2x2_1  +     0.67714997403987 * H1x2_1
1194529   +          +     0.58512699375084 * H1x2_2  +     0.82352577521669 * H1x2_3
1194530   +          +    -0.10235751124142 * H1x2_4  +     0.33612939980192 * H1x2_5
1194531   +          +    -0.86707973977777 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.67714997403987 * H1x2_1 + 0.58512699375084 * H1x2_2
+ 0.82352577521669 * H1x2_3 + -0.10235751124142 * H1x2_4 + 0.33612939980192 * H1x2_5 +
-0.86707973977777 * H1x2_6 ;
1194532   +   H2x2_2  = H2x2_2  +     0.54358612690033 * H1x2_1
1194533   +          +     0.85147893022911 * H1x2_2  +     0.19383313272548 * H1x2_3
1194534   +          +     0.54163359333706 * H1x2_4  +    -0.12377705517298 * H1x2_5
1194535   +          +     0.34775419906833 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54358612690033 * H1x2_1 + 0.85147893022911 * H1x2_2
+ 0.19383313272548 * H1x2_3 + 0.54163359333706 * H1x2_4 + -0.12377705517298 * H1x2_5 +
0.34775419906833 * H1x2_6 ;
1194536   +   H2x2_3  = H2x2_3  +    -0.93107945276808 * H1x2_1
1194537   +          +     0.68475936175775 * H1x2_2  +    -0.23180217492353 * H1x2_3
1194538   +          +     0.62637113173904 * H1x2_4  +      -0.494489282403 * H1x2_5
1194539   +          +    -0.92757761378206 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.93107945276808 * H1x2_1 + 0.68475936175775 * H1x2_2
+ -0.23180217492353 * H1x2_3 + 0.62637113173904 * H1x2_4 + -0.494489282403 * H1x2_5 +
-0.92757761378206 * H1x2_6 ;
1194540   +   H2x2_4  = H2x2_4  +    -0.04592275767761 * H1x2_1
1194541   +          +    -0.46728046145973 * H1x2_2  +    -0.84120395772864 * H1x2_3
1194542   +          +     0.15719249141893 * H1x2_4  +    -0.46514309972577 * H1x2_5
1194543   +          +     1.22882033880531 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.04592275767761 * H1x2_1 + -0.46728046145973 *
H1x2_2 + -0.84120395772864 * H1x2_3 + 0.15719249141893 * H1x2_4 + -0.46514309972577 * H1x2_5 +
1.22882033880531 * H1x2_6 ;
1194544   +   H2x2_5  = H2x2_5  +     1.84159049843244 * H1x2_1
1194545   +          +     0.10275783758743 * H1x2_2  +    -1.43072878385761 * H1x2_3
1194546   +          +     0.55082995966416 * H1x2_4  +      0.6610129464186 * H1x2_5
1194547   +          +     1.13665339513142 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.84159049843244 * H1x2_1 + 0.10275783758743 * H1x2_2
+ -1.43072878385761 * H1x2_3 + 0.55082995966416 * H1x2_4 + 0.6610129464186 * H1x2_5 +
1.13665339513142 * H1x2_6 ;
1194548   +   H2x2_1  = H2x2_1  +    -1.51032464504011 * H1x3_1
1194549   +          +    -0.09256867451899 * H1x3_2  +     0.32445533867689 * H1x3_3
1194550   +          +     0.05761597623645 * H1x3_4  +    -0.76755137543453 * H1x3_5
1194551   +          +    -0.84355541605354 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.51032464504011 * H1x3_1 + -0.09256867451899 *
H1x3_2 + 0.32445533867689 * H1x3_3 + 0.05761597623645 * H1x3_4 + -0.76755137543453 * H1x3_5 +
-0.84355541605354 * H1x3_6 ;
1194552   +   H2x2_2  = H2x2_2  +     0.10183122181912 * H1x3_1
1194553   +          +    -0.30112412370797 * H1x3_2  +     0.67666605377075 * H1x3_3
1194554   +          +    -0.05362728717558 * H1x3_4  +    -0.02087908172702 * H1x3_5
1194555   +          +    -0.14832407235293 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.10183122181912 * H1x3_1 + -0.30112412370797 * H1x3_2
+ 0.67666605377075 * H1x3_3 + -0.05362728717558 * H1x3_4 + -0.02087908172702 * H1x3_5 +
-0.14832407235293 * H1x3_6 ;
1194556   +   H2x2_3  = H2x2_3  +     1.70579601255161 * H1x3_1
1194557   +          +     -0.4658368752668 * H1x3_2  +    -0.54573113497487 * H1x3_3
1194558   +          +     1.13279034034213 * H1x3_4  +     1.23714589942258 * H1x3_5
1194559   +          +     0.41209753590668 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.70579601255161 * H1x3_1 + -0.4658368752668 * H1x3_2
+ -0.54573113497487 * H1x3_3 + 1.13279034034213 * H1x3_4 + 1.23714589942258 * H1x3_5 +
0.41209753590668 * H1x3_6 ;
1194560   +   H2x2_4  = H2x2_4  +     0.21012073552633 * H1x3_1
1194561   +          +      -1.607803967771 * H1x3_2  +     0.02641742148684 * H1x3_3
1194562   +          +      -0.919177834124 * H1x3_4  +    -0.46658991803838 * H1x3_5
1194563   +          +     0.05356295771962 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.21012073552633 * H1x3_1 + -1.607803967771 * H1x3_2 +
0.02641742148684 * H1x3_3 + -0.919177834124 * H1x3_4 + -0.46658991803838 * H1x3_5 +
0.05356295771962 * H1x3_6 ;
1194564   +   H2x2_5  = H2x2_5  +     -1.1424376096243 * H1x3_1
1194565   +          +    -0.47941730936597 * H1x3_2  +    -1.44857674506057 * H1x3_3
1194566   +          +     -2.0300913051093 * H1x3_4  +    -0.12476620160938 * H1x3_5
1194567   +          +      1.3865980084186 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.1424376096243 * H1x3_1 + -0.47941730936597 * H1x3_2
+ -1.44857674506057 * H1x3_3 + -2.0300913051093 * H1x3_4 + -0.12476620160938 * H1x3_5 +
1.3865980084186 * H1x3_6 ;
1194568   +   H2x2_1  = H2x2_1  +    -0.80277778579719 * H1x4_1
1194569   +          +     0.89356845434924 * H1x4_2  +     1.34679856015636 * H1x4_3
1194570   +          +    -0.75666255425893 * H1x4_4  +    -0.76982332990737 * H1x4_5
1194571   +          +     0.16602366912489 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.80277778579719 * H1x4_1 + 0.89356845434924 * H1x4_2
+ 1.34679856015636 * H1x4_3 + -0.75666255425893 * H1x4_4 + -0.76982332990737 * H1x4_5 +
0.16602366912489 * H1x4_6 ;
1194572   +   H2x2_2  = H2x2_2  +    -1.23815292104545 * H1x4_1
1194573   +          +     0.15726093177842 * H1x4_2  +     0.11603212859646 * H1x4_3
1194574   +          +     0.38287343591011 * H1x4_4  +    -0.51333663927664 * H1x4_5
1194575   +          +     -0.9577144624714 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -1.23815292104545 * H1x4_1 + 0.15726093177842 * H1x4_2
+ 0.11603212859646 * H1x4_3 + 0.38287343591011 * H1x4_4 + -0.51333663927664 * H1x4_5 +
-0.9577144624714 * H1x4_6 ;
1194576   +   H2x2_3  = H2x2_3  +    -0.68480171858681 * H1x4_1
1194577   +          +    -0.64475211431817 * H1x4_2  +     0.54382770716837 * H1x4_3
1194578   +          +     0.07586519798399 * H1x4_4  +      -0.158352646931 * H1x4_5
1194579   +          +    -0.86962851115528 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.68480171858681 * H1x4_1 + -0.64475211431817 *
H1x4_2 + 0.54382770716837 * H1x4_3 + 0.07586519798399 * H1x4_4 + -0.158352646931 * H1x4_5 +
-0.86962851115528 * H1x4_6 ;
1194580   +   H2x2_4  = H2x2_4  +     1.08721247219364 * H1x4_1
1194581   +          +    -0.00199447585891 * H1x4_2  +    -0.84066724442019 * H1x4_3
1194582   +          +     0.28532638217608 * H1x4_4  +    -1.14779513957631 * H1x4_5
1194583   +          +     2.01216139921959 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 1.08721247219364 * H1x4_1 + -0.00199447585891 * H1x4_2
+ -0.84066724442019 * H1x4_3 + 0.28532638217608 * H1x4_4 + -1.14779513957631 * H1x4_5 +
2.01216139921959 * H1x4_6 ;
1194584   +   H2x2_5  = H2x2_5  +    -0.82582817846967 * H1x4_1
1194585   +          +    -1.09057773595959 * H1x4_2  +     -0.2490905553905 * H1x4_3
1194586   +          +     0.93092377717594 * H1x4_4  +     0.02946641402494 * H1x4_5
1194587   +          +    -0.19026348436175 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.82582817846967 * H1x4_1 + -1.09057773595959 *
H1x4_2 + -0.2490905553905 * H1x4_3 + 0.93092377717594 * H1x4_4 + 0.02946641402494 * H1x4_5 +
-0.19026348436175 * H1x4_6 ;
1194588   +   H2x2_1  =      0.4280804812723 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.4280804812723 + H2x2_1 ;
1194589   +   H2x2_2  =    -1.09169904475569 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.09169904475569 + H2x2_2 ;
1194590   +   H2x2_3  =      1.1980619484542 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.1980619484542 + H2x2_3 ;
1194591   +   H2x2_4  =    -0.69756677248934 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.69756677248934 + H2x2_4 ;
1194592   +   H2x2_5  =    -1.87910212660657 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -1.87910212660657 + H2x2_5 ;
1194593   +   H2x2_6  = 0;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0;
1194594   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 );
1194595   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1194596   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1194597   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1194598   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1194599   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1194600   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1194601   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1194602   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1194603   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1194604   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1194605   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1194606   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
1194607   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
1194608   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1194609   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1194610   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1194611   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1194612   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1194613   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
1194614   +END;
MPRINT(EM_DIAGRAM):   END;
1194615   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194616   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1194617   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1194618   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1194619   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1194620   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1194621   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
1194622   +END;
MPRINT(EM_DIAGRAM):   END;
1194623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194624   +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
1194625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194626   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194627   +   H2x3_1  =     0.51206365204428 * H1x1_1  +    -1.75446248490807 * H1x1_2
1194628   +          +     0.22956544269482 * H1x1_3  +     0.91651437630074 * H1x1_4
1194629   +          +    -0.88731743590726 * H1x1_5  +     0.75959028005652 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.51206365204428 * H1x1_1 + -1.75446248490807 * H1x1_2 +
0.22956544269482 * H1x1_3 + 0.91651437630074 * H1x1_4 + -0.88731743590726 * H1x1_5 +
0.75959028005652 * H1x1_6 ;
1194630   +   H2x3_2  =    -0.45196055100748 * H1x1_1  +    -0.30516535345407 * H1x1_2
1194631   +          +    -0.95535662641329 * H1x1_3  +     0.98793241812876 * H1x1_4
1194632   +          +    -2.26205386368521 * H1x1_5  +    -0.79989554227284 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -0.45196055100748 * H1x1_1 + -0.30516535345407 * H1x1_2 +
-0.95535662641329 * H1x1_3 + 0.98793241812876 * H1x1_4 + -2.26205386368521 * H1x1_5 +
-0.79989554227284 * H1x1_6 ;
1194633   +   H2x3_3  =     1.75400558713364 * H1x1_1  +     0.36065784285286 * H1x1_2
1194634   +          +    -0.26047606287884 * H1x1_3  +    -0.92639558885443 * H1x1_4
1194635   +          +     1.89978202395282 * H1x1_5  +     1.46105111567983 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = 1.75400558713364 * H1x1_1 + 0.36065784285286 * H1x1_2 +
-0.26047606287884 * H1x1_3 + -0.92639558885443 * H1x1_4 + 1.89978202395282 * H1x1_5 +
1.46105111567983 * H1x1_6 ;
1194636   +   H2x3_4  =     -1.0609986914691 * H1x1_1  +     1.03588259392678 * H1x1_2
1194637   +          +     0.18751061078347 * H1x1_3  +     1.45467172411852 * H1x1_4
1194638   +          +     0.80970691110797 * H1x1_5  +    -0.03142746343877 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = -1.0609986914691 * H1x1_1 + 1.03588259392678 * H1x1_2 +
0.18751061078347 * H1x1_3 + 1.45467172411852 * H1x1_4 + 0.80970691110797 * H1x1_5 +
-0.03142746343877 * H1x1_6 ;
1194639   +   H2x3_5  =     0.68514959739435 * H1x1_1  +    -0.85703618516825 * H1x1_2
1194640   +          +    -1.42641478008517 * H1x1_3  +     0.69128253039497 * H1x1_4
1194641   +          +    -0.41103428804251 * H1x1_5  +     2.29818718782262 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = 0.68514959739435 * H1x1_1 + -0.85703618516825 * H1x1_2 +
-1.42641478008517 * H1x1_3 + 0.69128253039497 * H1x1_4 + -0.41103428804251 * H1x1_5 +
2.29818718782262 * H1x1_6 ;
1194642   +   H2x3_1  = H2x3_1  +    -1.02124610786304 * H1x2_1
1194643   +          +    -0.70086367508924 * H1x2_2  +     1.44543746222048 * H1x2_3
1194644   +          +      0.0077115223216 * H1x2_4  +    -1.13603676440953 * H1x2_5
1194645   +          +    -0.39006326539815 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.02124610786304 * H1x2_1 + -0.70086367508924 *
H1x2_2 + 1.44543746222048 * H1x2_3 + 0.0077115223216 * H1x2_4 + -1.13603676440953 * H1x2_5 +
-0.39006326539815 * H1x2_6 ;
1194646   +   H2x3_2  = H2x3_2  +     0.58504868182178 * H1x2_1
1194647   +          +    -2.53394647771808 * H1x2_2  +    -0.46920351111552 * H1x2_3
1194648   +          +    -0.13298739365164 * H1x2_4  +    -0.72916785042807 * H1x2_5
1194649   +          +     0.87575796008942 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.58504868182178 * H1x2_1 + -2.53394647771808 * H1x2_2
+ -0.46920351111552 * H1x2_3 + -0.13298739365164 * H1x2_4 + -0.72916785042807 * H1x2_5 +
0.87575796008942 * H1x2_6 ;
1194650   +   H2x3_3  = H2x3_3  +      -0.403068394175 * H1x2_1
1194651   +          +     2.20341156440175 * H1x2_2  +     0.18637166393472 * H1x2_3
1194652   +          +    -0.49818124689746 * H1x2_4  +    -0.57482220863202 * H1x2_5
1194653   +          +    -0.99288712489296 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -0.403068394175 * H1x2_1 + 2.20341156440175 * H1x2_2 +
0.18637166393472 * H1x2_3 + -0.49818124689746 * H1x2_4 + -0.57482220863202 * H1x2_5 +
-0.99288712489296 * H1x2_6 ;
1194654   +   H2x3_4  = H2x3_4  +    -0.08255075671356 * H1x2_1
1194655   +          +     0.12417859340249 * H1x2_2  +     0.38623860203678 * H1x2_3
1194656   +          +     1.30375188803419 * H1x2_4  +     0.06113655765155 * H1x2_5
1194657   +          +     2.18684373678918 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.08255075671356 * H1x2_1 + 0.12417859340249 * H1x2_2
+ 0.38623860203678 * H1x2_3 + 1.30375188803419 * H1x2_4 + 0.06113655765155 * H1x2_5 +
2.18684373678918 * H1x2_6 ;
1194658   +   H2x3_5  = H2x3_5  +     0.02445507420447 * H1x2_1
1194659   +          +     -1.1429834255353 * H1x2_2  +     1.15057813366971 * H1x2_3
1194660   +          +     -0.7929157351984 * H1x2_4  +      0.4343084860458 * H1x2_5
1194661   +          +      0.0384736341173 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + 0.02445507420447 * H1x2_1 + -1.1429834255353 * H1x2_2
+ 1.15057813366971 * H1x2_3 + -0.7929157351984 * H1x2_4 + 0.4343084860458 * H1x2_5 +
0.0384736341173 * H1x2_6 ;
1194662   +   H2x3_1  = H2x3_1  +     0.37764572590016 * H1x3_1
1194663   +          +     1.48191356825225 * H1x3_2  +    -0.26603273466393 * H1x3_3
1194664   +          +    -1.29507822568105 * H1x3_4  +     1.84557717124725 * H1x3_5
1194665   +          +    -0.65863037608331 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.37764572590016 * H1x3_1 + 1.48191356825225 * H1x3_2
+ -0.26603273466393 * H1x3_3 + -1.29507822568105 * H1x3_4 + 1.84557717124725 * H1x3_5 +
-0.65863037608331 * H1x3_6 ;
1194666   +   H2x3_2  = H2x3_2  +    -3.49060338051306 * H1x3_1
1194667   +          +      1.3541565382925 * H1x3_2  +    -0.38315198954693 * H1x3_3
1194668   +          +    -2.08846010475603 * H1x3_4  +    -0.03268324043605 * H1x3_5
1194669   +          +     -0.2732767866426 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -3.49060338051306 * H1x3_1 + 1.3541565382925 * H1x3_2
+ -0.38315198954693 * H1x3_3 + -2.08846010475603 * H1x3_4 + -0.03268324043605 * H1x3_5 +
-0.2732767866426 * H1x3_6 ;
1194670   +   H2x3_3  = H2x3_3  +    -1.02108681113274 * H1x3_1
1194671   +          +     1.11670732797487 * H1x3_2  +    -2.83817066251645 * H1x3_3
1194672   +          +     2.91943649605743 * H1x3_4  +    -1.58666117886546 * H1x3_5
1194673   +          +     0.95358246629929 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + -1.02108681113274 * H1x3_1 + 1.11670732797487 * H1x3_2
+ -2.83817066251645 * H1x3_3 + 2.91943649605743 * H1x3_4 + -1.58666117886546 * H1x3_5 +
0.95358246629929 * H1x3_6 ;
1194674   +   H2x3_4  = H2x3_4  +    -0.28934138457604 * H1x3_1
1194675   +          +     -0.1627562650927 * H1x3_2  +     1.76496399430623 * H1x3_3
1194676   +          +     2.05776756058594 * H1x3_4  +    -0.96994650178001 * H1x3_5
1194677   +          +    -1.50364154763084 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.28934138457604 * H1x3_1 + -0.1627562650927 * H1x3_2
+ 1.76496399430623 * H1x3_3 + 2.05776756058594 * H1x3_4 + -0.96994650178001 * H1x3_5 +
-1.50364154763084 * H1x3_6 ;
1194678   +   H2x3_5  = H2x3_5  +    -0.73016276992619 * H1x3_1
1194679   +          +    -1.48258849718818 * H1x3_2  +    -0.47908044807419 * H1x3_3
1194680   +          +      0.5957671579209 * H1x3_4  +     0.06707833713085 * H1x3_5
1194681   +          +      0.3673818114501 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.73016276992619 * H1x3_1 + -1.48258849718818 *
H1x3_2 + -0.47908044807419 * H1x3_3 + 0.5957671579209 * H1x3_4 + 0.06707833713085 * H1x3_5 +
0.3673818114501 * H1x3_6 ;
1194682   +   H2x3_1  = H2x3_1  +     1.64939881299916 * H1x4_1
1194683   +          +     0.29057047745206 * H1x4_2  +     -1.2430356696985 * H1x4_3
1194684   +          +     1.38895822896909 * H1x4_4  +     0.32263395713709 * H1x4_5
1194685   +          +      -0.876005602164 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 1.64939881299916 * H1x4_1 + 0.29057047745206 * H1x4_2
+ -1.2430356696985 * H1x4_3 + 1.38895822896909 * H1x4_4 + 0.32263395713709 * H1x4_5 +
-0.876005602164 * H1x4_6 ;
1194686   +   H2x3_2  = H2x3_2  +    -0.59279077758901 * H1x4_1
1194687   +          +     0.47534983861589 * H1x4_2  +     1.50522851379751 * H1x4_3
1194688   +          +    -0.52074826438565 * H1x4_4  +    -0.13959571645898 * H1x4_5
1194689   +          +     0.51236653129509 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.59279077758901 * H1x4_1 + 0.47534983861589 * H1x4_2
+ 1.50522851379751 * H1x4_3 + -0.52074826438565 * H1x4_4 + -0.13959571645898 * H1x4_5 +
0.51236653129509 * H1x4_6 ;
1194690   +   H2x3_3  = H2x3_3  +       0.170929264521 * H1x4_1
1194691   +          +    -1.09768862147461 * H1x4_2  +    -1.22166369035864 * H1x4_3
1194692   +          +    -0.43496041372082 * H1x4_4  +     0.86983484014566 * H1x4_5
1194693   +          +     0.14855508666868 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 + 0.170929264521 * H1x4_1 + -1.09768862147461 * H1x4_2 +
-1.22166369035864 * H1x4_3 + -0.43496041372082 * H1x4_4 + 0.86983484014566 * H1x4_5 +
0.14855508666868 * H1x4_6 ;
1194694   +   H2x3_4  = H2x3_4  +    -0.26703118340308 * H1x4_1
1194695   +          +     0.58353167926887 * H1x4_2  +     1.39169479141155 * H1x4_3
1194696   +          +     -0.7893707969296 * H1x4_4  +     0.89521873365477 * H1x4_5
1194697   +          +     1.60853840268286 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 + -0.26703118340308 * H1x4_1 + 0.58353167926887 * H1x4_2
+ 1.39169479141155 * H1x4_3 + -0.7893707969296 * H1x4_4 + 0.89521873365477 * H1x4_5 +
1.60853840268286 * H1x4_6 ;
1194698   +   H2x3_5  = H2x3_5  +    -0.29353449181426 * H1x4_1
1194699   +          +     0.02697197445995 * H1x4_2  +     0.04454970336296 * H1x4_3
1194700   +          +    -0.17322488506489 * H1x4_4  +    -1.52564540234935 * H1x4_5
1194701   +          +      0.6650692994568 * H1x4_6 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 + -0.29353449181426 * H1x4_1 + 0.02697197445995 * H1x4_2
+ 0.04454970336296 * H1x4_3 + -0.17322488506489 * H1x4_4 + -1.52564540234935 * H1x4_5 +
0.6650692994568 * H1x4_6 ;
1194702   +   H2x3_1  =    -0.44046998911725 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.44046998911725 + H2x3_1 ;
1194703   +   H2x3_2  =     1.44590821330163 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 1.44590821330163 + H2x3_2 ;
1194704   +   H2x3_3  =    -0.02671947857742 + H2x3_3 ;
MPRINT(EM_DIAGRAM):   H2x3_3 = -0.02671947857742 + H2x3_3 ;
1194705   +   H2x3_4  =     2.16876314488082 + H2x3_4 ;
MPRINT(EM_DIAGRAM):   H2x3_4 = 2.16876314488082 + H2x3_4 ;
1194706   +   H2x3_5  =    -1.06855161267989 + H2x3_5 ;
MPRINT(EM_DIAGRAM):   H2x3_5 = -1.06855161267989 + H2x3_5 ;
1194707   +   H2x3_6  = 0;
MPRINT(EM_DIAGRAM):   H2x3_6 = 0;
1194708   +   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x3_1 , H2x3_2 , H2x3_3 , H2x3_4 , H2x3_5 , H2x3_6 );
1194709   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1194710   +   H2x3_1  = EXP(H2x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_1 = EXP(H2x3_1 - _MAX_);
1194711   +   _SUM_ = _SUM_ + H2x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_1 ;
1194712   +   H2x3_2  = EXP(H2x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_2 = EXP(H2x3_2 - _MAX_);
1194713   +   _SUM_ = _SUM_ + H2x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_2 ;
1194714   +   H2x3_3  = EXP(H2x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_3 = EXP(H2x3_3 - _MAX_);
1194715   +   _SUM_ = _SUM_ + H2x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_3 ;
1194716   +   H2x3_4  = EXP(H2x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_4 = EXP(H2x3_4 - _MAX_);
1194717   +   _SUM_ = _SUM_ + H2x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_4 ;
1194718   +   H2x3_5  = EXP(H2x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_5 = EXP(H2x3_5 - _MAX_);
1194719   +   _SUM_ = _SUM_ + H2x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_5 ;
1194720   +   H2x3_6  = EXP(H2x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x3_6 = EXP(H2x3_6 - _MAX_);
1194721   +   _SUM_ = _SUM_ + H2x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x3_6 ;
1194722   +   H2x3_1  = H2x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 / _SUM_;
1194723   +   H2x3_2  = H2x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 / _SUM_;
1194724   +   H2x3_3  = H2x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_3 = H2x3_3 / _SUM_;
1194725   +   H2x3_4  = H2x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_4 = H2x3_4 / _SUM_;
1194726   +   H2x3_5  = H2x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_5 = H2x3_5 / _SUM_;
1194727   +   H2x3_6  = H2x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x3_6 = H2x3_6 / _SUM_;
1194728   +END;
MPRINT(EM_DIAGRAM):   END;
1194729   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194730   +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
1194731   +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
1194732   +   H2x3_3  = .;
MPRINT(EM_DIAGRAM):   H2x3_3 = .;
1194733   +   H2x3_4  = .;
MPRINT(EM_DIAGRAM):   H2x3_4 = .;
1194734   +   H2x3_5  = .;
MPRINT(EM_DIAGRAM):   H2x3_5 = .;
1194735   +   H2x3_6  = .;
MPRINT(EM_DIAGRAM):   H2x3_6 = .;
1194736   +END;
MPRINT(EM_DIAGRAM):   END;
1194737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194738   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1194739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194740   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194741   +   H3x1_1  =     0.14821897068309 * H2x1_1  +     0.10105634438409 * H2x1_2
1194742   +          +     0.69826499371673 * H2x1_3  +     1.65127139539807 * H2x1_4
1194743   +          +     1.34699293376382 * H2x1_5  +     0.62066324264653 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.14821897068309 * H2x1_1 + 0.10105634438409 * H2x1_2 +
0.69826499371673 * H2x1_3 + 1.65127139539807 * H2x1_4 + 1.34699293376382 * H2x1_5 +
0.62066324264653 * H2x1_6 ;
1194744   +   H3x1_2  =     -0.6760189094281 * H2x1_1  +     0.85348791240011 * H2x1_2
1194745   +          +    -0.07663386217946 * H2x1_3  +     2.15467384269703 * H2x1_4
1194746   +          +    -0.50699529916446 * H2x1_5  +     1.70699964755049 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.6760189094281 * H2x1_1 + 0.85348791240011 * H2x1_2 +
-0.07663386217946 * H2x1_3 + 2.15467384269703 * H2x1_4 + -0.50699529916446 * H2x1_5 +
1.70699964755049 * H2x1_6 ;
1194747   +   H3x1_3  =    -0.94311365048828 * H2x1_1  +    -0.69829528108975 * H2x1_2
1194748   +          +    -0.34747616168009 * H2x1_3  +     2.32941170908743 * H2x1_4
1194749   +          +     3.71768144878584 * H2x1_5  +    -0.60932405988373 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -0.94311365048828 * H2x1_1 + -0.69829528108975 * H2x1_2 +
-0.34747616168009 * H2x1_3 + 2.32941170908743 * H2x1_4 + 3.71768144878584 * H2x1_5 +
-0.60932405988373 * H2x1_6 ;
1194750   +   H3x1_4  =     1.69107510526388 * H2x1_1  +    -1.40350955348413 * H2x1_2
1194751   +          +    -0.47901844016365 * H2x1_3  +      0.3540542650553 * H2x1_4
1194752   +          +    -1.56597514252687 * H2x1_5  +    -0.04997148078498 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.69107510526388 * H2x1_1 + -1.40350955348413 * H2x1_2 +
-0.47901844016365 * H2x1_3 + 0.3540542650553 * H2x1_4 + -1.56597514252687 * H2x1_5 +
-0.04997148078498 * H2x1_6 ;
1194753   +   H3x1_5  =    -0.23167181678539 * H2x1_1  +    -0.65942738658946 * H2x1_2
1194754   +          +    -0.83280103611578 * H2x1_3  +    -1.03301865685228 * H2x1_4
1194755   +          +      1.3401316289209 * H2x1_5  +    -1.98639459325872 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.23167181678539 * H2x1_1 + -0.65942738658946 * H2x1_2 +
-0.83280103611578 * H2x1_3 + -1.03301865685228 * H2x1_4 + 1.3401316289209 * H2x1_5 +
-1.98639459325872 * H2x1_6 ;
1194756   +   H3x1_1  = H3x1_1  +    -1.96226306174896 * H2x2_1
1194757   +          +     1.03065434267907 * H2x2_2  +    -0.02977552697407 * H2x2_3
1194758   +          +    -2.15633683205343 * H2x2_4  +    -0.16172049876123 * H2x2_5
1194759   +          +     2.04617275364668 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.96226306174896 * H2x2_1 + 1.03065434267907 * H2x2_2
+ -0.02977552697407 * H2x2_3 + -2.15633683205343 * H2x2_4 + -0.16172049876123 * H2x2_5 +
2.04617275364668 * H2x2_6 ;
1194760   +   H3x1_2  = H3x1_2  +     0.98825486325651 * H2x2_1
1194761   +          +    -0.45791784632486 * H2x2_2  +     -0.1004093258308 * H2x2_3
1194762   +          +     -0.9411693729369 * H2x2_4  +     -0.2302105458948 * H2x2_5
1194763   +          +    -0.37660795680674 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.98825486325651 * H2x2_1 + -0.45791784632486 * H2x2_2
+ -0.1004093258308 * H2x2_3 + -0.9411693729369 * H2x2_4 + -0.2302105458948 * H2x2_5 +
-0.37660795680674 * H2x2_6 ;
1194764   +   H3x1_3  = H3x1_3  +    -0.01929245635771 * H2x2_1
1194765   +          +     0.59176660505983 * H2x2_2  +     0.85345798669405 * H2x2_3
1194766   +          +    -0.29251716908915 * H2x2_4  +     0.62774918208489 * H2x2_5
1194767   +          +    -0.43453791992382 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.01929245635771 * H2x2_1 + 0.59176660505983 * H2x2_2
+ 0.85345798669405 * H2x2_3 + -0.29251716908915 * H2x2_4 + 0.62774918208489 * H2x2_5 +
-0.43453791992382 * H2x2_6 ;
1194768   +   H3x1_4  = H3x1_4  +    -0.93313067901041 * H2x2_1
1194769   +          +     0.79407052404273 * H2x2_2  +     1.63518575530242 * H2x2_3
1194770   +          +     1.19368615452563 * H2x2_4  +     0.43365061793519 * H2x2_5
1194771   +          +    -3.30381142208727 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.93313067901041 * H2x2_1 + 0.79407052404273 * H2x2_2
+ 1.63518575530242 * H2x2_3 + 1.19368615452563 * H2x2_4 + 0.43365061793519 * H2x2_5 +
-3.30381142208727 * H2x2_6 ;
1194772   +   H3x1_5  = H3x1_5  +      0.2721747886066 * H2x2_1
1194773   +          +     0.29405186941774 * H2x2_2  +    -0.96425253045194 * H2x2_3
1194774   +          +    -0.34879018216113 * H2x2_4  +    -1.15330072605073 * H2x2_5
1194775   +          +    -0.34019675397366 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 0.2721747886066 * H2x2_1 + 0.29405186941774 * H2x2_2 +
-0.96425253045194 * H2x2_3 + -0.34879018216113 * H2x2_4 + -1.15330072605073 * H2x2_5 +
-0.34019675397366 * H2x2_6 ;
1194776   +   H3x1_1  = H3x1_1  +     0.99938924001809 * H2x3_1
1194777   +          +    -0.28559857879809 * H2x3_2  +    -0.44648183712004 * H2x3_3
1194778   +          +    -0.23199698060307 * H2x3_4  +    -0.64346521755351 * H2x3_5
1194779   +          +     0.59340663088806 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 0.99938924001809 * H2x3_1 + -0.28559857879809 * H2x3_2
+ -0.44648183712004 * H2x3_3 + -0.23199698060307 * H2x3_4 + -0.64346521755351 * H2x3_5 +
0.59340663088806 * H2x3_6 ;
1194780   +   H3x1_2  = H3x1_2  +     1.61767718200144 * H2x3_1
1194781   +          +     0.59417860044733 * H2x3_2  +      1.9323992067722 * H2x3_3
1194782   +          +    -1.38224816012152 * H2x3_4  +    -2.04529937075447 * H2x3_5
1194783   +          +     0.67050797164115 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 1.61767718200144 * H2x3_1 + 0.59417860044733 * H2x3_2
+ 1.9323992067722 * H2x3_3 + -1.38224816012152 * H2x3_4 + -2.04529937075447 * H2x3_5 +
0.67050797164115 * H2x3_6 ;
1194784   +   H3x1_3  = H3x1_3  +    -0.69807909205706 * H2x3_1
1194785   +          +    -0.57895843216341 * H2x3_2  +    -0.16766418785512 * H2x3_3
1194786   +          +     0.40654327615846 * H2x3_4  +    -1.86698682195337 * H2x3_5
1194787   +          +    -0.51274988768251 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.69807909205706 * H2x3_1 + -0.57895843216341 *
H2x3_2 + -0.16766418785512 * H2x3_3 + 0.40654327615846 * H2x3_4 + -1.86698682195337 * H2x3_5 +
-0.51274988768251 * H2x3_6 ;
1194788   +   H3x1_4  = H3x1_4  +     0.48560830435522 * H2x3_1
1194789   +          +     -2.8037598804912 * H2x3_2  +    -0.30231415756008 * H2x3_3
1194790   +          +     2.41159952574381 * H2x3_4  +     0.62877424154604 * H2x3_5
1194791   +          +    -0.73773727947747 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.48560830435522 * H2x3_1 + -2.8037598804912 * H2x3_2
+ -0.30231415756008 * H2x3_3 + 2.41159952574381 * H2x3_4 + 0.62877424154604 * H2x3_5 +
-0.73773727947747 * H2x3_6 ;
1194792   +   H3x1_5  = H3x1_5  +    -0.87089276878422 * H2x3_1
1194793   +          +    -0.78003140915024 * H2x3_2  +    -1.46975503560585 * H2x3_3
1194794   +          +     1.87460778751879 * H2x3_4  +    -0.09219359612439 * H2x3_5
1194795   +          +    -1.07137645697526 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -0.87089276878422 * H2x3_1 + -0.78003140915024 *
H2x3_2 + -1.46975503560585 * H2x3_3 + 1.87460778751879 * H2x3_4 + -0.09219359612439 * H2x3_5 +
-1.07137645697526 * H2x3_6 ;
1194796   +   H3x1_1  =    -0.24118737469276 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.24118737469276 + H3x1_1 ;
1194797   +   H3x1_2  =     0.26844205496356 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.26844205496356 + H3x1_2 ;
1194798   +   H3x1_3  =      1.6092325807607 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 1.6092325807607 + H3x1_3 ;
1194799   +   H3x1_4  =     0.55904829903808 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.55904829903808 + H3x1_4 ;
1194800   +   H3x1_5  =     1.39880629138148 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = 1.39880629138148 + H3x1_5 ;
1194801   +   H3x1_6  = 0;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0;
1194802   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 , H3x1_6 );
1194803   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1194804   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1194805   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1194806   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1194807   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1194808   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1194809   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1194810   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1194811   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1194812   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1194813   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1194814   +   H3x1_6  = EXP(H3x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_6 = EXP(H3x1_6 - _MAX_);
1194815   +   _SUM_ = _SUM_ + H3x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_6 ;
1194816   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1194817   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1194818   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1194819   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1194820   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1194821   +   H3x1_6  = H3x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 / _SUM_;
1194822   +END;
MPRINT(EM_DIAGRAM):   END;
1194823   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194824   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1194825   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1194826   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1194827   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1194828   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1194829   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
1194830   +END;
MPRINT(EM_DIAGRAM):   END;
1194831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194832   +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
1194833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194834   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194835   +   H3x2_1  =     0.13469056275633 * H2x1_1  +    -1.31570873196603 * H2x1_2
1194836   +          +    -0.83004507775706 * H2x1_3  +     1.14954585467995 * H2x1_4
1194837   +          +     0.01234753333089 * H2x1_5  +     0.50683843245151 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.13469056275633 * H2x1_1 + -1.31570873196603 * H2x1_2 +
-0.83004507775706 * H2x1_3 + 1.14954585467995 * H2x1_4 + 0.01234753333089 * H2x1_5 +
0.50683843245151 * H2x1_6 ;
1194838   +   H3x2_2  =     2.58620633866114 * H2x1_1  +     0.37629863890202 * H2x1_2
1194839   +          +     0.34169762900278 * H2x1_3  +     1.24247313002596 * H2x1_4
1194840   +          +     -0.1965463932822 * H2x1_5  +    -0.00458488228083 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 2.58620633866114 * H2x1_1 + 0.37629863890202 * H2x1_2 +
0.34169762900278 * H2x1_3 + 1.24247313002596 * H2x1_4 + -0.1965463932822 * H2x1_5 +
-0.00458488228083 * H2x1_6 ;
1194841   +   H3x2_3  =    -2.01883694738218 * H2x1_1  +     0.83782353926562 * H2x1_2
1194842   +          +    -1.95119268200972 * H2x1_3  +    -1.04826190833003 * H2x1_4
1194843   +          +     1.66733023346498 * H2x1_5  +     0.23483419363088 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = -2.01883694738218 * H2x1_1 + 0.83782353926562 * H2x1_2 +
-1.95119268200972 * H2x1_3 + -1.04826190833003 * H2x1_4 + 1.66733023346498 * H2x1_5 +
0.23483419363088 * H2x1_6 ;
1194844   +   H3x2_4  =     0.40678642111393 * H2x1_1  +    -0.10557612663286 * H2x1_2
1194845   +          +    -0.34694532874387 * H2x1_3  +     -1.6967916788772 * H2x1_4
1194846   +          +     0.24026556349373 * H2x1_5  +    -0.69393637888423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = 0.40678642111393 * H2x1_1 + -0.10557612663286 * H2x1_2 +
-0.34694532874387 * H2x1_3 + -1.6967916788772 * H2x1_4 + 0.24026556349373 * H2x1_5 +
-0.69393637888423 * H2x1_6 ;
1194847   +   H3x2_5  =    -1.48304630985783 * H2x1_1  +     0.87426655970556 * H2x1_2
1194848   +          +    -0.49899516599841 * H2x1_3  +    -1.94880978312007 * H2x1_4
1194849   +          +    -2.45275015055877 * H2x1_5  +    -0.03264500335093 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -1.48304630985783 * H2x1_1 + 0.87426655970556 * H2x1_2 +
-0.49899516599841 * H2x1_3 + -1.94880978312007 * H2x1_4 + -2.45275015055877 * H2x1_5 +
-0.03264500335093 * H2x1_6 ;
1194850   +   H3x2_1  = H3x2_1  +    -0.40915299509566 * H2x2_1
1194851   +          +     1.45952180668254 * H2x2_2  +     0.42420517277224 * H2x2_3
1194852   +          +    -0.79379446044158 * H2x2_4  +     0.73614212418439 * H2x2_5
1194853   +          +     -0.6527392657117 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -0.40915299509566 * H2x2_1 + 1.45952180668254 * H2x2_2
+ 0.42420517277224 * H2x2_3 + -0.79379446044158 * H2x2_4 + 0.73614212418439 * H2x2_5 +
-0.6527392657117 * H2x2_6 ;
1194854   +   H3x2_2  = H3x2_2  +    -1.62752321860626 * H2x2_1
1194855   +          +    -0.04689831325067 * H2x2_2  +    -2.87951125721119 * H2x2_3
1194856   +          +    -0.36181303609331 * H2x2_4  +     0.55999175715209 * H2x2_5
1194857   +          +    -0.40911363767301 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + -1.62752321860626 * H2x2_1 + -0.04689831325067 *
H2x2_2 + -2.87951125721119 * H2x2_3 + -0.36181303609331 * H2x2_4 + 0.55999175715209 * H2x2_5 +
-0.40911363767301 * H2x2_6 ;
1194858   +   H3x2_3  = H3x2_3  +     0.50766404641726 * H2x2_1
1194859   +          +     0.02747397544049 * H2x2_2  +    -1.35626517144826 * H2x2_3
1194860   +          +     0.23390260329386 * H2x2_4  +     -0.5025118845527 * H2x2_5
1194861   +          +    -1.14035867434772 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + 0.50766404641726 * H2x2_1 + 0.02747397544049 * H2x2_2
+ -1.35626517144826 * H2x2_3 + 0.23390260329386 * H2x2_4 + -0.5025118845527 * H2x2_5 +
-1.14035867434772 * H2x2_6 ;
1194862   +   H3x2_4  = H3x2_4  +     0.64958154360038 * H2x2_1
1194863   +          +     1.68671947742627 * H2x2_2  +    -0.42417215632785 * H2x2_3
1194864   +          +    -0.39675884102374 * H2x2_4  +     1.98354732887496 * H2x2_5
1194865   +          +    -1.32783167695801 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + 0.64958154360038 * H2x2_1 + 1.68671947742627 * H2x2_2
+ -0.42417215632785 * H2x2_3 + -0.39675884102374 * H2x2_4 + 1.98354732887496 * H2x2_5 +
-1.32783167695801 * H2x2_6 ;
1194866   +   H3x2_5  = H3x2_5  +     1.92075053147101 * H2x2_1
1194867   +          +     1.22293096034837 * H2x2_2  +    -0.74039853818796 * H2x2_3
1194868   +          +    -0.25033258903105 * H2x2_4  +     0.63358340091733 * H2x2_5
1194869   +          +     0.17488501957475 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 1.92075053147101 * H2x2_1 + 1.22293096034837 * H2x2_2
+ -0.74039853818796 * H2x2_3 + -0.25033258903105 * H2x2_4 + 0.63358340091733 * H2x2_5 +
0.17488501957475 * H2x2_6 ;
1194870   +   H3x2_1  = H3x2_1  +     0.88292932547634 * H2x3_1
1194871   +          +    -0.27631908402136 * H2x3_2  +     0.93133699792762 * H2x3_3
1194872   +          +     1.18769264917434 * H2x3_4  +    -0.88901652244884 * H2x3_5
1194873   +          +    -0.17544617255869 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.88292932547634 * H2x3_1 + -0.27631908402136 * H2x3_2
+ 0.93133699792762 * H2x3_3 + 1.18769264917434 * H2x3_4 + -0.88901652244884 * H2x3_5 +
-0.17544617255869 * H2x3_6 ;
1194874   +   H3x2_2  = H3x2_2  +     0.71538502917742 * H2x3_1
1194875   +          +    -0.76848695288598 * H2x3_2  +     1.24503864708272 * H2x3_3
1194876   +          +    -0.93962158881999 * H2x3_4  +    -0.43383001812557 * H2x3_5
1194877   +          +     1.14672043219259 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 + 0.71538502917742 * H2x3_1 + -0.76848695288598 * H2x3_2
+ 1.24503864708272 * H2x3_3 + -0.93962158881999 * H2x3_4 + -0.43383001812557 * H2x3_5 +
1.14672043219259 * H2x3_6 ;
1194878   +   H3x2_3  = H3x2_3  +    -0.39933331346344 * H2x3_1
1194879   +          +      0.0019862182661 * H2x3_2  +    -0.60479718136768 * H2x3_3
1194880   +          +      1.3818804125218 * H2x3_4  +     0.13498986352108 * H2x3_5
1194881   +          +     1.02889511152823 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 + -0.39933331346344 * H2x3_1 + 0.0019862182661 * H2x3_2
+ -0.60479718136768 * H2x3_3 + 1.3818804125218 * H2x3_4 + 0.13498986352108 * H2x3_5 +
1.02889511152823 * H2x3_6 ;
1194882   +   H3x2_4  = H3x2_4  +    -1.24198502624302 * H2x3_1
1194883   +          +    -0.09061963757116 * H2x3_2  +    -0.70229381972412 * H2x3_3
1194884   +          +    -1.43988785716026 * H2x3_4  +     0.45188902401215 * H2x3_5
1194885   +          +     0.10073869982371 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 + -1.24198502624302 * H2x3_1 + -0.09061963757116 *
H2x3_2 + -0.70229381972412 * H2x3_3 + -1.43988785716026 * H2x3_4 + 0.45188902401215 * H2x3_5 +
0.10073869982371 * H2x3_6 ;
1194886   +   H3x2_5  = H3x2_5  +     0.13815223958312 * H2x3_1
1194887   +          +     0.38392032129472 * H2x3_2  +    -0.08374178846724 * H2x3_3
1194888   +          +     0.39613433726611 * H2x3_4  +     1.64049322745471 * H2x3_5
1194889   +          +     0.97496084656174 * H2x3_6 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 + 0.13815223958312 * H2x3_1 + 0.38392032129472 * H2x3_2
+ -0.08374178846724 * H2x3_3 + 0.39613433726611 * H2x3_4 + 1.64049322745471 * H2x3_5 +
0.97496084656174 * H2x3_6 ;
1194890   +   H3x2_1  =    -0.72845954974251 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -0.72845954974251 + H3x2_1 ;
1194891   +   H3x2_2  =     0.59148824718722 + H3x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0.59148824718722 + H3x2_2 ;
1194892   +   H3x2_3  =     1.28031731320103 + H3x2_3 ;
MPRINT(EM_DIAGRAM):   H3x2_3 = 1.28031731320103 + H3x2_3 ;
1194893   +   H3x2_4  =    -0.11427038364635 + H3x2_4 ;
MPRINT(EM_DIAGRAM):   H3x2_4 = -0.11427038364635 + H3x2_4 ;
1194894   +   H3x2_5  =    -0.28699725292326 + H3x2_5 ;
MPRINT(EM_DIAGRAM):   H3x2_5 = -0.28699725292326 + H3x2_5 ;
1194895   +   H3x2_6  = 0;
MPRINT(EM_DIAGRAM):   H3x2_6 = 0;
1194896   +   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 , H3x2_3 , H3x2_4 , H3x2_5 , H3x2_6 );
1194897   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1194898   +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
1194899   +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
1194900   +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
1194901   +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
1194902   +   H3x2_3  = EXP(H3x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_3 = EXP(H3x2_3 - _MAX_);
1194903   +   _SUM_ = _SUM_ + H3x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_3 ;
1194904   +   H3x2_4  = EXP(H3x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_4 = EXP(H3x2_4 - _MAX_);
1194905   +   _SUM_ = _SUM_ + H3x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_4 ;
1194906   +   H3x2_5  = EXP(H3x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_5 = EXP(H3x2_5 - _MAX_);
1194907   +   _SUM_ = _SUM_ + H3x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_5 ;
1194908   +   H3x2_6  = EXP(H3x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_6 = EXP(H3x2_6 - _MAX_);
1194909   +   _SUM_ = _SUM_ + H3x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_6 ;
1194910   +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
1194911   +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
1194912   +   H3x2_3  = H3x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_3 = H3x2_3 / _SUM_;
1194913   +   H3x2_4  = H3x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_4 = H3x2_4 / _SUM_;
1194914   +   H3x2_5  = H3x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_5 = H3x2_5 / _SUM_;
1194915   +   H3x2_6  = H3x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_6 = H3x2_6 / _SUM_;
1194916   +END;
MPRINT(EM_DIAGRAM):   END;
1194917   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194918   +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
1194919   +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
1194920   +   H3x2_3  = .;
MPRINT(EM_DIAGRAM):   H3x2_3 = .;
1194921   +   H3x2_4  = .;
MPRINT(EM_DIAGRAM):   H3x2_4 = .;
1194922   +   H3x2_5  = .;
MPRINT(EM_DIAGRAM):   H3x2_5 = .;
1194923   +   H3x2_6  = .;
MPRINT(EM_DIAGRAM):   H3x2_6 = .;
1194924   +END;
MPRINT(EM_DIAGRAM):   END;
1194925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194926   +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
1194927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194928   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194929   +   H4x1_1  =     0.10986960182278 * H3x1_1  +    -0.10835805909937 * H3x1_2
1194930   +          +     1.78643376838566 * H3x1_3  +    -0.00067995179919 * H3x1_4
1194931   +          +     2.04711620528782 * H3x1_5  +    -0.66853997603718 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.10986960182278 * H3x1_1 + -0.10835805909937 * H3x1_2 +
1.78643376838566 * H3x1_3 + -0.00067995179919 * H3x1_4 + 2.04711620528782 * H3x1_5 +
-0.66853997603718 * H3x1_6 ;
1194932   +   H4x1_2  =    -0.17187141657369 * H3x1_1  +    -1.56897037747293 * H3x1_2
1194933   +          +    -1.38330818097338 * H3x1_3  +     3.94629669251083 * H3x1_4
1194934   +          +    -0.57201557221624 * H3x1_5  +     0.99276034828548 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = -0.17187141657369 * H3x1_1 + -1.56897037747293 * H3x1_2 +
-1.38330818097338 * H3x1_3 + 3.94629669251083 * H3x1_4 + -0.57201557221624 * H3x1_5 +
0.99276034828548 * H3x1_6 ;
1194935   +   H4x1_3  =      1.5223304212488 * H3x1_1  +    -0.33490912702371 * H3x1_2
1194936   +          +    -0.30324493540575 * H3x1_3  +    -1.23990036921669 * H3x1_4
1194937   +          +     0.77489370055267 * H3x1_5  +    -0.38609823936674 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.5223304212488 * H3x1_1 + -0.33490912702371 * H3x1_2 +
-0.30324493540575 * H3x1_3 + -1.23990036921669 * H3x1_4 + 0.77489370055267 * H3x1_5 +
-0.38609823936674 * H3x1_6 ;
1194938   +   H4x1_4  =    -0.75234452297837 * H3x1_1  +      1.1117782900703 * H3x1_2
1194939   +          +      1.0171911341496 * H3x1_3  +     2.31462824862723 * H3x1_4
1194940   +          +     1.05562639649812 * H3x1_5  +    -0.80603399686936 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -0.75234452297837 * H3x1_1 + 1.1117782900703 * H3x1_2 +
1.0171911341496 * H3x1_3 + 2.31462824862723 * H3x1_4 + 1.05562639649812 * H3x1_5 +
-0.80603399686936 * H3x1_6 ;
1194941   +   H4x1_5  =    -0.35441774309359 * H3x1_1  +     0.37408435161205 * H3x1_2
1194942   +          +    -0.79287886005891 * H3x1_3  +    -0.89695291885453 * H3x1_4
1194943   +          +     0.46220429367054 * H3x1_5  +    -1.56166867584216 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = -0.35441774309359 * H3x1_1 + 0.37408435161205 * H3x1_2 +
-0.79287886005891 * H3x1_3 + -0.89695291885453 * H3x1_4 + 0.46220429367054 * H3x1_5 +
-1.56166867584216 * H3x1_6 ;
1194944   +   H4x1_1  = H4x1_1  +    -1.12622282402713 * H3x2_1
1194945   +          +     2.43865739917959 * H3x2_2  +     1.62534005409988 * H3x2_3
1194946   +          +     0.83506165677151 * H3x2_4  +    -0.15894659563972 * H3x2_5
1194947   +          +     0.77216806897502 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -1.12622282402713 * H3x2_1 + 2.43865739917959 * H3x2_2
+ 1.62534005409988 * H3x2_3 + 0.83506165677151 * H3x2_4 + -0.15894659563972 * H3x2_5 +
0.77216806897502 * H3x2_6 ;
1194948   +   H4x1_2  = H4x1_2  +     0.96736353410956 * H3x2_1
1194949   +          +      1.6250281874285 * H3x2_2  +    -0.81418318229631 * H3x2_3
1194950   +          +     0.35282111325987 * H3x2_4  +     0.11187473980261 * H3x2_5
1194951   +          +     0.73971378600397 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 + 0.96736353410956 * H3x2_1 + 1.6250281874285 * H3x2_2 +
-0.81418318229631 * H3x2_3 + 0.35282111325987 * H3x2_4 + 0.11187473980261 * H3x2_5 +
0.73971378600397 * H3x2_6 ;
1194952   +   H4x1_3  = H4x1_3  +    -0.30588247178582 * H3x2_1
1194953   +          +     0.22302184288326 * H3x2_2  +    -0.15797620108073 * H3x2_3
1194954   +          +     1.18515955770896 * H3x2_4  +     0.43359240886537 * H3x2_5
1194955   +          +     0.90907054011344 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 + -0.30588247178582 * H3x2_1 + 0.22302184288326 * H3x2_2
+ -0.15797620108073 * H3x2_3 + 1.18515955770896 * H3x2_4 + 0.43359240886537 * H3x2_5 +
0.90907054011344 * H3x2_6 ;
1194956   +   H4x1_4  = H4x1_4  +    -0.26678025657796 * H3x2_1
1194957   +          +    -0.23171152283695 * H3x2_2  +    -0.72882061581264 * H3x2_3
1194958   +          +     0.68597418643333 * H3x2_4  +      0.6559090638639 * H3x2_5
1194959   +          +     0.95412028439169 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 + -0.26678025657796 * H3x2_1 + -0.23171152283695 *
H3x2_2 + -0.72882061581264 * H3x2_3 + 0.68597418643333 * H3x2_4 + 0.6559090638639 * H3x2_5 +
0.95412028439169 * H3x2_6 ;
1194960   +   H4x1_5  = H4x1_5  +    -0.77875602324955 * H3x2_1
1194961   +          +     -1.5646810153964 * H3x2_2  +    -0.53157591270506 * H3x2_3
1194962   +          +    -0.27917864191674 * H3x2_4  +    -1.10966192483404 * H3x2_5
1194963   +          +     -0.0058627670025 * H3x2_6 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 + -0.77875602324955 * H3x2_1 + -1.5646810153964 * H3x2_2
+ -0.53157591270506 * H3x2_3 + -0.27917864191674 * H3x2_4 + -1.10966192483404 * H3x2_5 +
-0.0058627670025 * H3x2_6 ;
1194964   +   H4x1_1  =     0.87937070574208 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.87937070574208 + H4x1_1 ;
1194965   +   H4x1_2  =     0.75203729660648 + H4x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0.75203729660648 + H4x1_2 ;
1194966   +   H4x1_3  =     1.14889100908291 + H4x1_3 ;
MPRINT(EM_DIAGRAM):   H4x1_3 = 1.14889100908291 + H4x1_3 ;
1194967   +   H4x1_4  =    -1.71383624276913 + H4x1_4 ;
MPRINT(EM_DIAGRAM):   H4x1_4 = -1.71383624276913 + H4x1_4 ;
1194968   +   H4x1_5  =     0.22194774900585 + H4x1_5 ;
MPRINT(EM_DIAGRAM):   H4x1_5 = 0.22194774900585 + H4x1_5 ;
1194969   +   H4x1_6  = 0;
MPRINT(EM_DIAGRAM):   H4x1_6 = 0;
1194970   +   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 , H4x1_3 , H4x1_4 , H4x1_5 , H4x1_6 );
1194971   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1194972   +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
1194973   +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
1194974   +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
1194975   +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
1194976   +   H4x1_3  = EXP(H4x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_3 = EXP(H4x1_3 - _MAX_);
1194977   +   _SUM_ = _SUM_ + H4x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_3 ;
1194978   +   H4x1_4  = EXP(H4x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_4 = EXP(H4x1_4 - _MAX_);
1194979   +   _SUM_ = _SUM_ + H4x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_4 ;
1194980   +   H4x1_5  = EXP(H4x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_5 = EXP(H4x1_5 - _MAX_);
1194981   +   _SUM_ = _SUM_ + H4x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_5 ;
1194982   +   H4x1_6  = EXP(H4x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_6 = EXP(H4x1_6 - _MAX_);
1194983   +   _SUM_ = _SUM_ + H4x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_6 ;
1194984   +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
1194985   +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
1194986   +   H4x1_3  = H4x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_3 = H4x1_3 / _SUM_;
1194987   +   H4x1_4  = H4x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_4 = H4x1_4 / _SUM_;
1194988   +   H4x1_5  = H4x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_5 = H4x1_5 / _SUM_;
1194989   +   H4x1_6  = H4x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_6 = H4x1_6 / _SUM_;
1194990   +END;
MPRINT(EM_DIAGRAM):   END;
1194991   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194992   +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
1194993   +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
1194994   +   H4x1_3  = .;
MPRINT(EM_DIAGRAM):   H4x1_3 = .;
1194995   +   H4x1_4  = .;
MPRINT(EM_DIAGRAM):   H4x1_4 = .;
1194996   +   H4x1_5  = .;
MPRINT(EM_DIAGRAM):   H4x1_5 = .;
1194997   +   H4x1_6  = .;
MPRINT(EM_DIAGRAM):   H4x1_6 = .;
1194998   +END;
MPRINT(EM_DIAGRAM):   END;
1194999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195000   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1195001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195002   +
1195003   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1195004   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1195005   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1195006   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1195007   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1195008   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195009   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1195010   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1195011   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1195012   +end;
MPRINT(EM_DIAGRAM):   end;
1195013   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195014   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1195015   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1195016   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1195017   +   end;
MPRINT(EM_DIAGRAM):   end;
1195018   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1195019   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1195020   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1195021   +   end;
MPRINT(EM_DIAGRAM):   end;
1195022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195023   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1195024   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1195025   +   end;
MPRINT(EM_DIAGRAM):   end;
1195026   +end;
MPRINT(EM_DIAGRAM):   end;
1195027   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1195028   +   P_DepVar1  =    -5.30721919155126 * H4x1_1  +     10.4301477552223 * H4x1_2
1195029   +          +    -3.40676330075486 * H4x1_3  +     0.07452634039202 * H4x1_4
1195030   +          +    -2.90585821687293 * H4x1_5  +    -2.63321710569292 * H4x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.30721919155126 * H4x1_1 + 10.4301477552223 * H4x1_2 +
-3.40676330075486 * H4x1_3 + 0.07452634039202 * H4x1_4 + -2.90585821687293 * H4x1_5 +
-2.63321710569292 * H4x1_6 ;
1195031   +   P_DepVar1  =    -2.93956196427421 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.93956196427421 + P_DepVar1 ;
1195032   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1195033   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1195034   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1195035   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1195036   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1195037   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1195038   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1195039   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1195040   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1195041   +END;
MPRINT(EM_DIAGRAM):   END;
1195042   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1195043   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1195044   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1195045   +END;
MPRINT(EM_DIAGRAM):   END;
1195046   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1195047   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1195048   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1195049   +END;
MPRINT(EM_DIAGRAM):   END;
1195050   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1195051   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1195052   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1195053   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1195054   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1195055   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1195056   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1195057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195058   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1195059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195060   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1195061   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1195062   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1195063   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1195064   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1195065   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1195066   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1195067   +END;
MPRINT(EM_DIAGRAM):   END;
1195068   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1195069   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1195070   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1195071   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1195072    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL28_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1195073    quit;
1195074    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1195075    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1195076    * AutoNeural28: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Computing metadata for TRAIN data;
1195077    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL28_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural28_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural28_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural28_TRAIN out=WORK.M1JI4AYZ
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JI4AYZ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JI4AYZ(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JI4AYZ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JI4AYZ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1YTQ_NF NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1YTQ_NF;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1YTQ_NF;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0PDRKRD(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1YTQ_NF;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1YTQ_NF;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1YTQ_NF;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
The SAS System
 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1YTQ_NF;
MPRINT(EMADVISECOLUMNS):   set WORK.M1YTQ_NF;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural28";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1195389    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1195390    set EMWS8.AutoNeural28_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMINFO;
1195391    where DATA='AutoNeural28' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural28' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
1195392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL28_EMINFO.
      WHERE (DATA='AutoNeural28') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1195393    data EMWS8.AutoNeural28_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_EMINFO;
1195394    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1195395    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1195396    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL28_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1195400    run;
1195401    data EMWS8.AutoNeural28_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMINFO;
1195402    set EMWS8.AutoNeural28_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMINFO WORK.MODELTEMP_INFO;
1195403    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL28_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL28_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1195404    proc sort data = EMWS8.AutoNeural28_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural28_EMINFO NOTHREADS;
1195405    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1195406    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL28_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL28_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1195407    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1195408    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1195409    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1195410    proc sort data = EMWS8.AutoNeural28_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural28_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1195411    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1195412    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL28_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1195413    data EMWS8.AutoNeural28_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMINFO;
1195414    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1195415    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1195416    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL28_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1195417    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1195418    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1195419    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1195420    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.AUTONEURAL28_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL28_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.21 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                09.21 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1T_QOEU
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1T_QOEU new;
MPRINT(EM_DIAGRAM):   run;
1195444    proc sort data=EMWS8.AutoNeural28_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural28_OUTFIT nodupkey;
1195445    by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
1195446    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL28_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL28_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1195447    data EMWS8.AutoNeural28_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMOUTFIT(rename=(_NAME_=TARGET));
1195448    set EMWS8.AutoNeural28_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_OUTFIT(where=(_NAME_ eq 'OVERALL'));
1195449    label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
1195450    if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
1195451    drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
1195452    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL28_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1195453    data EMWS8.AutoNeural28_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_EMOUTFIT;
1195454    set EMWS8.AutoNeural28_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMOUTFIT;
1195455    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1195456    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1195456  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1195457    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1195458    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1195459    proc sort data=EMWS8.AutoNeural28_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural28_EMREPORTFIT nothreads;
1195460    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1195461    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL28_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL28_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1195462    %let _EMwarndup = 0;
1195463    %let _EMtargetdup =;
1195464    %let _EMASEtargetdup =;
1195465    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1195466    set EMWS8.AutoNeural28_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMOUTFIT;
1195467    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1195468    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1195469    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1195470    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1195471    end;
MPRINT(EM_DIAGRAM):   end;
1195472    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL28_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1195473    proc sort data=EMWS8.Varsel_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Varsel_CMeta_TRAIN out=WORK.SUBSETINMETA;
1195474    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1195475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set EMWS8.VARSEL_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 16 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1195476    proc sort data=EMWS8.AutoNeural28_VariableSet out=WORK.SUBSETVARSET(keep=NAME
1195476  ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural28_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1195477    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1195478    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.AUTONEURAL28_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1195479    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1195480    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1195481    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1195482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 13 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 16 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1195483    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1195484    set EMWS8.AutoNeural28_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_CMeta_TRAIN;
1195485    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1195485  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1195486    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL28_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1195487    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1195488    set EMWS8.AutoNeural28_TRAIN(keep=
1195489    F_DepVar
1195490    I_DepVar
1195491    P_DepVar0
1195492    P_DepVar1
1195493    R_DepVar0
1195494    R_DepVar1
1195495    U_DepVar
1195496    _WARN_
1195497    DepVar
1195498    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1195499    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL28_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL28_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural28_2Q6TLVO nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural28_2Q6TLVO;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural28_2Q6TLVO(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural28_2Q6TLVO;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural28_2Q6TLVO;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0003187246 OVLMAX 0.9991595662 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1199765    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1199766    set EMWS8.AutoNeural28_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_CMeta_TRAIN;
1199767    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1199767  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1199768    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL28_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1199769    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1199770    set EMWS8.AutoNeural28_VALIDATE(keep=
1199771    F_DepVar
1199772    I_DepVar
1199773    P_DepVar0
1199774    P_DepVar1
1199775    R_DepVar0
1199776    R_DepVar1
1199777    U_DepVar
1199778    _WARN_
1199779    DepVar
1199780    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1199781    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL28_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.07 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.VARSEL_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL28_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural28_1ATO_SQ nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural28_1ATO_SQ;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural28_1ATO_SQ(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMCLASSIFICATION WORK.AutoNeural28_1ATO_SQ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural28_1ATO_SQ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0003179853 OVLMAX 0.9991571537 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1204056    %let _cn = %sysfunc(getoption(CENTER));
1204057    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1204058    proc print data=EMWS8.AutoNeural28_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_EMREPORTFIT noobs label;
1204059    var STAT LABEL TRAIN
1204060    VALIDATE
1204061    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1204062    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1204063    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1204064    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1204065    run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL28_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1139.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1204066    title10;
MPRINT(EM_DIAGRAM):   title10;
1204067    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1204068    proc sort data=EMWS8.AutoNeural28_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural28_EMCLASSIFICATION nothreads;
1204069    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1204070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL28_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL28_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1204071    %let _cn = %sysfunc(getoption(CENTER));
1204072    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1204073    proc print data=EMWS8.AutoNeural28_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_EMCLASSIFICATION noobs label;
1204074    var from into pct_row pct_col count percent
1204075    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1204076    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1204077    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1204078    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1204079    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1204080    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1204081    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1204082    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1204083    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1204084    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1204085    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1204086    run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL28_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1140.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1204087    title9;
MPRINT(EM_DIAGRAM):   title9;
1204088    title10;
MPRINT(EM_DIAGRAM):   title10;
1204089    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1204090    %let _cn = %sysfunc(getoption(CENTER));
1204091    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1204092    data EMWS8.AutoNeural28_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMEVENTREPORT;
1204093    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1204093  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1204094    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1204094  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1204094  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1204094  ! FALSEEVENT
1204095    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1204095  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1204095  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1204096       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1204097    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1204098    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1204099    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1204100    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1204101    set EMWS8.AutoNeural28_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMEVENTREPORT;
1204102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL28_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL28_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1204103    proc print data=EMWS8.AutoNeural28_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_EMEVENTREPORT noobs label;
1204104    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1204105    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1204106    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1204107    run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL28_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1141.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1204108    title10;
MPRINT(EM_DIAGRAM):   title10;
1204109    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1204110    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1204111    modify AutoNeural28_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural28_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1204112    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1204113    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1204113  ! ;
MPRINT(EM_DIAGRAM):   run;
1204114    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL28_EMRANK.DATA.
1204115    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
 
1204116    %let _cn = %sysfunc(getoption(CENTER));
1204117    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1204118    proc print data=EMWS8.AutoNeural28_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_EMRANK label noobs;
1204119    var
1204120    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1204121    by
1204122    notsorted DATAROLE
1204123    notsorted TARGET
1204124    notsorted TARGETLABEL
1204125    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1204126    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1204127    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1204128    run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL28_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1142.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1204129    title10;
MPRINT(EM_DIAGRAM):   title10;
1204130    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1204131    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1204132    modify AutoNeural28_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural28_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1204133    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1204133  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1204134    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1204134  ! ;
MPRINT(EM_DIAGRAM):   run;
1204135    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL28_EMSCOREDIST.DATA.
1204136    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural28_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
