MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.21 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.21 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3WA9PVF 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3WA9PVF new;
MPRINT(EM_DIAGRAM):   run;
533903     filename emflow
533903   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
533904     *------------------------------------------------------------*;
533905     * AutoNeural28: Scoring DATA data;
533906     *------------------------------------------------------------*;
533907     data EMWS8.AutoNeural28_TRAIN
533908     / view=EMWS8.AutoNeural28_TRAIN
533909     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_TRAIN / view=EMWS8.AutoNeural28_TRAIN ;
533910     set EMWS8.Varsel_TRAIN
533911     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
533912     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas.
533913    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
533914    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
533915    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
533916    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
533917    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
533918    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
533919    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
533920    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
533921    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
533922    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
533923    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
533924    +LENGTH _WARN_ $4
533925    +      F_DepVar  $ 12
533926    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
533927    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
533928    +
533929    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
533930    +
533931    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
533932    +
533933    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
533934    +
533935    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
533936    +
533937    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
533938    +
533939    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
533940    +
533941    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
533942    +
533943    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
533944    +
533945    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
533946    +
533947    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
533948    +
533949    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
533950    +
533951    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
533952    +
533953    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
533954    +
533955    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
533956    +
533957    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
533958    +
533959    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
533960    +
533961    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
533962    +
533963    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
533964    +
533965    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
533966    +
533967    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
533968    +
533969    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
533970    +
533971    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
533972    +
533973    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
533974    +
533975    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
533976    +
533977    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
533978    +
533979    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
533980    +
533981    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
533982    +
533983    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
533984    +
533985    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
533986    +
533987    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
533988    +
533989    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
533990    +
533991    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
533992    +
533993    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
533994    +
533995    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
533996    +
533997    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
533998    +
533999    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
534000    +
534001    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
534002    +
534003    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
534004    +
534005    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
534006    +
534007    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
534008    +
534009    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
534010    +
534011    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
534012    +
534013    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
534014    +
534015    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
534016    +
534017    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
534018    +
534019    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
534020    +
534021    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
534022    +
534023    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
534024    +
534025    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
534026    +
534027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534028    +*** Checking missing input Interval
534029    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
534030    +
534031    +IF NMISS(
534032    +   AcceptedCmpTotal ,
534033    +   Mnt ,
534034    +   MntMeatProducts ,
534035    +   NumCatalogPurchases ,
534036    +   RFMstat ,
534037    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
534038    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
534039    +
534040    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534041    +END;
MPRINT(EM_DIAGRAM):   END;
534042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534043    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
534044    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534045    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534046    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
534047    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
534048    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
534049    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
534050    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
534051    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
534052    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
534053    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
534054    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
534055    +END;
MPRINT(EM_DIAGRAM):   END;
534056    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534057    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
534058    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
534059    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
534060    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
534061    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
534062    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
534063    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
534064    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
534065    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
534066    +   ELSE S_NumCatalogPurchases
534067    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
534068    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
534069    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
534070    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
534071    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
534072    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
534073    +END;
MPRINT(EM_DIAGRAM):   END;
534074    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534075    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
534076    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534077    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534078    +   H1x1_1  =     2.10717134491045 * S_AcceptedCmpTotal
534079    +          +    -10.9799187882689 * S_Mnt  +     3.17619086363109 *
534080    +        S_MntMeatProducts  +     0.58522050540174 * S_NumCatalogPurchases
534081    +          +     0.10457500953086 * S_RFMstat  +    -0.59708195840656 *
534082    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.10717134491045 * S_AcceptedCmpTotal + -10.9799187882689 * 
S_Mnt + 3.17619086363109 * S_MntMeatProducts + 0.58522050540174 * S_NumCatalogPurchases + 
0.10457500953086 * S_RFMstat + -0.59708195840656 * S_Recency ;
534083    +   H1x1_2  =    -1.09600222674288 * S_AcceptedCmpTotal
534084    +          +    -2.75188573882189 * S_Mnt  +     2.38829776780629 *
534085    +        S_MntMeatProducts  +     2.37290115499231 * S_NumCatalogPurchases
534086    +          +    -1.67864747205449 * S_RFMstat  +    -1.87700204299542 *
534087    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.09600222674288 * S_AcceptedCmpTotal + -2.75188573882189 * 
S_Mnt + 2.38829776780629 * S_MntMeatProducts + 2.37290115499231 * S_NumCatalogPurchases + 
-1.67864747205449 * S_RFMstat + -1.87700204299542 * S_Recency ;
534088    +   H1x1_3  =     0.24593136036671 * S_AcceptedCmpTotal
534089    +          +     0.98275447305236 * S_Mnt  +     1.52686649163215 *
534090    +        S_MntMeatProducts  +     1.08491172792697 * S_NumCatalogPurchases
534091    +          +    -6.31220731697864 * S_RFMstat  +    -2.08472878456829 *
534092    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.24593136036671 * S_AcceptedCmpTotal + 0.98275447305236 * 
S_Mnt + 1.52686649163215 * S_MntMeatProducts + 1.08491172792697 * S_NumCatalogPurchases + 
-6.31220731697864 * S_RFMstat + -2.08472878456829 * S_Recency ;
534093    +   H1x1_4  =     1.35296744918554 * S_AcceptedCmpTotal
534094    +          +    -3.58727753695297 * S_Mnt  +    -6.35187991517409 *
534095    +        S_MntMeatProducts  +    -1.41725838894141 * S_NumCatalogPurchases
534096    +          +     -2.5174617752956 * S_RFMstat  +     0.27284317719271 *
534097    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.35296744918554 * S_AcceptedCmpTotal + -3.58727753695297 * 
S_Mnt + -6.35187991517409 * S_MntMeatProducts + -1.41725838894141 * S_NumCatalogPurchases + 
-2.5174617752956 * S_RFMstat + 0.27284317719271 * S_Recency ;
534098    +   H1x1_5  =     1.41560412529603 * S_AcceptedCmpTotal
534099    +          +     2.25142479190183 * S_Mnt  +      0.2775616702254 *
534100    +        S_MntMeatProducts  +     -0.4118907005017 * S_NumCatalogPurchases
534101    +          +     0.38803464834347 * S_RFMstat  +    -0.81750268679565 *
534102    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.41560412529603 * S_AcceptedCmpTotal + 2.25142479190183 * 
S_Mnt + 0.2775616702254 * S_MntMeatProducts + -0.4118907005017 * S_NumCatalogPurchases + 
0.38803464834347 * S_RFMstat + -0.81750268679565 * S_Recency ;
534103    +   H1x1_1  =    -1.94381314805925 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.94381314805925 + H1x1_1 ;
534104    +   H1x1_2  =     -1.4831757685406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.4831757685406 + H1x1_2 ;
534105    +   H1x1_3  =    -0.53539803191548 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.53539803191548 + H1x1_3 ;
534106    +   H1x1_4  =    -5.07257058520645 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -5.07257058520645 + H1x1_4 ;
534107    +   H1x1_5  =    -3.95581011117601 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.95581011117601 + H1x1_5 ;
534108    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
534109    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
534110    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
534111    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
534112    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
534113    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
534114    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
534115    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
534116    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
534117    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
534118    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
534119    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
534120    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
534121    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
534122    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
534123    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
534124    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
534125    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
534126    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
534127    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
534128    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
534129    +END;
MPRINT(EM_DIAGRAM):   END;
534130    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534131    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
534132    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
534133    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
534134    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
534135    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
534136    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
534137    +END;
MPRINT(EM_DIAGRAM):   END;
534138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534139    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
534140    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534141    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534142    +   H1x2_1  =    -1.55686119998165 * S_AcceptedCmpTotal
534143    +          +    -0.26111571781978 * S_Mnt  +    -1.44938218805988 *
534144    +        S_MntMeatProducts  +     0.04086123541942 * S_NumCatalogPurchases
534145    +          +    -0.80214702507913 * S_RFMstat  +     0.70413979175849 *
534146    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.55686119998165 * S_AcceptedCmpTotal + -0.26111571781978 * 
S_Mnt + -1.44938218805988 * S_MntMeatProducts + 0.04086123541942 * S_NumCatalogPurchases + 
-0.80214702507913 * S_RFMstat + 0.70413979175849 * S_Recency ;
534147    +   H1x2_2  =    -1.89013114756444 * S_AcceptedCmpTotal
534148    +          +     2.02645277032883 * S_Mnt  +     0.33300450318575 *
534149    +        S_MntMeatProducts  +    -3.49523435320164 * S_NumCatalogPurchases
534150    +          +    -0.54366042810185 * S_RFMstat  +    -0.96821243793862 *
534151    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.89013114756444 * S_AcceptedCmpTotal + 2.02645277032883 * 
S_Mnt + 0.33300450318575 * S_MntMeatProducts + -3.49523435320164 * S_NumCatalogPurchases + 
-0.54366042810185 * S_RFMstat + -0.96821243793862 * S_Recency ;
534152    +   H1x2_3  =    -0.37493223935971 * S_AcceptedCmpTotal
534153    +          +     0.44222577344261 * S_Mnt  +    -2.29203252552751 *
534154    +        S_MntMeatProducts  +    -2.51799836083289 * S_NumCatalogPurchases
534155    +          +     0.79676408136588 * S_RFMstat  +    -1.33777715205059 *
534156    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.37493223935971 * S_AcceptedCmpTotal + 0.44222577344261 * 
S_Mnt + -2.29203252552751 * S_MntMeatProducts + -2.51799836083289 * S_NumCatalogPurchases + 
0.79676408136588 * S_RFMstat + -1.33777715205059 * S_Recency ;
534157    +   H1x2_4  =     0.61023216239118 * S_AcceptedCmpTotal
534158    +          +     -1.2504451910923 * S_Mnt  +     1.08805550572067 *
534159    +        S_MntMeatProducts  +     0.42462128634087 * S_NumCatalogPurchases
534160    +          +     0.47301106041065 * S_RFMstat  +    -2.61753144043135 *
534161    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.61023216239118 * S_AcceptedCmpTotal + -1.2504451910923 * 
S_Mnt + 1.08805550572067 * S_MntMeatProducts + 0.42462128634087 * S_NumCatalogPurchases + 
0.47301106041065 * S_RFMstat + -2.61753144043135 * S_Recency ;
534162    +   H1x2_5  =    -1.41618915627784 * S_AcceptedCmpTotal
534163    +          +    -1.13785141950187 * S_Mnt  +    -1.73667107974481 *
534164    +        S_MntMeatProducts  +      3.1366199093076 * S_NumCatalogPurchases
534165    +          +    -1.94563130199796 * S_RFMstat  +       2.512838942818 *
534166    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.41618915627784 * S_AcceptedCmpTotal + -1.13785141950187 * 
S_Mnt + -1.73667107974481 * S_MntMeatProducts + 3.1366199093076 * S_NumCatalogPurchases + 
-1.94563130199796 * S_RFMstat + 2.512838942818 * S_Recency ;
534167    +   H1x2_1  =     0.73112846873387 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73112846873387 + H1x2_1 ;
534168    +   H1x2_2  =    -0.66717106615524 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.66717106615524 + H1x2_2 ;
534169    +   H1x2_3  =      2.7125530739338 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.7125530739338 + H1x2_3 ;
534170    +   H1x2_4  =    -1.39079027168122 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.39079027168122 + H1x2_4 ;
534171    +   H1x2_5  =     -1.5266283403396 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.5266283403396 + H1x2_5 ;
534172    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
534173    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
534174    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
534175    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
534176    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
534177    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
534178    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
534179    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
534180    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
534181    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
534182    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
534183    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
534184    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
534185    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
534186    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
534187    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
534188    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
534189    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
534190    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
534191    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
534192    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
534193    +END;
MPRINT(EM_DIAGRAM):   END;
534194    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534195    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
534196    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
534197    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
534198    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
534199    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
534200    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
534201    +END;
MPRINT(EM_DIAGRAM):   END;
534202    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534203    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
534204    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534205    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534206    +   H1x3_1  =     1.55893522013734 * S_AcceptedCmpTotal
534207    +          +    -1.16802167955541 * S_Mnt  +    -1.60360119780136 *
534208    +        S_MntMeatProducts  +     0.47774394371528 * S_NumCatalogPurchases
534209    +          +      -0.530718682766 * S_RFMstat  +    -2.44187650282709 *
534210    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.55893522013734 * S_AcceptedCmpTotal + -1.16802167955541 * 
S_Mnt + -1.60360119780136 * S_MntMeatProducts + 0.47774394371528 * S_NumCatalogPurchases + 
-0.530718682766 * S_RFMstat + -2.44187650282709 * S_Recency ;
534211    +   H1x3_2  =     1.06465525219753 * S_AcceptedCmpTotal
534212    +          +    -4.15619528335918 * S_Mnt  +     1.95067813512976 *
534213    +        S_MntMeatProducts  +    -2.07670102753791 * S_NumCatalogPurchases
534214    +          +     0.49910286851075 * S_RFMstat  +     0.93996026298479 *
534215    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.06465525219753 * S_AcceptedCmpTotal + -4.15619528335918 * 
S_Mnt + 1.95067813512976 * S_MntMeatProducts + -2.07670102753791 * S_NumCatalogPurchases + 
0.49910286851075 * S_RFMstat + 0.93996026298479 * S_Recency ;
534216    +   H1x3_3  =    -0.29105397796174 * S_AcceptedCmpTotal
534217    +          +     2.11159454800566 * S_Mnt  +     1.67840031691295 *
534218    +        S_MntMeatProducts  +    -2.40711178902336 * S_NumCatalogPurchases
534219    +          +    -1.13747844076384 * S_RFMstat  +    -0.88756656082469 *
534220    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.29105397796174 * S_AcceptedCmpTotal + 2.11159454800566 * 
S_Mnt + 1.67840031691295 * S_MntMeatProducts + -2.40711178902336 * S_NumCatalogPurchases + 
-1.13747844076384 * S_RFMstat + -0.88756656082469 * S_Recency ;
534221    +   H1x3_4  =    -1.15703505358845 * S_AcceptedCmpTotal
534222    +          +     0.30100889287849 * S_Mnt  +     0.55319963517684 *
534223    +        S_MntMeatProducts  +    -0.02272785613118 * S_NumCatalogPurchases
534224    +          +     0.43699534320691 * S_RFMstat  +     2.22910491450126 *
534225    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.15703505358845 * S_AcceptedCmpTotal + 0.30100889287849 * 
S_Mnt + 0.55319963517684 * S_MntMeatProducts + -0.02272785613118 * S_NumCatalogPurchases + 
0.43699534320691 * S_RFMstat + 2.22910491450126 * S_Recency ;
534226    +   H1x3_5  =    -0.42268650148557 * S_AcceptedCmpTotal
534227    +          +    -2.38416083526034 * S_Mnt  +     2.41579845516974 *
534228    +        S_MntMeatProducts  +     0.60973384003689 * S_NumCatalogPurchases
534229    +          +    -1.12415629345715 * S_RFMstat  +    -0.59274912531616 *
534230    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.42268650148557 * S_AcceptedCmpTotal + -2.38416083526034 * 
S_Mnt + 2.41579845516974 * S_MntMeatProducts + 0.60973384003689 * S_NumCatalogPurchases + 
-1.12415629345715 * S_RFMstat + -0.59274912531616 * S_Recency ;
534231    +   H1x3_1  =     0.20894643335542 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.20894643335542 + H1x3_1 ;
534232    +   H1x3_2  =     2.19187718990043 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 2.19187718990043 + H1x3_2 ;
534233    +   H1x3_3  =    -0.63127842492526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.63127842492526 + H1x3_3 ;
534234    +   H1x3_4  =     0.25735048029686 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25735048029686 + H1x3_4 ;
534235    +   H1x3_5  =     0.02632857468412 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.02632857468412 + H1x3_5 ;
534236    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
534237    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
534238    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
534239    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
534240    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
534241    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
534242    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
534243    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
534244    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
534245    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
534246    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
534247    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
534248    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
534249    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
534250    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
534251    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
534252    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
534253    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
534254    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
534255    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
534256    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
534257    +END;
MPRINT(EM_DIAGRAM):   END;
534258    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534259    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
534260    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
534261    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
534262    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
534263    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
534264    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
534265    +END;
MPRINT(EM_DIAGRAM):   END;
534266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534267    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
534268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534269    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534270    +   H2x1_1  =    -1.91284328958208 * H1x1_1  +     1.01368252878712 * H1x1_2
534271    +          +     0.88385633780482 * H1x1_3  +     0.77249497316744 * H1x1_4
534272    +          +    -1.68467525644522 * H1x1_5  +     0.22872788371043 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.91284328958208 * H1x1_1 + 1.01368252878712 * H1x1_2 + 
0.88385633780482 * H1x1_3 + 0.77249497316744 * H1x1_4 + -1.68467525644522 * H1x1_5 + 
0.22872788371043 * H1x1_6 ;
534273    +   H2x1_2  =    -0.08913678495622 * H1x1_1  +    -0.95704614273187 * H1x1_2
534274    +          +    -1.13959611313765 * H1x1_3  +    -0.83269840840553 * H1x1_4
534275    +          +    -1.34839441082903 * H1x1_5  +      1.4617930846853 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.08913678495622 * H1x1_1 + -0.95704614273187 * H1x1_2 + 
-1.13959611313765 * H1x1_3 + -0.83269840840553 * H1x1_4 + -1.34839441082903 * H1x1_5 + 
1.4617930846853 * H1x1_6 ;
534276    +   H2x1_3  =     1.19406467163652 * H1x1_1  +     1.10561638775412 * H1x1_2
534277    +          +     3.50091937687106 * H1x1_3  +     -0.7408464567923 * H1x1_4
534278    +          +     1.07741096211456 * H1x1_5  +     -1.0098240718302 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.19406467163652 * H1x1_1 + 1.10561638775412 * H1x1_2 + 
3.50091937687106 * H1x1_3 + -0.7408464567923 * H1x1_4 + 1.07741096211456 * H1x1_5 + 
-1.0098240718302 * H1x1_6 ;
534279    +   H2x1_4  =    -3.50840251474163 * H1x1_1  +    -0.53688540920235 * H1x1_2
534280    +          +    -2.44435438360824 * H1x1_3  +     4.64213676100195 * H1x1_4
534281    +          +     0.36171420259161 * H1x1_5  +     0.11106499550345 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.50840251474163 * H1x1_1 + -0.53688540920235 * H1x1_2 + 
-2.44435438360824 * H1x1_3 + 4.64213676100195 * H1x1_4 + 0.36171420259161 * H1x1_5 + 
0.11106499550345 * H1x1_6 ;
534282    +   H2x1_5  =    -0.92126735850423 * H1x1_1  +    -0.50015259068425 * H1x1_2
534283    +          +    -2.75013936022633 * H1x1_3  +     1.29804156504555 * H1x1_4
534284    +          +    -2.88854985509185 * H1x1_5  +     3.51037817476003 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.92126735850423 * H1x1_1 + -0.50015259068425 * H1x1_2 + 
-2.75013936022633 * H1x1_3 + 1.29804156504555 * H1x1_4 + -2.88854985509185 * H1x1_5 + 
3.51037817476003 * H1x1_6 ;
534285    +   H2x1_6  =      2.7601365695399 * H1x1_1  +     0.60343333315883 * H1x1_2
534286    +          +    -4.84088835213795 * H1x1_3  +     0.04677091451384 * H1x1_4
534287    +          +     1.99119511166544 * H1x1_5  +    -1.84413878989067 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 2.7601365695399 * H1x1_1 + 0.60343333315883 * H1x1_2 + 
-4.84088835213795 * H1x1_3 + 0.04677091451384 * H1x1_4 + 1.99119511166544 * H1x1_5 + 
-1.84413878989067 * H1x1_6 ;
534288    +   H2x1_1  = H2x1_1  +    -0.55299168308518 * H1x2_1
534289    +          +    -0.70728759829892 * H1x2_2  +     0.02028723479846 * H1x2_3
534290    +          +      2.1534144925678 * H1x2_4  +    -0.60181736829464 * H1x2_5
534291    +          +    -0.96627475596267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.55299168308518 * H1x2_1 + -0.70728759829892 * 
H1x2_2 + 0.02028723479846 * H1x2_3 + 2.1534144925678 * H1x2_4 + -0.60181736829464 * H1x2_5 + 
-0.96627475596267 * H1x2_6 ;
534292    +   H2x1_2  = H2x1_2  +     1.02776882707138 * H1x2_1
534293    +          +    -0.26186544699712 * H1x2_2  +    -0.59804813597981 * H1x2_3
534294    +          +     0.13683572328121 * H1x2_4  +     -0.4527430044725 * H1x2_5
534295    +          +     0.09804477894859 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.02776882707138 * H1x2_1 + -0.26186544699712 * H1x2_2 
+ -0.59804813597981 * H1x2_3 + 0.13683572328121 * H1x2_4 + -0.4527430044725 * H1x2_5 + 
0.09804477894859 * H1x2_6 ;
534296    +   H2x1_3  = H2x1_3  +    -1.37372644240513 * H1x2_1
534297    +          +    -1.41411080054855 * H1x2_2  +    -0.85635388175337 * H1x2_3
534298    +          +     1.78033736245689 * H1x2_4  +    -0.32277639652206 * H1x2_5
534299    +          +    -0.10095907241792 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.37372644240513 * H1x2_1 + -1.41411080054855 * 
H1x2_2 + -0.85635388175337 * H1x2_3 + 1.78033736245689 * H1x2_4 + -0.32277639652206 * H1x2_5 + 
-0.10095907241792 * H1x2_6 ;
534300    +   H2x1_4  = H2x1_4  +     0.38975073179429 * H1x2_1
534301    +          +      1.7999626274739 * H1x2_2  +    -0.54595798920563 * H1x2_3
534302    +          +    -2.87794569741229 * H1x2_4  +     2.24407851876424 * H1x2_5
534303    +          +    -0.78007016861264 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.38975073179429 * H1x2_1 + 1.7999626274739 * H1x2_2 + 
-0.54595798920563 * H1x2_3 + -2.87794569741229 * H1x2_4 + 2.24407851876424 * H1x2_5 + 
-0.78007016861264 * H1x2_6 ;
534304    +   H2x1_5  = H2x1_5  +     1.68407538128685 * H1x2_1
534305    +          +     2.69111816059998 * H1x2_2  +     0.12927675826764 * H1x2_3
534306    +          +     -1.7263485913587 * H1x2_4  +    -2.15741343790643 * H1x2_5
534307    +          +     1.95855676074934 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.68407538128685 * H1x2_1 + 2.69111816059998 * H1x2_2 
+ 0.12927675826764 * H1x2_3 + -1.7263485913587 * H1x2_4 + -2.15741343790643 * H1x2_5 + 
1.95855676074934 * H1x2_6 ;
534308    +   H2x1_6  = H2x1_6  +     0.31146846941645 * H1x2_1
534309    +          +     0.33682375646593 * H1x2_2  +      1.6527641940739 * H1x2_3
534310    +          +    -0.96403239328063 * H1x2_4  +    -1.11790253982232 * H1x2_5
534311    +          +     -1.4251132059225 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 0.31146846941645 * H1x2_1 + 0.33682375646593 * H1x2_2 
+ 1.6527641940739 * H1x2_3 + -0.96403239328063 * H1x2_4 + -1.11790253982232 * H1x2_5 + 
-1.4251132059225 * H1x2_6 ;
534312    +   H2x1_1  = H2x1_1  +     0.47301275142195 * H1x3_1
534313    +          +    -1.23391488243925 * H1x3_2  +    -1.81348351496647 * H1x3_3
534314    +          +    -0.66473016828009 * H1x3_4  +     1.27670685567846 * H1x3_5
534315    +          +     0.38481934719452 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.47301275142195 * H1x3_1 + -1.23391488243925 * H1x3_2 
+ -1.81348351496647 * H1x3_3 + -0.66473016828009 * H1x3_4 + 1.27670685567846 * H1x3_5 + 
0.38481934719452 * H1x3_6 ;
534316    +   H2x1_2  = H2x1_2  +     0.35549808536734 * H1x3_1
534317    +          +     0.36201179536458 * H1x3_2  +     1.04726425834791 * H1x3_3
534318    +          +    -1.08276187248251 * H1x3_4  +     0.74248193765521 * H1x3_5
534319    +          +     1.87596859340821 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.35549808536734 * H1x3_1 + 0.36201179536458 * H1x3_2 
+ 1.04726425834791 * H1x3_3 + -1.08276187248251 * H1x3_4 + 0.74248193765521 * H1x3_5 + 
1.87596859340821 * H1x3_6 ;
534320    +   H2x1_3  = H2x1_3  +    -0.36667720681998 * H1x3_1
534321    +          +      0.5256210995417 * H1x3_2  +    -0.44860423311788 * H1x3_3
534322    +          +    -0.20913840911463 * H1x3_4  +    -0.76258888517092 * H1x3_5
534323    +          +     0.20457555210609 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.36667720681998 * H1x3_1 + 0.5256210995417 * H1x3_2 
+ -0.44860423311788 * H1x3_3 + -0.20913840911463 * H1x3_4 + -0.76258888517092 * H1x3_5 + 
0.20457555210609 * H1x3_6 ;
534324    +   H2x1_4  = H2x1_4  +     -0.5052323966606 * H1x3_1
534325    +          +     0.57348008947054 * H1x3_2  +     0.36313882476736 * H1x3_3
534326    +          +     2.54509537428676 * H1x3_4  +    -1.40462445002153 * H1x3_5
534327    +          +     1.76488988390401 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.5052323966606 * H1x3_1 + 0.57348008947054 * H1x3_2 
+ 0.36313882476736 * H1x3_3 + 2.54509537428676 * H1x3_4 + -1.40462445002153 * H1x3_5 + 
1.76488988390401 * H1x3_6 ;
534328    +   H2x1_5  = H2x1_5  +     -0.4555917406867 * H1x3_1
534329    +          +     0.52745581365834 * H1x3_2  +    -0.82303556180885 * H1x3_3
534330    +          +    -0.78981386250305 * H1x3_4  +     0.09307958113664 * H1x3_5
534331    +          +     1.63202351822216 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.4555917406867 * H1x3_1 + 0.52745581365834 * H1x3_2 
+ -0.82303556180885 * H1x3_3 + -0.78981386250305 * H1x3_4 + 0.09307958113664 * H1x3_5 + 
1.63202351822216 * H1x3_6 ;
534332    +   H2x1_6  = H2x1_6  +    -0.57563015009902 * H1x3_1
534333    +          +     2.47575184377805 * H1x3_2  +    -0.91958118957044 * H1x3_3
534334    +          +    -1.67916721690516 * H1x3_4  +     0.69514147486102 * H1x3_5
534335    +          +    -0.75070900812889 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.57563015009902 * H1x3_1 + 2.47575184377805 * H1x3_2 
+ -0.91958118957044 * H1x3_3 + -1.67916721690516 * H1x3_4 + 0.69514147486102 * H1x3_5 + 
-0.75070900812889 * H1x3_6 ;
534336    +   H2x1_1  =     0.44089803005479 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.44089803005479 + H2x1_1 ;
534337    +   H2x1_2  =     0.84182794358826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84182794358826 + H2x1_2 ;
534338    +   H2x1_3  =     0.09803371201388 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.09803371201388 + H2x1_3 ;
534339    +   H2x1_4  =      -0.624591248343 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.624591248343 + H2x1_4 ;
534340    +   H2x1_5  =      0.7596943675806 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.7596943675806 + H2x1_5 ;
534341    +   H2x1_6  =     1.86613856151687 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.86613856151687 + H2x1_6 ;
534342    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
534343    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
534344    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
534345    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
534346    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
534347    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
534348    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
534349    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
534350    +END;
MPRINT(EM_DIAGRAM):   END;
534351    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534352    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
534353    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
534354    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
534355    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
534356    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
534357    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
534358    +END;
MPRINT(EM_DIAGRAM):   END;
534359    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534360    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
534361    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534362    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534363    +   H2x2_1  =    -0.67599100831955 * H1x1_1  +     0.24077189312828 * H1x1_2
534364    +          +      0.2000763543409 * H1x1_3  +    -1.82199808794926 * H1x1_4
534365    +          +    -0.63614429983717 * H1x1_5  +     0.35027369588915 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.67599100831955 * H1x1_1 + 0.24077189312828 * H1x1_2 + 
0.2000763543409 * H1x1_3 + -1.82199808794926 * H1x1_4 + -0.63614429983717 * H1x1_5 + 
0.35027369588915 * H1x1_6 ;
534366    +   H2x2_2  =    -2.86273409671688 * H1x1_1  +    -1.17210014090039 * H1x1_2
534367    +          +     2.79815832312648 * H1x1_3  +     0.46361776813305 * H1x1_4
534368    +          +      0.0798677597958 * H1x1_5  +    -0.75991454790943 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -2.86273409671688 * H1x1_1 + -1.17210014090039 * H1x1_2 + 
2.79815832312648 * H1x1_3 + 0.46361776813305 * H1x1_4 + 0.0798677597958 * H1x1_5 + 
-0.75991454790943 * H1x1_6 ;
534369    +   H2x2_3  =     -0.6739829418862 * H1x1_1  +    -2.31169428380278 * H1x1_2
534370    +          +     2.10300119718615 * H1x1_3  +    -0.00742357063683 * H1x1_4
534371    +          +    -1.51041651747244 * H1x1_5  +    -0.17010696636548 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.6739829418862 * H1x1_1 + -2.31169428380278 * H1x1_2 + 
2.10300119718615 * H1x1_3 + -0.00742357063683 * H1x1_4 + -1.51041651747244 * H1x1_5 + 
-0.17010696636548 * H1x1_6 ;
534372    +   H2x2_4  =    -1.50678102953218 * H1x1_1  +    -0.89959733379076 * H1x1_2
534373    +          +     1.08933879000366 * H1x1_3  +      0.4160027440208 * H1x1_4
534374    +          +     0.96602358671281 * H1x1_5  +     2.49695921665153 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.50678102953218 * H1x1_1 + -0.89959733379076 * H1x1_2 + 
1.08933879000366 * H1x1_3 + 0.4160027440208 * H1x1_4 + 0.96602358671281 * H1x1_5 + 
2.49695921665153 * H1x1_6 ;
534375    +   H2x2_5  =      0.7197781324018 * H1x1_1  +     0.65156339723506 * H1x1_2
534376    +          +     1.10688522196469 * H1x1_3  +    -0.18317373714845 * H1x1_4
534377    +          +    -0.41607265841802 * H1x1_5  +    -1.97247962280317 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.7197781324018 * H1x1_1 + 0.65156339723506 * H1x1_2 + 
1.10688522196469 * H1x1_3 + -0.18317373714845 * H1x1_4 + -0.41607265841802 * H1x1_5 + 
-1.97247962280317 * H1x1_6 ;
534378    +   H2x2_6  =     0.54986188496659 * H1x1_1  +    -1.79839449870258 * H1x1_2
534379    +          +    -1.15036560870119 * H1x1_3  +     1.47969678061941 * H1x1_4
534380    +          +     0.10597867235187 * H1x1_5  +     0.90300533681641 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.54986188496659 * H1x1_1 + -1.79839449870258 * H1x1_2 + 
-1.15036560870119 * H1x1_3 + 1.47969678061941 * H1x1_4 + 0.10597867235187 * H1x1_5 + 
0.90300533681641 * H1x1_6 ;
534381    +   H2x2_1  = H2x2_1  +    -0.21000305943834 * H1x2_1
534382    +          +    -0.32875528993365 * H1x2_2  +    -2.01191741391886 * H1x2_3
534383    +          +     0.25433844143017 * H1x2_4  +    -0.22353514971516 * H1x2_5
534384    +          +    -1.39994531215362 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21000305943834 * H1x2_1 + -0.32875528993365 * 
H1x2_2 + -2.01191741391886 * H1x2_3 + 0.25433844143017 * H1x2_4 + -0.22353514971516 * H1x2_5 + 
-1.39994531215362 * H1x2_6 ;
534385    +   H2x2_2  = H2x2_2  +     0.97984435202354 * H1x2_1
534386    +          +    -0.32249690006833 * H1x2_2  +    -1.39997315416199 * H1x2_3
534387    +          +     -2.7808281862933 * H1x2_4  +    -0.16292745421241 * H1x2_5
534388    +          +    -0.40444669273525 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.97984435202354 * H1x2_1 + -0.32249690006833 * H1x2_2 
+ -1.39997315416199 * H1x2_3 + -2.7808281862933 * H1x2_4 + -0.16292745421241 * H1x2_5 + 
-0.40444669273525 * H1x2_6 ;
534389    +   H2x2_3  = H2x2_3  +      1.7332207906399 * H1x2_1
534390    +          +     0.48772690844604 * H1x2_2  +    -0.03702571322482 * H1x2_3
534391    +          +    -0.04073364631727 * H1x2_4  +    -0.91191013457442 * H1x2_5
534392    +          +    -2.38736049861996 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.7332207906399 * H1x2_1 + 0.48772690844604 * H1x2_2 + 
-0.03702571322482 * H1x2_3 + -0.04073364631727 * H1x2_4 + -0.91191013457442 * H1x2_5 + 
-2.38736049861996 * H1x2_6 ;
534393    +   H2x2_4  = H2x2_4  +    -0.06792429668775 * H1x2_1
534394    +          +    -3.07222522712126 * H1x2_2  +     0.01320929156379 * H1x2_3
534395    +          +     0.84459091213222 * H1x2_4  +    -0.95949143247045 * H1x2_5
534396    +          +     0.02632878191094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.06792429668775 * H1x2_1 + -3.07222522712126 * 
H1x2_2 + 0.01320929156379 * H1x2_3 + 0.84459091213222 * H1x2_4 + -0.95949143247045 * H1x2_5 + 
0.02632878191094 * H1x2_6 ;
534397    +   H2x2_5  = H2x2_5  +     0.13831659235384 * H1x2_1
534398    +          +    -1.75598160312232 * H1x2_2  +     0.17047671926062 * H1x2_3
534399    +          +    -0.45409084878331 * H1x2_4  +    -1.17540122389603 * H1x2_5
534400    +          +     0.79706245066425 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 0.13831659235384 * H1x2_1 + -1.75598160312232 * H1x2_2 
+ 0.17047671926062 * H1x2_3 + -0.45409084878331 * H1x2_4 + -1.17540122389603 * H1x2_5 + 
0.79706245066425 * H1x2_6 ;
534401    +   H2x2_6  = H2x2_6  +     1.74450762507234 * H1x2_1
534402    +          +    -0.18999736448811 * H1x2_2  +    -0.82200918268165 * H1x2_3
534403    +          +      1.8752098314092 * H1x2_4  +    -0.55366925571085 * H1x2_5
534404    +          +     1.96032751350518 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.74450762507234 * H1x2_1 + -0.18999736448811 * H1x2_2 
+ -0.82200918268165 * H1x2_3 + 1.8752098314092 * H1x2_4 + -0.55366925571085 * H1x2_5 + 
1.96032751350518 * H1x2_6 ;
534405    +   H2x2_1  = H2x2_1  +     1.05088385328525 * H1x3_1
534406    +          +    -1.18748050069472 * H1x3_2  +     0.33686598960541 * H1x3_3
534407    +          +     0.60467968457853 * H1x3_4  +     0.44997942659683 * H1x3_5
534408    +          +     0.86372067144364 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.05088385328525 * H1x3_1 + -1.18748050069472 * H1x3_2 
+ 0.33686598960541 * H1x3_3 + 0.60467968457853 * H1x3_4 + 0.44997942659683 * H1x3_5 + 
0.86372067144364 * H1x3_6 ;
534409    +   H2x2_2  = H2x2_2  +     0.54489966189284 * H1x3_1
534410    +          +     0.63828892530684 * H1x3_2  +     1.36576672067523 * H1x3_3
534411    +          +    -0.93080386349548 * H1x3_4  +    -0.53645684858865 * H1x3_5
534412    +          +     0.80254310887989 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54489966189284 * H1x3_1 + 0.63828892530684 * H1x3_2 
+ 1.36576672067523 * H1x3_3 + -0.93080386349548 * H1x3_4 + -0.53645684858865 * H1x3_5 + 
0.80254310887989 * H1x3_6 ;
534413    +   H2x2_3  = H2x2_3  +    -0.43326705547287 * H1x3_1
534414    +          +     1.62130917530395 * H1x3_2  +     -1.9569471371487 * H1x3_3
534415    +          +    -0.16690355216427 * H1x3_4  +     0.76588074497881 * H1x3_5
534416    +          +    -0.80961698509146 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.43326705547287 * H1x3_1 + 1.62130917530395 * H1x3_2 
+ -1.9569471371487 * H1x3_3 + -0.16690355216427 * H1x3_4 + 0.76588074497881 * H1x3_5 + 
-0.80961698509146 * H1x3_6 ;
534417    +   H2x2_4  = H2x2_4  +     0.14186336769381 * H1x3_1
534418    +          +    -0.40313769302155 * H1x3_2  +     0.32907477170578 * H1x3_3
534419    +          +    -0.09559287343495 * H1x3_4  +     1.23870853269954 * H1x3_5
534420    +          +    -1.29909553454934 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.14186336769381 * H1x3_1 + -0.40313769302155 * H1x3_2 
+ 0.32907477170578 * H1x3_3 + -0.09559287343495 * H1x3_4 + 1.23870853269954 * H1x3_5 + 
-1.29909553454934 * H1x3_6 ;
534421    +   H2x2_5  = H2x2_5  +    -0.23962567636847 * H1x3_1
534422    +          +    -0.40709618711343 * H1x3_2  +    -1.68479406479753 * H1x3_3
534423    +          +     0.70815879664382 * H1x3_4  +    -0.08013794063462 * H1x3_5
534424    +          +      0.3854653698129 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.23962567636847 * H1x3_1 + -0.40709618711343 * 
H1x3_2 + -1.68479406479753 * H1x3_3 + 0.70815879664382 * H1x3_4 + -0.08013794063462 * H1x3_5 + 
0.3854653698129 * H1x3_6 ;
534425    +   H2x2_6  = H2x2_6  +     0.30227974563111 * H1x3_1
534426    +          +    -0.74687752968448 * H1x3_2  +     1.36415251312446 * H1x3_3
534427    +          +     1.81088044806083 * H1x3_4  +     1.05534281539066 * H1x3_5
534428    +          +    -0.43429796112944 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.30227974563111 * H1x3_1 + -0.74687752968448 * H1x3_2 
+ 1.36415251312446 * H1x3_3 + 1.81088044806083 * H1x3_4 + 1.05534281539066 * H1x3_5 + 
-0.43429796112944 * H1x3_6 ;
534429    +   H2x2_1  =     0.63184708368306 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63184708368306 + H2x2_1 ;
534430    +   H2x2_2  =     0.84907350596357 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.84907350596357 + H2x2_2 ;
534431    +   H2x2_3  =    -0.73809203587584 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.73809203587584 + H2x2_3 ;
534432    +   H2x2_4  =    -0.43815853180498 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.43815853180498 + H2x2_4 ;
534433    +   H2x2_5  =     0.21738444698009 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.21738444698009 + H2x2_5 ;
534434    +   H2x2_6  =     0.35336989078545 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.35336989078545 + H2x2_6 ;
534435    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
534436    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
534437    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
534438    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
534439    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
534440    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
534441    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
534442    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
534443    +END;
MPRINT(EM_DIAGRAM):   END;
534444    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534445    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
534446    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
534447    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
534448    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
534449    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
534450    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
534451    +END;
MPRINT(EM_DIAGRAM):   END;
534452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534453    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
534454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534455    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534456    +   H3x1_1  =     0.88232318111379 * H2x1_1  +     0.33230222316203 * H2x1_2
534457    +          +     1.74392107555271 * H2x1_3  +    -1.04185063882146 * H2x1_4
534458    +          +    -0.63105511848819 * H2x1_5  +    -1.05088304858423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.88232318111379 * H2x1_1 + 0.33230222316203 * H2x1_2 + 
1.74392107555271 * H2x1_3 + -1.04185063882146 * H2x1_4 + -0.63105511848819 * H2x1_5 + 
-1.05088304858423 * H2x1_6 ;
534459    +   H3x1_2  =     1.11736284857762 * H2x1_1  +     1.90660007278783 * H2x1_2
534460    +          +    -0.38007206174956 * H2x1_3  +     0.37265047043174 * H2x1_4
534461    +          +     2.27208664894129 * H2x1_5  +     0.87150445612099 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.11736284857762 * H2x1_1 + 1.90660007278783 * H2x1_2 + 
-0.38007206174956 * H2x1_3 + 0.37265047043174 * H2x1_4 + 2.27208664894129 * H2x1_5 + 
0.87150445612099 * H2x1_6 ;
534462    +   H3x1_3  =    -1.47841270668706 * H2x1_1  +    -1.28441896803313 * H2x1_2
534463    +          +     1.95549364222924 * H2x1_3  +    -2.50484940312791 * H2x1_4
534464    +          +    -2.84934238039874 * H2x1_5  +     2.18013446750751 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.47841270668706 * H2x1_1 + -1.28441896803313 * H2x1_2 + 
1.95549364222924 * H2x1_3 + -2.50484940312791 * H2x1_4 + -2.84934238039874 * H2x1_5 + 
2.18013446750751 * H2x1_6 ;
534465    +   H3x1_4  =     1.91981096223784 * H2x1_1  +     2.50981387206546 * H2x1_2
534466    +          +     1.52848474440169 * H2x1_3  +    -1.77653121606781 * H2x1_4
534467    +          +    -1.17059017641066 * H2x1_5  +     0.08630071934474 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.91981096223784 * H2x1_1 + 2.50981387206546 * H2x1_2 + 
1.52848474440169 * H2x1_3 + -1.77653121606781 * H2x1_4 + -1.17059017641066 * H2x1_5 + 
0.08630071934474 * H2x1_6 ;
534468    +   H3x1_5  =    -0.90689901549977 * H2x1_1  +    -0.28920884601352 * H2x1_2
534469    +          +     0.19367561691053 * H2x1_3  +    -1.64382922054024 * H2x1_4
534470    +          +    -1.27645531071461 * H2x1_5  +     2.78368081292476 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.90689901549977 * H2x1_1 + -0.28920884601352 * H2x1_2 + 
0.19367561691053 * H2x1_3 + -1.64382922054024 * H2x1_4 + -1.27645531071461 * H2x1_5 + 
2.78368081292476 * H2x1_6 ;
534471    +   H3x1_6  =     1.79097710546589 * H2x1_1  +     0.62195006841522 * H2x1_2
534472    +          +     0.38238495192417 * H2x1_3  +     0.38117337455775 * H2x1_4
534473    +          +     0.31232345193628 * H2x1_5  +     1.64288571863932 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.79097710546589 * H2x1_1 + 0.62195006841522 * H2x1_2 + 
0.38238495192417 * H2x1_3 + 0.38117337455775 * H2x1_4 + 0.31232345193628 * H2x1_5 + 
1.64288571863932 * H2x1_6 ;
534474    +   H3x1_1  = H3x1_1  +    -0.29610176935088 * H2x2_1
534475    +          +    -0.05687019870114 * H2x2_2  +     0.19276816813006 * H2x2_3
534476    +          +    -0.02919428123272 * H2x2_4  +     -0.1225189756077 * H2x2_5
534477    +          +     0.35216486042215 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.29610176935088 * H2x2_1 + -0.05687019870114 * 
H2x2_2 + 0.19276816813006 * H2x2_3 + -0.02919428123272 * H2x2_4 + -0.1225189756077 * H2x2_5 + 
0.35216486042215 * H2x2_6 ;
534478    +   H3x1_2  = H3x1_2  +    -0.65560935360323 * H2x2_1
534479    +          +     1.14492037534385 * H2x2_2  +    -0.73840836071645 * H2x2_3
534480    +          +      1.3947576688638 * H2x2_4  +    -0.01317619212955 * H2x2_5
534481    +          +    -0.91648595761636 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -0.65560935360323 * H2x2_1 + 1.14492037534385 * H2x2_2 
+ -0.73840836071645 * H2x2_3 + 1.3947576688638 * H2x2_4 + -0.01317619212955 * H2x2_5 + 
-0.91648595761636 * H2x2_6 ;
534482    +   H3x1_3  = H3x1_3  +    -0.53127332055291 * H2x2_1
534483    +          +     0.36262088215518 * H2x2_2  +     2.77585954813321 * H2x2_3
534484    +          +     1.38261906942485 * H2x2_4  +    -0.22635906489825 * H2x2_5
534485    +          +    -2.11281855575499 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.53127332055291 * H2x2_1 + 0.36262088215518 * H2x2_2 
+ 2.77585954813321 * H2x2_3 + 1.38261906942485 * H2x2_4 + -0.22635906489825 * H2x2_5 + 
-2.11281855575499 * H2x2_6 ;
534486    +   H3x1_4  = H3x1_4  +     0.10255243516649 * H2x2_1
534487    +          +    -0.19237607982949 * H2x2_2  +    -0.39440266749795 * H2x2_3
534488    +          +     0.62091379272854 * H2x2_4  +    -0.71121773171613 * H2x2_5
534489    +          +     0.57305821692201 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.10255243516649 * H2x2_1 + -0.19237607982949 * H2x2_2 
+ -0.39440266749795 * H2x2_3 + 0.62091379272854 * H2x2_4 + -0.71121773171613 * H2x2_5 + 
0.57305821692201 * H2x2_6 ;
534490    +   H3x1_5  = H3x1_5  +     1.38760232745985 * H2x2_1
534491    +          +    -0.67366859881604 * H2x2_2  +     0.73667853659073 * H2x2_3
534492    +          +     0.48338791573814 * H2x2_4  +    -1.86204960161547 * H2x2_5
534493    +          +     2.06401699674057 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 1.38760232745985 * H2x2_1 + -0.67366859881604 * H2x2_2 
+ 0.73667853659073 * H2x2_3 + 0.48338791573814 * H2x2_4 + -1.86204960161547 * H2x2_5 + 
2.06401699674057 * H2x2_6 ;
534494    +   H3x1_6  = H3x1_6  +     1.58403061991045 * H2x2_1
534495    +          +    -1.98415138001436 * H2x2_2  +    -2.65270828558486 * H2x2_3
534496    +          +     0.24663962279095 * H2x2_4  +    -0.13610124747178 * H2x2_5
534497    +          +     0.08850124295188 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.58403061991045 * H2x2_1 + -1.98415138001436 * H2x2_2 
+ -2.65270828558486 * H2x2_3 + 0.24663962279095 * H2x2_4 + -0.13610124747178 * H2x2_5 + 
0.08850124295188 * H2x2_6 ;
534498    +   H3x1_1  =    -0.38359896864958 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.38359896864958 + H3x1_1 ;
534499    +   H3x1_2  =     0.71155840570573 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.71155840570573 + H3x1_2 ;
534500    +   H3x1_3  =     0.51799749231142 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.51799749231142 + H3x1_3 ;
534501    +   H3x1_4  =     0.67952932286733 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.67952932286733 + H3x1_4 ;
534502    +   H3x1_5  =    -0.81394067979603 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.81394067979603 + H3x1_5 ;
534503    +   H3x1_6  =    -0.01596290366203 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.01596290366203 + H3x1_6 ;
534504    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
534505    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
534506    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
534507    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
534508    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
534509    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
534510    +END;
MPRINT(EM_DIAGRAM):   END;
534511    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534512    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
534513    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
534514    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
534515    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
534516    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
534517    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
534518    +END;
MPRINT(EM_DIAGRAM):   END;
534519    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534520    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
534521    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534522    +
534523    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
534524    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
534525    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
534526    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
534527    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
534528    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
534529    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
534530    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
534531    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
534532    +end;
MPRINT(EM_DIAGRAM):   end;
534533    +else do;
MPRINT(EM_DIAGRAM):   else do;
534534    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
534535    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
534536    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
534537    +   end;
MPRINT(EM_DIAGRAM):   end;
534538    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
534539    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
534540    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
534541    +   end;
MPRINT(EM_DIAGRAM):   end;
534542    +   else do;
MPRINT(EM_DIAGRAM):   else do;
534543    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
534544    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
534545    +   end;
MPRINT(EM_DIAGRAM):   end;
534546    +end;
MPRINT(EM_DIAGRAM):   end;
534547    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534548    +   P_DepVar1  =     0.28094469007064 * H3x1_1  +     4.40543517205109 * H3x1_2
534549    +          +     4.58780022403482 * H3x1_3  +    -1.49344393871597 * H3x1_4
534550    +          +     3.15120047821915 * H3x1_5  +    -1.83744247169269 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28094469007064 * H3x1_1 + 4.40543517205109 * H3x1_2 + 
4.58780022403482 * H3x1_3 + -1.49344393871597 * H3x1_4 + 3.15120047821915 * H3x1_5 + 
-1.83744247169269 * H3x1_6 ;
534551    +   P_DepVar1  =     -2.1680951408523 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.1680951408523 + P_DepVar1 ;
534552    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
534553    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
534554    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
534555    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
534556    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
534557    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
534558    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
534559    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
534560    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
534561    +END;
MPRINT(EM_DIAGRAM):   END;
534562    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534563    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
534564    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
534565    +END;
MPRINT(EM_DIAGRAM):   END;
534566    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
534567    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
534568    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
534569    +END;
MPRINT(EM_DIAGRAM):   END;
534570    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
534571    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
534572    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
534573    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
534574    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
534575    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
534576    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
534577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534578    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
534579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534580    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
534581    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
534582    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
534583    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
534584    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
534585    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
534586    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
534587    +END;
MPRINT(EM_DIAGRAM):   END;
534588    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
534589    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
534590    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
534591    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
534592     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL28_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
534593     quit;
534594     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
534595     filename emflow
534595   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
534596     *------------------------------------------------------------*;
534597     * AutoNeural28: Scoring VALIDATE data;
534598     *------------------------------------------------------------*;
534599     data EMWS8.AutoNeural28_VALIDATE
534600     / view=EMWS8.AutoNeural28_VALIDATE
534601     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_VALIDATE / view=EMWS8.AutoNeural28_VALIDATE ;
534602     set EMWS8.Varsel_VALIDATE
534603     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
534604     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\EMFLOWSCORE.sas.
534605    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
534606    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
534607    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
534608    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
534609    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
534610    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
534611    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
534612    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
534613    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
534614    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
534615    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
534616    +LENGTH _WARN_ $4
534617    +      F_DepVar  $ 12
534618    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
534619    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
534620    +
534621    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
534622    +
534623    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
534624    +
534625    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
534626    +
534627    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
534628    +
534629    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
534630    +
534631    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
534632    +
534633    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
534634    +
534635    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
534636    +
534637    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
534638    +
534639    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
534640    +
534641    +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
534642    +
534643    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
534644    +
534645    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
534646    +
534647    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
534648    +
534649    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
534650    +
534651    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
534652    +
534653    +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
534654    +
534655    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
534656    +
534657    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
534658    +
534659    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
534660    +
534661    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
534662    +
534663    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
534664    +
534665    +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
534666    +
534667    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
534668    +
534669    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
534670    +
534671    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
534672    +
534673    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
534674    +
534675    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
534676    +
534677    +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
534678    +
534679    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
534680    +
534681    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
534682    +
534683    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
534684    +
534685    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
534686    +
534687    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
534688    +
534689    +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
534690    +
534691    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
534692    +
534693    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
534694    +
534695    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
534696    +
534697    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
534698    +
534699    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
534700    +
534701    +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
534702    +
534703    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
534704    +
534705    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
534706    +
534707    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
534708    +
534709    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
534710    +
534711    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
534712    +
534713    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
534714    +
534715    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
534716    +
534717    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
534718    +
534719    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534720    +*** Checking missing input Interval
534721    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
534722    +
534723    +IF NMISS(
534724    +   AcceptedCmpTotal ,
534725    +   Mnt ,
534726    +   MntMeatProducts ,
534727    +   NumCatalogPurchases ,
534728    +   RFMstat ,
534729    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Mnt , MntMeatProducts , NumCatalogPurchases 
, RFMstat , Recency ) THEN DO;
534730    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
534731    +
534732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534733    +END;
MPRINT(EM_DIAGRAM):   END;
534734    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534735    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
534736    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534737    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534738    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
534739    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
534740    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
534741    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
534742    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
534743    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
534744    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
534745    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
534746    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
534747    +END;
MPRINT(EM_DIAGRAM):   END;
534748    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534749    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
534750    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
534751    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
534752    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
534753    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
534754    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
534755    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
534756    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
534757    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
534758    +   ELSE S_NumCatalogPurchases
534759    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
534760    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
534761    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
534762    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
534763    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
534764    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
534765    +END;
MPRINT(EM_DIAGRAM):   END;
534766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534767    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
534768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534769    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534770    +   H1x1_1  =     2.10717134491045 * S_AcceptedCmpTotal
534771    +          +    -10.9799187882689 * S_Mnt  +     3.17619086363109 *
534772    +        S_MntMeatProducts  +     0.58522050540174 * S_NumCatalogPurchases
534773    +          +     0.10457500953086 * S_RFMstat  +    -0.59708195840656 *
534774    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.10717134491045 * S_AcceptedCmpTotal + -10.9799187882689 * 
S_Mnt + 3.17619086363109 * S_MntMeatProducts + 0.58522050540174 * S_NumCatalogPurchases + 
0.10457500953086 * S_RFMstat + -0.59708195840656 * S_Recency ;
534775    +   H1x1_2  =    -1.09600222674288 * S_AcceptedCmpTotal
534776    +          +    -2.75188573882189 * S_Mnt  +     2.38829776780629 *
534777    +        S_MntMeatProducts  +     2.37290115499231 * S_NumCatalogPurchases
534778    +          +    -1.67864747205449 * S_RFMstat  +    -1.87700204299542 *
534779    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.09600222674288 * S_AcceptedCmpTotal + -2.75188573882189 * 
S_Mnt + 2.38829776780629 * S_MntMeatProducts + 2.37290115499231 * S_NumCatalogPurchases + 
-1.67864747205449 * S_RFMstat + -1.87700204299542 * S_Recency ;
534780    +   H1x1_3  =     0.24593136036671 * S_AcceptedCmpTotal
534781    +          +     0.98275447305236 * S_Mnt  +     1.52686649163215 *
534782    +        S_MntMeatProducts  +     1.08491172792697 * S_NumCatalogPurchases
534783    +          +    -6.31220731697864 * S_RFMstat  +    -2.08472878456829 *
534784    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.24593136036671 * S_AcceptedCmpTotal + 0.98275447305236 * 
S_Mnt + 1.52686649163215 * S_MntMeatProducts + 1.08491172792697 * S_NumCatalogPurchases + 
-6.31220731697864 * S_RFMstat + -2.08472878456829 * S_Recency ;
534785    +   H1x1_4  =     1.35296744918554 * S_AcceptedCmpTotal
534786    +          +    -3.58727753695297 * S_Mnt  +    -6.35187991517409 *
534787    +        S_MntMeatProducts  +    -1.41725838894141 * S_NumCatalogPurchases
534788    +          +     -2.5174617752956 * S_RFMstat  +     0.27284317719271 *
534789    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.35296744918554 * S_AcceptedCmpTotal + -3.58727753695297 * 
S_Mnt + -6.35187991517409 * S_MntMeatProducts + -1.41725838894141 * S_NumCatalogPurchases + 
-2.5174617752956 * S_RFMstat + 0.27284317719271 * S_Recency ;
534790    +   H1x1_5  =     1.41560412529603 * S_AcceptedCmpTotal
534791    +          +     2.25142479190183 * S_Mnt  +      0.2775616702254 *
534792    +        S_MntMeatProducts  +     -0.4118907005017 * S_NumCatalogPurchases
534793    +          +     0.38803464834347 * S_RFMstat  +    -0.81750268679565 *
534794    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.41560412529603 * S_AcceptedCmpTotal + 2.25142479190183 * 
S_Mnt + 0.2775616702254 * S_MntMeatProducts + -0.4118907005017 * S_NumCatalogPurchases + 
0.38803464834347 * S_RFMstat + -0.81750268679565 * S_Recency ;
534795    +   H1x1_1  =    -1.94381314805925 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.94381314805925 + H1x1_1 ;
534796    +   H1x1_2  =     -1.4831757685406 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.4831757685406 + H1x1_2 ;
534797    +   H1x1_3  =    -0.53539803191548 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.53539803191548 + H1x1_3 ;
534798    +   H1x1_4  =    -5.07257058520645 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -5.07257058520645 + H1x1_4 ;
534799    +   H1x1_5  =    -3.95581011117601 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -3.95581011117601 + H1x1_5 ;
534800    +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
534801    +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
534802    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
534803    +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
534804    +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
534805    +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
534806    +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
534807    +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
534808    +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
534809    +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
534810    +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
534811    +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
534812    +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
534813    +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
534814    +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
534815    +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
534816    +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
534817    +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
534818    +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
534819    +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
534820    +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
534821    +END;
MPRINT(EM_DIAGRAM):   END;
534822    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534823    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
534824    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
534825    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
534826    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
534827    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
534828    +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
534829    +END;
MPRINT(EM_DIAGRAM):   END;
534830    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534831    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
534832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534833    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534834    +   H1x2_1  =    -1.55686119998165 * S_AcceptedCmpTotal
534835    +          +    -0.26111571781978 * S_Mnt  +    -1.44938218805988 *
534836    +        S_MntMeatProducts  +     0.04086123541942 * S_NumCatalogPurchases
534837    +          +    -0.80214702507913 * S_RFMstat  +     0.70413979175849 *
534838    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.55686119998165 * S_AcceptedCmpTotal + -0.26111571781978 * 
S_Mnt + -1.44938218805988 * S_MntMeatProducts + 0.04086123541942 * S_NumCatalogPurchases + 
-0.80214702507913 * S_RFMstat + 0.70413979175849 * S_Recency ;
534839    +   H1x2_2  =    -1.89013114756444 * S_AcceptedCmpTotal
534840    +          +     2.02645277032883 * S_Mnt  +     0.33300450318575 *
534841    +        S_MntMeatProducts  +    -3.49523435320164 * S_NumCatalogPurchases
534842    +          +    -0.54366042810185 * S_RFMstat  +    -0.96821243793862 *
534843    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.89013114756444 * S_AcceptedCmpTotal + 2.02645277032883 * 
S_Mnt + 0.33300450318575 * S_MntMeatProducts + -3.49523435320164 * S_NumCatalogPurchases + 
-0.54366042810185 * S_RFMstat + -0.96821243793862 * S_Recency ;
534844    +   H1x2_3  =    -0.37493223935971 * S_AcceptedCmpTotal
534845    +          +     0.44222577344261 * S_Mnt  +    -2.29203252552751 *
534846    +        S_MntMeatProducts  +    -2.51799836083289 * S_NumCatalogPurchases
534847    +          +     0.79676408136588 * S_RFMstat  +    -1.33777715205059 *
534848    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.37493223935971 * S_AcceptedCmpTotal + 0.44222577344261 * 
S_Mnt + -2.29203252552751 * S_MntMeatProducts + -2.51799836083289 * S_NumCatalogPurchases + 
0.79676408136588 * S_RFMstat + -1.33777715205059 * S_Recency ;
534849    +   H1x2_4  =     0.61023216239118 * S_AcceptedCmpTotal
534850    +          +     -1.2504451910923 * S_Mnt  +     1.08805550572067 *
534851    +        S_MntMeatProducts  +     0.42462128634087 * S_NumCatalogPurchases
534852    +          +     0.47301106041065 * S_RFMstat  +    -2.61753144043135 *
534853    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.61023216239118 * S_AcceptedCmpTotal + -1.2504451910923 * 
S_Mnt + 1.08805550572067 * S_MntMeatProducts + 0.42462128634087 * S_NumCatalogPurchases + 
0.47301106041065 * S_RFMstat + -2.61753144043135 * S_Recency ;
534854    +   H1x2_5  =    -1.41618915627784 * S_AcceptedCmpTotal
534855    +          +    -1.13785141950187 * S_Mnt  +    -1.73667107974481 *
534856    +        S_MntMeatProducts  +      3.1366199093076 * S_NumCatalogPurchases
534857    +          +    -1.94563130199796 * S_RFMstat  +       2.512838942818 *
534858    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.41618915627784 * S_AcceptedCmpTotal + -1.13785141950187 * 
S_Mnt + -1.73667107974481 * S_MntMeatProducts + 3.1366199093076 * S_NumCatalogPurchases + 
-1.94563130199796 * S_RFMstat + 2.512838942818 * S_Recency ;
534859    +   H1x2_1  =     0.73112846873387 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.73112846873387 + H1x2_1 ;
534860    +   H1x2_2  =    -0.66717106615524 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.66717106615524 + H1x2_2 ;
534861    +   H1x2_3  =      2.7125530739338 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 2.7125530739338 + H1x2_3 ;
534862    +   H1x2_4  =    -1.39079027168122 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.39079027168122 + H1x2_4 ;
534863    +   H1x2_5  =     -1.5266283403396 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.5266283403396 + H1x2_5 ;
534864    +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
534865    +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
534866    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
534867    +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
534868    +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
534869    +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
534870    +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
534871    +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
534872    +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
534873    +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
534874    +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
534875    +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
534876    +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
534877    +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
534878    +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
534879    +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
534880    +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
534881    +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
534882    +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
534883    +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
534884    +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
534885    +END;
MPRINT(EM_DIAGRAM):   END;
534886    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534887    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
534888    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
534889    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
534890    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
534891    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
534892    +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
534893    +END;
MPRINT(EM_DIAGRAM):   END;
534894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534895    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
534896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534897    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534898    +   H1x3_1  =     1.55893522013734 * S_AcceptedCmpTotal
534899    +          +    -1.16802167955541 * S_Mnt  +    -1.60360119780136 *
534900    +        S_MntMeatProducts  +     0.47774394371528 * S_NumCatalogPurchases
534901    +          +      -0.530718682766 * S_RFMstat  +    -2.44187650282709 *
534902    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.55893522013734 * S_AcceptedCmpTotal + -1.16802167955541 * 
S_Mnt + -1.60360119780136 * S_MntMeatProducts + 0.47774394371528 * S_NumCatalogPurchases + 
-0.530718682766 * S_RFMstat + -2.44187650282709 * S_Recency ;
534903    +   H1x3_2  =     1.06465525219753 * S_AcceptedCmpTotal
534904    +          +    -4.15619528335918 * S_Mnt  +     1.95067813512976 *
534905    +        S_MntMeatProducts  +    -2.07670102753791 * S_NumCatalogPurchases
534906    +          +     0.49910286851075 * S_RFMstat  +     0.93996026298479 *
534907    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.06465525219753 * S_AcceptedCmpTotal + -4.15619528335918 * 
S_Mnt + 1.95067813512976 * S_MntMeatProducts + -2.07670102753791 * S_NumCatalogPurchases + 
0.49910286851075 * S_RFMstat + 0.93996026298479 * S_Recency ;
534908    +   H1x3_3  =    -0.29105397796174 * S_AcceptedCmpTotal
534909    +          +     2.11159454800566 * S_Mnt  +     1.67840031691295 *
534910    +        S_MntMeatProducts  +    -2.40711178902336 * S_NumCatalogPurchases
534911    +          +    -1.13747844076384 * S_RFMstat  +    -0.88756656082469 *
534912    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.29105397796174 * S_AcceptedCmpTotal + 2.11159454800566 * 
S_Mnt + 1.67840031691295 * S_MntMeatProducts + -2.40711178902336 * S_NumCatalogPurchases + 
-1.13747844076384 * S_RFMstat + -0.88756656082469 * S_Recency ;
534913    +   H1x3_4  =    -1.15703505358845 * S_AcceptedCmpTotal
534914    +          +     0.30100889287849 * S_Mnt  +     0.55319963517684 *
534915    +        S_MntMeatProducts  +    -0.02272785613118 * S_NumCatalogPurchases
534916    +          +     0.43699534320691 * S_RFMstat  +     2.22910491450126 *
534917    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.15703505358845 * S_AcceptedCmpTotal + 0.30100889287849 * 
S_Mnt + 0.55319963517684 * S_MntMeatProducts + -0.02272785613118 * S_NumCatalogPurchases + 
0.43699534320691 * S_RFMstat + 2.22910491450126 * S_Recency ;
534918    +   H1x3_5  =    -0.42268650148557 * S_AcceptedCmpTotal
534919    +          +    -2.38416083526034 * S_Mnt  +     2.41579845516974 *
534920    +        S_MntMeatProducts  +     0.60973384003689 * S_NumCatalogPurchases
534921    +          +    -1.12415629345715 * S_RFMstat  +    -0.59274912531616 *
534922    +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.42268650148557 * S_AcceptedCmpTotal + -2.38416083526034 * 
S_Mnt + 2.41579845516974 * S_MntMeatProducts + 0.60973384003689 * S_NumCatalogPurchases + 
-1.12415629345715 * S_RFMstat + -0.59274912531616 * S_Recency ;
534923    +   H1x3_1  =     0.20894643335542 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.20894643335542 + H1x3_1 ;
534924    +   H1x3_2  =     2.19187718990043 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 2.19187718990043 + H1x3_2 ;
534925    +   H1x3_3  =    -0.63127842492526 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.63127842492526 + H1x3_3 ;
534926    +   H1x3_4  =     0.25735048029686 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25735048029686 + H1x3_4 ;
534927    +   H1x3_5  =     0.02632857468412 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.02632857468412 + H1x3_5 ;
534928    +   H1x3_6  = 0;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0;
534929    +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 );
534930    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
534931    +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
534932    +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
534933    +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
534934    +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
534935    +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
534936    +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
534937    +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
534938    +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
534939    +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
534940    +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
534941    +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
534942    +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
534943    +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
534944    +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
534945    +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
534946    +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
534947    +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
534948    +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
534949    +END;
MPRINT(EM_DIAGRAM):   END;
534950    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
534951    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
534952    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
534953    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
534954    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
534955    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
534956    +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
534957    +END;
MPRINT(EM_DIAGRAM):   END;
534958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534959    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
534960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
534961    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
534962    +   H2x1_1  =    -1.91284328958208 * H1x1_1  +     1.01368252878712 * H1x1_2
534963    +          +     0.88385633780482 * H1x1_3  +     0.77249497316744 * H1x1_4
534964    +          +    -1.68467525644522 * H1x1_5  +     0.22872788371043 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.91284328958208 * H1x1_1 + 1.01368252878712 * H1x1_2 + 
0.88385633780482 * H1x1_3 + 0.77249497316744 * H1x1_4 + -1.68467525644522 * H1x1_5 + 
0.22872788371043 * H1x1_6 ;
534965    +   H2x1_2  =    -0.08913678495622 * H1x1_1  +    -0.95704614273187 * H1x1_2
534966    +          +    -1.13959611313765 * H1x1_3  +    -0.83269840840553 * H1x1_4
534967    +          +    -1.34839441082903 * H1x1_5  +      1.4617930846853 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.08913678495622 * H1x1_1 + -0.95704614273187 * H1x1_2 + 
-1.13959611313765 * H1x1_3 + -0.83269840840553 * H1x1_4 + -1.34839441082903 * H1x1_5 + 
1.4617930846853 * H1x1_6 ;
534968    +   H2x1_3  =     1.19406467163652 * H1x1_1  +     1.10561638775412 * H1x1_2
534969    +          +     3.50091937687106 * H1x1_3  +     -0.7408464567923 * H1x1_4
534970    +          +     1.07741096211456 * H1x1_5  +     -1.0098240718302 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.19406467163652 * H1x1_1 + 1.10561638775412 * H1x1_2 + 
3.50091937687106 * H1x1_3 + -0.7408464567923 * H1x1_4 + 1.07741096211456 * H1x1_5 + 
-1.0098240718302 * H1x1_6 ;
534971    +   H2x1_4  =    -3.50840251474163 * H1x1_1  +    -0.53688540920235 * H1x1_2
534972    +          +    -2.44435438360824 * H1x1_3  +     4.64213676100195 * H1x1_4
534973    +          +     0.36171420259161 * H1x1_5  +     0.11106499550345 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -3.50840251474163 * H1x1_1 + -0.53688540920235 * H1x1_2 + 
-2.44435438360824 * H1x1_3 + 4.64213676100195 * H1x1_4 + 0.36171420259161 * H1x1_5 + 
0.11106499550345 * H1x1_6 ;
534974    +   H2x1_5  =    -0.92126735850423 * H1x1_1  +    -0.50015259068425 * H1x1_2
534975    +          +    -2.75013936022633 * H1x1_3  +     1.29804156504555 * H1x1_4
534976    +          +    -2.88854985509185 * H1x1_5  +     3.51037817476003 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.92126735850423 * H1x1_1 + -0.50015259068425 * H1x1_2 + 
-2.75013936022633 * H1x1_3 + 1.29804156504555 * H1x1_4 + -2.88854985509185 * H1x1_5 + 
3.51037817476003 * H1x1_6 ;
534977    +   H2x1_6  =      2.7601365695399 * H1x1_1  +     0.60343333315883 * H1x1_2
534978    +          +    -4.84088835213795 * H1x1_3  +     0.04677091451384 * H1x1_4
534979    +          +     1.99119511166544 * H1x1_5  +    -1.84413878989067 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 2.7601365695399 * H1x1_1 + 0.60343333315883 * H1x1_2 + 
-4.84088835213795 * H1x1_3 + 0.04677091451384 * H1x1_4 + 1.99119511166544 * H1x1_5 + 
-1.84413878989067 * H1x1_6 ;
534980    +   H2x1_1  = H2x1_1  +    -0.55299168308518 * H1x2_1
534981    +          +    -0.70728759829892 * H1x2_2  +     0.02028723479846 * H1x2_3
534982    +          +      2.1534144925678 * H1x2_4  +    -0.60181736829464 * H1x2_5
534983    +          +    -0.96627475596267 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.55299168308518 * H1x2_1 + -0.70728759829892 * 
H1x2_2 + 0.02028723479846 * H1x2_3 + 2.1534144925678 * H1x2_4 + -0.60181736829464 * H1x2_5 + 
-0.96627475596267 * H1x2_6 ;
534984    +   H2x1_2  = H2x1_2  +     1.02776882707138 * H1x2_1
534985    +          +    -0.26186544699712 * H1x2_2  +    -0.59804813597981 * H1x2_3
534986    +          +     0.13683572328121 * H1x2_4  +     -0.4527430044725 * H1x2_5
534987    +          +     0.09804477894859 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.02776882707138 * H1x2_1 + -0.26186544699712 * H1x2_2 
+ -0.59804813597981 * H1x2_3 + 0.13683572328121 * H1x2_4 + -0.4527430044725 * H1x2_5 + 
0.09804477894859 * H1x2_6 ;
534988    +   H2x1_3  = H2x1_3  +    -1.37372644240513 * H1x2_1
534989    +          +    -1.41411080054855 * H1x2_2  +    -0.85635388175337 * H1x2_3
534990    +          +     1.78033736245689 * H1x2_4  +    -0.32277639652206 * H1x2_5
534991    +          +    -0.10095907241792 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.37372644240513 * H1x2_1 + -1.41411080054855 * 
H1x2_2 + -0.85635388175337 * H1x2_3 + 1.78033736245689 * H1x2_4 + -0.32277639652206 * H1x2_5 + 
-0.10095907241792 * H1x2_6 ;
534992    +   H2x1_4  = H2x1_4  +     0.38975073179429 * H1x2_1
534993    +          +      1.7999626274739 * H1x2_2  +    -0.54595798920563 * H1x2_3
534994    +          +    -2.87794569741229 * H1x2_4  +     2.24407851876424 * H1x2_5
534995    +          +    -0.78007016861264 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.38975073179429 * H1x2_1 + 1.7999626274739 * H1x2_2 + 
-0.54595798920563 * H1x2_3 + -2.87794569741229 * H1x2_4 + 2.24407851876424 * H1x2_5 + 
-0.78007016861264 * H1x2_6 ;
534996    +   H2x1_5  = H2x1_5  +     1.68407538128685 * H1x2_1
534997    +          +     2.69111816059998 * H1x2_2  +     0.12927675826764 * H1x2_3
534998    +          +     -1.7263485913587 * H1x2_4  +    -2.15741343790643 * H1x2_5
534999    +          +     1.95855676074934 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.68407538128685 * H1x2_1 + 2.69111816059998 * H1x2_2 
+ 0.12927675826764 * H1x2_3 + -1.7263485913587 * H1x2_4 + -2.15741343790643 * H1x2_5 + 
1.95855676074934 * H1x2_6 ;
535000    +   H2x1_6  = H2x1_6  +     0.31146846941645 * H1x2_1
535001    +          +     0.33682375646593 * H1x2_2  +      1.6527641940739 * H1x2_3
535002    +          +    -0.96403239328063 * H1x2_4  +    -1.11790253982232 * H1x2_5
535003    +          +     -1.4251132059225 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 0.31146846941645 * H1x2_1 + 0.33682375646593 * H1x2_2 
+ 1.6527641940739 * H1x2_3 + -0.96403239328063 * H1x2_4 + -1.11790253982232 * H1x2_5 + 
-1.4251132059225 * H1x2_6 ;
535004    +   H2x1_1  = H2x1_1  +     0.47301275142195 * H1x3_1
535005    +          +    -1.23391488243925 * H1x3_2  +    -1.81348351496647 * H1x3_3
535006    +          +    -0.66473016828009 * H1x3_4  +     1.27670685567846 * H1x3_5
535007    +          +     0.38481934719452 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.47301275142195 * H1x3_1 + -1.23391488243925 * H1x3_2 
+ -1.81348351496647 * H1x3_3 + -0.66473016828009 * H1x3_4 + 1.27670685567846 * H1x3_5 + 
0.38481934719452 * H1x3_6 ;
535008    +   H2x1_2  = H2x1_2  +     0.35549808536734 * H1x3_1
535009    +          +     0.36201179536458 * H1x3_2  +     1.04726425834791 * H1x3_3
535010    +          +    -1.08276187248251 * H1x3_4  +     0.74248193765521 * H1x3_5
535011    +          +     1.87596859340821 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.35549808536734 * H1x3_1 + 0.36201179536458 * H1x3_2 
+ 1.04726425834791 * H1x3_3 + -1.08276187248251 * H1x3_4 + 0.74248193765521 * H1x3_5 + 
1.87596859340821 * H1x3_6 ;
535012    +   H2x1_3  = H2x1_3  +    -0.36667720681998 * H1x3_1
535013    +          +      0.5256210995417 * H1x3_2  +    -0.44860423311788 * H1x3_3
535014    +          +    -0.20913840911463 * H1x3_4  +    -0.76258888517092 * H1x3_5
535015    +          +     0.20457555210609 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.36667720681998 * H1x3_1 + 0.5256210995417 * H1x3_2 
+ -0.44860423311788 * H1x3_3 + -0.20913840911463 * H1x3_4 + -0.76258888517092 * H1x3_5 + 
0.20457555210609 * H1x3_6 ;
535016    +   H2x1_4  = H2x1_4  +     -0.5052323966606 * H1x3_1
535017    +          +     0.57348008947054 * H1x3_2  +     0.36313882476736 * H1x3_3
535018    +          +     2.54509537428676 * H1x3_4  +    -1.40462445002153 * H1x3_5
535019    +          +     1.76488988390401 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.5052323966606 * H1x3_1 + 0.57348008947054 * H1x3_2 
+ 0.36313882476736 * H1x3_3 + 2.54509537428676 * H1x3_4 + -1.40462445002153 * H1x3_5 + 
1.76488988390401 * H1x3_6 ;
535020    +   H2x1_5  = H2x1_5  +     -0.4555917406867 * H1x3_1
535021    +          +     0.52745581365834 * H1x3_2  +    -0.82303556180885 * H1x3_3
535022    +          +    -0.78981386250305 * H1x3_4  +     0.09307958113664 * H1x3_5
535023    +          +     1.63202351822216 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -0.4555917406867 * H1x3_1 + 0.52745581365834 * H1x3_2 
+ -0.82303556180885 * H1x3_3 + -0.78981386250305 * H1x3_4 + 0.09307958113664 * H1x3_5 + 
1.63202351822216 * H1x3_6 ;
535024    +   H2x1_6  = H2x1_6  +    -0.57563015009902 * H1x3_1
535025    +          +     2.47575184377805 * H1x3_2  +    -0.91958118957044 * H1x3_3
535026    +          +    -1.67916721690516 * H1x3_4  +     0.69514147486102 * H1x3_5
535027    +          +    -0.75070900812889 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.57563015009902 * H1x3_1 + 2.47575184377805 * H1x3_2 
+ -0.91958118957044 * H1x3_3 + -1.67916721690516 * H1x3_4 + 0.69514147486102 * H1x3_5 + 
-0.75070900812889 * H1x3_6 ;
535028    +   H2x1_1  =     0.44089803005479 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.44089803005479 + H2x1_1 ;
535029    +   H2x1_2  =     0.84182794358826 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.84182794358826 + H2x1_2 ;
535030    +   H2x1_3  =     0.09803371201388 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.09803371201388 + H2x1_3 ;
535031    +   H2x1_4  =      -0.624591248343 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.624591248343 + H2x1_4 ;
535032    +   H2x1_5  =      0.7596943675806 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.7596943675806 + H2x1_5 ;
535033    +   H2x1_6  =     1.86613856151687 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.86613856151687 + H2x1_6 ;
535034    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
535035    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
535036    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
535037    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
535038    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
535039    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
535040    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
535041    +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
535042    +END;
MPRINT(EM_DIAGRAM):   END;
535043    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
535044    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
535045    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
535046    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
535047    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
535048    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
535049    +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
535050    +END;
MPRINT(EM_DIAGRAM):   END;
535051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535052    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
535053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535054    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
535055    +   H2x2_1  =    -0.67599100831955 * H1x1_1  +     0.24077189312828 * H1x1_2
535056    +          +      0.2000763543409 * H1x1_3  +    -1.82199808794926 * H1x1_4
535057    +          +    -0.63614429983717 * H1x1_5  +     0.35027369588915 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.67599100831955 * H1x1_1 + 0.24077189312828 * H1x1_2 + 
0.2000763543409 * H1x1_3 + -1.82199808794926 * H1x1_4 + -0.63614429983717 * H1x1_5 + 
0.35027369588915 * H1x1_6 ;
535058    +   H2x2_2  =    -2.86273409671688 * H1x1_1  +    -1.17210014090039 * H1x1_2
535059    +          +     2.79815832312648 * H1x1_3  +     0.46361776813305 * H1x1_4
535060    +          +      0.0798677597958 * H1x1_5  +    -0.75991454790943 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -2.86273409671688 * H1x1_1 + -1.17210014090039 * H1x1_2 + 
2.79815832312648 * H1x1_3 + 0.46361776813305 * H1x1_4 + 0.0798677597958 * H1x1_5 + 
-0.75991454790943 * H1x1_6 ;
535061    +   H2x2_3  =     -0.6739829418862 * H1x1_1  +    -2.31169428380278 * H1x1_2
535062    +          +     2.10300119718615 * H1x1_3  +    -0.00742357063683 * H1x1_4
535063    +          +    -1.51041651747244 * H1x1_5  +    -0.17010696636548 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.6739829418862 * H1x1_1 + -2.31169428380278 * H1x1_2 + 
2.10300119718615 * H1x1_3 + -0.00742357063683 * H1x1_4 + -1.51041651747244 * H1x1_5 + 
-0.17010696636548 * H1x1_6 ;
535064    +   H2x2_4  =    -1.50678102953218 * H1x1_1  +    -0.89959733379076 * H1x1_2
535065    +          +     1.08933879000366 * H1x1_3  +      0.4160027440208 * H1x1_4
535066    +          +     0.96602358671281 * H1x1_5  +     2.49695921665153 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.50678102953218 * H1x1_1 + -0.89959733379076 * H1x1_2 + 
1.08933879000366 * H1x1_3 + 0.4160027440208 * H1x1_4 + 0.96602358671281 * H1x1_5 + 
2.49695921665153 * H1x1_6 ;
535067    +   H2x2_5  =      0.7197781324018 * H1x1_1  +     0.65156339723506 * H1x1_2
535068    +          +     1.10688522196469 * H1x1_3  +    -0.18317373714845 * H1x1_4
535069    +          +    -0.41607265841802 * H1x1_5  +    -1.97247962280317 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.7197781324018 * H1x1_1 + 0.65156339723506 * H1x1_2 + 
1.10688522196469 * H1x1_3 + -0.18317373714845 * H1x1_4 + -0.41607265841802 * H1x1_5 + 
-1.97247962280317 * H1x1_6 ;
535070    +   H2x2_6  =     0.54986188496659 * H1x1_1  +    -1.79839449870258 * H1x1_2
535071    +          +    -1.15036560870119 * H1x1_3  +     1.47969678061941 * H1x1_4
535072    +          +     0.10597867235187 * H1x1_5  +     0.90300533681641 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.54986188496659 * H1x1_1 + -1.79839449870258 * H1x1_2 + 
-1.15036560870119 * H1x1_3 + 1.47969678061941 * H1x1_4 + 0.10597867235187 * H1x1_5 + 
0.90300533681641 * H1x1_6 ;
535073    +   H2x2_1  = H2x2_1  +    -0.21000305943834 * H1x2_1
535074    +          +    -0.32875528993365 * H1x2_2  +    -2.01191741391886 * H1x2_3
535075    +          +     0.25433844143017 * H1x2_4  +    -0.22353514971516 * H1x2_5
535076    +          +    -1.39994531215362 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.21000305943834 * H1x2_1 + -0.32875528993365 * 
H1x2_2 + -2.01191741391886 * H1x2_3 + 0.25433844143017 * H1x2_4 + -0.22353514971516 * H1x2_5 + 
-1.39994531215362 * H1x2_6 ;
535077    +   H2x2_2  = H2x2_2  +     0.97984435202354 * H1x2_1
535078    +          +    -0.32249690006833 * H1x2_2  +    -1.39997315416199 * H1x2_3
535079    +          +     -2.7808281862933 * H1x2_4  +    -0.16292745421241 * H1x2_5
535080    +          +    -0.40444669273525 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.97984435202354 * H1x2_1 + -0.32249690006833 * H1x2_2 
+ -1.39997315416199 * H1x2_3 + -2.7808281862933 * H1x2_4 + -0.16292745421241 * H1x2_5 + 
-0.40444669273525 * H1x2_6 ;
535081    +   H2x2_3  = H2x2_3  +      1.7332207906399 * H1x2_1
535082    +          +     0.48772690844604 * H1x2_2  +    -0.03702571322482 * H1x2_3
535083    +          +    -0.04073364631727 * H1x2_4  +    -0.91191013457442 * H1x2_5
535084    +          +    -2.38736049861996 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 1.7332207906399 * H1x2_1 + 0.48772690844604 * H1x2_2 + 
-0.03702571322482 * H1x2_3 + -0.04073364631727 * H1x2_4 + -0.91191013457442 * H1x2_5 + 
-2.38736049861996 * H1x2_6 ;
535085    +   H2x2_4  = H2x2_4  +    -0.06792429668775 * H1x2_1
535086    +          +    -3.07222522712126 * H1x2_2  +     0.01320929156379 * H1x2_3
535087    +          +     0.84459091213222 * H1x2_4  +    -0.95949143247045 * H1x2_5
535088    +          +     0.02632878191094 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.06792429668775 * H1x2_1 + -3.07222522712126 * 
H1x2_2 + 0.01320929156379 * H1x2_3 + 0.84459091213222 * H1x2_4 + -0.95949143247045 * H1x2_5 + 
0.02632878191094 * H1x2_6 ;
535089    +   H2x2_5  = H2x2_5  +     0.13831659235384 * H1x2_1
535090    +          +    -1.75598160312232 * H1x2_2  +     0.17047671926062 * H1x2_3
535091    +          +    -0.45409084878331 * H1x2_4  +    -1.17540122389603 * H1x2_5
535092    +          +     0.79706245066425 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 0.13831659235384 * H1x2_1 + -1.75598160312232 * H1x2_2 
+ 0.17047671926062 * H1x2_3 + -0.45409084878331 * H1x2_4 + -1.17540122389603 * H1x2_5 + 
0.79706245066425 * H1x2_6 ;
535093    +   H2x2_6  = H2x2_6  +     1.74450762507234 * H1x2_1
535094    +          +    -0.18999736448811 * H1x2_2  +    -0.82200918268165 * H1x2_3
535095    +          +      1.8752098314092 * H1x2_4  +    -0.55366925571085 * H1x2_5
535096    +          +     1.96032751350518 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.74450762507234 * H1x2_1 + -0.18999736448811 * H1x2_2 
+ -0.82200918268165 * H1x2_3 + 1.8752098314092 * H1x2_4 + -0.55366925571085 * H1x2_5 + 
1.96032751350518 * H1x2_6 ;
535097    +   H2x2_1  = H2x2_1  +     1.05088385328525 * H1x3_1
535098    +          +    -1.18748050069472 * H1x3_2  +     0.33686598960541 * H1x3_3
535099    +          +     0.60467968457853 * H1x3_4  +     0.44997942659683 * H1x3_5
535100    +          +     0.86372067144364 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.05088385328525 * H1x3_1 + -1.18748050069472 * H1x3_2 
+ 0.33686598960541 * H1x3_3 + 0.60467968457853 * H1x3_4 + 0.44997942659683 * H1x3_5 + 
0.86372067144364 * H1x3_6 ;
535101    +   H2x2_2  = H2x2_2  +     0.54489966189284 * H1x3_1
535102    +          +     0.63828892530684 * H1x3_2  +     1.36576672067523 * H1x3_3
535103    +          +    -0.93080386349548 * H1x3_4  +    -0.53645684858865 * H1x3_5
535104    +          +     0.80254310887989 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.54489966189284 * H1x3_1 + 0.63828892530684 * H1x3_2 
+ 1.36576672067523 * H1x3_3 + -0.93080386349548 * H1x3_4 + -0.53645684858865 * H1x3_5 + 
0.80254310887989 * H1x3_6 ;
535105    +   H2x2_3  = H2x2_3  +    -0.43326705547287 * H1x3_1
535106    +          +     1.62130917530395 * H1x3_2  +     -1.9569471371487 * H1x3_3
535107    +          +    -0.16690355216427 * H1x3_4  +     0.76588074497881 * H1x3_5
535108    +          +    -0.80961698509146 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.43326705547287 * H1x3_1 + 1.62130917530395 * H1x3_2 
+ -1.9569471371487 * H1x3_3 + -0.16690355216427 * H1x3_4 + 0.76588074497881 * H1x3_5 + 
-0.80961698509146 * H1x3_6 ;
535109    +   H2x2_4  = H2x2_4  +     0.14186336769381 * H1x3_1
535110    +          +    -0.40313769302155 * H1x3_2  +     0.32907477170578 * H1x3_3
535111    +          +    -0.09559287343495 * H1x3_4  +     1.23870853269954 * H1x3_5
535112    +          +    -1.29909553454934 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.14186336769381 * H1x3_1 + -0.40313769302155 * H1x3_2 
+ 0.32907477170578 * H1x3_3 + -0.09559287343495 * H1x3_4 + 1.23870853269954 * H1x3_5 + 
-1.29909553454934 * H1x3_6 ;
535113    +   H2x2_5  = H2x2_5  +    -0.23962567636847 * H1x3_1
535114    +          +    -0.40709618711343 * H1x3_2  +    -1.68479406479753 * H1x3_3
535115    +          +     0.70815879664382 * H1x3_4  +    -0.08013794063462 * H1x3_5
535116    +          +      0.3854653698129 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -0.23962567636847 * H1x3_1 + -0.40709618711343 * 
H1x3_2 + -1.68479406479753 * H1x3_3 + 0.70815879664382 * H1x3_4 + -0.08013794063462 * H1x3_5 + 
0.3854653698129 * H1x3_6 ;
535117    +   H2x2_6  = H2x2_6  +     0.30227974563111 * H1x3_1
535118    +          +    -0.74687752968448 * H1x3_2  +     1.36415251312446 * H1x3_3
535119    +          +     1.81088044806083 * H1x3_4  +     1.05534281539066 * H1x3_5
535120    +          +    -0.43429796112944 * H1x3_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.30227974563111 * H1x3_1 + -0.74687752968448 * H1x3_2 
+ 1.36415251312446 * H1x3_3 + 1.81088044806083 * H1x3_4 + 1.05534281539066 * H1x3_5 + 
-0.43429796112944 * H1x3_6 ;
535121    +   H2x2_1  =     0.63184708368306 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.63184708368306 + H2x2_1 ;
535122    +   H2x2_2  =     0.84907350596357 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.84907350596357 + H2x2_2 ;
535123    +   H2x2_3  =    -0.73809203587584 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = -0.73809203587584 + H2x2_3 ;
535124    +   H2x2_4  =    -0.43815853180498 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.43815853180498 + H2x2_4 ;
535125    +   H2x2_5  =     0.21738444698009 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0.21738444698009 + H2x2_5 ;
535126    +   H2x2_6  =     0.35336989078545 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.35336989078545 + H2x2_6 ;
535127    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
535128    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
535129    +   H2x2_1  = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.0 / (1.0 + EXP(MIN( - H2x2_1 , _EXP_BAR)));
535130    +   H2x2_2  = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.0 / (1.0 + EXP(MIN( - H2x2_2 , _EXP_BAR)));
535131    +   H2x2_3  = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.0 / (1.0 + EXP(MIN( - H2x2_3 , _EXP_BAR)));
535132    +   H2x2_4  = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_4 = 1.0 / (1.0 + EXP(MIN( - H2x2_4 , _EXP_BAR)));
535133    +   H2x2_5  = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_5 = 1.0 / (1.0 + EXP(MIN( - H2x2_5 , _EXP_BAR)));
535134    +   H2x2_6  = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x2_6 = 1.0 / (1.0 + EXP(MIN( - H2x2_6 , _EXP_BAR)));
535135    +END;
MPRINT(EM_DIAGRAM):   END;
535136    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
535137    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
535138    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
535139    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
535140    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
535141    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
535142    +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
535143    +END;
MPRINT(EM_DIAGRAM):   END;
535144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535145    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
535146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535147    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
535148    +   H3x1_1  =     0.88232318111379 * H2x1_1  +     0.33230222316203 * H2x1_2
535149    +          +     1.74392107555271 * H2x1_3  +    -1.04185063882146 * H2x1_4
535150    +          +    -0.63105511848819 * H2x1_5  +    -1.05088304858423 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.88232318111379 * H2x1_1 + 0.33230222316203 * H2x1_2 + 
1.74392107555271 * H2x1_3 + -1.04185063882146 * H2x1_4 + -0.63105511848819 * H2x1_5 + 
-1.05088304858423 * H2x1_6 ;
535151    +   H3x1_2  =     1.11736284857762 * H2x1_1  +     1.90660007278783 * H2x1_2
535152    +          +    -0.38007206174956 * H2x1_3  +     0.37265047043174 * H2x1_4
535153    +          +     2.27208664894129 * H2x1_5  +     0.87150445612099 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.11736284857762 * H2x1_1 + 1.90660007278783 * H2x1_2 + 
-0.38007206174956 * H2x1_3 + 0.37265047043174 * H2x1_4 + 2.27208664894129 * H2x1_5 + 
0.87150445612099 * H2x1_6 ;
535154    +   H3x1_3  =    -1.47841270668706 * H2x1_1  +    -1.28441896803313 * H2x1_2
535155    +          +     1.95549364222924 * H2x1_3  +    -2.50484940312791 * H2x1_4
535156    +          +    -2.84934238039874 * H2x1_5  +     2.18013446750751 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.47841270668706 * H2x1_1 + -1.28441896803313 * H2x1_2 + 
1.95549364222924 * H2x1_3 + -2.50484940312791 * H2x1_4 + -2.84934238039874 * H2x1_5 + 
2.18013446750751 * H2x1_6 ;
535157    +   H3x1_4  =     1.91981096223784 * H2x1_1  +     2.50981387206546 * H2x1_2
535158    +          +     1.52848474440169 * H2x1_3  +    -1.77653121606781 * H2x1_4
535159    +          +    -1.17059017641066 * H2x1_5  +     0.08630071934474 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 1.91981096223784 * H2x1_1 + 2.50981387206546 * H2x1_2 + 
1.52848474440169 * H2x1_3 + -1.77653121606781 * H2x1_4 + -1.17059017641066 * H2x1_5 + 
0.08630071934474 * H2x1_6 ;
535160    +   H3x1_5  =    -0.90689901549977 * H2x1_1  +    -0.28920884601352 * H2x1_2
535161    +          +     0.19367561691053 * H2x1_3  +    -1.64382922054024 * H2x1_4
535162    +          +    -1.27645531071461 * H2x1_5  +     2.78368081292476 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.90689901549977 * H2x1_1 + -0.28920884601352 * H2x1_2 + 
0.19367561691053 * H2x1_3 + -1.64382922054024 * H2x1_4 + -1.27645531071461 * H2x1_5 + 
2.78368081292476 * H2x1_6 ;
535163    +   H3x1_6  =     1.79097710546589 * H2x1_1  +     0.62195006841522 * H2x1_2
535164    +          +     0.38238495192417 * H2x1_3  +     0.38117337455775 * H2x1_4
535165    +          +     0.31232345193628 * H2x1_5  +     1.64288571863932 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 1.79097710546589 * H2x1_1 + 0.62195006841522 * H2x1_2 + 
0.38238495192417 * H2x1_3 + 0.38117337455775 * H2x1_4 + 0.31232345193628 * H2x1_5 + 
1.64288571863932 * H2x1_6 ;
535166    +   H3x1_1  = H3x1_1  +    -0.29610176935088 * H2x2_1
535167    +          +    -0.05687019870114 * H2x2_2  +     0.19276816813006 * H2x2_3
535168    +          +    -0.02919428123272 * H2x2_4  +     -0.1225189756077 * H2x2_5
535169    +          +     0.35216486042215 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -0.29610176935088 * H2x2_1 + -0.05687019870114 * 
H2x2_2 + 0.19276816813006 * H2x2_3 + -0.02919428123272 * H2x2_4 + -0.1225189756077 * H2x2_5 + 
0.35216486042215 * H2x2_6 ;
535170    +   H3x1_2  = H3x1_2  +    -0.65560935360323 * H2x2_1
535171    +          +     1.14492037534385 * H2x2_2  +    -0.73840836071645 * H2x2_3
535172    +          +      1.3947576688638 * H2x2_4  +    -0.01317619212955 * H2x2_5
535173    +          +    -0.91648595761636 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + -0.65560935360323 * H2x2_1 + 1.14492037534385 * H2x2_2 
+ -0.73840836071645 * H2x2_3 + 1.3947576688638 * H2x2_4 + -0.01317619212955 * H2x2_5 + 
-0.91648595761636 * H2x2_6 ;
535174    +   H3x1_3  = H3x1_3  +    -0.53127332055291 * H2x2_1
535175    +          +     0.36262088215518 * H2x2_2  +     2.77585954813321 * H2x2_3
535176    +          +     1.38261906942485 * H2x2_4  +    -0.22635906489825 * H2x2_5
535177    +          +    -2.11281855575499 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.53127332055291 * H2x2_1 + 0.36262088215518 * H2x2_2 
+ 2.77585954813321 * H2x2_3 + 1.38261906942485 * H2x2_4 + -0.22635906489825 * H2x2_5 + 
-2.11281855575499 * H2x2_6 ;
535178    +   H3x1_4  = H3x1_4  +     0.10255243516649 * H2x2_1
535179    +          +    -0.19237607982949 * H2x2_2  +    -0.39440266749795 * H2x2_3
535180    +          +     0.62091379272854 * H2x2_4  +    -0.71121773171613 * H2x2_5
535181    +          +     0.57305821692201 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.10255243516649 * H2x2_1 + -0.19237607982949 * H2x2_2 
+ -0.39440266749795 * H2x2_3 + 0.62091379272854 * H2x2_4 + -0.71121773171613 * H2x2_5 + 
0.57305821692201 * H2x2_6 ;
535182    +   H3x1_5  = H3x1_5  +     1.38760232745985 * H2x2_1
535183    +          +    -0.67366859881604 * H2x2_2  +     0.73667853659073 * H2x2_3
535184    +          +     0.48338791573814 * H2x2_4  +    -1.86204960161547 * H2x2_5
535185    +          +     2.06401699674057 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + 1.38760232745985 * H2x2_1 + -0.67366859881604 * H2x2_2 
+ 0.73667853659073 * H2x2_3 + 0.48338791573814 * H2x2_4 + -1.86204960161547 * H2x2_5 + 
2.06401699674057 * H2x2_6 ;
535186    +   H3x1_6  = H3x1_6  +     1.58403061991045 * H2x2_1
535187    +          +    -1.98415138001436 * H2x2_2  +    -2.65270828558486 * H2x2_3
535188    +          +     0.24663962279095 * H2x2_4  +    -0.13610124747178 * H2x2_5
535189    +          +     0.08850124295188 * H2x2_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.58403061991045 * H2x2_1 + -1.98415138001436 * H2x2_2 
+ -2.65270828558486 * H2x2_3 + 0.24663962279095 * H2x2_4 + -0.13610124747178 * H2x2_5 + 
0.08850124295188 * H2x2_6 ;
535190    +   H3x1_1  =    -0.38359896864958 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.38359896864958 + H3x1_1 ;
535191    +   H3x1_2  =     0.71155840570573 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.71155840570573 + H3x1_2 ;
535192    +   H3x1_3  =     0.51799749231142 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.51799749231142 + H3x1_3 ;
535193    +   H3x1_4  =     0.67952932286733 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.67952932286733 + H3x1_4 ;
535194    +   H3x1_5  =    -0.81394067979603 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.81394067979603 + H3x1_5 ;
535195    +   H3x1_6  =    -0.01596290366203 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = -0.01596290366203 + H3x1_6 ;
535196    +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
535197    +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
535198    +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
535199    +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
535200    +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
535201    +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
535202    +END;
MPRINT(EM_DIAGRAM):   END;
535203    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
535204    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
535205    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
535206    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
535207    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
535208    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
535209    +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
535210    +END;
MPRINT(EM_DIAGRAM):   END;
535211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535212    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
535213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535214    +
535215    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
535216    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
535217    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
535218    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
535219    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
535220    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535221    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
535222    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
535223    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
535224    +end;
MPRINT(EM_DIAGRAM):   end;
535225    +else do;
MPRINT(EM_DIAGRAM):   else do;
535226    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
535227    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
535228    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
535229    +   end;
MPRINT(EM_DIAGRAM):   end;
535230    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
535231    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
535232    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
535233    +   end;
MPRINT(EM_DIAGRAM):   end;
535234    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535235    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
535236    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
535237    +   end;
MPRINT(EM_DIAGRAM):   end;
535238    +end;
MPRINT(EM_DIAGRAM):   end;
535239    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
535240    +   P_DepVar1  =     0.28094469007064 * H3x1_1  +     4.40543517205109 * H3x1_2
535241    +          +     4.58780022403482 * H3x1_3  +    -1.49344393871597 * H3x1_4
535242    +          +     3.15120047821915 * H3x1_5  +    -1.83744247169269 * H3x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28094469007064 * H3x1_1 + 4.40543517205109 * H3x1_2 + 
4.58780022403482 * H3x1_3 + -1.49344393871597 * H3x1_4 + 3.15120047821915 * H3x1_5 + 
-1.83744247169269 * H3x1_6 ;
535243    +   P_DepVar1  =     -2.1680951408523 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.1680951408523 + P_DepVar1 ;
535244    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
535245    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
535246    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
535247    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
535248    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
535249    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
535250    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
535251    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
535252    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
535253    +END;
MPRINT(EM_DIAGRAM):   END;
535254    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
535255    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
535256    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
535257    +END;
MPRINT(EM_DIAGRAM):   END;
535258    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
535259    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
535260    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
535261    +END;
MPRINT(EM_DIAGRAM):   END;
535262    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
535263    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
535264    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
535265    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
535266    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
535267    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
535268    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
535269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535270    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
535271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535272    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
535273    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
535274    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
535275    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
535276    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
535277    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
535278    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
535279    +END;
MPRINT(EM_DIAGRAM):   END;
535280    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
535281    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
535282    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
535283    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
535284     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL28_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
535285     quit;
535286     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
535287     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
535288     * AutoNeural28: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Computing metadata for TRAIN data;
535289     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL28_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural28\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural28_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural28_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural28_TRAIN out=WORK.M3OGIVVB 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OGIVVB;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OGIVVB(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OGIVVB;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OGIVVB;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1DYCT2_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DYCT2_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DYCT2_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M394FH9H(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DYCT2_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DYCT2_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DYCT2_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DYCT2_;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DYCT2_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural28";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural28";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural28: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
535601     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
535602     set EMWS8.AutoNeural28_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMINFO;
535603     where DATA='AutoNeural28' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural28' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
535604     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL28_EMINFO.
      WHERE (DATA='AutoNeural28') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

535605     data EMWS8.AutoNeural28_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural28_EMINFO;
535606     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
535607     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
535608     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL28_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
535612     run;
535613     data EMWS8.AutoNeural28_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMINFO;
535614     set EMWS8.AutoNeural28_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural28_EMINFO WORK.MODELTEMP_INFO;
535615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL28_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL28_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

535616     proc sort data = EMWS8.AutoNeural28_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural28_EMINFO NOTHREADS;
535617     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
535618     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL28_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL28_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

535619     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
535620     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
535621     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

535622     proc sort data = EMWS8.AutoNeural28_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural28_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
535623     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
535624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL28_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

535625     data EMWS8.AutoNeural28_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural28_EMINFO;
535626     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
535627     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
535628     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL28_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

535629     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
535630     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
535631     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
535632     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.AUTONEURAL28_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL28_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
