*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                20.11 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.10 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                20.10 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O15Z0AD4
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O15Z0AD4 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.10 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.10 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
959434     proc freq data=EMWS8.AutoNeural40_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural40_VariableSet noprint;
959435     table ROLE*LEVEL/out=WORK.AutoNeural40META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural40META;
959436     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL40META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959437     proc print data=WORK.AutoNeural40META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural40META label noobs;
959438     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
959439     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
959439   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
959439   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
959440     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
959441     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
959442     run;
 
NOTE: There were 6 observations read from the data set WORK.AUTONEURAL40META.
NOTE: The PROCEDURE PRINT printed page 855.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959443     title10;
MPRINT(EM_DIAGRAM):   title10;
959444     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN EMWS8 Meta3_TRAIN
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN EMWS8 Meta3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta3_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural40_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_DepVar_DD
out=EMWS8.AutoNeural40_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
959491     data WORK.AutoNeural40_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural40_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
959492     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
959493     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
959493   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
959493   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
959494        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
959494   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
959494   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
959495     set EMWS8.AUTONEURAL40_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL40_DEPVAR_DM( where=(_TYPE_="TARGET"));
959496     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
959497     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
959498     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
959499     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
959500     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
959501     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
959502     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
959503     end;
MPRINT(EM_DIAGRAM):   end;
959504     output;
MPRINT(EM_DIAGRAM):   output;
959505     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL40_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959506     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
959507     proc print data=WORK.AutoNeural40_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural40_EVENT noobs label;
959508     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
959509     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
959510     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
959511     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL40_EVENT.
NOTE: The PROCEDURE PRINT printed page 856.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959512     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
959513     proc print data = EMWS8.AutoNeural40_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural40_DepVar_DM noobs label;
959514     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
959515     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
959516     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
959516   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
959516   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
959517     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
959518     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
959519     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL40_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 857.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959520     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3346SBE;
MPRINT(EM_DIAGRAM):   set WORK.M3346SBE;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
959529     data WORK.M3346SBE;
MPRINT(EM_DIAGRAM):    data WORK.M3346SBE;
959530     set WORK.M3346SBE end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M3346SBE end=eof;
959531     output;
MPRINT(EM_DIAGRAM):   output;
959532     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
959533     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
959534     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
959535     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
959536     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
959537     output;
MPRINT(EM_DIAGRAM):   output;
959538     end;
MPRINT(EM_DIAGRAM):   end;
959539     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.M3346SBE.
NOTE: The data set WORK.M3346SBE has 11 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL40_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
959540     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
959541     * AutoNeural40: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Create decision matrix;
959542     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
959543     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
959544       length   DepVar                           $  32
959545                COUNT                                8
959546                DATAPRIOR                            8
959547                TRAINPRIOR                           8
959548                DECPRIOR                             8
959549                DECISION1                            8
959550                DECISION2                            8
959551                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
959552
959553       label    COUNT="Level Counts"
959554                DATAPRIOR="Data Proportions"
959555                TRAINPRIOR="Training Proportions"
959556                DECPRIOR="Decision Priors"
959557                DECISION1="1"
959558                DECISION2="0"
959559                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
959560       format   COUNT 10.
959561                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
959562     DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
959562   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
959563     output;
MPRINT(EM_DIAGRAM):   output;
959564     DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
959564   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
959565     output;
MPRINT(EM_DIAGRAM):   output;
959566     ;
MPRINT(EM_DIAGRAM):   ;
959567     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959568     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
959569     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
959570     label DECISION1= '1';
959571     label DECISION2= '0';
959572     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
959573     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
959574     data EM_AutoNeural40;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural40;
959575     set EMWS8.Meta3_TRAIN(keep=
959576     AcceptedCmpTotal DepVar Frq Marital_Status Mnt MntMeatProducts
959577     NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency );
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN(keep= AcceptedCmpTotal DepVar Frq Marital_Status
Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency );
959578     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural40: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959579     *------------------------------------------------------------* ;
959580     * AutoNeural40: DMDBClass Macro ;
959581     *------------------------------------------------------------* ;
959582     %macro DMDBClass;
959583         DepVar(DESC) Marital_Status(ASC)
959584     %mend DMDBClass;
959585     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959586     * AutoNeural40: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural40: DMDBVar Macro ;
959587     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959588     %macro DMDBVar;
959589         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
959590        NumWebVisitsMonth Recency
959591     %mend DMDBVar;
959592     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
959593     * AutoNeural40: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Create DMDB;
959594     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
959595     proc dmdb batch data=WORK.EM_AutoNeural40
959596     dmdbcat=WORK.AutoNeural40_DMDB
959597     maxlevel = 513
959598     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
959599     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
959600     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases
NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):  ;
959601     target
959602     DepVar
959603     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
959604     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL40.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
959605     quit;
959606     *--- end code ---*;
 
959607     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
959608     * AutoNeural40: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Interval Inputs Macro ;
959609     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959610     %macro INTINPUTS;
959611         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
959612        NumWebVisitsMonth Recency
959613     %mend INTINPUTS;
959614     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959615     * AutoNeural40: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Binary Inputs Macro ;
959616     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959617     %macro BININPUTS;
959618
959619     %mend BININPUTS;
959620     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959621     * AutoNeural40: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Nominal Inputs Macro ;
959622     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959623     %macro NOMINPUTS;
959624         Marital_Status
959625     %mend NOMINPUTS;
959626     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959627     * AutoNeural40: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Ordinal Inputs Macro ;
959628     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
959629     %macro ORDINPUTS;
959630
959631     %mend ORDINPUTS;
959632     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
959633     ;
MPRINT(EM_DIAGRAM):   ;
959634     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
959635     options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
959636     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
959637     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
959638     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
959639     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
959640     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
959640   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
959641     *;
 
959642     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959643     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
959644     ;
MPRINT(EM_DIAGRAM):   ;
959645     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959646     *;
MPRINT(EM_DIAGRAM):   *;
 
959647     *;
MPRINT(EM_DIAGRAM):    *;
959648     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
959649     validdata=EMWS8.Meta3_VALIDATE
959650     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
959651     *;
MPRINT(EM_DIAGRAM):   *;
959652     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
959653     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
959654     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
959655     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
959656     target DepVar / level=NOMINAL id=DepVar
959657     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
959658     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959659     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
959660     ;
MPRINT(EM_DIAGRAM):   ;
959661     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959662     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
959663     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
959664     *;
MPRINT(EM_DIAGRAM):   *;
959665     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
959666     *;
MPRINT(EM_DIAGRAM):   *;
959667     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
959668     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
959668   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 28 observations and 28 variables.
NOTE: The data set WORK._ANFIT has 28 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
959669     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
959670     tech = Default;
959671     ;
959672     run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.31 seconds
      cpu time            0.31 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.32 seconds
      cpu time            0.32 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
959673     *;
959674     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
959675     var _iter_ _aic_ _averr_ _misc_
959676     _vaverr_ _vmisc_
959677     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
959678     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 858.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959679     *------------------------------------------------------------*;
959680     * Extract best iteration;
959681     ;
959682     *------------------------------------------------------------*;
959683     %global _iter;
959684     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
959685     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
959686     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
959687     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
959688     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
959689     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
959690     end;
MPRINT(EM_DIAGRAM):   end;
959691     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
959692     *;
 
959693     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
959694     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
959695     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
959696     output;
MPRINT(EM_DIAGRAM):   output;
959697     stop;
MPRINT(EM_DIAGRAM):   stop;
959698     end;
MPRINT(EM_DIAGRAM):   end;
959699     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
959700     *;
959701     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
959702     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
959703     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
959704     output;
MPRINT(EM_DIAGRAM):   output;
959705     stop;
MPRINT(EM_DIAGRAM):   stop;
959706     end;
MPRINT(EM_DIAGRAM):   end;
959707     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959708     *;
MPRINT(EM_DIAGRAM):    *;
959709     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
959710     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
959710   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
959711     proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
959712     var _iter_ _aic_ _averr_ _misc_
959713     _vaverr_ _vmisc_
959714     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
959715     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 859.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959716     title9;
MPRINT(EM_DIAGRAM):   title9;
959717     title10;
MPRINT(EM_DIAGRAM):   title10;
959718     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
959719     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
959720     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
959721     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
959721   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
959722     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
959722   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
959723     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
959723   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
959724     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
959724   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
959725     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
959726     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
959727     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
959728     set
959729     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
959730     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
959731     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959732     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
959733     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959734     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
959735     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959736     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
959737     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959738     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
959739     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959740     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
959741     ;
MPRINT(EM_DIAGRAM):   ;
959742     data WORK.SAVEDS_AUTONEUR_2UH3C2I;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_2UH3C2I;
959743     set EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_ESTDS;
959744     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_2UH3C2I has 1 observations and 28
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959745     data EMWS8.AutoNeural40_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_BESTDS;
959746     set EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_ESTDS;
959747     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL40_BESTDS has 1 observations and 28
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959748     data WORK.BFITDS_AUTONEUR_2UH3C2I;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_2UH3C2I;
959749     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959750     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_2UH3C2I has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959751     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
959752     ;
MPRINT(EM_DIAGRAM):   ;
959753     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
959754     set EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY;
959755     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
959756     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
959757     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959758     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
959759     ;
MPRINT(EM_DIAGRAM):   ;
959760     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
959761     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959762     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
959763     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
959764     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
959765     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
959766     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
959767     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959768     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
959769     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
959770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959771     *;
MPRINT(EM_DIAGRAM):    *;
959772     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
959773     validdata=EMWS8.Meta3_VALIDATE
959774     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
959775     *;
MPRINT(EM_DIAGRAM):   *;
959776     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
959777     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
959778     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
959779     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
959780     target DepVar / level=NOMINAL id=DepVar
959781     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
959782     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959783     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
959784     ;
MPRINT(EM_DIAGRAM):   ;
959785     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959786     Hidden 4 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=LOG;
959787     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
959788     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
959789     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
959790     *;
MPRINT(EM_DIAGRAM):   *;
959791     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
959792     *;
MPRINT(EM_DIAGRAM):   *;
959793     initial
959794     ;
MPRINT(EM_DIAGRAM):   initial ;
959795     *;
MPRINT(EM_DIAGRAM):   *;
959796     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
959797     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
959797   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=56 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 33 observations and 72 variables.
MPRINT(EM_DIAGRAM):   *;
959798     prelim 16 outest=_anpre pretime=56 preiter=25
959799     tech = Default
959800     ;
959801     *;
959802     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
959803     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
959803   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 110 observations and 72 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
959804     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
959805     tech = Default;
959806     ;
959807     run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           11.44 seconds
      cpu time            11.43 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 860.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           11.45 seconds
      cpu time            11.45 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
959808     *;
959809     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
959810     var _iter_ _aic_ _averr_ _misc_
959811     _vaverr_ _vmisc_
959812     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
959813     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 861.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959814     *------------------------------------------------------------*;
959815     * Extract best iteration;
959816     ;
959817     *------------------------------------------------------------*;
959818     %global _iter;
959819     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
959820     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
959821     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
959822     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
959823     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
959824     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
959825     end;
MPRINT(EM_DIAGRAM):   end;
959826     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
959827     *;
 
959828     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
959829     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
959830     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
959831     output;
MPRINT(EM_DIAGRAM):   output;
959832     stop;
MPRINT(EM_DIAGRAM):   stop;
959833     end;
MPRINT(EM_DIAGRAM):   end;
959834     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
959835     *;
959836     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
959837     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
959838     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
959839     output;
MPRINT(EM_DIAGRAM):   output;
959840     stop;
MPRINT(EM_DIAGRAM):   stop;
959841     end;
MPRINT(EM_DIAGRAM):   end;
959842     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959843     *;
MPRINT(EM_DIAGRAM):    *;
959844     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
959845     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
959845   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
959846     proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
959847     var _iter_ _aic_ _averr_ _misc_
959848     _vaverr_ _vmisc_
959849     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
959850     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 862.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959851     title9;
MPRINT(EM_DIAGRAM):   title9;
959852     title10;
MPRINT(EM_DIAGRAM):   title10;
959853     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
959854     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959855     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
959856     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959857     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
959858     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959859     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
959860     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959861     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
959862     ;
MPRINT(EM_DIAGRAM):   ;
959863     data WORK.SAVEDS_AUTONEUR_2UH3C2I;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_2UH3C2I;
959864     set EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_ESTDS;
959865     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_2UH3C2I has 1 observations and 72
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959866     data EMWS8.AutoNeural40_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_BESTDS;
959867     set EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_ESTDS;
959868     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL40_BESTDS has 1 observations and 72
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959869     data WORK.BFITDS_AUTONEUR_2UH3C2I;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_2UH3C2I;
959870     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959871     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_2UH3C2I has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959872     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
959873     ;
MPRINT(EM_DIAGRAM):   ;
959874     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
959875     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959876     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
959877     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
959878     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
959879     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
959880     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
959881     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959882     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
959883     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
959884     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959885     *;
MPRINT(EM_DIAGRAM):    *;
959886     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
959887     validdata=EMWS8.Meta3_VALIDATE
959888     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
959889     *;
MPRINT(EM_DIAGRAM):   *;
959890     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
959891     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
959892     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
959893     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
959894     target DepVar / level=NOMINAL id=DepVar
959895     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
959896     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959897     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
959898     ;
MPRINT(EM_DIAGRAM):   ;
959899     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959900     Hidden 4 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SINE;
959901     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
959902     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
959903     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
959904     *;
MPRINT(EM_DIAGRAM):   *;
959905     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
959906     *;
MPRINT(EM_DIAGRAM):   *;
959907     initial
959908     ;
MPRINT(EM_DIAGRAM):   initial ;
959909     *;
MPRINT(EM_DIAGRAM):   *;
959910     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
959911     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
959911   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=56 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 33 observations and 72 variables.
MPRINT(EM_DIAGRAM):   *;
959912     prelim 16 outest=_anpre pretime=56 preiter=25
959913     tech = Default
959914     ;
959915     *;
959916     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
959917     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
959917   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=897
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 110 observations and 72 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
959918     train estiter=1 outest=_anest outfit=_anfit maxtime=897 maxiter=50
MPRINT(EM_DIAGRAM):   run;
959919     tech = Default;
959920     ;
959921     run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           11.25 seconds
      cpu time            11.26 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 863.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           11.25 seconds
      cpu time            11.26 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
959922     *;
959923     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
959924     var _iter_ _aic_ _averr_ _misc_
959925     _vaverr_ _vmisc_
959926     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
959927     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 864.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
959928     *------------------------------------------------------------*;
959929     * Extract best iteration;
959930     ;
959931     *------------------------------------------------------------*;
959932     %global _iter;
959933     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
959934     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
959935     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
959936     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
959937     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
959938     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
959939     end;
MPRINT(EM_DIAGRAM):   end;
959940     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
959941     *;
 
959942     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
959943     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
959944     if _ITER_ eq 32 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 32 then do;
959945     output;
MPRINT(EM_DIAGRAM):   output;
959946     stop;
MPRINT(EM_DIAGRAM):   stop;
959947     end;
MPRINT(EM_DIAGRAM):   end;
959948     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
959949     *;
959950     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
959951     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
959952     if _ITER_ eq 32 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 32 and _NAME_ eq "OVERALL" then do;
959953     output;
MPRINT(EM_DIAGRAM):   output;
959954     stop;
MPRINT(EM_DIAGRAM):   stop;
959955     end;
MPRINT(EM_DIAGRAM):   end;
959956     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 66 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959957     *;
MPRINT(EM_DIAGRAM):    *;
959958     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
959959     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
959959   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
959960     proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
959961     var _iter_ _aic_ _averr_ _misc_
959962     _vaverr_ _vmisc_
959963     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
959964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 865.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959965     title9;
MPRINT(EM_DIAGRAM):   title9;
959966     title10;
MPRINT(EM_DIAGRAM):   title10;
959967     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
959968     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959969     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
959970     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959971     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
959972     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959973     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
959974     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959975     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
959976     ;
MPRINT(EM_DIAGRAM):   ;
959977     data WORK.SAVEDS_AUTONEUR_2UH3C2I;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_2UH3C2I;
959978     set EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_ESTDS;
959979     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_2UH3C2I has 1 observations and 72
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959980     data EMWS8.AutoNeural40_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_BESTDS;
959981     set EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_ESTDS;
959982     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL40_BESTDS has 1 observations and 72
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959983     data WORK.BFITDS_AUTONEUR_2UH3C2I;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_2UH3C2I;
959984     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959985     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_2UH3C2I has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959986     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
959987     ;
MPRINT(EM_DIAGRAM):   ;
959988     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
959989     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
959990     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
959991     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
959992     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
959993     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
959994     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
959995     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
959996     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
959997     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
959998     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
959999     *;
MPRINT(EM_DIAGRAM):    *;
960000     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
960001     validdata=EMWS8.Meta3_VALIDATE
960002     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
960003     *;
MPRINT(EM_DIAGRAM):   *;
960004     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
960005     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
960006     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
960007     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
960008     target DepVar / level=NOMINAL id=DepVar
960009     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
960010     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960011     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
960012     ;
MPRINT(EM_DIAGRAM):   ;
960013     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960014     Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
960015     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
960016     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
960017     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
960018     *;
MPRINT(EM_DIAGRAM):   *;
960019     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
960020     *;
MPRINT(EM_DIAGRAM):   *;
960021     initial
960022     ;
MPRINT(EM_DIAGRAM):   initial ;
960023     *;
MPRINT(EM_DIAGRAM):   *;
960024     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960025     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
960025   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=55 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 33 observations and 59 variables.
MPRINT(EM_DIAGRAM):   *;
960026     prelim 16 outest=_anpre pretime=55 preiter=25
960027     tech = Default
960028     ;
960029     *;
960030     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960031     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
960031   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=894
maxiter=50 tech = Default;
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANEST has 73 observations and 59 variables.
NOTE: The data set WORK._ANFIT has 56 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
960032     train estiter=1 outest=_anest outfit=_anfit maxtime=894 maxiter=50
MPRINT(EM_DIAGRAM):   run;
960033     tech = Default;
960034     ;
960035     run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           8.13 seconds
      cpu time            8.08 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 866.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           8.14 seconds
      cpu time            8.09 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960036     *;
960037     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
960038     var _iter_ _aic_ _averr_ _misc_
960039     _vaverr_ _vmisc_
960040     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960041     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 867.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960042     *------------------------------------------------------------*;
960043     * Extract best iteration;
960044     ;
960045     *------------------------------------------------------------*;
960046     %global _iter;
960047     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
960048     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
960049     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
960050     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
960051     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
960052     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
960053     end;
MPRINT(EM_DIAGRAM):   end;
960054     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960055     *;
 
960056     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
960057     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
960058     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
960059     output;
MPRINT(EM_DIAGRAM):   output;
960060     stop;
MPRINT(EM_DIAGRAM):   stop;
960061     end;
MPRINT(EM_DIAGRAM):   end;
960062     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960063     *;
960064     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960065     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
960066     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
960067     output;
MPRINT(EM_DIAGRAM):   output;
960068     stop;
MPRINT(EM_DIAGRAM):   stop;
960069     end;
MPRINT(EM_DIAGRAM):   end;
960070     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960071     *;
MPRINT(EM_DIAGRAM):    *;
960072     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960073     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
960073   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
960074     proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
960075     var _iter_ _aic_ _averr_ _misc_
960076     _vaverr_ _vmisc_
960077     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960078     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 868.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960079     title9;
MPRINT(EM_DIAGRAM):   title9;
960080     title10;
MPRINT(EM_DIAGRAM):   title10;
960081     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960082     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960083     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960084     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
960085     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960086     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960087     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960088     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960089     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
960090     ;
MPRINT(EM_DIAGRAM):   ;
960091     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960092     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960093     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
960094     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
960095     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
960096     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
960097     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
960098     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
960099     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
960100     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
960101     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960102     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
960103     ;
MPRINT(EM_DIAGRAM):   ;
960104     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_ESTDS;
960105     set EMWS8.AutoNeural40_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_BESTDS;
960106     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960107     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960108     set WORK.BFITDS_AUTONEUR_2UH3C2I;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_2UH3C2I;
960109     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_2UH3C2I.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960110     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
960111     ;
MPRINT(EM_DIAGRAM):   ;
960112     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960113     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960114     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
960115     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
960116     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
960117     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
960118     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
960119     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960120     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
960121     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
960122     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960123     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960124     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960125     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960126     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960127     *;
MPRINT(EM_DIAGRAM):    *;
960128     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
960129     validdata=EMWS8.Meta3_VALIDATE
960130     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
960131     *;
MPRINT(EM_DIAGRAM):   *;
960132     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
960133     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
960134     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
960135     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
960136     target DepVar / level=NOMINAL id=DepVar
960137     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
960138     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960139     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
960140     ;
MPRINT(EM_DIAGRAM):   ;
960141     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960142     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
960143     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
960144     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960145     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
960146     ;
MPRINT(EM_DIAGRAM):   ;
960147     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960148     Hidden 4 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SINE;
960149     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
960150     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
960151     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
960152     *;
MPRINT(EM_DIAGRAM):   *;
960153     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
960154     *;
MPRINT(EM_DIAGRAM):   *;
960155     initial
960156     inest = EMWS8.AutoNeural40_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural40_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
960157     ;
MPRINT(EM_DIAGRAM):   ;
960158     *;
MPRINT(EM_DIAGRAM):   *;
960159     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960160     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
960160   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
960161     prelim 16 outest=_anpre pretime=55 preiter=25
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=55 preiter=25 tech =
Default inest = EMWS8.AutoNeural40_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 84 variables.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
MPRINT(EM_DIAGRAM):   *;
960162     tech = Default
960163     inest = EMWS8.AutoNeural40_ESTDS bylabel
960164     ;
960165     *;
960166     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960167     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
960167   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=50 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 122 observations and 84 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
960168     train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=50
MPRINT(EM_DIAGRAM):   run;
960169     tech = Default;
960170     ;
960171     run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           2.68 seconds
      cpu time            2.63 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 869.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.68 seconds
      cpu time            2.63 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960172     *;
960173     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
960174     var _iter_ _aic_ _averr_ _misc_
960175     _vaverr_ _vmisc_
960176     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960177     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 870.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960178     *------------------------------------------------------------*;
960179     * Extract best iteration;
960180     ;
960181     *------------------------------------------------------------*;
960182     %global _iter;
960183     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
960184     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
960185     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
960186     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
960187     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
960188     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
960189     end;
MPRINT(EM_DIAGRAM):   end;
960190     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960191     *;
 
960192     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
960193     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
960194     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
960195     output;
MPRINT(EM_DIAGRAM):   output;
960196     stop;
MPRINT(EM_DIAGRAM):   stop;
960197     end;
MPRINT(EM_DIAGRAM):   end;
960198     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 84 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960199     *;
960200     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960201     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
960202     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
960203     output;
MPRINT(EM_DIAGRAM):   output;
960204     stop;
MPRINT(EM_DIAGRAM):   stop;
960205     end;
MPRINT(EM_DIAGRAM):   end;
960206     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960207     *;
MPRINT(EM_DIAGRAM):    *;
960208     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960209     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
960209   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
960210     proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
960211     var _iter_ _aic_ _averr_ _misc_
960212     _vaverr_ _vmisc_
960213     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960214     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 871.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960215     title9;
MPRINT(EM_DIAGRAM):   title9;
960216     title10;
MPRINT(EM_DIAGRAM):   title10;
960217     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960218     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960219     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960220     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960221     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960222     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960223     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960224     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960225     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
960226     ;
MPRINT(EM_DIAGRAM):   ;
960227     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960228     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960229     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
960230     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
960231     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
960232     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
960233     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
960234     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960235     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
960236     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
960237     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960238     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
960239     ;
MPRINT(EM_DIAGRAM):   ;
960240     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_ESTDS;
960241     set EMWS8.AutoNeural40_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_BESTDS;
960242     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960243     *;
MPRINT(EM_DIAGRAM):    *;
960244     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
960245     validdata=EMWS8.Meta3_VALIDATE
960246     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
960247     *;
MPRINT(EM_DIAGRAM):   *;
960248     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
960249     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
960250     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
960251     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
960252     target DepVar / level=NOMINAL id=DepVar
960253     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
960254     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960255     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
960256     ;
MPRINT(EM_DIAGRAM):   ;
960257     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960258     Hidden 4 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SINE;
960259     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
960260     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
960261     Hidden 4 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SINE;
960262     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
960263     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
960264     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960265     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
960266     ;
MPRINT(EM_DIAGRAM):   ;
960267     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960268     Hidden 4 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=LOG;
960269     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
960270     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
960271     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
960272     *;
MPRINT(EM_DIAGRAM):   *;
960273     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
960274     *;
MPRINT(EM_DIAGRAM):   *;
960275     initial
960276     inest = EMWS8.AutoNeural40_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural40_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
960277     ;
MPRINT(EM_DIAGRAM):   ;
960278     *;
MPRINT(EM_DIAGRAM):   *;
960279     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960280     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
960280   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
960281     prelim 20 outest=_anpre pretime=44 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default inest = EMWS8.AutoNeural40_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 160 variables.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
MPRINT(EM_DIAGRAM):   *;
960282     tech = Default
960283     inest = EMWS8.AutoNeural40_ESTDS bylabel
960284     ;
960285     *;
960286     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960287     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
960287   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=891
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 160 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
960288     train estiter=1 outest=_anest outfit=_anfit maxtime=891 maxiter=50
MPRINT(EM_DIAGRAM):   run;
960289     tech = Default;
960290     ;
960291     run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           6.42 seconds
      cpu time            6.42 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 872.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           6.42 seconds
      cpu time            6.42 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960292     *;
960293     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
960294     var _iter_ _aic_ _averr_ _misc_
960295     _vaverr_ _vmisc_
960296     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960297     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 873.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960298     *------------------------------------------------------------*;
960299     * Extract best iteration;
960300     ;
960301     *------------------------------------------------------------*;
960302     %global _iter;
960303     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
960304     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
960305     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
960306     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
960307     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
960308     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
960309     end;
MPRINT(EM_DIAGRAM):   end;
960310     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960311     *;
 
960312     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
960313     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
960314     if _ITER_ eq 12 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 then do;
960315     output;
MPRINT(EM_DIAGRAM):   output;
960316     stop;
MPRINT(EM_DIAGRAM):   stop;
960317     end;
MPRINT(EM_DIAGRAM):   end;
960318     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 160
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960319     *;
960320     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960321     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
960322     if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
960323     output;
MPRINT(EM_DIAGRAM):   output;
960324     stop;
MPRINT(EM_DIAGRAM):   stop;
960325     end;
MPRINT(EM_DIAGRAM):   end;
960326     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960327     *;
MPRINT(EM_DIAGRAM):    *;
960328     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960329     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
960329   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
960330     proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
960331     var _iter_ _aic_ _averr_ _misc_
960332     _vaverr_ _vmisc_
960333     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 874.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960335     title9;
MPRINT(EM_DIAGRAM):   title9;
960336     title10;
MPRINT(EM_DIAGRAM):   title10;
960337     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960338     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960339     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960340     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960341     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960342     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960343     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960344     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960345     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
960346     ;
MPRINT(EM_DIAGRAM):   ;
960347     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960348     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960349     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
960350     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
960351     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
960352     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
960353     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
960354     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960355     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
960356     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
960357     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960358     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
960359     ;
MPRINT(EM_DIAGRAM):   ;
960360     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_ESTDS;
960361     set EMWS8.AutoNeural40_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_BESTDS;
960362     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960363     *;
MPRINT(EM_DIAGRAM):    *;
960364     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
960365     validdata=EMWS8.Meta3_VALIDATE
960366     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
960367     *;
MPRINT(EM_DIAGRAM):   *;
960368     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
960369     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
960370     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
960371     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
960372     target DepVar / level=NOMINAL id=DepVar
960373     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
960374     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960375     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
960376     ;
MPRINT(EM_DIAGRAM):   ;
960377     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960378     Hidden 4 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SINE;
960379     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
960380     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
960381     Hidden 4 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SINE;
960382     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
960383     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
960384     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960385     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
960386     ;
MPRINT(EM_DIAGRAM):   ;
960387     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960388     Hidden 4 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=SINE;
960389     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
960390     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
960391     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
960392     *;
MPRINT(EM_DIAGRAM):   *;
960393     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
960394     *;
MPRINT(EM_DIAGRAM):   *;
960395     initial
960396     inest = EMWS8.AutoNeural40_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural40_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
960397     ;
MPRINT(EM_DIAGRAM):   ;
960398     *;
MPRINT(EM_DIAGRAM):   *;
960399     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960400     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
960400   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
960401     prelim 20 outest=_anpre pretime=44 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default inest = EMWS8.AutoNeural40_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 160 variables.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
MPRINT(EM_DIAGRAM):   *;
960402     tech = Default
960403     inest = EMWS8.AutoNeural40_ESTDS bylabel
960404     ;
960405     *;
960406     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960407     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
960407   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=889
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 160 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
960408     train estiter=1 outest=_anest outfit=_anfit maxtime=889 maxiter=50
MPRINT(EM_DIAGRAM):   run;
960409     tech = Default;
960410     ;
960411     run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           5.63 seconds
      cpu time            5.61 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 875.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           5.63 seconds
      cpu time            5.61 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960412     *;
960413     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
960414     var _iter_ _aic_ _averr_ _misc_
960415     _vaverr_ _vmisc_
960416     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960417     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 876.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960418     *------------------------------------------------------------*;
960419     * Extract best iteration;
960420     ;
960421     *------------------------------------------------------------*;
960422     %global _iter;
960423     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
960424     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
960425     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
960426     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
960427     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
960428     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
960429     end;
MPRINT(EM_DIAGRAM):   end;
960430     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960431     *;
 
960432     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
960433     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
960434     if _ITER_ eq 28 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 28 then do;
960435     output;
MPRINT(EM_DIAGRAM):   output;
960436     stop;
MPRINT(EM_DIAGRAM):   stop;
960437     end;
MPRINT(EM_DIAGRAM):   end;
960438     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 160
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960439     *;
960440     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960441     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
960442     if _ITER_ eq 28 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 28 and _NAME_ eq "OVERALL" then do;
960443     output;
MPRINT(EM_DIAGRAM):   output;
960444     stop;
MPRINT(EM_DIAGRAM):   stop;
960445     end;
MPRINT(EM_DIAGRAM):   end;
960446     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960447     *;
MPRINT(EM_DIAGRAM):    *;
960448     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960449     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
960449   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
960450     proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
960451     var _iter_ _aic_ _averr_ _misc_
960452     _vaverr_ _vmisc_
960453     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960454     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 877.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960455     title9;
MPRINT(EM_DIAGRAM):   title9;
960456     title10;
MPRINT(EM_DIAGRAM):   title10;
960457     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960458     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960459     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960460     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960461     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960462     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960463     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960464     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960465     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
960466     ;
MPRINT(EM_DIAGRAM):   ;
960467     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960468     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960469     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
960470     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
960471     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
960472     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
960473     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
960474     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960475     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
960476     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
960477     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960478     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
960479     ;
MPRINT(EM_DIAGRAM):   ;
960480     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_ESTDS;
960481     set EMWS8.AutoNeural40_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_BESTDS;
960482     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960483     *;
MPRINT(EM_DIAGRAM):    *;
960484     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
960485     validdata=EMWS8.Meta3_VALIDATE
960486     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
960487     *;
MPRINT(EM_DIAGRAM):   *;
960488     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
960489     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
960490     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
960491     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
960492     target DepVar / level=NOMINAL id=DepVar
960493     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
960494     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960495     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
960496     ;
MPRINT(EM_DIAGRAM):   ;
960497     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960498     Hidden 4 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SINE;
960499     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
960500     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
960501     Hidden 4 / id = H1x2_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SINE;
960502     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
960503     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
960504     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960505     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
960506     ;
MPRINT(EM_DIAGRAM):   ;
960507     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960508     Hidden 4 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=SOFTMAX;
960509     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
960510     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
960511     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
960512     *;
MPRINT(EM_DIAGRAM):   *;
960513     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
960514     *;
MPRINT(EM_DIAGRAM):   *;
960515     initial
960516     inest = EMWS8.AutoNeural40_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural40_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
960517     ;
MPRINT(EM_DIAGRAM):   ;
960518     *;
MPRINT(EM_DIAGRAM):   *;
960519     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960520     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
960520   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
960521     prelim 20 outest=_anpre pretime=44 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default inest = EMWS8.AutoNeural40_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 151 variables.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
MPRINT(EM_DIAGRAM):   *;
960522     tech = Default
960523     inest = EMWS8.AutoNeural40_ESTDS bylabel
960524     ;
960525     *;
960526     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960527     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
960527   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=888
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 151 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
960528     train estiter=1 outest=_anest outfit=_anfit maxtime=888 maxiter=50
MPRINT(EM_DIAGRAM):   run;
960529     tech = Default;
960530     ;
960531     run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           6.35 seconds
      cpu time            6.35 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 878.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           6.36 seconds
      cpu time            6.36 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960532     *;
960533     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
960534     var _iter_ _aic_ _averr_ _misc_
960535     _vaverr_ _vmisc_
960536     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960537     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 879.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960538     *------------------------------------------------------------*;
960539     * Extract best iteration;
960540     ;
960541     *------------------------------------------------------------*;
960542     %global _iter;
960543     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
960544     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
960545     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
960546     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
960547     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
960548     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
960549     end;
MPRINT(EM_DIAGRAM):   end;
960550     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960551     *;
 
960552     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
960553     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
960554     if _ITER_ eq 42 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 42 then do;
960555     output;
MPRINT(EM_DIAGRAM):   output;
960556     stop;
MPRINT(EM_DIAGRAM):   stop;
960557     end;
MPRINT(EM_DIAGRAM):   end;
960558     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 43 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 151
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960559     *;
960560     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960561     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
960562     if _ITER_ eq 42 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 42 and _NAME_ eq "OVERALL" then do;
960563     output;
MPRINT(EM_DIAGRAM):   output;
960564     stop;
MPRINT(EM_DIAGRAM):   stop;
960565     end;
MPRINT(EM_DIAGRAM):   end;
960566     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 86 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960567     *;
MPRINT(EM_DIAGRAM):    *;
960568     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960569     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
960569   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
960570     proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
960571     var _iter_ _aic_ _averr_ _misc_
960572     _vaverr_ _vmisc_
960573     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960574     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 880.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960575     title9;
MPRINT(EM_DIAGRAM):   title9;
960576     title10;
MPRINT(EM_DIAGRAM):   title10;
960577     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960578     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960579     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960580     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960581     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
960582     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960583     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
960584     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960585     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
960586     ;
MPRINT(EM_DIAGRAM):   ;
960587     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960588     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960589     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
960590     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
960591     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
960592     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
960593     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
960594     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960595     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
960596     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
960597     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960598     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
960599     set WORK.SAVEDS_AUTONEUR_2UH3C2I;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_2UH3C2I;
960600     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_2UH3C2I.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960601     *;
MPRINT(EM_DIAGRAM):    *;
960602     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
960603     validdata=EMWS8.Meta3_VALIDATE
960604     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
960605     *;
MPRINT(EM_DIAGRAM):   *;
960606     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
960607     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
960608     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
960609     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
960610     target DepVar / level=NOMINAL id=DepVar
960611     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
960612     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960613     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
960614     ;
MPRINT(EM_DIAGRAM):   ;
960615     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960616     Hidden 4 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SINE;
960617     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
960618     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
960619     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
960620     *;
MPRINT(EM_DIAGRAM):   *;
960621     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
960622     *;
MPRINT(EM_DIAGRAM):   *;
960623     initial
960624     inest = EMWS8.AutoNeural40_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural40_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
960625     ;
MPRINT(EM_DIAGRAM):   ;
960626     *;
MPRINT(EM_DIAGRAM):   *;
960627     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960628     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
960628   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
960629     prelim 16 outest=_anpre pretime=55 preiter=25
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=55 preiter=25 tech =
Default inest = EMWS8.AutoNeural40_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 72 variables.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
MPRINT(EM_DIAGRAM):   *;
960630     tech = Default
960631     inest = EMWS8.AutoNeural40_ESTDS bylabel
960632     ;
960633     *;
960634     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960635     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
960635   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=886
maxiter=5 tech = Default;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 65 observations and 72 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
960636     train estiter=1 outest=_anest outfit=_anfit maxtime=886 maxiter=5
MPRINT(EM_DIAGRAM):   run;
960637     tech = Default;
960638     ;
960639     run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.92 seconds
      cpu time            0.93 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 881.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.92 seconds
      cpu time            0.93 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960640     *;
960641     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
960642     var _iter_ _aic_ _averr_ _misc_
960643     _vaverr_ _vmisc_
960644     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960645     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 882.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960646     *------------------------------------------------------------*;
960647     * Extract best iteration;
960648     ;
960649     *------------------------------------------------------------*;
960650     %global _iter;
960651     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
960652     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
960653     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
960654     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
960655     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
960656     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
960657     end;
MPRINT(EM_DIAGRAM):   end;
960658     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960659     *;
 
960660     data EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_ESTDS;
960661     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
960662     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
960663     output;
MPRINT(EM_DIAGRAM):   output;
960664     stop;
MPRINT(EM_DIAGRAM):   stop;
960665     end;
MPRINT(EM_DIAGRAM):   end;
960666     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
960667     *;
960668     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960669     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
960670     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
960671     output;
MPRINT(EM_DIAGRAM):   output;
960672     stop;
MPRINT(EM_DIAGRAM):   stop;
960673     end;
MPRINT(EM_DIAGRAM):   end;
960674     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960675     *;
MPRINT(EM_DIAGRAM):    *;
960676     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
960677     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
960677   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
960678     proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_OUTFIT noobs;
960679     var _iter_ _aic_ _averr_ _misc_
960680     _vaverr_ _vmisc_
960681     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
960682     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 883.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960683     title9;
MPRINT(EM_DIAGRAM):   title9;
960684     title10;
MPRINT(EM_DIAGRAM):   title10;
960685     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
960686     ;
MPRINT(EM_DIAGRAM):   ;
960687     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960688     set EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT;
960689     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
960690     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
960691     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
960692     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
960693     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
960694     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960695     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_HISTORY;
960696     set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY EMWS8.AutoNeural40_OUTFIT;
960697     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL40_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960698     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
960699     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
960699   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
960700     proc print data=EMWS8.AutoNeural40_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_HISTORY noobs;
960701     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
960702     _vaverr_ _vmisc_
960703     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
960704     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: The PROCEDURE PRINT printed page 884.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960705     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
960706     set EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY;
960707     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
960708     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
960709     else neurons=4;
MPRINT(EM_DIAGRAM):   else neurons=4;
960710     label neurons="%sysfunc(sasmsg(sashelp.dmine,
960710   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
960711     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL40_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 1 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
960712     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
960713     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
960713   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
960714     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
960714   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
960714   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
960715     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
960716     var _func_ _averr_
960717     _vaverr_
960718     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
960719     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
960720     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 885.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960721     title8;
MPRINT(EM_DIAGRAM):   title8;
960722     title9;
MPRINT(EM_DIAGRAM):   title9;
960723     title10;
MPRINT(EM_DIAGRAM):   title10;
960724     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960725     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
960726     ;
MPRINT(EM_DIAGRAM):   ;
960727     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960728     *;
MPRINT(EM_DIAGRAM):   *;
960729     proc neural data=EM_AutoNeural40 dmdbcat=WORK.AutoNeural40_DMDB
960730     validdata=EMWS8.Meta3_VALIDATE
960731     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural40
dmdbcat=WORK.AutoNeural40_DMDB validdata=EMWS8.Meta3_VALIDATE ;
960732     *;
MPRINT(EM_DIAGRAM):   *;
960733     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
960734     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
960735     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
960736     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
960737     target DepVar / level=NOMINAL id=DepVar
960738     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
960739     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960740     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
960741     ;
MPRINT(EM_DIAGRAM):   ;
960742     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960743     Hidden 4 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SINE;
960744     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
960745     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
960746     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
960747     *;
MPRINT(EM_DIAGRAM):   *;
960748     initial inest= EMWS8.AutoNeural40_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural40_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL40_ESTDS has 1 observations and 72 variables.
960749     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
960750     code
960750   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\SCO
960750   ! RECODE.sas"
960751     group=AutoNeural40
960752     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\SCORECODE.sas"
 group=AutoNeural40 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\SCORECODE.sas
      opened.
960753     ;
MPRINT(EM_DIAGRAM):   ;
960754     code
960754   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\RES
960754   ! IDUALSCORECODE.sas"
960755     group=AutoNeural40
960756     residual
960757     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\RESIDUALSCOREC
ODE.sas" group=AutoNeural40 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\RESIDUALSCOREC
      ODE.sas opened.
960758     ;
MPRINT(EM_DIAGRAM):   ;
960759     score data=EMWS8.Meta3_TRAIN out=_NULL_
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
960760     outfit=WORK.FIT1
960761     role=TRAIN
960762     outkey=EMWS8.AutoNeural40_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta3_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural40_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL40_OUTKEY has 28 observations and 8
      variables.
NOTE: The data set EMWS8.META3_TRAIN has . observations and 45 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
960763     score data=EMWS8.Meta3_VALIDATE out=_NULL_
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
960764     outfit=WORK.FIT2
960765     outkey=EMWS8.AutoNeural40_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta3_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural40_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL40_OUTKEY has 28 observations and 8
      variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
960766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL40 has 2374 observations and 10 variables.
NOTE: The data set EMWS8.META3_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
 
960767     data EMWS8.AutoNeural40_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_OUTFIT;
960768     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
960769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960770     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960771     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
960772     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
960773     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
960773   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
960774     set EMWS8.AutoNeural40_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_ESTDS;
960775     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 64 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960776     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
960777     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
960778     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 64 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
960779     proc transpose data=tempweight out=EMWS8.AutoNeural40_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural40_WEIGHTS;
960780     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
960781     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL40_WEIGHTS has 62 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
960782     data EMWS8.AutoNeural40_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_WEIGHTS;
960783     set EMWS8.AutoNeural40_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_WEIGHTS;
960784     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
960785     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
960786     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
960787     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
960788     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
960788   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
960788   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
960788   ! NOQUOTE))" WEIGHT =
960789        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
960790     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
960791     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 62 observations read from the data set
      EMWS8.AUTONEURAL40_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL40_WEIGHTS has 57 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
960792     * restore printing options;
960793     ;
960794     title10;
MPRINT(EM_DIAGRAM):   title10;
960795     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
960796     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
960797     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
960798     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
960799     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
960800     *;
960801     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
960802     delete EM_AutoNeural40;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural40;
960803     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL40 (memtype=DATA).
960804     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
960805     data EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_HISTORY;
960806     set EMWS8.AutoNeural40_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_HISTORY;
960807     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
960808     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
960808   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
960809     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
960810     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS8.AUTONEURAL40_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL40_HISTORY has 11 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                20.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0IUXTYD
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0IUXTYD new;
MPRINT(EM_DIAGRAM):   run;
960912     filename emflow
960912   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
960913     *------------------------------------------------------------*;
960914     * AutoNeural40: Scoring DATA data;
960915     *------------------------------------------------------------*;
960916     data EMWS8.AutoNeural40_TRAIN
960917     / view=EMWS8.AutoNeural40_TRAIN
960918     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_TRAIN / view=EMWS8.AutoNeural40_TRAIN ;
960919     set EMWS8.Meta3_TRAIN
960920     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
960921     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas.
960922    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
960923    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
960924    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
960925    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
960926    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
960927    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
960928    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
960929    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
960930    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
960931    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
960932    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
960933    +LENGTH _WARN_ $4
960934    +      F_DepVar  $ 12
960935    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
960936    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
960937    +
960938    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
960939    +
960940    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
960941    +
960942    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
960943    +
960944    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
960945    +
960946    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
960947    +
960948    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
960949    +
960950    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
960951    +
960952    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
960953    +
960954    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
960955    +
960956    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
960957    +
960958    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
960959    +
960960    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
960961    +
960962    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
960963    +
960964    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
960965    +
960966    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
960967    +
960968    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
960969    +
960970    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
960971    +
960972    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
960973    +
960974    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
960975    +
960976    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
960977    +
960978    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
960979    +
960980    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
960981    +
960982    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
960983    +
960984    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
960985    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
960986    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
960987    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
960988    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
960989    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
960990    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
960991    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
960992    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
960993    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
960994    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
960995    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
960996    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
960997    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
960998    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
960999    +end;
MPRINT(EM_DIAGRAM):   end;
961000    +else do;
MPRINT(EM_DIAGRAM):   else do;
961001    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
961002    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
961003    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
961004    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
961005    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
961006    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
961007    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
961008    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
961009    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961010    +         end;
MPRINT(EM_DIAGRAM):   end;
961011    +         else do;
MPRINT(EM_DIAGRAM):   else do;
961012    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
961013    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
961014    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961015    +            end;
MPRINT(EM_DIAGRAM):   end;
961016    +         end;
MPRINT(EM_DIAGRAM):   end;
961017    +      end;
MPRINT(EM_DIAGRAM):   end;
961018    +      else do;
MPRINT(EM_DIAGRAM):   else do;
961019    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
961020    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
961021    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961022    +         end;
MPRINT(EM_DIAGRAM):   end;
961023    +      end;
MPRINT(EM_DIAGRAM):   end;
961024    +   end;
MPRINT(EM_DIAGRAM):   end;
961025    +   else do;
MPRINT(EM_DIAGRAM):   else do;
961026    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
961027    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
961028    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961029    +      end;
MPRINT(EM_DIAGRAM):   end;
961030    +      else do;
MPRINT(EM_DIAGRAM):   else do;
961031    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
961032    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
961033    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
961034    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
961035    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
961036    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961037    +         end;
MPRINT(EM_DIAGRAM):   end;
961038    +      end;
MPRINT(EM_DIAGRAM):   end;
961039    +   end;
MPRINT(EM_DIAGRAM):   end;
961040    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
961041    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
961042    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
961043    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
961044    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
961045    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
961046    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
961047    +   end;
MPRINT(EM_DIAGRAM):   end;
961048    +end;
MPRINT(EM_DIAGRAM):   end;
961049    +
961050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961051    +*** Checking missing input Interval
961052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
961053    +
961054    +IF NMISS(
961055    +   AcceptedCmpTotal ,
961056    +   Frq ,
961057    +   Mnt ,
961058    +   MntMeatProducts ,
961059    +   NumCatalogPurchases ,
961060    +   NumDealsPurchases ,
961061    +   NumWebVisitsMonth ,
961062    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
961063    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
961064    +
961065    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
961066    +END;
MPRINT(EM_DIAGRAM):   END;
961067    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961068    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
961069    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961070    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
961071    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
961072    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
961073    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
961074    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
961075    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
961076    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
961077    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
961078    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
961079    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
961080    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
961081    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
961082    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
961083    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
961084    +END;
MPRINT(EM_DIAGRAM):   END;
961085    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
961086    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
961087    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
961088    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
961089    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
961090    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
961091    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
961092    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
961093    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
961094    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
961095    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
961096    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
961097    +   ELSE S_NumCatalogPurchases
961098    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
961099    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
961100    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
961101    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
961102    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
961103    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
961104    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
961105    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
961106    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
961107    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
961108    +END;
MPRINT(EM_DIAGRAM):   END;
961109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961110    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
961111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961112    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961113    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
961114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961115    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
961116    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
961117    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
961118    +          +      0.2338265945616 * S_MntMeatProducts
961119    +          +     0.01564313414142 * S_NumCatalogPurchases
961120    +          +    -0.07464304384577 * S_NumDealsPurchases
961121    +          +    -0.08299095200051 * S_NumWebVisitsMonth
961122    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 *
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 *
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 *
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
961123    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
961124    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
961125    +          +     -0.3893643428589 * S_MntMeatProducts
961126    +          +    -0.11487225011852 * S_NumCatalogPurchases
961127    +          +       0.001237145136 * S_NumDealsPurchases
961128    +          +    -0.04234500703321 * S_NumWebVisitsMonth
961129    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 *
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 *
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 *
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
961130    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
961131    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
961132    +          +    -0.27963474874984 * S_MntMeatProducts
961133    +          +     0.01939450840376 * S_NumCatalogPurchases
961134    +          +    -0.03907394757592 * S_NumDealsPurchases
961135    +          +     0.06752842740103 * S_NumWebVisitsMonth
961136    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 *
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 *
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 *
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
961137    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
961138    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
961139    +          +     0.09842717305515 * S_MntMeatProducts
961140    +          +     0.48040050668836 * S_NumCatalogPurchases
961141    +          +     0.55911507039756 * S_NumDealsPurchases
961142    +          +     0.35441361757916 * S_NumWebVisitsMonth
961143    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 *
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 *
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 *
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
961144    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
961145    +          +     0.13423943689575 * Marital_StatusMarried
961146    +          +    -0.01496857872487 * Marital_StatusSingle
961147    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced +
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle +
0.09065620914015 * Marital_StatusTogether ;
961148    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
961149    +          +     0.03005244373637 * Marital_StatusMarried
961150    +          +    -0.06891231360799 * Marital_StatusSingle
961151    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced +
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle +
0.03916911436548 * Marital_StatusTogether ;
961152    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
961153    +          +     0.01694145364157 * Marital_StatusMarried
961154    +          +    -0.05183794192194 * Marital_StatusSingle
961155    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced +
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle +
0.03543146366331 * Marital_StatusTogether ;
961156    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
961157    +          +     0.44185773223966 * Marital_StatusMarried
961158    +          +     -0.6351733171702 * Marital_StatusSingle
961159    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced +
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle +
0.63280583005707 * Marital_StatusTogether ;
961160    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
961161    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
961162    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
961163    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
961164    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
961165    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
961166    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
961167    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
961168    +END;
MPRINT(EM_DIAGRAM):   END;
961169    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
961170    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
961171    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
961172    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
961173    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
961174    +END;
MPRINT(EM_DIAGRAM):   END;
961175    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961176    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
961177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961178    +
961179    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
961180    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
961181    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
961182    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
961183    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
961184    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
961185    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
961186    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
961187    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
961188    +end;
MPRINT(EM_DIAGRAM):   end;
961189    +else do;
MPRINT(EM_DIAGRAM):   else do;
961190    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
961191    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
961192    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
961193    +   end;
MPRINT(EM_DIAGRAM):   end;
961194    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
961195    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
961196    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
961197    +   end;
MPRINT(EM_DIAGRAM):   end;
961198    +   else do;
MPRINT(EM_DIAGRAM):   else do;
961199    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
961200    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
961201    +   end;
MPRINT(EM_DIAGRAM):   end;
961202    +end;
MPRINT(EM_DIAGRAM):   end;
961203    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
961204    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
961205    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 +
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
961206    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
961207    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
961208    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
961209    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
961210    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
961211    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
961212    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
961213    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
961214    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
961215    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
961216    +END;
MPRINT(EM_DIAGRAM):   END;
961217    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
961218    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
961219    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
961220    +END;
MPRINT(EM_DIAGRAM):   END;
961221    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
961222    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
961223    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
961224    +END;
MPRINT(EM_DIAGRAM):   END;
961225    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
961226    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
961227    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
961228    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
961229    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
961230    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
961231    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
961232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961233    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
961234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961235    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
961236    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
961237    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
961238    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
961239    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
961240    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
961241    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
961242    +END;
MPRINT(EM_DIAGRAM):   END;
961243    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
961244    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
961245    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
961246    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
961247     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL40_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
961248     quit;
961249     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
961250     filename emflow
961250   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
961251     *------------------------------------------------------------*;
961252     * AutoNeural40: Scoring VALIDATE data;
961253     *------------------------------------------------------------*;
961254     data EMWS8.AutoNeural40_VALIDATE
961255     / view=EMWS8.AutoNeural40_VALIDATE
961256     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_VALIDATE / view=EMWS8.AutoNeural40_VALIDATE ;
961257     set EMWS8.Meta3_VALIDATE
961258     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
961259     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas.
961260    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
961261    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
961262    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
961263    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
961264    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
961265    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
961266    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
961267    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
961268    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
961269    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
961270    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
961271    +LENGTH _WARN_ $4
961272    +      F_DepVar  $ 12
961273    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
961274    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
961275    +
961276    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
961277    +
961278    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
961279    +
961280    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
961281    +
961282    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
961283    +
961284    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
961285    +
961286    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
961287    +
961288    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
961289    +
961290    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
961291    +
961292    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
961293    +
961294    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
961295    +
961296    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
961297    +
961298    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
961299    +
961300    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
961301    +
961302    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
961303    +
961304    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
961305    +
961306    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
961307    +
961308    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
961309    +
961310    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
961311    +
961312    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
961313    +
961314    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
961315    +
961316    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
961317    +
961318    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
961319    +
961320    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
961321    +
961322    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
961323    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
961324    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
961325    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
961326    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
961327    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
961328    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
961329    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
961330    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
961331    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
961332    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
961333    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
961334    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
961335    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
961336    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
961337    +end;
MPRINT(EM_DIAGRAM):   end;
961338    +else do;
MPRINT(EM_DIAGRAM):   else do;
961339    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
961340    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
961341    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
961342    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
961343    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
961344    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
961345    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
961346    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
961347    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961348    +         end;
MPRINT(EM_DIAGRAM):   end;
961349    +         else do;
MPRINT(EM_DIAGRAM):   else do;
961350    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
961351    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
961352    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961353    +            end;
MPRINT(EM_DIAGRAM):   end;
961354    +         end;
MPRINT(EM_DIAGRAM):   end;
961355    +      end;
MPRINT(EM_DIAGRAM):   end;
961356    +      else do;
MPRINT(EM_DIAGRAM):   else do;
961357    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
961358    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
961359    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961360    +         end;
MPRINT(EM_DIAGRAM):   end;
961361    +      end;
MPRINT(EM_DIAGRAM):   end;
961362    +   end;
MPRINT(EM_DIAGRAM):   end;
961363    +   else do;
MPRINT(EM_DIAGRAM):   else do;
961364    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
961365    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
961366    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961367    +      end;
MPRINT(EM_DIAGRAM):   end;
961368    +      else do;
MPRINT(EM_DIAGRAM):   else do;
961369    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
961370    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
961371    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
961372    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
961373    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
961374    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
961375    +         end;
MPRINT(EM_DIAGRAM):   end;
961376    +      end;
MPRINT(EM_DIAGRAM):   end;
961377    +   end;
MPRINT(EM_DIAGRAM):   end;
961378    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
961379    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
961380    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
961381    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
961382    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
961383    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
961384    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
961385    +   end;
MPRINT(EM_DIAGRAM):   end;
961386    +end;
MPRINT(EM_DIAGRAM):   end;
961387    +
961388    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961389    +*** Checking missing input Interval
961390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
961391    +
961392    +IF NMISS(
961393    +   AcceptedCmpTotal ,
961394    +   Frq ,
961395    +   Mnt ,
961396    +   MntMeatProducts ,
961397    +   NumCatalogPurchases ,
961398    +   NumDealsPurchases ,
961399    +   NumWebVisitsMonth ,
961400    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts ,
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
961401    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
961402    +
961403    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
961404    +END;
MPRINT(EM_DIAGRAM):   END;
961405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961406    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
961407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961408    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
961409    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
961410    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
961411    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
961412    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
961413    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
961414    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
961415    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
961416    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
961417    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
961418    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
961419    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
961420    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
961421    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
961422    +END;
MPRINT(EM_DIAGRAM):   END;
961423    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
961424    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
961425    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
961426    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
961427    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
961428    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
961429    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
961430    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
961431    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
961432    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
961433    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
961434    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
961435    +   ELSE S_NumCatalogPurchases
961436    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
961437    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
961438    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
961439    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
961440    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
961441    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
961442    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
961443    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
961444    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
961445    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
961446    +END;
MPRINT(EM_DIAGRAM):   END;
961447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961448    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
961449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961451    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
961452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961453    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
961454    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
961455    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
961456    +          +      0.2338265945616 * S_MntMeatProducts
961457    +          +     0.01564313414142 * S_NumCatalogPurchases
961458    +          +    -0.07464304384577 * S_NumDealsPurchases
961459    +          +    -0.08299095200051 * S_NumWebVisitsMonth
961460    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 *
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 *
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 *
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
961461    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
961462    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
961463    +          +     -0.3893643428589 * S_MntMeatProducts
961464    +          +    -0.11487225011852 * S_NumCatalogPurchases
961465    +          +       0.001237145136 * S_NumDealsPurchases
961466    +          +    -0.04234500703321 * S_NumWebVisitsMonth
961467    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 *
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 *
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 *
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
961468    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
961469    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
961470    +          +    -0.27963474874984 * S_MntMeatProducts
961471    +          +     0.01939450840376 * S_NumCatalogPurchases
961472    +          +    -0.03907394757592 * S_NumDealsPurchases
961473    +          +     0.06752842740103 * S_NumWebVisitsMonth
961474    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 *
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 *
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 *
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
961475    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
961476    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
961477    +          +     0.09842717305515 * S_MntMeatProducts
961478    +          +     0.48040050668836 * S_NumCatalogPurchases
961479    +          +     0.55911507039756 * S_NumDealsPurchases
961480    +          +     0.35441361757916 * S_NumWebVisitsMonth
961481    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 *
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 *
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 *
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
961482    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
961483    +          +     0.13423943689575 * Marital_StatusMarried
961484    +          +    -0.01496857872487 * Marital_StatusSingle
961485    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced +
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle +
0.09065620914015 * Marital_StatusTogether ;
961486    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
961487    +          +     0.03005244373637 * Marital_StatusMarried
961488    +          +    -0.06891231360799 * Marital_StatusSingle
961489    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced +
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle +
0.03916911436548 * Marital_StatusTogether ;
961490    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
961491    +          +     0.01694145364157 * Marital_StatusMarried
961492    +          +    -0.05183794192194 * Marital_StatusSingle
961493    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced +
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle +
0.03543146366331 * Marital_StatusTogether ;
961494    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
961495    +          +     0.44185773223966 * Marital_StatusMarried
961496    +          +     -0.6351733171702 * Marital_StatusSingle
961497    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced +
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle +
0.63280583005707 * Marital_StatusTogether ;
961498    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
961499    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
961500    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
961501    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
961502    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
961503    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
961504    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
961505    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
961506    +END;
MPRINT(EM_DIAGRAM):   END;
961507    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
961508    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
961509    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
961510    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
961511    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
961512    +END;
MPRINT(EM_DIAGRAM):   END;
961513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961514    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
961515    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961516    +
961517    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
961518    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
961519    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
961520    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
961521    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
961522    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
961523    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
961524    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
961525    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
961526    +end;
MPRINT(EM_DIAGRAM):   end;
961527    +else do;
MPRINT(EM_DIAGRAM):   else do;
961528    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
961529    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
961530    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
961531    +   end;
MPRINT(EM_DIAGRAM):   end;
961532    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
961533    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
961534    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
961535    +   end;
MPRINT(EM_DIAGRAM):   end;
961536    +   else do;
MPRINT(EM_DIAGRAM):   else do;
961537    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
961538    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
961539    +   end;
MPRINT(EM_DIAGRAM):   end;
961540    +end;
MPRINT(EM_DIAGRAM):   end;
961541    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
961542    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
961543    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 +
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
961544    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
961545    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
961546    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
961547    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
961548    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
961549    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
961550    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
961551    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
961552    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
961553    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
961554    +END;
MPRINT(EM_DIAGRAM):   END;
961555    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
961556    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
961557    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
961558    +END;
MPRINT(EM_DIAGRAM):   END;
961559    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
961560    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
961561    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
961562    +END;
MPRINT(EM_DIAGRAM):   END;
961563    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
961564    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
961565    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
961566    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
961567    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
961568    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
961569    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
961570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961571    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
961572    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
961573    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
961574    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
961575    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
961576    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
961577    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
961578    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
961579    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
961580    +END;
MPRINT(EM_DIAGRAM):   END;
961581    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
961582    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
961583    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
961584    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
961585     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL40_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
961586     quit;
961587     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
961588     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
961589     * AutoNeural40: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Computing metadata for TRAIN data;
961590     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural40_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural40_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural40_TRAIN out=WORK.M1HY3RL5
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HY3RL5;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1HY3RL5(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HY3RL5;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1HY3RL5;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2ZMRMBN NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZMRMBN;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZMRMBN;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2S970Y3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZMRMBN;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZMRMBN;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZMRMBN;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZMRMBN;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZMRMBN;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural40";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
961902     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
961903     set EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMINFO;
961904     where DATA='AutoNeural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural40' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
961905     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
      WHERE (DATA='AutoNeural40') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961906     data EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_EMINFO;
961907     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
961908     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
961909     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
961913     run;
961914     data EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMINFO;
961915     set EMWS8.AutoNeural40_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMINFO WORK.MODELTEMP_INFO;
961916     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961917     proc sort data = EMWS8.AutoNeural40_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural40_EMINFO NOTHREADS;
961918     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
961919     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961920     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
961921     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
961922     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
961923     proc sort data = EMWS8.AutoNeural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
961924     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
961925     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961926     data EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMINFO;
961927     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
961928     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
961929     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL40_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961930     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
961931     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
961932     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
961933     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.AUTONEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                20.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1WJK4B0
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1WJK4B0 new;
MPRINT(EM_DIAGRAM):   run;
961957     proc sort data=EMWS8.AutoNeural40_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural40_OUTFIT nodupkey;
961958     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
961959     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL40_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL40_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961960     data EMWS8.AutoNeural40_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMOUTFIT(rename=(_NAME_=TARGET));
961961     set EMWS8.AutoNeural40_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_OUTFIT(where=(_NAME_ eq 'OVERALL'));
961962     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
961963     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
961964     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
961965     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL40_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
961966     data EMWS8.AutoNeural40_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_EMOUTFIT;
961967     set EMWS8.AutoNeural40_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMOUTFIT;
961968     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
961969     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
961969   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
961970     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
961971     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961972     proc sort data=EMWS8.AutoNeural40_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural40_EMREPORTFIT nothreads;
961973     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
961974     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL40_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL40_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961975     %let _EMwarndup = 0;
961976     %let _EMtargetdup =;
961977     %let _EMASEtargetdup =;
961978     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
961979     set EMWS8.AutoNeural40_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMOUTFIT;
961980     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
961981     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
961982     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
961983     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
961984     end;
MPRINT(EM_DIAGRAM):   end;
961985     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL40_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961986     proc sort data=EMWS8.Meta3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta3_CMeta_TRAIN out=WORK.SUBSETINMETA;
961987     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
961988     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
961989     proc sort data=EMWS8.AutoNeural40_VariableSet out=WORK.SUBSETVARSET(keep=NAME
961989   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
961990     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
961991     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961992     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
961993     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
961994     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
961995     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
961996     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
961997     set EMWS8.AutoNeural40_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_CMeta_TRAIN;
961998     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
961998   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
961999     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL40_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
962000     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
962001     set EMWS8.AutoNeural40_TRAIN(keep=
962002     F_DepVar
962003     I_DepVar
962004     P_DepVar0
962005     P_DepVar1
962006     R_DepVar0
962007     R_DepVar1
962008     U_DepVar
962009     _WARN_
962010     DepVar
962011     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
962012     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL40_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural40_3G3DQT7 nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural40_3G3DQT7;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural40_3G3DQT7(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural40_3G3DQT7;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural40_3G3DQT7;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 3.2816244966737E-26 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
966278     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
966279     set EMWS8.AutoNeural40_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_CMeta_TRAIN;
966280     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
966280   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
966281     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL40_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
966282     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
966283     set EMWS8.AutoNeural40_VALIDATE(keep=
966284     F_DepVar
966285     I_DepVar
966286     P_DepVar0
966287     P_DepVar1
966288     R_DepVar0
966289     R_DepVar1
966290     U_DepVar
966291     _WARN_
966292     DepVar
966293     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
966294     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META3_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL40_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural40_38DS2ZM nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural40_38DS2ZM;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural40_38DS2ZM(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMCLASSIFICATION WORK.AutoNeural40_38DS2ZM;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural40_38DS2ZM;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 6.2112531426616E-27 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
970569     %let _cn = %sysfunc(getoption(CENTER));
970570     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
970571     proc print data=EMWS8.AutoNeural40_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_EMREPORTFIT noobs label;
970572     var STAT LABEL TRAIN
970573     VALIDATE
970574     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
970575     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
970576     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
970577     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
970578     run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL40_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 886.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
970579     title10;
MPRINT(EM_DIAGRAM):   title10;
970580     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
970581     proc sort data=EMWS8.AutoNeural40_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural40_EMCLASSIFICATION nothreads;
970582     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
970583     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL40_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL40_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
970584     %let _cn = %sysfunc(getoption(CENTER));
970585     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
970586     proc print data=EMWS8.AutoNeural40_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_EMCLASSIFICATION noobs label;
970587     var from into pct_row pct_col count percent
970588     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
970589     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
970590     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
970591     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
970592     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
970593     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
970594     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
970595     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
970596     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
970597     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
970598     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
970599     run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL40_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 887.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
970600     title9;
MPRINT(EM_DIAGRAM):   title9;
970601     title10;
MPRINT(EM_DIAGRAM):   title10;
970602     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
970603     %let _cn = %sysfunc(getoption(CENTER));
970604     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
970605     data EMWS8.AutoNeural40_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMEVENTREPORT;
970606     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
970606   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
970607     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
970607   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
970607   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
970607   ! FALSEEVENT
970608     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
970608   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
970608   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
970609        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
970610     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
970611     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
970612     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
970613     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
970614     set EMWS8.AutoNeural40_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMEVENTREPORT;
970615     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL40_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL40_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
970616     proc print data=EMWS8.AutoNeural40_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_EMEVENTREPORT noobs label;
970617     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
970618     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
970619     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
970620     run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL40_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 888.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
970621     title10;
MPRINT(EM_DIAGRAM):   title10;
970622     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
970623     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
970624     modify AutoNeural40_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural40_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
970625     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
970626     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
970626   ! ;
MPRINT(EM_DIAGRAM):   run;
970627     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL40_EMRANK.DATA.
970628     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
970629     %let _cn = %sysfunc(getoption(CENTER));
970630     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
970631     proc print data=EMWS8.AutoNeural40_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_EMRANK label noobs;
970632     var
970633     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
970634     by
970635     notsorted DATAROLE
970636     notsorted TARGET
970637     notsorted TARGETLABEL
970638     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
970639     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
970640     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
970641     run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL40_EMRANK.
NOTE: The PROCEDURE PRINT printed page 889.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
970642     title10;
MPRINT(EM_DIAGRAM):   title10;
970643     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
970644     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
970645     modify AutoNeural40_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural40_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
970646     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
970646   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
970647     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
970647   ! ;
MPRINT(EM_DIAGRAM):   run;
970648     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL40_EMSCOREDIST.DATA.
970649     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural40_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
