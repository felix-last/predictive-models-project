MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.22 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.22 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2LN0AEQ 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2LN0AEQ new;
MPRINT(EM_DIAGRAM):   run;
3323744    filename emflow
3323744  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3323745    *------------------------------------------------------------*;
3323746    * AutoNeural40: Scoring DATA data;
3323747    *------------------------------------------------------------*;
3323748    data EMWS8.AutoNeural40_TRAIN
3323749    / view=EMWS8.AutoNeural40_TRAIN
3323750    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_TRAIN / view=EMWS8.AutoNeural40_TRAIN ;
3323751    set EMWS8.Meta3_TRAIN
3323752    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
3323753    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas.
3323754   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3323755   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3323756   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3323757   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3323758   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3323759   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3323760   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3323761   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3323762   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3323763   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3323764   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3323765   +LENGTH _WARN_ $4
3323766   +      F_DepVar  $ 12
3323767   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3323768   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3323769   +
3323770   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3323771   +
3323772   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3323773   +
3323774   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3323775   +
3323776   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3323777   +
3323778   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3323779   +
3323780   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3323781   +
3323782   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3323783   +
3323784   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3323785   +
3323786   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3323787   +
3323788   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3323789   +
3323790   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3323791   +
3323792   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3323793   +
3323794   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3323795   +
3323796   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3323797   +
3323798   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3323799   +
3323800   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3323801   +
3323802   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3323803   +
3323804   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3323805   +
3323806   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3323807   +
3323808   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3323809   +
3323810   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3323811   +
3323812   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3323813   +
3323814   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3323815   +
3323816   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3323817   +
3323818   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3323819   +
3323820   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3323821   +
3323822   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3323823   +
3323824   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3323825   +
3323826   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3323827   +
3323828   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3323829   +
3323830   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
3323831   +
3323832   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
3323833   +
3323834   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
3323835   +
3323836   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
3323837   +
3323838   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3323839   +
3323840   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3323841   +
3323842   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3323843   +
3323844   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3323845   +
3323846   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3323847   +
3323848   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3323849   +
3323850   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3323851   +
3323852   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3323853   +
3323854   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3323855   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3323856   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3323857   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3323858   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3323859   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323860   +end;
MPRINT(EM_DIAGRAM):   end;
3323861   +else do;
MPRINT(EM_DIAGRAM):   else do;
3323862   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3323863   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3323864   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3323865   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3323866   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3323867   +   end;
MPRINT(EM_DIAGRAM):   end;
3323868   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3323869   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3323870   +   end;
MPRINT(EM_DIAGRAM):   end;
3323871   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3323872   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3323873   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3323874   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323875   +   end;
MPRINT(EM_DIAGRAM):   end;
3323876   +end;
MPRINT(EM_DIAGRAM):   end;
3323877   +
3323878   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3323879   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3323880   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3323881   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3323882   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3323883   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323884   +end;
MPRINT(EM_DIAGRAM):   end;
3323885   +else do;
MPRINT(EM_DIAGRAM):   else do;
3323886   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3323887   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3323888   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3323889   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3323890   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3323891   +   end;
MPRINT(EM_DIAGRAM):   end;
3323892   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3323893   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3323894   +   end;
MPRINT(EM_DIAGRAM):   end;
3323895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3323896   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3323897   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3323898   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323899   +   end;
MPRINT(EM_DIAGRAM):   end;
3323900   +end;
MPRINT(EM_DIAGRAM):   end;
3323901   +
3323902   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3323903   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3323904   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3323905   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3323906   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3323907   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323908   +end;
MPRINT(EM_DIAGRAM):   end;
3323909   +else do;
MPRINT(EM_DIAGRAM):   else do;
3323910   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3323911   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3323912   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3323913   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3323914   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3323915   +   end;
MPRINT(EM_DIAGRAM):   end;
3323916   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3323917   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3323918   +   end;
MPRINT(EM_DIAGRAM):   end;
3323919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3323920   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3323921   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3323922   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323923   +   end;
MPRINT(EM_DIAGRAM):   end;
3323924   +end;
MPRINT(EM_DIAGRAM):   end;
3323925   +
3323926   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3323927   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3323928   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3323929   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3323930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3323931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323932   +end;
MPRINT(EM_DIAGRAM):   end;
3323933   +else do;
MPRINT(EM_DIAGRAM):   else do;
3323934   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3323935   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3323936   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3323937   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3323938   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3323939   +   end;
MPRINT(EM_DIAGRAM):   end;
3323940   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3323941   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3323942   +   end;
MPRINT(EM_DIAGRAM):   end;
3323943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3323944   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3323945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3323946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323947   +   end;
MPRINT(EM_DIAGRAM):   end;
3323948   +end;
MPRINT(EM_DIAGRAM):   end;
3323949   +
3323950   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3323951   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3323952   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3323953   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3323954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3323955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323956   +end;
MPRINT(EM_DIAGRAM):   end;
3323957   +else do;
MPRINT(EM_DIAGRAM):   else do;
3323958   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3323959   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3323960   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3323961   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3323962   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3323963   +   end;
MPRINT(EM_DIAGRAM):   end;
3323964   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3323965   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3323966   +   end;
MPRINT(EM_DIAGRAM):   end;
3323967   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3323968   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3323969   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3323970   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323971   +   end;
MPRINT(EM_DIAGRAM):   end;
3323972   +end;
MPRINT(EM_DIAGRAM):   end;
3323973   +
3323974   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3323975   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3323976   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3323977   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3323978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3323979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323980   +end;
MPRINT(EM_DIAGRAM):   end;
3323981   +else do;
MPRINT(EM_DIAGRAM):   else do;
3323982   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3323983   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3323984   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3323985   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3323986   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3323987   +   end;
MPRINT(EM_DIAGRAM):   end;
3323988   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3323989   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3323990   +   end;
MPRINT(EM_DIAGRAM):   end;
3323991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3323992   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3323993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3323994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3323995   +   end;
MPRINT(EM_DIAGRAM):   end;
3323996   +end;
MPRINT(EM_DIAGRAM):   end;
3323997   +
3323998   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3323999   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3324000   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3324001   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3324002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324004   +end;
MPRINT(EM_DIAGRAM):   end;
3324005   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324006   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3324007   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3324008   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324009   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3324010   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3324011   +   end;
MPRINT(EM_DIAGRAM):   end;
3324012   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3324013   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3324014   +   end;
MPRINT(EM_DIAGRAM):   end;
3324015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324016   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3324017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324019   +   end;
MPRINT(EM_DIAGRAM):   end;
3324020   +end;
MPRINT(EM_DIAGRAM):   end;
3324021   +
3324022   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3324023   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3324024   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3324025   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3324026   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3324027   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3324028   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3324029   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3324030   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3324031   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3324032   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3324033   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3324034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324036   +end;
MPRINT(EM_DIAGRAM):   end;
3324037   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324038   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3324039   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3324040   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324041   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3324042   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3324043   +   end;
MPRINT(EM_DIAGRAM):   end;
3324044   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3324045   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3324046   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3324047   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3324048   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3324049   +   end;
MPRINT(EM_DIAGRAM):   end;
3324050   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3324051   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3324052   +   end;
MPRINT(EM_DIAGRAM):   end;
3324053   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3324054   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3324055   +   end;
MPRINT(EM_DIAGRAM):   end;
3324056   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3324057   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3324058   +   end;
MPRINT(EM_DIAGRAM):   end;
3324059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324060   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3324061   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3324062   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3324063   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3324064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324066   +   end;
MPRINT(EM_DIAGRAM):   end;
3324067   +end;
MPRINT(EM_DIAGRAM):   end;
3324068   +
3324069   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3324070   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3324071   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3324072   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3324073   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3324074   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3324075   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3324076   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3324077   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3324078   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3324079   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3324080   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3324081   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3324082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324084   +end;
MPRINT(EM_DIAGRAM):   end;
3324085   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324086   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3324087   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3324088   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324089   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3324090   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3324091   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3324092   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3324093   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3324094   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324095   +         end;
MPRINT(EM_DIAGRAM):   end;
3324096   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3324097   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3324098   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3324099   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324100   +            end;
MPRINT(EM_DIAGRAM):   end;
3324101   +         end;
MPRINT(EM_DIAGRAM):   end;
3324102   +      end;
MPRINT(EM_DIAGRAM):   end;
3324103   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3324104   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3324105   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3324106   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324107   +         end;
MPRINT(EM_DIAGRAM):   end;
3324108   +      end;
MPRINT(EM_DIAGRAM):   end;
3324109   +   end;
MPRINT(EM_DIAGRAM):   end;
3324110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324111   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3324112   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3324113   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324114   +      end;
MPRINT(EM_DIAGRAM):   end;
3324115   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3324116   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3324117   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3324118   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3324119   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3324120   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3324121   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324122   +         end;
MPRINT(EM_DIAGRAM):   end;
3324123   +      end;
MPRINT(EM_DIAGRAM):   end;
3324124   +   end;
MPRINT(EM_DIAGRAM):   end;
3324125   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3324126   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3324127   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3324128   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3324129   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3324130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324132   +   end;
MPRINT(EM_DIAGRAM):   end;
3324133   +end;
MPRINT(EM_DIAGRAM):   end;
3324134   +
3324135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324136   +*** Checking missing input Interval
3324137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3324138   +
3324139   +IF NMISS(
3324140   +   AcceptedCmpTotal ,
3324141   +   Age ,
3324142   +   Frq ,
3324143   +   Income ,
3324144   +   Kidhome ,
3324145   +   MntFishProducts ,
3324146   +   MntFruits ,
3324147   +   MntGoldProds ,
3324148   +   MntSweetProducts ,
3324149   +   MonthsAsCustomer ,
3324150   +   NumDealsPurchases ,
3324151   +   NumWebVisitsMonth ,
3324152   +   RFMstat ,
3324153   +   RMntFrq ,
3324154   +   Recency ,
3324155   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3324156   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3324157   +
3324158   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324159   +END;
MPRINT(EM_DIAGRAM):   END;
3324160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324161   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
3324162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324163   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3324164   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3324165   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3324166   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3324167   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3324168   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3324169   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3324170   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3324171   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3324172   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3324173   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3324174   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3324175   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3324176   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3324177   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3324178   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3324179   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3324180   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3324181   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3324182   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3324183   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3324184   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3324185   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3324186   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3324187   +END;
MPRINT(EM_DIAGRAM):   END;
3324188   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3324189   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3324190   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3324191   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3324192   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3324193   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3324194   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3324195   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3324196   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3324197   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3324198   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3324199   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3324200   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3324201   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3324202   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3324203   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3324204   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3324205   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3324206   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3324207   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3324208   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3324209   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3324210   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3324211   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3324212   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3324213   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3324214   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3324215   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3324216   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3324217   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3324218   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3324219   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3324220   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3324221   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3324222   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3324223   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3324224   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3324225   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3324226   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3324227   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3324228   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3324229   +END;
MPRINT(EM_DIAGRAM):   END;
3324230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324231   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
3324232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324233   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324234   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
3324235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324237   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
3324238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324239   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3324240   +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
3324241   +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
3324242   +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
3324243   +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
3324244   +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
3324245   +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
3324246   +          +     -0.6473961304074 * S_MonthsAsCustomer
3324247   +          +     0.68960902951007 * S_NumDealsPurchases
3324248   +          +    -0.03600585273268 * S_NumWebVisitsMonth
3324249   +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
3324250   +        S_RMntFrq  +    -0.37413569649471 * S_Recency
3324251   +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
3324252   +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
3324253   +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
3324254   +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
3324255   +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
3324256   +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
3324257   +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
3324258   +          +    -0.70674764548268 * S_MonthsAsCustomer
3324259   +          +     0.03761139203619 * S_NumDealsPurchases
3324260   +          +    -0.69359662485747 * S_NumWebVisitsMonth
3324261   +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
3324262   +        S_RMntFrq  +    -1.62720417424557 * S_Recency
3324263   +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
3324264   +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
3324265   +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
3324266   +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
3324267   +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
3324268   +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
3324269   +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
3324270   +          +    -0.47559913836984 * S_MonthsAsCustomer
3324271   +          +    -0.26961781245749 * S_NumDealsPurchases
3324272   +          +    -0.67017962977412 * S_NumWebVisitsMonth
3324273   +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
3324274   +        S_RMntFrq  +     0.67120737584665 * S_Recency
3324275   +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
3324276   +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
3324277   +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
3324278   +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
3324279   +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
3324280   +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
3324281   +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
3324282   +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
3324283   +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
3324284   +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
3324285   +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
3324286   +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
3324287   +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
3324288   +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
3324289   +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
3324290   +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
3324291   +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
3324292   +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
3324293   +        EducationGraduation  +     0.46172475127934 * EducationMaster
3324294   +          +    -0.18858032329482 * Marital_StatusDivorced
3324295   +          +     0.16067956508072 * Marital_StatusMarried
3324296   +          +    -0.90926406046237 * Marital_StatusSingle
3324297   +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
3324298   +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
3324299   +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
3324300   +        EducationGraduation  +    -0.74629011053947 * EducationMaster
3324301   +          +     0.71998738170149 * Marital_StatusDivorced
3324302   +          +    -1.53543515752013 * Marital_StatusMarried
3324303   +          +     0.44068743694663 * Marital_StatusSingle
3324304   +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
3324305   +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
3324306   +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
3324307   +        EducationGraduation  +     0.11252156068047 * EducationMaster
3324308   +          +    -0.31683932084863 * Marital_StatusDivorced
3324309   +          +     0.17674162427585 * Marital_StatusMarried
3324310   +          +    -0.67064017247711 * Marital_StatusSingle
3324311   +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
3324312   +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
3324313   +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
3324314   +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
3324315   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
3324316   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
3324317   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3324318   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
3324319   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
3324320   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
3324321   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
3324322   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
3324323   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
3324324   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
3324325   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
3324326   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
3324327   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
3324328   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
3324329   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
3324330   +END;
MPRINT(EM_DIAGRAM):   END;
3324331   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3324332   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
3324333   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
3324334   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
3324335   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
3324336   +END;
MPRINT(EM_DIAGRAM):   END;
3324337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324338   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3324339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324340   +
3324341   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3324342   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3324343   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3324344   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3324345   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3324346   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324347   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3324348   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3324349   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3324350   +end;
MPRINT(EM_DIAGRAM):   end;
3324351   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324352   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3324353   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3324354   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3324355   +   end;
MPRINT(EM_DIAGRAM):   end;
3324356   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3324357   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3324358   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3324359   +   end;
MPRINT(EM_DIAGRAM):   end;
3324360   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324361   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3324362   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3324363   +   end;
MPRINT(EM_DIAGRAM):   end;
3324364   +end;
MPRINT(EM_DIAGRAM):   end;
3324365   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3324366   +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
3324367   +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
3324368   +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
3324369   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3324370   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3324371   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3324372   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3324373   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3324374   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3324375   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3324376   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3324377   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3324378   +END;
MPRINT(EM_DIAGRAM):   END;
3324379   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3324380   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3324381   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3324382   +END;
MPRINT(EM_DIAGRAM):   END;
3324383   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3324384   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3324385   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3324386   +END;
MPRINT(EM_DIAGRAM):   END;
3324387   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3324388   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3324389   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3324390   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3324391   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3324392   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3324393   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3324394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324395   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3324396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324397   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3324398   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3324399   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3324400   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3324401   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3324402   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3324403   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3324404   +END;
MPRINT(EM_DIAGRAM):   END;
3324405   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3324406   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3324407   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3324408   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3324409    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL40_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3324410    quit;
3324411    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3324412    filename emflow
3324412  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3324413    *------------------------------------------------------------*;
3324414    * AutoNeural40: Scoring VALIDATE data;
3324415    *------------------------------------------------------------*;
3324416    data EMWS8.AutoNeural40_VALIDATE
3324417    / view=EMWS8.AutoNeural40_VALIDATE
3324418    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_VALIDATE / view=EMWS8.AutoNeural40_VALIDATE ;
3324419    set EMWS8.Meta3_VALIDATE
3324420    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
3324421    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMFLOWSCORE.sas.
3324422   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3324423   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3324424   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3324425   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3324426   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3324427   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3324428   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3324429   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3324430   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3324431   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3324432   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3324433   +LENGTH _WARN_ $4
3324434   +      F_DepVar  $ 12
3324435   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3324436   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3324437   +
3324438   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3324439   +
3324440   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3324441   +
3324442   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3324443   +
3324444   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3324445   +
3324446   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3324447   +
3324448   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3324449   +
3324450   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3324451   +
3324452   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3324453   +
3324454   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3324455   +
3324456   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3324457   +
3324458   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3324459   +
3324460   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3324461   +
3324462   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3324463   +
3324464   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3324465   +
3324466   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3324467   +
3324468   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3324469   +
3324470   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3324471   +
3324472   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3324473   +
3324474   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3324475   +
3324476   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3324477   +
3324478   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3324479   +
3324480   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3324481   +
3324482   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3324483   +
3324484   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3324485   +
3324486   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3324487   +
3324488   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3324489   +
3324490   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3324491   +
3324492   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3324493   +
3324494   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3324495   +
3324496   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3324497   +
3324498   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
3324499   +
3324500   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
3324501   +
3324502   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
3324503   +
3324504   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
3324505   +
3324506   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3324507   +
3324508   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3324509   +
3324510   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3324511   +
3324512   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3324513   +
3324514   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3324515   +
3324516   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3324517   +
3324518   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3324519   +
3324520   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3324521   +
3324522   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3324523   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3324524   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3324525   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3324526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324528   +end;
MPRINT(EM_DIAGRAM):   end;
3324529   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3324531   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3324532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324533   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3324534   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3324535   +   end;
MPRINT(EM_DIAGRAM):   end;
3324536   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3324537   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3324538   +   end;
MPRINT(EM_DIAGRAM):   end;
3324539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324540   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3324541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324543   +   end;
MPRINT(EM_DIAGRAM):   end;
3324544   +end;
MPRINT(EM_DIAGRAM):   end;
3324545   +
3324546   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3324547   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3324548   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3324549   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3324550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324552   +end;
MPRINT(EM_DIAGRAM):   end;
3324553   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3324555   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3324556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324557   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3324558   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3324559   +   end;
MPRINT(EM_DIAGRAM):   end;
3324560   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3324561   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3324562   +   end;
MPRINT(EM_DIAGRAM):   end;
3324563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324564   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3324565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324567   +   end;
MPRINT(EM_DIAGRAM):   end;
3324568   +end;
MPRINT(EM_DIAGRAM):   end;
3324569   +
3324570   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3324571   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3324572   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3324573   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3324574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324576   +end;
MPRINT(EM_DIAGRAM):   end;
3324577   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3324579   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3324580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3324582   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3324583   +   end;
MPRINT(EM_DIAGRAM):   end;
3324584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3324585   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3324586   +   end;
MPRINT(EM_DIAGRAM):   end;
3324587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324588   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3324589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324591   +   end;
MPRINT(EM_DIAGRAM):   end;
3324592   +end;
MPRINT(EM_DIAGRAM):   end;
3324593   +
3324594   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3324595   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3324596   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3324597   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3324598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324600   +end;
MPRINT(EM_DIAGRAM):   end;
3324601   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3324603   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3324604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3324606   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3324607   +   end;
MPRINT(EM_DIAGRAM):   end;
3324608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3324609   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3324610   +   end;
MPRINT(EM_DIAGRAM):   end;
3324611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324612   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3324613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324615   +   end;
MPRINT(EM_DIAGRAM):   end;
3324616   +end;
MPRINT(EM_DIAGRAM):   end;
3324617   +
3324618   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3324619   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3324620   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3324621   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3324622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324624   +end;
MPRINT(EM_DIAGRAM):   end;
3324625   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3324627   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3324628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324629   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3324630   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3324631   +   end;
MPRINT(EM_DIAGRAM):   end;
3324632   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3324633   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3324634   +   end;
MPRINT(EM_DIAGRAM):   end;
3324635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324636   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3324637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324639   +   end;
MPRINT(EM_DIAGRAM):   end;
3324640   +end;
MPRINT(EM_DIAGRAM):   end;
3324641   +
3324642   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3324643   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3324644   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3324645   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3324646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324648   +end;
MPRINT(EM_DIAGRAM):   end;
3324649   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3324651   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3324652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324653   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3324654   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3324655   +   end;
MPRINT(EM_DIAGRAM):   end;
3324656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3324657   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3324658   +   end;
MPRINT(EM_DIAGRAM):   end;
3324659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324660   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3324661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324663   +   end;
MPRINT(EM_DIAGRAM):   end;
3324664   +end;
MPRINT(EM_DIAGRAM):   end;
3324665   +
3324666   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3324667   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3324668   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3324669   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3324670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324672   +end;
MPRINT(EM_DIAGRAM):   end;
3324673   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3324675   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3324676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324677   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3324678   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3324679   +   end;
MPRINT(EM_DIAGRAM):   end;
3324680   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3324681   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3324682   +   end;
MPRINT(EM_DIAGRAM):   end;
3324683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324684   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3324685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324687   +   end;
MPRINT(EM_DIAGRAM):   end;
3324688   +end;
MPRINT(EM_DIAGRAM):   end;
3324689   +
3324690   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3324691   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3324692   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3324693   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3324694   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3324695   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3324696   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3324697   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3324698   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3324699   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3324700   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3324701   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3324702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324704   +end;
MPRINT(EM_DIAGRAM):   end;
3324705   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324706   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3324707   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3324708   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324709   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3324710   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3324711   +   end;
MPRINT(EM_DIAGRAM):   end;
3324712   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3324713   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3324714   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3324715   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3324716   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3324717   +   end;
MPRINT(EM_DIAGRAM):   end;
3324718   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3324719   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3324720   +   end;
MPRINT(EM_DIAGRAM):   end;
3324721   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3324722   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3324723   +   end;
MPRINT(EM_DIAGRAM):   end;
3324724   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3324725   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3324726   +   end;
MPRINT(EM_DIAGRAM):   end;
3324727   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324728   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3324729   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3324730   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3324731   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3324732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324734   +   end;
MPRINT(EM_DIAGRAM):   end;
3324735   +end;
MPRINT(EM_DIAGRAM):   end;
3324736   +
3324737   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3324738   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3324739   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3324740   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3324741   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3324742   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3324743   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3324744   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3324745   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3324746   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3324747   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3324748   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3324749   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3324750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3324751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324752   +end;
MPRINT(EM_DIAGRAM):   end;
3324753   +else do;
MPRINT(EM_DIAGRAM):   else do;
3324754   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3324755   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3324756   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3324757   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3324758   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3324759   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3324760   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3324761   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3324762   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324763   +         end;
MPRINT(EM_DIAGRAM):   end;
3324764   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3324765   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3324766   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3324767   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324768   +            end;
MPRINT(EM_DIAGRAM):   end;
3324769   +         end;
MPRINT(EM_DIAGRAM):   end;
3324770   +      end;
MPRINT(EM_DIAGRAM):   end;
3324771   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3324772   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3324773   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3324774   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324775   +         end;
MPRINT(EM_DIAGRAM):   end;
3324776   +      end;
MPRINT(EM_DIAGRAM):   end;
3324777   +   end;
MPRINT(EM_DIAGRAM):   end;
3324778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3324779   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3324780   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3324781   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324782   +      end;
MPRINT(EM_DIAGRAM):   end;
3324783   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3324784   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3324785   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3324786   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3324787   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3324788   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3324789   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3324790   +         end;
MPRINT(EM_DIAGRAM):   end;
3324791   +      end;
MPRINT(EM_DIAGRAM):   end;
3324792   +   end;
MPRINT(EM_DIAGRAM):   end;
3324793   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3324794   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3324795   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3324796   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3324797   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3324798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3324799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324800   +   end;
MPRINT(EM_DIAGRAM):   end;
3324801   +end;
MPRINT(EM_DIAGRAM):   end;
3324802   +
3324803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324804   +*** Checking missing input Interval
3324805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3324806   +
3324807   +IF NMISS(
3324808   +   AcceptedCmpTotal ,
3324809   +   Age ,
3324810   +   Frq ,
3324811   +   Income ,
3324812   +   Kidhome ,
3324813   +   MntFishProducts ,
3324814   +   MntFruits ,
3324815   +   MntGoldProds ,
3324816   +   MntSweetProducts ,
3324817   +   MonthsAsCustomer ,
3324818   +   NumDealsPurchases ,
3324819   +   NumWebVisitsMonth ,
3324820   +   RFMstat ,
3324821   +   RMntFrq ,
3324822   +   Recency ,
3324823   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3324824   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3324825   +
3324826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3324827   +END;
MPRINT(EM_DIAGRAM):   END;
3324828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324829   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
3324830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324831   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3324832   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3324833   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3324834   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3324835   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3324836   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3324837   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3324838   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3324839   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3324840   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3324841   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3324842   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3324843   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3324844   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3324845   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3324846   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3324847   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3324848   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3324849   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3324850   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3324851   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3324852   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3324853   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3324854   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3324855   +END;
MPRINT(EM_DIAGRAM):   END;
3324856   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3324857   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3324858   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3324859   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3324860   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3324861   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3324862   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3324863   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3324864   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3324865   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3324866   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3324867   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3324868   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3324869   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3324870   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3324871   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3324872   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3324873   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3324874   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3324875   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3324876   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3324877   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3324878   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3324879   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3324880   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3324881   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3324882   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3324883   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3324884   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3324885   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3324886   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3324887   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3324888   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3324889   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3324890   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3324891   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3324892   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3324893   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3324894   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3324895   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3324896   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3324897   +END;
MPRINT(EM_DIAGRAM):   END;
3324898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324899   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
3324900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324902   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
3324903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324905   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
3324906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3324907   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3324908   +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
3324909   +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
3324910   +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
3324911   +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
3324912   +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
3324913   +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
3324914   +          +     -0.6473961304074 * S_MonthsAsCustomer
3324915   +          +     0.68960902951007 * S_NumDealsPurchases
3324916   +          +    -0.03600585273268 * S_NumWebVisitsMonth
3324917   +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
3324918   +        S_RMntFrq  +    -0.37413569649471 * S_Recency
3324919   +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
3324920   +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
3324921   +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
3324922   +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
3324923   +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
3324924   +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
3324925   +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
3324926   +          +    -0.70674764548268 * S_MonthsAsCustomer
3324927   +          +     0.03761139203619 * S_NumDealsPurchases
3324928   +          +    -0.69359662485747 * S_NumWebVisitsMonth
3324929   +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
3324930   +        S_RMntFrq  +    -1.62720417424557 * S_Recency
3324931   +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
3324932   +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
3324933   +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
3324934   +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
3324935   +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
3324936   +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
3324937   +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
3324938   +          +    -0.47559913836984 * S_MonthsAsCustomer
3324939   +          +    -0.26961781245749 * S_NumDealsPurchases
3324940   +          +    -0.67017962977412 * S_NumWebVisitsMonth
3324941   +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
3324942   +        S_RMntFrq  +     0.67120737584665 * S_Recency
3324943   +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
3324944   +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
3324945   +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
3324946   +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
3324947   +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
3324948   +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
3324949   +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
3324950   +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
3324951   +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
3324952   +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
3324953   +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
3324954   +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
3324955   +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
3324956   +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
3324957   +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
3324958   +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
3324959   +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
3324960   +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
3324961   +        EducationGraduation  +     0.46172475127934 * EducationMaster
3324962   +          +    -0.18858032329482 * Marital_StatusDivorced
3324963   +          +     0.16067956508072 * Marital_StatusMarried
3324964   +          +    -0.90926406046237 * Marital_StatusSingle
3324965   +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
3324966   +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
3324967   +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
3324968   +        EducationGraduation  +    -0.74629011053947 * EducationMaster
3324969   +          +     0.71998738170149 * Marital_StatusDivorced
3324970   +          +    -1.53543515752013 * Marital_StatusMarried
3324971   +          +     0.44068743694663 * Marital_StatusSingle
3324972   +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
3324973   +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
3324974   +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
3324975   +        EducationGraduation  +     0.11252156068047 * EducationMaster
3324976   +          +    -0.31683932084863 * Marital_StatusDivorced
3324977   +          +     0.17674162427585 * Marital_StatusMarried
3324978   +          +    -0.67064017247711 * Marital_StatusSingle
3324979   +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
3324980   +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
3324981   +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
3324982   +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
3324983   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
3324984   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
3324985   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3324986   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
3324987   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
3324988   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
3324989   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
3324990   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
3324991   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
3324992   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
3324993   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
3324994   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
3324995   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
3324996   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
3324997   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
3324998   +END;
MPRINT(EM_DIAGRAM):   END;
3324999   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3325000   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
3325001   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
3325002   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
3325003   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
3325004   +END;
MPRINT(EM_DIAGRAM):   END;
3325005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3325006   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3325007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3325008   +
3325009   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3325010   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3325011   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3325012   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3325013   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3325014   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3325015   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3325016   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3325017   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3325018   +end;
MPRINT(EM_DIAGRAM):   end;
3325019   +else do;
MPRINT(EM_DIAGRAM):   else do;
3325020   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3325021   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3325022   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3325023   +   end;
MPRINT(EM_DIAGRAM):   end;
3325024   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3325025   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3325026   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3325027   +   end;
MPRINT(EM_DIAGRAM):   end;
3325028   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3325029   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3325030   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3325031   +   end;
MPRINT(EM_DIAGRAM):   end;
3325032   +end;
MPRINT(EM_DIAGRAM):   end;
3325033   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3325034   +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
3325035   +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
3325036   +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
3325037   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3325038   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3325039   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3325040   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3325041   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3325042   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3325043   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3325044   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3325045   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3325046   +END;
MPRINT(EM_DIAGRAM):   END;
3325047   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3325048   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3325049   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3325050   +END;
MPRINT(EM_DIAGRAM):   END;
3325051   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3325052   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3325053   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3325054   +END;
MPRINT(EM_DIAGRAM):   END;
3325055   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3325056   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3325057   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3325058   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3325059   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3325060   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3325061   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3325062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3325063   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3325064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3325065   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3325066   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3325067   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3325068   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3325069   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3325070   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3325071   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3325072   +END;
MPRINT(EM_DIAGRAM):   END;
3325073   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3325074   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3325075   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3325076   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3325077    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL40_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3325078    quit;
3325079    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3325080    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3325081    * AutoNeural40: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Computing metadata for TRAIN data;
3325082    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural40_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural40_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural40_TRAIN out=WORK.M2CC0LDJ 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CC0LDJ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CC0LDJ(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2CC0LDJ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2CC0LDJ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M08JQVTR NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08JQVTR;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M08JQVTR;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RLUDBX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M08JQVTR;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08JQVTR;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M08JQVTR;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08JQVTR;
MPRINT(EMADVISECOLUMNS):   set WORK.M08JQVTR;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural40";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural40";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural40: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3325394    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3325395    set EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMINFO;
3325396    where DATA='AutoNeural40' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural40' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
3325397    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
      WHERE (DATA='AutoNeural40') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3325398    data EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural40_EMINFO;
3325399    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3325400    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3325401    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
3325405    run;
3325406    data EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMINFO;
3325407    set EMWS8.AutoNeural40_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural40_EMINFO WORK.MODELTEMP_INFO;
3325408    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3325409    proc sort data = EMWS8.AutoNeural40_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural40_EMINFO NOTHREADS;
3325410    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3325411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL40_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3325412    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3325413    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3325414    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3325415    proc sort data = EMWS8.AutoNeural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural40_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3325416    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3325417    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL40_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3325418    data EMWS8.AutoNeural40_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural40_EMINFO;
3325419    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3325420    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3325421    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL40_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3325422    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3325423    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3325424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3325425    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

NOTE: View EMWS8.AUTONEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
