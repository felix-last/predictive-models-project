MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.50 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                16.50 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3GFVRA8 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3GFVRA8 new;
MPRINT(EM_DIAGRAM):   run;
384268     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
384269     set EMWS8.AutoNeural10_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTKEY;
384270     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
384271     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set EMWS8.AUTONEURAL10_OUTKEY.
NOTE: The data set WORK.OUTKEY has 15 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

384272     filename emflow
384272   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
384273     *------------------------------------------------------------*;
384274     * AutoNeural10: Scoring DATA data;
384275     *------------------------------------------------------------*;
384276     data EMWS8.AutoNeural10_TRAIN
384277     / view=EMWS8.AutoNeural10_TRAIN
384278     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_TRAIN / view=EMWS8.AutoNeural10_TRAIN ;
384279     set EMWS8.Meta_TRAIN
384280     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
384281     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
384282    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
384283    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
384284    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
384285    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
384286    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
384287    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
384288    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
384289    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
384290    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
384291    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
384292    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
384293    +LENGTH _WARN_ $4
384294    +      F_DepVar  $ 12
384295    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
384296    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
384297    +
384298    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
384299    +
384300    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
384301    +
384302    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
384303    +
384304    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
384305    +
384306    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
384307    +
384308    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
384309    +
384310    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
384311    +
384312    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
384313    +
384314    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
384315    +
384316    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
384317    +
384318    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
384319    +
384320    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
384321    +
384322    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
384323    +
384324    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
384325    +
384326    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
384327    +
384328    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
384329    +
384330    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
384331    +
384332    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
384333    +
384334    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
384335    +
384336    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
384337    +
384338    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
384339    +
384340    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
384341    +
384342    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
384343    +
384344    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
384345    +
384346    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
384347    +
384348    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
384349    +
384350    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
384351    +
384352    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
384353    +
384354    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
384355    +
384356    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
384357    +
384358    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
384359    +
384360    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
384361    +
384362    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
384363    +
384364    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
384365    +
384366    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
384367    +
384368    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
384369    +
384370    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
384371    +
384372    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
384373    +
384374    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
384375    +
384376    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
384377    +
384378    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
384379    +
384380    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
384381    +
384382    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
384383    +
384384    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
384385    +
384386    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
384387    +
384388    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
384389    +
384390    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
384391    +
384392    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
384393    +
384394    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
384395    +
384396    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
384397    +
384398    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
384399    +
384400    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
384401    +
384402    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
384403    +
384404    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
384405    +
384406    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
384407    +
384408    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
384409    +
384410    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
384411    +
384412    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
384413    +
384414    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
384415    +
384416    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
384417    +
384418    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
384419    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
384420    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
384421    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
384422    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
384423    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384424    +end;
MPRINT(EM_DIAGRAM):   end;
384425    +else do;
MPRINT(EM_DIAGRAM):   else do;
384426    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
384427    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
384428    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
384429    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
384430    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
384431    +   end;
MPRINT(EM_DIAGRAM):   end;
384432    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
384433    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
384434    +   end;
MPRINT(EM_DIAGRAM):   end;
384435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
384436    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
384437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
384438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384439    +   end;
MPRINT(EM_DIAGRAM):   end;
384440    +end;
MPRINT(EM_DIAGRAM):   end;
384441    +
384442    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
384443    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
384444    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
384445    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
384446    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
384447    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384448    +end;
MPRINT(EM_DIAGRAM):   end;
384449    +else do;
MPRINT(EM_DIAGRAM):   else do;
384450    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
384451    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
384452    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
384453    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
384454    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
384455    +   end;
MPRINT(EM_DIAGRAM):   end;
384456    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
384457    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
384458    +   end;
MPRINT(EM_DIAGRAM):   end;
384459    +   else do;
MPRINT(EM_DIAGRAM):   else do;
384460    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
384461    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
384462    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384463    +   end;
MPRINT(EM_DIAGRAM):   end;
384464    +end;
MPRINT(EM_DIAGRAM):   end;
384465    +
384466    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
384467    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
384468    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
384469    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
384470    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
384471    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384472    +end;
MPRINT(EM_DIAGRAM):   end;
384473    +else do;
MPRINT(EM_DIAGRAM):   else do;
384474    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
384475    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
384476    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
384477    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
384478    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
384479    +   end;
MPRINT(EM_DIAGRAM):   end;
384480    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
384481    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
384482    +   end;
MPRINT(EM_DIAGRAM):   end;
384483    +   else do;
MPRINT(EM_DIAGRAM):   else do;
384484    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
384485    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
384486    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384487    +   end;
MPRINT(EM_DIAGRAM):   end;
384488    +end;
MPRINT(EM_DIAGRAM):   end;
384489    +
384490    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
384491    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
384492    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
384493    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
384494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
384495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384496    +end;
MPRINT(EM_DIAGRAM):   end;
384497    +else do;
MPRINT(EM_DIAGRAM):   else do;
384498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
384499    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
384500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
384501    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
384502    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
384503    +   end;
MPRINT(EM_DIAGRAM):   end;
384504    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
384505    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
384506    +   end;
MPRINT(EM_DIAGRAM):   end;
384507    +   else do;
MPRINT(EM_DIAGRAM):   else do;
384508    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
384509    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
384510    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384511    +   end;
MPRINT(EM_DIAGRAM):   end;
384512    +end;
MPRINT(EM_DIAGRAM):   end;
384513    +
384514    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
384515    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
384516    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
384517    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
384518    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
384519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384520    +end;
MPRINT(EM_DIAGRAM):   end;
384521    +else do;
MPRINT(EM_DIAGRAM):   else do;
384522    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
384523    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
384524    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
384525    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
384526    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
384527    +   end;
MPRINT(EM_DIAGRAM):   end;
384528    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
384529    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
384530    +   end;
MPRINT(EM_DIAGRAM):   end;
384531    +   else do;
MPRINT(EM_DIAGRAM):   else do;
384532    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
384533    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
384534    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384535    +   end;
MPRINT(EM_DIAGRAM):   end;
384536    +end;
MPRINT(EM_DIAGRAM):   end;
384537    +
384538    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
384539    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
384540    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
384541    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
384542    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
384543    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384544    +end;
MPRINT(EM_DIAGRAM):   end;
384545    +else do;
MPRINT(EM_DIAGRAM):   else do;
384546    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
384547    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
384548    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
384549    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
384550    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
384551    +   end;
MPRINT(EM_DIAGRAM):   end;
384552    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
384553    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
384554    +   end;
MPRINT(EM_DIAGRAM):   end;
384555    +   else do;
MPRINT(EM_DIAGRAM):   else do;
384556    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
384557    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
384558    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384559    +   end;
MPRINT(EM_DIAGRAM):   end;
384560    +end;
MPRINT(EM_DIAGRAM):   end;
384561    +
384562    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
384563    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
384564    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
384565    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
384566    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
384567    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384568    +end;
MPRINT(EM_DIAGRAM):   end;
384569    +else do;
MPRINT(EM_DIAGRAM):   else do;
384570    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
384571    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
384572    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
384573    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
384574    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
384575    +   end;
MPRINT(EM_DIAGRAM):   end;
384576    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
384577    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
384578    +   end;
MPRINT(EM_DIAGRAM):   end;
384579    +   else do;
MPRINT(EM_DIAGRAM):   else do;
384580    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
384581    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
384582    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384583    +   end;
MPRINT(EM_DIAGRAM):   end;
384584    +end;
MPRINT(EM_DIAGRAM):   end;
384585    +
384586    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
384587    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
384588    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
384589    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
384590    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
384591    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
384592    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
384593    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
384594    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
384595    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
384596    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
384597    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
384598    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
384599    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384600    +end;
MPRINT(EM_DIAGRAM):   end;
384601    +else do;
MPRINT(EM_DIAGRAM):   else do;
384602    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
384603    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
384604    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
384605    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
384606    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
384607    +   end;
MPRINT(EM_DIAGRAM):   end;
384608    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
384609    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
384610    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
384611    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
384612    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
384613    +   end;
MPRINT(EM_DIAGRAM):   end;
384614    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
384615    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
384616    +   end;
MPRINT(EM_DIAGRAM):   end;
384617    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
384618    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
384619    +   end;
MPRINT(EM_DIAGRAM):   end;
384620    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
384621    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
384622    +   end;
MPRINT(EM_DIAGRAM):   end;
384623    +   else do;
MPRINT(EM_DIAGRAM):   else do;
384624    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
384625    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
384626    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
384627    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
384628    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
384629    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384630    +   end;
MPRINT(EM_DIAGRAM):   end;
384631    +end;
MPRINT(EM_DIAGRAM):   end;
384632    +
384633    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
384634    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
384635    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
384636    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
384637    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
384638    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
384639    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
384640    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
384641    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
384642    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
384643    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
384644    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
384645    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
384646    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
384647    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384648    +end;
MPRINT(EM_DIAGRAM):   end;
384649    +else do;
MPRINT(EM_DIAGRAM):   else do;
384650    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
384651    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
384652    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
384653    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
384654    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
384655    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
384656    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
384657    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
384658    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
384659    +         end;
MPRINT(EM_DIAGRAM):   end;
384660    +         else do;
MPRINT(EM_DIAGRAM):   else do;
384661    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
384662    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
384663    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
384664    +            end;
MPRINT(EM_DIAGRAM):   end;
384665    +         end;
MPRINT(EM_DIAGRAM):   end;
384666    +      end;
MPRINT(EM_DIAGRAM):   end;
384667    +      else do;
MPRINT(EM_DIAGRAM):   else do;
384668    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
384669    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
384670    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
384671    +         end;
MPRINT(EM_DIAGRAM):   end;
384672    +      end;
MPRINT(EM_DIAGRAM):   end;
384673    +   end;
MPRINT(EM_DIAGRAM):   end;
384674    +   else do;
MPRINT(EM_DIAGRAM):   else do;
384675    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
384676    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
384677    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
384678    +      end;
MPRINT(EM_DIAGRAM):   end;
384679    +      else do;
MPRINT(EM_DIAGRAM):   else do;
384680    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
384681    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
384682    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
384683    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
384684    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
384685    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
384686    +         end;
MPRINT(EM_DIAGRAM):   end;
384687    +      end;
MPRINT(EM_DIAGRAM):   end;
384688    +   end;
MPRINT(EM_DIAGRAM):   end;
384689    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
384690    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
384691    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
384692    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
384693    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
384694    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
384695    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384696    +   end;
MPRINT(EM_DIAGRAM):   end;
384697    +end;
MPRINT(EM_DIAGRAM):   end;
384698    +
384699    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
384700    +*** Checking missing input Interval
384701    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
384702    +
384703    +IF NMISS(
384704    +   AcceptedCmpTotal ,
384705    +   Age ,
384706    +   Frq ,
384707    +   Income ,
384708    +   Kidhome ,
384709    +   Mnt ,
384710    +   MntFishProducts ,
384711    +   MntFruits ,
384712    +   MntGoldProds ,
384713    +   MntMeatProducts ,
384714    +   MntSweetProducts ,
384715    +   MntWines ,
384716    +   MonthsAsCustomer ,
384717    +   NumCatalogPurchases ,
384718    +   NumDealsPurchases ,
384719    +   NumDistPurchases ,
384720    +   NumStorePurchases ,
384721    +   NumWebPurchases ,
384722    +   NumWebVisitsMonth ,
384723    +   RFMstat ,
384724    +   RMntFrq ,
384725    +   Recency ,
384726    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
384727    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
384728    +
384729    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
384730    +END;
MPRINT(EM_DIAGRAM):   END;
384731    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
384732    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
384733    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
384734    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
384735    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
384736    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
384737    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
384738    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
384739    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
384740    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
384741    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
384742    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
384743    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
384744    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
384745    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
384746    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
384747    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
384748    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
384749    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
384750    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
384751    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
384752    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
384753    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
384754    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
384755    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
384756    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
384757    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
384758    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
384759    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
384760    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
384761    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
384762    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
384763    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
384764    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
384765    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
384766    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
384767    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
384768    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
384769    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
384770    +END;
MPRINT(EM_DIAGRAM):   END;
384771    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
384772    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
384773    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
384774    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
384775    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
384776    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
384777    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
384778    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
384779    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
384780    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
384781    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
384782    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
384783    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
384784    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
384785    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
384786    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
384787    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
384788    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
384789    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
384790    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
384791    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
384792    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
384793    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
384794    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
384795    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
384796    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
384797    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
384798    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
384799    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
384800    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
384801    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
384802    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
384803    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
384804    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
384805    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
384806    +   ELSE S_NumCatalogPurchases
384807    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
384808    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
384809    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
384810    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
384811    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
384812    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
384813    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
384814    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
384815    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
384816    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
384817    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
384818    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
384819    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
384820    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
384821    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
384822    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
384823    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
384824    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
384825    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
384826    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
384827    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
384828    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
384829    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
384830    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
384831    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
384832    +END;
MPRINT(EM_DIAGRAM):   END;
384833    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
384834    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
384835    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
384836    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
384837    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
384838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
384839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
384840    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
384841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
384842    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
384843    +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
384844    +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
384845    +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
384846    +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
384847    +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
384848    +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
384849    +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
384850    +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
384851    +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
384852    +          +     3.21215425524619 * S_NumDealsPurchases
384853    +          +     0.08695198777156 * S_NumDistPurchases
384854    +          +    -2.58697971128295 * S_NumStorePurchases
384855    +          +    -0.44431924796059 * S_NumWebPurchases
384856    +          +     -1.4492698984921 * S_NumWebVisitsMonth
384857    +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
384858    +        S_RMntFrq  +    -0.27206877070748 * S_Recency
384859    +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
384860    +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
384861    +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
384862    +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
384863    +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
384864    +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
384865    +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
384866    +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
384867    +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
384868    +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
384869    +          +    -0.83844506398484 * S_NumDealsPurchases
384870    +          +     0.60831936516804 * S_NumDistPurchases
384871    +          +     1.79084087761626 * S_NumStorePurchases
384872    +          +     1.17119196356453 * S_NumWebPurchases
384873    +          +    -3.63586683518718 * S_NumWebVisitsMonth
384874    +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
384875    +        S_RMntFrq  +     3.84599118896159 * S_Recency
384876    +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
384877    +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
384878    +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
384879    +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
384880    +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
384881    +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
384882    +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
384883    +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
384884    +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
384885    +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
384886    +          +    -0.31484031572628 * S_NumDealsPurchases
384887    +          +    -0.18273941035679 * S_NumDistPurchases
384888    +          +     0.99501789733882 * S_NumStorePurchases
384889    +          +     1.32014078829379 * S_NumWebPurchases
384890    +          +    -1.34393498450215 * S_NumWebVisitsMonth
384891    +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
384892    +        S_RMntFrq  +     0.84406941726743 * S_Recency
384893    +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
384894    +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
384895    +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
384896    +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
384897    +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
384898    +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
384899    +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
384900    +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
384901    +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
384902    +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
384903    +          +     1.19658719134196 * S_NumDealsPurchases
384904    +          +     0.87478204472986 * S_NumDistPurchases
384905    +          +    -0.20635856288784 * S_NumStorePurchases
384906    +          +    -0.89927356974242 * S_NumWebPurchases
384907    +          +     2.92285244132576 * S_NumWebVisitsMonth
384908    +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
384909    +        S_RMntFrq  +    -3.64945971202322 * S_Recency
384910    +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
384911    +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
384912    +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
384913    +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
384914    +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
384915    +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
384916    +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
384917    +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
384918    +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
384919    +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
384920    +          +       -2.32617124568 * S_NumDealsPurchases
384921    +          +    -0.56589187730672 * S_NumDistPurchases
384922    +          +     1.07062299863482 * S_NumStorePurchases
384923    +          +     0.30077273739578 * S_NumWebPurchases
384924    +          +    -1.67745421915317 * S_NumWebVisitsMonth
384925    +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
384926    +        S_RMntFrq  +     1.32196704233234 * S_Recency
384927    +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
384928    +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
384929    +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
384930    +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
384931    +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
384932    +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
384933    +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
384934    +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
384935    +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
384936    +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
384937    +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
384938    +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
384939    +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
384940    +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
384941    +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
384942    +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
384943    +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
384944    +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
384945    +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
384946    +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
384947    +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
384948    +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
384949    +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
384950    +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
384951    +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
384952    +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
384953    +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
384954    +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
384955    +        EducationGraduation  +     0.98491516107588 * EducationMaster
384956    +          +    -0.27797737429678 * Marital_StatusDivorced
384957    +          +    -0.08137635862327 * Marital_StatusMarried
384958    +          +     0.06275411820495 * Marital_StatusSingle
384959    +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
384960    +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
384961    +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
384962    +        EducationGraduation  +    -0.05470462753112 * EducationMaster
384963    +          +     0.05151426841441 * Marital_StatusDivorced
384964    +          +     1.19165082030442 * Marital_StatusMarried
384965    +          +    -1.08257080662611 * Marital_StatusSingle
384966    +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
384967    +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
384968    +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
384969    +        EducationGraduation  +     0.40262329710793 * EducationMaster
384970    +          +      0.0238206459022 * Marital_StatusDivorced
384971    +          +     -0.4653244204261 * Marital_StatusMarried
384972    +          +     0.13051613619882 * Marital_StatusSingle
384973    +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
384974    +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
384975    +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
384976    +        EducationGraduation  +    -0.79764992264249 * EducationMaster
384977    +          +     -0.7449356409222 * Marital_StatusDivorced
384978    +          +    -1.46604673521535 * Marital_StatusMarried
384979    +          +     0.74484771688818 * Marital_StatusSingle
384980    +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
384981    +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
384982    +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
384983    +        EducationGraduation  +    -0.00999807517226 * EducationMaster
384984    +          +    -3.68044980584423 * Marital_StatusDivorced
384985    +          +     3.14587407902338 * Marital_StatusMarried
384986    +          +    -2.66118132753024 * Marital_StatusSingle
384987    +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
384988    +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
384989    +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
384990    +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
384991    +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
384992    +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
384993    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
384994    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
384995    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
384996    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
384997    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
384998    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
384999    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
385000    +END;
MPRINT(EM_DIAGRAM):   END;
385001    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
385002    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
385003    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
385004    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
385005    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
385006    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
385007    +END;
MPRINT(EM_DIAGRAM):   END;
385008    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385009    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
385010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385011    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
385012    +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
385013    +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
385014    +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
385015    +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
385016    +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
385017    +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
385018    +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
385019    +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
385020    +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
385021    +          +     0.89261880438741 * S_NumDealsPurchases
385022    +          +    -1.61647413199892 * S_NumDistPurchases
385023    +          +    -0.56304669045195 * S_NumStorePurchases
385024    +          +      0.7766837080945 * S_NumWebPurchases
385025    +          +     -2.2953497398902 * S_NumWebVisitsMonth
385026    +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
385027    +        S_RMntFrq  +     -0.5786489917247 * S_Recency
385028    +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
385029    +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
385030    +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
385031    +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
385032    +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
385033    +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
385034    +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
385035    +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
385036    +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
385037    +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
385038    +          +     1.02431289724643 * S_NumDealsPurchases
385039    +          +    -0.90960173637405 * S_NumDistPurchases
385040    +          +     1.24283490404772 * S_NumStorePurchases
385041    +          +     1.23072413154592 * S_NumWebPurchases
385042    +          +    -0.21533378473931 * S_NumWebVisitsMonth
385043    +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
385044    +        S_RMntFrq  +     0.32357651423135 * S_Recency
385045    +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
385046    +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
385047    +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
385048    +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
385049    +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
385050    +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
385051    +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
385052    +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
385053    +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
385054    +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
385055    +          +    -0.26249596122198 * S_NumDealsPurchases
385056    +          +    -0.63328519804758 * S_NumDistPurchases
385057    +          +    -0.88467503575886 * S_NumStorePurchases
385058    +          +    -0.83120537310738 * S_NumWebPurchases
385059    +          +     1.40072282351719 * S_NumWebVisitsMonth
385060    +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
385061    +        S_RMntFrq  +     -1.2794275536508 * S_Recency
385062    +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
385063    +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
385064    +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
385065    +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
385066    +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
385067    +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
385068    +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
385069    +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
385070    +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
385071    +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
385072    +          +     1.30167361451945 * S_NumDealsPurchases
385073    +          +     1.45457613716235 * S_NumDistPurchases
385074    +          +    -0.40226463685252 * S_NumStorePurchases
385075    +          +     0.36369161683572 * S_NumWebPurchases
385076    +          +    -2.65684851610403 * S_NumWebVisitsMonth
385077    +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
385078    +        S_RMntFrq  +     1.36572595403825 * S_Recency
385079    +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
385080    +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
385081    +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
385082    +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
385083    +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
385084    +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
385085    +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
385086    +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
385087    +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
385088    +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
385089    +          +    -0.54572162665338 * S_NumDealsPurchases
385090    +          +      0.9607390449318 * S_NumDistPurchases
385091    +          +    -0.03259470545754 * S_NumStorePurchases
385092    +          +     0.19202241423412 * S_NumWebPurchases
385093    +          +     0.61085831658456 * S_NumWebVisitsMonth
385094    +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
385095    +        S_RMntFrq  +    -0.01216476188714 * S_Recency
385096    +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
385097    +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
385098    +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
385099    +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
385100    +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
385101    +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
385102    +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
385103    +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
385104    +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
385105    +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
385106    +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
385107    +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
385108    +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
385109    +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
385110    +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
385111    +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
385112    +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
385113    +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
385114    +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
385115    +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
385116    +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
385117    +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
385118    +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
385119    +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
385120    +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
385121    +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
385122    +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
385123    +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
385124    +        EducationGraduation  +    -0.01838790774804 * EducationMaster
385125    +          +    -2.32430245081383 * Marital_StatusDivorced
385126    +          +    -0.09815511356796 * Marital_StatusMarried
385127    +          +     0.13075504294551 * Marital_StatusSingle
385128    +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
385129    +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
385130    +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
385131    +        EducationGraduation  +    -1.12454002820451 * EducationMaster
385132    +          +    -0.65574603869224 * Marital_StatusDivorced
385133    +          +     1.54672472575294 * Marital_StatusMarried
385134    +          +    -1.59817602340208 * Marital_StatusSingle
385135    +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
385136    +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
385137    +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
385138    +        EducationGraduation  +     0.87547303889444 * EducationMaster
385139    +          +    -0.50911604604781 * Marital_StatusDivorced
385140    +          +     0.30403066135719 * Marital_StatusMarried
385141    +          +      0.1026950879545 * Marital_StatusSingle
385142    +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
385143    +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
385144    +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
385145    +        EducationGraduation  +    -0.06009602645566 * EducationMaster
385146    +          +     1.07371507133318 * Marital_StatusDivorced
385147    +          +    -0.07097334129051 * Marital_StatusMarried
385148    +          +    -0.48339718568621 * Marital_StatusSingle
385149    +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
385150    +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
385151    +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
385152    +        EducationGraduation  +     0.46960055830119 * EducationMaster
385153    +          +     1.04342893515504 * Marital_StatusDivorced
385154    +          +     1.16171312085032 * Marital_StatusMarried
385155    +          +    -0.30201646939913 * Marital_StatusSingle
385156    +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
385157    +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
385158    +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
385159    +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
385160    +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
385161    +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
385162    +END;
MPRINT(EM_DIAGRAM):   END;
385163    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
385164    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
385165    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
385166    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
385167    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
385168    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
385169    +END;
MPRINT(EM_DIAGRAM):   END;
385170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385171    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
385172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385173    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
385174    +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
385175    +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
385176    +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
385177    +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
385178    +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
385179    +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
385180    +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
385181    +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
385182    +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
385183    +          +     1.32256781010645 * S_NumDealsPurchases
385184    +          +    -1.43015438973619 * S_NumDistPurchases
385185    +          +    -0.63489289584421 * S_NumStorePurchases
385186    +          +     0.90508699686841 * S_NumWebPurchases
385187    +          +    -2.24234858061014 * S_NumWebVisitsMonth
385188    +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
385189    +        S_RMntFrq  +    -1.09317668626142 * S_Recency
385190    +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
385191    +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
385192    +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
385193    +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
385194    +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
385195    +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
385196    +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
385197    +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
385198    +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
385199    +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
385200    +          +     0.85965187264096 * S_NumDealsPurchases
385201    +          +    -1.15239933286756 * S_NumDistPurchases
385202    +          +     1.20800889102387 * S_NumStorePurchases
385203    +          +     1.08790389130242 * S_NumWebPurchases
385204    +          +    -0.13665551161149 * S_NumWebVisitsMonth
385205    +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
385206    +        S_RMntFrq  +     0.65854311654256 * S_Recency
385207    +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
385208    +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
385209    +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
385210    +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
385211    +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
385212    +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
385213    +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
385214    +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
385215    +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
385216    +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
385217    +          +     -0.5767607129654 * S_NumDealsPurchases
385218    +          +     -0.2643921429796 * S_NumDistPurchases
385219    +          +    -0.67417489911206 * S_NumStorePurchases
385220    +          +    -0.51423877684891 * S_NumWebPurchases
385221    +          +     1.40328299605176 * S_NumWebVisitsMonth
385222    +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
385223    +        S_RMntFrq  +     -0.8447362450681 * S_Recency
385224    +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
385225    +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
385226    +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
385227    +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
385228    +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
385229    +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
385230    +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
385231    +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
385232    +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
385233    +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
385234    +          +      1.2821617657076 * S_NumDealsPurchases
385235    +          +     1.26584115202735 * S_NumDistPurchases
385236    +          +    -0.46597664211833 * S_NumStorePurchases
385237    +          +     0.45652363472866 * S_NumWebPurchases
385238    +          +    -2.66296112021252 * S_NumWebVisitsMonth
385239    +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
385240    +        S_RMntFrq  +     1.31886754707923 * S_Recency
385241    +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
385242    +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
385243    +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
385244    +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
385245    +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
385246    +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
385247    +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
385248    +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
385249    +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
385250    +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
385251    +          +    -0.85162564171681 * S_NumDealsPurchases
385252    +          +     0.64631099667221 * S_NumDistPurchases
385253    +          +    -0.03081963858636 * S_NumStorePurchases
385254    +          +    -0.24124717624664 * S_NumWebPurchases
385255    +          +     0.56425980772372 * S_NumWebVisitsMonth
385256    +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
385257    +        S_RMntFrq  +     0.08133312388911 * S_Recency
385258    +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
385259    +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
385260    +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
385261    +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
385262    +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
385263    +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
385264    +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
385265    +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
385266    +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
385267    +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
385268    +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
385269    +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
385270    +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
385271    +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
385272    +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
385273    +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
385274    +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
385275    +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
385276    +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
385277    +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
385278    +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
385279    +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
385280    +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
385281    +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
385282    +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
385283    +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
385284    +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
385285    +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
385286    +        EducationGraduation  +     0.05949934527868 * EducationMaster
385287    +          +    -2.49973437075558 * Marital_StatusDivorced
385288    +          +    -0.18076948182574 * Marital_StatusMarried
385289    +          +     0.13498525495231 * Marital_StatusSingle
385290    +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
385291    +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
385292    +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
385293    +        EducationGraduation  +    -1.22462805502453 * EducationMaster
385294    +          +       -0.59463732835 * Marital_StatusDivorced
385295    +          +     1.37741332427598 * Marital_StatusMarried
385296    +          +     -1.5833455713231 * Marital_StatusSingle
385297    +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
385298    +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
385299    +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
385300    +        EducationGraduation  +     0.68083131423474 * EducationMaster
385301    +          +    -0.44569556289443 * Marital_StatusDivorced
385302    +          +     0.29918053103557 * Marital_StatusMarried
385303    +          +    -0.10337314064224 * Marital_StatusSingle
385304    +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
385305    +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
385306    +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
385307    +        EducationGraduation  +     0.00087354662697 * EducationMaster
385308    +          +     1.13881957277462 * Marital_StatusDivorced
385309    +          +    -0.35849807146313 * Marital_StatusMarried
385310    +          +    -0.22168731316885 * Marital_StatusSingle
385311    +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
385312    +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
385313    +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
385314    +        EducationGraduation  +     0.43730905987249 * EducationMaster
385315    +          +     1.10774969923269 * Marital_StatusDivorced
385316    +          +     1.08409594073043 * Marital_StatusMarried
385317    +          +    -0.33145048007894 * Marital_StatusSingle
385318    +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
385319    +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
385320    +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
385321    +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
385322    +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
385323    +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
385324    +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
385325    +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
385326    +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
385327    +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
385328    +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
385329    +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
385330    +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
385331    +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
385332    +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
385333    +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
385334    +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
385335    +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
385336    +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
385337    +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
385338    +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
385339    +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
385340    +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
385341    +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
385342    +END;
MPRINT(EM_DIAGRAM):   END;
385343    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
385344    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
385345    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
385346    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
385347    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
385348    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
385349    +END;
MPRINT(EM_DIAGRAM):   END;
385350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385351    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
385352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385353    +
385354    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
385355    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
385356    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
385357    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
385358    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
385359    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385360    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
385361    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
385362    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
385363    +end;
MPRINT(EM_DIAGRAM):   end;
385364    +else do;
MPRINT(EM_DIAGRAM):   else do;
385365    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
385366    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
385367    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
385368    +   end;
MPRINT(EM_DIAGRAM):   end;
385369    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
385370    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
385371    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
385372    +   end;
MPRINT(EM_DIAGRAM):   end;
385373    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385374    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
385375    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
385376    +   end;
MPRINT(EM_DIAGRAM):   end;
385377    +end;
MPRINT(EM_DIAGRAM):   end;
385378    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
385379    +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
385380    +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
385381    +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
385382    +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
385383    +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
385384    +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
385385    +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
385386    +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
385387    +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
385388    +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
385389    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
385390    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
385391    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
385392    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
385393    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
385394    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
385395    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
385396    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
385397    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
385398    +END;
MPRINT(EM_DIAGRAM):   END;
385399    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
385400    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
385401    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
385402    +END;
MPRINT(EM_DIAGRAM):   END;
385403    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
385404    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
385405    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
385406    +END;
MPRINT(EM_DIAGRAM):   END;
385407    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
385408    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
385409    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
385410    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
385411    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
385412    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
385413    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
385414    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385415    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
385416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385417    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
385418    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
385419    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
385420    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
385421    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
385422    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
385423    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
385424    +END;
MPRINT(EM_DIAGRAM):   END;
385425    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
385426    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
385427    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
385428    +drop
385429    +H1x1_1
385430    +H1x1_2
385431    +H1x1_3
385432    +H1x1_4
385433    +H1x1_5
385434    +H1x2_1
385435    +H1x2_2
385436    +H1x2_3
385437    +H1x2_4
385438    +H1x2_5
385439    +H1x3_1
385440    +H1x3_2
385441    +H1x3_3
385442    +H1x3_4
385443    +H1x3_5
385444    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
385445    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
385446     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
385447     quit;
385448     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
385449     filename emflow
385449   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
385450     *------------------------------------------------------------*;
385451     * AutoNeural10: Scoring VALIDATE data;
385452     *------------------------------------------------------------*;
385453     data EMWS8.AutoNeural10_VALIDATE
385454     / view=EMWS8.AutoNeural10_VALIDATE
385455     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_VALIDATE / view=EMWS8.AutoNeural10_VALIDATE ;
385456     set EMWS8.Meta_VALIDATE
385457     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
385458     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
385459    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
385460    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
385461    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
385462    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
385463    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
385464    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
385465    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
385466    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
385467    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
385468    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
385469    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
385470    +LENGTH _WARN_ $4
385471    +      F_DepVar  $ 12
385472    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
385473    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
385474    +
385475    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
385476    +
385477    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
385478    +
385479    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
385480    +
385481    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
385482    +
385483    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
385484    +
385485    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
385486    +
385487    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
385488    +
385489    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
385490    +
385491    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
385492    +
385493    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
385494    +
385495    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
385496    +
385497    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
385498    +
385499    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
385500    +
385501    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
385502    +
385503    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
385504    +
385505    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
385506    +
385507    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
385508    +
385509    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
385510    +
385511    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
385512    +
385513    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
385514    +
385515    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
385516    +
385517    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
385518    +
385519    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
385520    +
385521    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
385522    +
385523    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
385524    +
385525    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
385526    +
385527    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
385528    +
385529    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
385530    +
385531    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
385532    +
385533    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
385534    +
385535    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
385536    +
385537    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
385538    +
385539    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
385540    +
385541    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
385542    +
385543    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
385544    +
385545    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
385546    +
385547    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
385548    +
385549    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
385550    +
385551    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
385552    +
385553    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
385554    +
385555    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
385556    +
385557    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
385558    +
385559    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
385560    +
385561    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
385562    +
385563    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
385564    +
385565    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
385566    +
385567    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
385568    +
385569    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
385570    +
385571    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
385572    +
385573    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
385574    +
385575    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
385576    +
385577    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
385578    +
385579    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
385580    +
385581    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
385582    +
385583    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
385584    +
385585    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
385586    +
385587    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
385588    +
385589    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
385590    +
385591    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
385592    +
385593    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
385594    +
385595    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
385596    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
385597    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
385598    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
385599    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
385600    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385601    +end;
MPRINT(EM_DIAGRAM):   end;
385602    +else do;
MPRINT(EM_DIAGRAM):   else do;
385603    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
385604    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
385605    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385606    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
385607    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
385608    +   end;
MPRINT(EM_DIAGRAM):   end;
385609    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
385610    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
385611    +   end;
MPRINT(EM_DIAGRAM):   end;
385612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385613    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
385614    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
385615    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385616    +   end;
MPRINT(EM_DIAGRAM):   end;
385617    +end;
MPRINT(EM_DIAGRAM):   end;
385618    +
385619    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
385620    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
385621    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
385622    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
385623    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
385624    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385625    +end;
MPRINT(EM_DIAGRAM):   end;
385626    +else do;
MPRINT(EM_DIAGRAM):   else do;
385627    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
385628    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
385629    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385630    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
385631    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
385632    +   end;
MPRINT(EM_DIAGRAM):   end;
385633    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
385634    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
385635    +   end;
MPRINT(EM_DIAGRAM):   end;
385636    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385637    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
385638    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
385639    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385640    +   end;
MPRINT(EM_DIAGRAM):   end;
385641    +end;
MPRINT(EM_DIAGRAM):   end;
385642    +
385643    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
385644    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
385645    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
385646    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
385647    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
385648    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385649    +end;
MPRINT(EM_DIAGRAM):   end;
385650    +else do;
MPRINT(EM_DIAGRAM):   else do;
385651    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
385652    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
385653    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385654    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
385655    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
385656    +   end;
MPRINT(EM_DIAGRAM):   end;
385657    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
385658    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
385659    +   end;
MPRINT(EM_DIAGRAM):   end;
385660    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385661    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
385662    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
385663    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385664    +   end;
MPRINT(EM_DIAGRAM):   end;
385665    +end;
MPRINT(EM_DIAGRAM):   end;
385666    +
385667    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
385668    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
385669    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
385670    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
385671    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
385672    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385673    +end;
MPRINT(EM_DIAGRAM):   end;
385674    +else do;
MPRINT(EM_DIAGRAM):   else do;
385675    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
385676    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
385677    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385678    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
385679    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
385680    +   end;
MPRINT(EM_DIAGRAM):   end;
385681    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
385682    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
385683    +   end;
MPRINT(EM_DIAGRAM):   end;
385684    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385685    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
385686    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
385687    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385688    +   end;
MPRINT(EM_DIAGRAM):   end;
385689    +end;
MPRINT(EM_DIAGRAM):   end;
385690    +
385691    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
385692    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
385693    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
385694    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
385695    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
385696    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385697    +end;
MPRINT(EM_DIAGRAM):   end;
385698    +else do;
MPRINT(EM_DIAGRAM):   else do;
385699    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
385700    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
385701    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385702    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
385703    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
385704    +   end;
MPRINT(EM_DIAGRAM):   end;
385705    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
385706    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
385707    +   end;
MPRINT(EM_DIAGRAM):   end;
385708    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385709    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
385710    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
385711    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385712    +   end;
MPRINT(EM_DIAGRAM):   end;
385713    +end;
MPRINT(EM_DIAGRAM):   end;
385714    +
385715    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
385716    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
385717    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
385718    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
385719    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
385720    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385721    +end;
MPRINT(EM_DIAGRAM):   end;
385722    +else do;
MPRINT(EM_DIAGRAM):   else do;
385723    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
385724    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
385725    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385726    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
385727    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
385728    +   end;
MPRINT(EM_DIAGRAM):   end;
385729    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
385730    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
385731    +   end;
MPRINT(EM_DIAGRAM):   end;
385732    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385733    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
385734    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
385735    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385736    +   end;
MPRINT(EM_DIAGRAM):   end;
385737    +end;
MPRINT(EM_DIAGRAM):   end;
385738    +
385739    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
385740    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
385741    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
385742    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
385743    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
385744    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385745    +end;
MPRINT(EM_DIAGRAM):   end;
385746    +else do;
MPRINT(EM_DIAGRAM):   else do;
385747    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
385748    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
385749    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385750    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
385751    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
385752    +   end;
MPRINT(EM_DIAGRAM):   end;
385753    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
385754    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
385755    +   end;
MPRINT(EM_DIAGRAM):   end;
385756    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385757    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
385758    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
385759    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385760    +   end;
MPRINT(EM_DIAGRAM):   end;
385761    +end;
MPRINT(EM_DIAGRAM):   end;
385762    +
385763    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
385764    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
385765    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
385766    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
385767    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
385768    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
385769    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
385770    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
385771    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
385772    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
385773    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
385774    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
385775    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
385776    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385777    +end;
MPRINT(EM_DIAGRAM):   end;
385778    +else do;
MPRINT(EM_DIAGRAM):   else do;
385779    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
385780    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
385781    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385782    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
385783    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
385784    +   end;
MPRINT(EM_DIAGRAM):   end;
385785    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
385786    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
385787    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
385788    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
385789    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
385790    +   end;
MPRINT(EM_DIAGRAM):   end;
385791    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
385792    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
385793    +   end;
MPRINT(EM_DIAGRAM):   end;
385794    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
385795    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
385796    +   end;
MPRINT(EM_DIAGRAM):   end;
385797    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
385798    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
385799    +   end;
MPRINT(EM_DIAGRAM):   end;
385800    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385801    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
385802    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
385803    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
385804    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
385805    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
385806    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385807    +   end;
MPRINT(EM_DIAGRAM):   end;
385808    +end;
MPRINT(EM_DIAGRAM):   end;
385809    +
385810    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
385811    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
385812    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
385813    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
385814    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
385815    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
385816    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
385817    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
385818    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
385819    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
385820    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
385821    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
385822    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
385823    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
385824    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385825    +end;
MPRINT(EM_DIAGRAM):   end;
385826    +else do;
MPRINT(EM_DIAGRAM):   else do;
385827    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
385828    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
385829    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
385830    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
385831    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
385832    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
385833    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
385834    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
385835    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
385836    +         end;
MPRINT(EM_DIAGRAM):   end;
385837    +         else do;
MPRINT(EM_DIAGRAM):   else do;
385838    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
385839    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
385840    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
385841    +            end;
MPRINT(EM_DIAGRAM):   end;
385842    +         end;
MPRINT(EM_DIAGRAM):   end;
385843    +      end;
MPRINT(EM_DIAGRAM):   end;
385844    +      else do;
MPRINT(EM_DIAGRAM):   else do;
385845    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
385846    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
385847    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
385848    +         end;
MPRINT(EM_DIAGRAM):   end;
385849    +      end;
MPRINT(EM_DIAGRAM):   end;
385850    +   end;
MPRINT(EM_DIAGRAM):   end;
385851    +   else do;
MPRINT(EM_DIAGRAM):   else do;
385852    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
385853    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
385854    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
385855    +      end;
MPRINT(EM_DIAGRAM):   end;
385856    +      else do;
MPRINT(EM_DIAGRAM):   else do;
385857    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
385858    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
385859    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
385860    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
385861    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
385862    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
385863    +         end;
MPRINT(EM_DIAGRAM):   end;
385864    +      end;
MPRINT(EM_DIAGRAM):   end;
385865    +   end;
MPRINT(EM_DIAGRAM):   end;
385866    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
385867    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
385868    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
385869    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
385870    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
385871    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
385872    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385873    +   end;
MPRINT(EM_DIAGRAM):   end;
385874    +end;
MPRINT(EM_DIAGRAM):   end;
385875    +
385876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385877    +*** Checking missing input Interval
385878    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
385879    +
385880    +IF NMISS(
385881    +   AcceptedCmpTotal ,
385882    +   Age ,
385883    +   Frq ,
385884    +   Income ,
385885    +   Kidhome ,
385886    +   Mnt ,
385887    +   MntFishProducts ,
385888    +   MntFruits ,
385889    +   MntGoldProds ,
385890    +   MntMeatProducts ,
385891    +   MntSweetProducts ,
385892    +   MntWines ,
385893    +   MonthsAsCustomer ,
385894    +   NumCatalogPurchases ,
385895    +   NumDealsPurchases ,
385896    +   NumDistPurchases ,
385897    +   NumStorePurchases ,
385898    +   NumWebPurchases ,
385899    +   NumWebVisitsMonth ,
385900    +   RFMstat ,
385901    +   RMntFrq ,
385902    +   Recency ,
385903    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
385904    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
385905    +
385906    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
385907    +END;
MPRINT(EM_DIAGRAM):   END;
385908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385909    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
385910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
385911    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
385912    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
385913    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
385914    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
385915    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
385916    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
385917    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
385918    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
385919    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
385920    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
385921    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
385922    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
385923    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
385924    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
385925    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
385926    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
385927    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
385928    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
385929    +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
385930    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
385931    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
385932    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
385933    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
385934    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
385935    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
385936    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
385937    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
385938    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
385939    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
385940    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
385941    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
385942    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
385943    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
385944    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
385945    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
385946    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
385947    +END;
MPRINT(EM_DIAGRAM):   END;
385948    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
385949    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
385950    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
385951    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
385952    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
385953    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
385954    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
385955    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
385956    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
385957    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
385958    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
385959    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
385960    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
385961    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
385962    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
385963    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
385964    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
385965    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
385966    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
385967    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
385968    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
385969    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
385970    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
385971    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
385972    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
385973    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
385974    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
385975    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
385976    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
385977    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
385978    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
385979    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
385980    +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
385981    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
385982    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
385983    +   ELSE S_NumCatalogPurchases
385984    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
385985    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
385986    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
385987    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
385988    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
385989    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
385990    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
385991    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
385992    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
385993    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
385994    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
385995    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
385996    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
385997    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
385998    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
385999    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
386000    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
386001    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
386002    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
386003    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
386004    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
386005    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
386006    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
386007    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
386008    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
386009    +END;
MPRINT(EM_DIAGRAM):   END;
386010    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386011    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
386012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386013    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386014    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
386015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386016    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386017    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
386018    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386019    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
386020    +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
386021    +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
386022    +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
386023    +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
386024    +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
386025    +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
386026    +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
386027    +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
386028    +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
386029    +          +     3.21215425524619 * S_NumDealsPurchases
386030    +          +     0.08695198777156 * S_NumDistPurchases
386031    +          +    -2.58697971128295 * S_NumStorePurchases
386032    +          +    -0.44431924796059 * S_NumWebPurchases
386033    +          +     -1.4492698984921 * S_NumWebVisitsMonth
386034    +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
386035    +        S_RMntFrq  +    -0.27206877070748 * S_Recency
386036    +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
386037    +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
386038    +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
386039    +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
386040    +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
386041    +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
386042    +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
386043    +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
386044    +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
386045    +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
386046    +          +    -0.83844506398484 * S_NumDealsPurchases
386047    +          +     0.60831936516804 * S_NumDistPurchases
386048    +          +     1.79084087761626 * S_NumStorePurchases
386049    +          +     1.17119196356453 * S_NumWebPurchases
386050    +          +    -3.63586683518718 * S_NumWebVisitsMonth
386051    +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
386052    +        S_RMntFrq  +     3.84599118896159 * S_Recency
386053    +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
386054    +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
386055    +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
386056    +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
386057    +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
386058    +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
386059    +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
386060    +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
386061    +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
386062    +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
386063    +          +    -0.31484031572628 * S_NumDealsPurchases
386064    +          +    -0.18273941035679 * S_NumDistPurchases
386065    +          +     0.99501789733882 * S_NumStorePurchases
386066    +          +     1.32014078829379 * S_NumWebPurchases
386067    +          +    -1.34393498450215 * S_NumWebVisitsMonth
386068    +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
386069    +        S_RMntFrq  +     0.84406941726743 * S_Recency
386070    +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
386071    +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
386072    +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
386073    +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
386074    +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
386075    +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
386076    +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
386077    +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
386078    +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
386079    +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
386080    +          +     1.19658719134196 * S_NumDealsPurchases
386081    +          +     0.87478204472986 * S_NumDistPurchases
386082    +          +    -0.20635856288784 * S_NumStorePurchases
386083    +          +    -0.89927356974242 * S_NumWebPurchases
386084    +          +     2.92285244132576 * S_NumWebVisitsMonth
386085    +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
386086    +        S_RMntFrq  +    -3.64945971202322 * S_Recency
386087    +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
386088    +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
386089    +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
386090    +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
386091    +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
386092    +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
386093    +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
386094    +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
386095    +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
386096    +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
386097    +          +       -2.32617124568 * S_NumDealsPurchases
386098    +          +    -0.56589187730672 * S_NumDistPurchases
386099    +          +     1.07062299863482 * S_NumStorePurchases
386100    +          +     0.30077273739578 * S_NumWebPurchases
386101    +          +    -1.67745421915317 * S_NumWebVisitsMonth
386102    +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
386103    +        S_RMntFrq  +     1.32196704233234 * S_Recency
386104    +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
386105    +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
386106    +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
386107    +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
386108    +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
386109    +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
386110    +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
386111    +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
386112    +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
386113    +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
386114    +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
386115    +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
386116    +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
386117    +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
386118    +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
386119    +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
386120    +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
386121    +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
386122    +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
386123    +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
386124    +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
386125    +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
386126    +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
386127    +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
386128    +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
386129    +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
386130    +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
386131    +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
386132    +        EducationGraduation  +     0.98491516107588 * EducationMaster
386133    +          +    -0.27797737429678 * Marital_StatusDivorced
386134    +          +    -0.08137635862327 * Marital_StatusMarried
386135    +          +     0.06275411820495 * Marital_StatusSingle
386136    +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
386137    +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
386138    +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
386139    +        EducationGraduation  +    -0.05470462753112 * EducationMaster
386140    +          +     0.05151426841441 * Marital_StatusDivorced
386141    +          +     1.19165082030442 * Marital_StatusMarried
386142    +          +    -1.08257080662611 * Marital_StatusSingle
386143    +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
386144    +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
386145    +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
386146    +        EducationGraduation  +     0.40262329710793 * EducationMaster
386147    +          +      0.0238206459022 * Marital_StatusDivorced
386148    +          +     -0.4653244204261 * Marital_StatusMarried
386149    +          +     0.13051613619882 * Marital_StatusSingle
386150    +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
386151    +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
386152    +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
386153    +        EducationGraduation  +    -0.79764992264249 * EducationMaster
386154    +          +     -0.7449356409222 * Marital_StatusDivorced
386155    +          +    -1.46604673521535 * Marital_StatusMarried
386156    +          +     0.74484771688818 * Marital_StatusSingle
386157    +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
386158    +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
386159    +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
386160    +        EducationGraduation  +    -0.00999807517226 * EducationMaster
386161    +          +    -3.68044980584423 * Marital_StatusDivorced
386162    +          +     3.14587407902338 * Marital_StatusMarried
386163    +          +    -2.66118132753024 * Marital_StatusSingle
386164    +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
386165    +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
386166    +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
386167    +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
386168    +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
386169    +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
386170    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
386171    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
386172    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
386173    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
386174    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
386175    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
386176    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
386177    +END;
MPRINT(EM_DIAGRAM):   END;
386178    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
386179    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
386180    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
386181    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
386182    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
386183    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
386184    +END;
MPRINT(EM_DIAGRAM):   END;
386185    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386186    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
386187    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386188    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
386189    +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
386190    +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
386191    +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
386192    +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
386193    +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
386194    +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
386195    +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
386196    +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
386197    +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
386198    +          +     0.89261880438741 * S_NumDealsPurchases
386199    +          +    -1.61647413199892 * S_NumDistPurchases
386200    +          +    -0.56304669045195 * S_NumStorePurchases
386201    +          +      0.7766837080945 * S_NumWebPurchases
386202    +          +     -2.2953497398902 * S_NumWebVisitsMonth
386203    +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
386204    +        S_RMntFrq  +     -0.5786489917247 * S_Recency
386205    +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
386206    +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
386207    +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
386208    +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
386209    +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
386210    +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
386211    +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
386212    +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
386213    +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
386214    +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
386215    +          +     1.02431289724643 * S_NumDealsPurchases
386216    +          +    -0.90960173637405 * S_NumDistPurchases
386217    +          +     1.24283490404772 * S_NumStorePurchases
386218    +          +     1.23072413154592 * S_NumWebPurchases
386219    +          +    -0.21533378473931 * S_NumWebVisitsMonth
386220    +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
386221    +        S_RMntFrq  +     0.32357651423135 * S_Recency
386222    +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
386223    +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
386224    +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
386225    +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
386226    +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
386227    +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
386228    +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
386229    +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
386230    +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
386231    +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
386232    +          +    -0.26249596122198 * S_NumDealsPurchases
386233    +          +    -0.63328519804758 * S_NumDistPurchases
386234    +          +    -0.88467503575886 * S_NumStorePurchases
386235    +          +    -0.83120537310738 * S_NumWebPurchases
386236    +          +     1.40072282351719 * S_NumWebVisitsMonth
386237    +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
386238    +        S_RMntFrq  +     -1.2794275536508 * S_Recency
386239    +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
386240    +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
386241    +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
386242    +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
386243    +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
386244    +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
386245    +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
386246    +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
386247    +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
386248    +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
386249    +          +     1.30167361451945 * S_NumDealsPurchases
386250    +          +     1.45457613716235 * S_NumDistPurchases
386251    +          +    -0.40226463685252 * S_NumStorePurchases
386252    +          +     0.36369161683572 * S_NumWebPurchases
386253    +          +    -2.65684851610403 * S_NumWebVisitsMonth
386254    +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
386255    +        S_RMntFrq  +     1.36572595403825 * S_Recency
386256    +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
386257    +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
386258    +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
386259    +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
386260    +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
386261    +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
386262    +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
386263    +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
386264    +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
386265    +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
386266    +          +    -0.54572162665338 * S_NumDealsPurchases
386267    +          +      0.9607390449318 * S_NumDistPurchases
386268    +          +    -0.03259470545754 * S_NumStorePurchases
386269    +          +     0.19202241423412 * S_NumWebPurchases
386270    +          +     0.61085831658456 * S_NumWebVisitsMonth
386271    +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
386272    +        S_RMntFrq  +    -0.01216476188714 * S_Recency
386273    +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
386274    +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
386275    +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
386276    +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
386277    +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
386278    +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
386279    +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
386280    +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
386281    +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
386282    +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
386283    +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
386284    +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
386285    +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
386286    +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
386287    +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
386288    +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
386289    +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
386290    +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
386291    +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
386292    +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
386293    +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
386294    +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
386295    +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
386296    +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
386297    +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
386298    +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
386299    +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
386300    +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
386301    +        EducationGraduation  +    -0.01838790774804 * EducationMaster
386302    +          +    -2.32430245081383 * Marital_StatusDivorced
386303    +          +    -0.09815511356796 * Marital_StatusMarried
386304    +          +     0.13075504294551 * Marital_StatusSingle
386305    +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
386306    +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
386307    +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
386308    +        EducationGraduation  +    -1.12454002820451 * EducationMaster
386309    +          +    -0.65574603869224 * Marital_StatusDivorced
386310    +          +     1.54672472575294 * Marital_StatusMarried
386311    +          +    -1.59817602340208 * Marital_StatusSingle
386312    +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
386313    +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
386314    +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
386315    +        EducationGraduation  +     0.87547303889444 * EducationMaster
386316    +          +    -0.50911604604781 * Marital_StatusDivorced
386317    +          +     0.30403066135719 * Marital_StatusMarried
386318    +          +      0.1026950879545 * Marital_StatusSingle
386319    +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
386320    +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
386321    +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
386322    +        EducationGraduation  +    -0.06009602645566 * EducationMaster
386323    +          +     1.07371507133318 * Marital_StatusDivorced
386324    +          +    -0.07097334129051 * Marital_StatusMarried
386325    +          +    -0.48339718568621 * Marital_StatusSingle
386326    +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
386327    +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
386328    +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
386329    +        EducationGraduation  +     0.46960055830119 * EducationMaster
386330    +          +     1.04342893515504 * Marital_StatusDivorced
386331    +          +     1.16171312085032 * Marital_StatusMarried
386332    +          +    -0.30201646939913 * Marital_StatusSingle
386333    +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
386334    +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
386335    +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
386336    +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
386337    +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
386338    +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
386339    +END;
MPRINT(EM_DIAGRAM):   END;
386340    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
386341    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
386342    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
386343    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
386344    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
386345    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
386346    +END;
MPRINT(EM_DIAGRAM):   END;
386347    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386348    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
386349    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386350    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
386351    +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
386352    +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
386353    +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
386354    +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
386355    +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
386356    +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
386357    +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
386358    +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
386359    +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
386360    +          +     1.32256781010645 * S_NumDealsPurchases
386361    +          +    -1.43015438973619 * S_NumDistPurchases
386362    +          +    -0.63489289584421 * S_NumStorePurchases
386363    +          +     0.90508699686841 * S_NumWebPurchases
386364    +          +    -2.24234858061014 * S_NumWebVisitsMonth
386365    +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
386366    +        S_RMntFrq  +    -1.09317668626142 * S_Recency
386367    +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
386368    +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
386369    +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
386370    +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
386371    +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
386372    +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
386373    +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
386374    +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
386375    +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
386376    +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
386377    +          +     0.85965187264096 * S_NumDealsPurchases
386378    +          +    -1.15239933286756 * S_NumDistPurchases
386379    +          +     1.20800889102387 * S_NumStorePurchases
386380    +          +     1.08790389130242 * S_NumWebPurchases
386381    +          +    -0.13665551161149 * S_NumWebVisitsMonth
386382    +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
386383    +        S_RMntFrq  +     0.65854311654256 * S_Recency
386384    +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
386385    +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
386386    +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
386387    +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
386388    +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
386389    +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
386390    +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
386391    +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
386392    +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
386393    +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
386394    +          +     -0.5767607129654 * S_NumDealsPurchases
386395    +          +     -0.2643921429796 * S_NumDistPurchases
386396    +          +    -0.67417489911206 * S_NumStorePurchases
386397    +          +    -0.51423877684891 * S_NumWebPurchases
386398    +          +     1.40328299605176 * S_NumWebVisitsMonth
386399    +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
386400    +        S_RMntFrq  +     -0.8447362450681 * S_Recency
386401    +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
386402    +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
386403    +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
386404    +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
386405    +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
386406    +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
386407    +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
386408    +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
386409    +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
386410    +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
386411    +          +      1.2821617657076 * S_NumDealsPurchases
386412    +          +     1.26584115202735 * S_NumDistPurchases
386413    +          +    -0.46597664211833 * S_NumStorePurchases
386414    +          +     0.45652363472866 * S_NumWebPurchases
386415    +          +    -2.66296112021252 * S_NumWebVisitsMonth
386416    +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
386417    +        S_RMntFrq  +     1.31886754707923 * S_Recency
386418    +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
386419    +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
386420    +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
386421    +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
386422    +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
386423    +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
386424    +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
386425    +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
386426    +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
386427    +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
386428    +          +    -0.85162564171681 * S_NumDealsPurchases
386429    +          +     0.64631099667221 * S_NumDistPurchases
386430    +          +    -0.03081963858636 * S_NumStorePurchases
386431    +          +    -0.24124717624664 * S_NumWebPurchases
386432    +          +     0.56425980772372 * S_NumWebVisitsMonth
386433    +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
386434    +        S_RMntFrq  +     0.08133312388911 * S_Recency
386435    +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
386436    +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
386437    +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
386438    +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
386439    +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
386440    +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
386441    +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
386442    +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
386443    +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
386444    +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
386445    +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
386446    +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
386447    +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
386448    +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
386449    +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
386450    +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
386451    +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
386452    +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
386453    +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
386454    +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
386455    +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
386456    +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
386457    +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
386458    +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
386459    +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
386460    +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
386461    +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
386462    +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
386463    +        EducationGraduation  +     0.05949934527868 * EducationMaster
386464    +          +    -2.49973437075558 * Marital_StatusDivorced
386465    +          +    -0.18076948182574 * Marital_StatusMarried
386466    +          +     0.13498525495231 * Marital_StatusSingle
386467    +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
386468    +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
386469    +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
386470    +        EducationGraduation  +    -1.22462805502453 * EducationMaster
386471    +          +       -0.59463732835 * Marital_StatusDivorced
386472    +          +     1.37741332427598 * Marital_StatusMarried
386473    +          +     -1.5833455713231 * Marital_StatusSingle
386474    +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
386475    +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
386476    +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
386477    +        EducationGraduation  +     0.68083131423474 * EducationMaster
386478    +          +    -0.44569556289443 * Marital_StatusDivorced
386479    +          +     0.29918053103557 * Marital_StatusMarried
386480    +          +    -0.10337314064224 * Marital_StatusSingle
386481    +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
386482    +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
386483    +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
386484    +        EducationGraduation  +     0.00087354662697 * EducationMaster
386485    +          +     1.13881957277462 * Marital_StatusDivorced
386486    +          +    -0.35849807146313 * Marital_StatusMarried
386487    +          +    -0.22168731316885 * Marital_StatusSingle
386488    +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
386489    +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
386490    +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
386491    +        EducationGraduation  +     0.43730905987249 * EducationMaster
386492    +          +     1.10774969923269 * Marital_StatusDivorced
386493    +          +     1.08409594073043 * Marital_StatusMarried
386494    +          +    -0.33145048007894 * Marital_StatusSingle
386495    +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
386496    +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
386497    +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
386498    +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
386499    +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
386500    +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
386501    +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
386502    +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
386503    +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
386504    +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
386505    +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
386506    +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
386507    +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
386508    +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
386509    +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
386510    +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
386511    +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
386512    +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
386513    +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
386514    +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
386515    +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
386516    +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
386517    +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
386518    +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
386519    +END;
MPRINT(EM_DIAGRAM):   END;
386520    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
386521    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
386522    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
386523    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
386524    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
386525    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
386526    +END;
MPRINT(EM_DIAGRAM):   END;
386527    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386528    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
386529    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386530    +
386531    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
386532    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
386533    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
386534    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
386535    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
386536    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
386537    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
386538    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
386539    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
386540    +end;
MPRINT(EM_DIAGRAM):   end;
386541    +else do;
MPRINT(EM_DIAGRAM):   else do;
386542    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
386543    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
386544    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
386545    +   end;
MPRINT(EM_DIAGRAM):   end;
386546    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
386547    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
386548    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
386549    +   end;
MPRINT(EM_DIAGRAM):   end;
386550    +   else do;
MPRINT(EM_DIAGRAM):   else do;
386551    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
386552    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
386553    +   end;
MPRINT(EM_DIAGRAM):   end;
386554    +end;
MPRINT(EM_DIAGRAM):   end;
386555    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
386556    +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
386557    +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
386558    +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
386559    +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
386560    +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
386561    +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
386562    +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
386563    +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
386564    +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
386565    +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
386566    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
386567    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
386568    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
386569    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
386570    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
386571    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
386572    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
386573    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
386574    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
386575    +END;
MPRINT(EM_DIAGRAM):   END;
386576    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
386577    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
386578    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
386579    +END;
MPRINT(EM_DIAGRAM):   END;
386580    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
386581    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
386582    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
386583    +END;
MPRINT(EM_DIAGRAM):   END;
386584    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
386585    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
386586    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
386587    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
386588    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
386589    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
386590    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
386591    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386592    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
386593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
386594    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
386595    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
386596    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
386597    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
386598    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
386599    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
386600    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
386601    +END;
MPRINT(EM_DIAGRAM):   END;
386602    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
386603    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
386604    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
386605    +drop
386606    +H1x1_1
386607    +H1x1_2
386608    +H1x1_3
386609    +H1x1_4
386610    +H1x1_5
386611    +H1x2_1
386612    +H1x2_2
386613    +H1x2_3
386614    +H1x2_4
386615    +H1x2_5
386616    +H1x3_1
386617    +H1x3_2
386618    +H1x3_3
386619    +H1x3_4
386620    +H1x3_5
386621    +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
386622    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
386623     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
386624     quit;
386625     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
386626     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
386627     * AutoNeural10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Computing metadata for TRAIN data;
386628     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural10_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural10_TRAIN out=WORK.M3E5_MHH 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3E5_MHH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3E5_MHH(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3E5_MHH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3E5_MHH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1BGKFIT NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BGKFIT;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BGKFIT;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CVGO8Q(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BGKFIT;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BGKFIT;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BGKFIT;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BGKFIT;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BGKFIT;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural10";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
386940     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
386941     set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
386942     where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
386943     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE (DATA='AutoNeural10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

386944     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMINFO;
386945     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
386946     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
386947     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
386951     run;
386952     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
386953     set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
386954     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

386955     proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
386956     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
386957     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

386958     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
386959     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
386960     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

386961     proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
386962     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
386963     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

386964     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
386965     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
386966     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
386967     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

386968     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
386969     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
386970     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
386971     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
