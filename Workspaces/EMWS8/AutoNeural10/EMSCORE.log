MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3ONFJN_ 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3ONFJN_ new;
MPRINT(EM_DIAGRAM):   run;
608901     filename emflow
608901   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
608902     *------------------------------------------------------------*;
608903     * AutoNeural10: Scoring DATA data;
608904     *------------------------------------------------------------*;
608905     data EMWS8.AutoNeural10_TRAIN
608906     / view=EMWS8.AutoNeural10_TRAIN
608907     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_TRAIN / view=EMWS8.AutoNeural10_TRAIN ;
608908     set EMWS8.Meta_TRAIN
608909     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
608910     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
608911    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
608912    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
608913    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
608914    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
608915    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
608916    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
608917    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
608918    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
608919    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
608920    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
608921    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
608922    +LENGTH _WARN_ $4
608923    +      F_DepVar  $ 12
608924    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
608925    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
608926    +
608927    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
608928    +
608929    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
608930    +
608931    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
608932    +
608933    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
608934    +
608935    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
608936    +
608937    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
608938    +
608939    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
608940    +
608941    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
608942    +
608943    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
608944    +
608945    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
608946    +
608947    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
608948    +
608949    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
608950    +
608951    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
608952    +
608953    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
608954    +
608955    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
608956    +
608957    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
608958    +
608959    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
608960    +
608961    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
608962    +
608963    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
608964    +
608965    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
608966    +
608967    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
608968    +
608969    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
608970    +
608971    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
608972    +
608973    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
608974    +
608975    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
608976    +
608977    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
608978    +
608979    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
608980    +
608981    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
608982    +
608983    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
608984    +
608985    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
608986    +
608987    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
608988    +
608989    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
608990    +
608991    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
608992    +
608993    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
608994    +
608995    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
608996    +
608997    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
608998    +
608999    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
609000    +
609001    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
609002    +
609003    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
609004    +
609005    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
609006    +
609007    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
609008    +
609009    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
609010    +
609011    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
609012    +
609013    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
609014    +
609015    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
609016    +
609017    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
609018    +
609019    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
609020    +
609021    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
609022    +
609023    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
609024    +
609025    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
609026    +
609027    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
609028    +
609029    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
609030    +
609031    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
609032    +
609033    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
609034    +
609035    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
609036    +
609037    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
609038    +
609039    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
609040    +
609041    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
609042    +
609043    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
609044    +
609045    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
609046    +
609047    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
609048    +
609049    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
609050    +
609051    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
609052    +
609053    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
609054    +
609055    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
609056    +
609057    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
609058    +
609059    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
609060    +
609061    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
609062    +
609063    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
609064    +
609065    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
609066    +
609067    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
609068    +
609069    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
609070    +
609071    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
609072    +
609073    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
609074    +
609075    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
609076    +
609077    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
609078    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
609079    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
609080    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
609081    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609083    +end;
MPRINT(EM_DIAGRAM):   end;
609084    +else do;
MPRINT(EM_DIAGRAM):   else do;
609085    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609086    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
609087    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609088    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609089    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
609090    +   end;
MPRINT(EM_DIAGRAM):   end;
609091    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609092    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
609093    +   end;
MPRINT(EM_DIAGRAM):   end;
609094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609095    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
609096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609098    +   end;
MPRINT(EM_DIAGRAM):   end;
609099    +end;
MPRINT(EM_DIAGRAM):   end;
609100    +
609101    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
609102    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
609103    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
609104    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
609105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609107    +end;
MPRINT(EM_DIAGRAM):   end;
609108    +else do;
MPRINT(EM_DIAGRAM):   else do;
609109    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609110    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
609111    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609112    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609113    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
609114    +   end;
MPRINT(EM_DIAGRAM):   end;
609115    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609116    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
609117    +   end;
MPRINT(EM_DIAGRAM):   end;
609118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609119    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
609120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609122    +   end;
MPRINT(EM_DIAGRAM):   end;
609123    +end;
MPRINT(EM_DIAGRAM):   end;
609124    +
609125    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
609126    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
609127    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
609128    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
609129    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609130    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609131    +end;
MPRINT(EM_DIAGRAM):   end;
609132    +else do;
MPRINT(EM_DIAGRAM):   else do;
609133    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609134    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
609135    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609136    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609137    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
609138    +   end;
MPRINT(EM_DIAGRAM):   end;
609139    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609140    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
609141    +   end;
MPRINT(EM_DIAGRAM):   end;
609142    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609143    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
609144    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609145    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609146    +   end;
MPRINT(EM_DIAGRAM):   end;
609147    +end;
MPRINT(EM_DIAGRAM):   end;
609148    +
609149    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
609150    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
609151    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
609152    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
609153    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609154    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609155    +end;
MPRINT(EM_DIAGRAM):   end;
609156    +else do;
MPRINT(EM_DIAGRAM):   else do;
609157    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609158    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
609159    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609160    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609161    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
609162    +   end;
MPRINT(EM_DIAGRAM):   end;
609163    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609164    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
609165    +   end;
MPRINT(EM_DIAGRAM):   end;
609166    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609167    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
609168    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609169    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609170    +   end;
MPRINT(EM_DIAGRAM):   end;
609171    +end;
MPRINT(EM_DIAGRAM):   end;
609172    +
609173    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
609174    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
609175    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
609176    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
609177    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609178    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609179    +end;
MPRINT(EM_DIAGRAM):   end;
609180    +else do;
MPRINT(EM_DIAGRAM):   else do;
609181    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609182    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
609183    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609184    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609185    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
609186    +   end;
MPRINT(EM_DIAGRAM):   end;
609187    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609188    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
609189    +   end;
MPRINT(EM_DIAGRAM):   end;
609190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609191    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
609192    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609193    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609194    +   end;
MPRINT(EM_DIAGRAM):   end;
609195    +end;
MPRINT(EM_DIAGRAM):   end;
609196    +
609197    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
609198    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
609199    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
609200    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
609201    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609202    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609203    +end;
MPRINT(EM_DIAGRAM):   end;
609204    +else do;
MPRINT(EM_DIAGRAM):   else do;
609205    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609206    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
609207    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609208    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609209    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
609210    +   end;
MPRINT(EM_DIAGRAM):   end;
609211    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609212    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
609213    +   end;
MPRINT(EM_DIAGRAM):   end;
609214    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609215    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
609216    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609217    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609218    +   end;
MPRINT(EM_DIAGRAM):   end;
609219    +end;
MPRINT(EM_DIAGRAM):   end;
609220    +
609221    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
609222    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
609223    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
609224    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
609225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609227    +end;
MPRINT(EM_DIAGRAM):   end;
609228    +else do;
MPRINT(EM_DIAGRAM):   else do;
609229    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609230    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
609231    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609232    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
609233    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
609234    +   end;
MPRINT(EM_DIAGRAM):   end;
609235    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
609236    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
609237    +   end;
MPRINT(EM_DIAGRAM):   end;
609238    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609239    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
609240    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609241    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609242    +   end;
MPRINT(EM_DIAGRAM):   end;
609243    +end;
MPRINT(EM_DIAGRAM):   end;
609244    +
609245    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
609246    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
609247    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
609248    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
609249    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
609250    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
609251    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
609252    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
609253    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
609254    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
609255    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
609256    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
609257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609259    +end;
MPRINT(EM_DIAGRAM):   end;
609260    +else do;
MPRINT(EM_DIAGRAM):   else do;
609261    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
609262    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
609263    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609264    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
609265    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
609266    +   end;
MPRINT(EM_DIAGRAM):   end;
609267    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
609268    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
609269    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
609270    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
609271    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
609272    +   end;
MPRINT(EM_DIAGRAM):   end;
609273    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
609274    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
609275    +   end;
MPRINT(EM_DIAGRAM):   end;
609276    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
609277    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
609278    +   end;
MPRINT(EM_DIAGRAM):   end;
609279    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
609280    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
609281    +   end;
MPRINT(EM_DIAGRAM):   end;
609282    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609283    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
609284    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
609285    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
609286    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
609287    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609288    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609289    +   end;
MPRINT(EM_DIAGRAM):   end;
609290    +end;
MPRINT(EM_DIAGRAM):   end;
609291    +
609292    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
609293    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
609294    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
609295    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
609296    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
609297    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
609298    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
609299    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
609300    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
609301    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
609302    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
609303    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
609304    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
609305    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609306    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609307    +end;
MPRINT(EM_DIAGRAM):   end;
609308    +else do;
MPRINT(EM_DIAGRAM):   else do;
609309    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
609310    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
609311    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609312    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
609313    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
609314    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
609315    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
609316    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
609317    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609318    +         end;
MPRINT(EM_DIAGRAM):   end;
609319    +         else do;
MPRINT(EM_DIAGRAM):   else do;
609320    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
609321    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
609322    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609323    +            end;
MPRINT(EM_DIAGRAM):   end;
609324    +         end;
MPRINT(EM_DIAGRAM):   end;
609325    +      end;
MPRINT(EM_DIAGRAM):   end;
609326    +      else do;
MPRINT(EM_DIAGRAM):   else do;
609327    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
609328    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
609329    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609330    +         end;
MPRINT(EM_DIAGRAM):   end;
609331    +      end;
MPRINT(EM_DIAGRAM):   end;
609332    +   end;
MPRINT(EM_DIAGRAM):   end;
609333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609334    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
609335    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
609336    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609337    +      end;
MPRINT(EM_DIAGRAM):   end;
609338    +      else do;
MPRINT(EM_DIAGRAM):   else do;
609339    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
609340    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
609341    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
609342    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
609343    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
609344    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609345    +         end;
MPRINT(EM_DIAGRAM):   end;
609346    +      end;
MPRINT(EM_DIAGRAM):   end;
609347    +   end;
MPRINT(EM_DIAGRAM):   end;
609348    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
609349    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
609350    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
609351    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
609352    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
609353    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609354    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609355    +   end;
MPRINT(EM_DIAGRAM):   end;
609356    +end;
MPRINT(EM_DIAGRAM):   end;
609357    +
609358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609359    +*** Checking missing input Interval
609360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
609361    +
609362    +IF NMISS(
609363    +   AcceptedCmpTotal ,
609364    +   Age ,
609365    +   Frq ,
609366    +   Income ,
609367    +   Kidhome ,
609368    +   Mnt ,
609369    +   MntFishProducts ,
609370    +   MntFruits ,
609371    +   MntGoldProds ,
609372    +   MntMeatProducts ,
609373    +   MntSweetProducts ,
609374    +   MntWines ,
609375    +   MonthsAsCustomer ,
609376    +   NumCatalogPurchases ,
609377    +   NumDealsPurchases ,
609378    +   NumDistPurchases ,
609379    +   NumStorePurchases ,
609380    +   NumWebPurchases ,
609381    +   NumWebVisitsMonth ,
609382    +   RFMstat ,
609383    +   RMntFrq ,
609384    +   Recency ,
609385    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
609386    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
609387    +
609388    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609389    +END;
MPRINT(EM_DIAGRAM):   END;
609390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609391    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
609392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609393    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609394    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
609395    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
609396    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
609397    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
609398    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
609399    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
609400    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
609401    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
609402    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
609403    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
609404    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
609405    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
609406    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
609407    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
609408    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
609409    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
609410    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
609411    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
609412    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
609413    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
609414    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
609415    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
609416    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
609417    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
609418    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
609419    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
609420    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
609421    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
609422    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
609423    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
609424    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
609425    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
609426    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
609427    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
609428    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
609429    +END;
MPRINT(EM_DIAGRAM):   END;
609430    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609431    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
609432    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
609433    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
609434    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
609435    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
609436    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
609437    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
609438    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
609439    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
609440    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
609441    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
609442    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
609443    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
609444    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
609445    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
609446    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
609447    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
609448    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
609449    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
609450    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
609451    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
609452    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
609453    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
609454    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
609455    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
609456    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
609457    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
609458    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
609459    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
609460    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
609461    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
609462    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
609463    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
609464    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
609465    +   ELSE S_NumCatalogPurchases
609466    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
609467    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
609468    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
609469    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
609470    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
609471    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
609472    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
609473    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
609474    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
609475    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
609476    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
609477    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
609478    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
609479    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
609480    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
609481    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
609482    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
609483    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
609484    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
609485    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
609486    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
609487    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
609488    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
609489    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
609490    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
609491    +END;
MPRINT(EM_DIAGRAM):   END;
609492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609493    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
609494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609495    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609496    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
609497    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609499    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
609500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609501    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609502    +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
609503    +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
609504    +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
609505    +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
609506    +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
609507    +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
609508    +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
609509    +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
609510    +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
609511    +          +     3.45371614080196 * S_NumDealsPurchases
609512    +          +     0.19118374544537 * S_NumDistPurchases
609513    +          +    -2.45138001446793 * S_NumStorePurchases
609514    +          +    -0.11424280244155 * S_NumWebPurchases
609515    +          +    -2.31770357716565 * S_NumWebVisitsMonth
609516    +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
609517    +        S_RMntFrq  +     0.26870809438679 * S_Recency
609518    +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
609519    +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
609520    +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
609521    +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
609522    +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
609523    +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
609524    +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
609525    +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
609526    +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
609527    +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
609528    +          +    -1.28390925647659 * S_NumDealsPurchases
609529    +          +     0.82669177239926 * S_NumDistPurchases
609530    +          +     1.71678585204511 * S_NumStorePurchases
609531    +          +     1.49226295608046 * S_NumWebPurchases
609532    +          +     -4.0105103018388 * S_NumWebVisitsMonth
609533    +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
609534    +        S_RMntFrq  +     4.74241121363086 * S_Recency
609535    +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
609536    +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
609537    +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
609538    +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
609539    +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
609540    +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
609541    +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
609542    +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
609543    +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
609544    +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
609545    +          +     0.22958626391725 * S_NumDealsPurchases
609546    +          +    -0.02046515813996 * S_NumDistPurchases
609547    +          +      0.8618502050837 * S_NumStorePurchases
609548    +          +     1.45175370326009 * S_NumWebPurchases
609549    +          +    -0.86122442436156 * S_NumWebVisitsMonth
609550    +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
609551    +        S_RMntFrq  +    -0.08202178452839 * S_Recency
609552    +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
609553    +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
609554    +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
609555    +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
609556    +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
609557    +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
609558    +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
609559    +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
609560    +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
609561    +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
609562    +          +     1.25310034610344 * S_NumDealsPurchases
609563    +          +     0.92141098602176 * S_NumDistPurchases
609564    +          +    -0.08806509391473 * S_NumStorePurchases
609565    +          +     -1.0533787624668 * S_NumWebPurchases
609566    +          +     3.07050739830585 * S_NumWebVisitsMonth
609567    +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
609568    +        S_RMntFrq  +     -3.8741602707981 * S_Recency
609569    +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
609570    +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
609571    +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
609572    +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
609573    +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
609574    +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
609575    +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
609576    +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
609577    +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
609578    +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
609579    +          +    -1.68259553608287 * S_NumDealsPurchases
609580    +          +    -0.53835572290445 * S_NumDistPurchases
609581    +          +     1.25833922835446 * S_NumStorePurchases
609582    +          +     0.48300830623998 * S_NumWebPurchases
609583    +          +    -2.20119275236582 * S_NumWebVisitsMonth
609584    +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
609585    +        S_RMntFrq  +     0.35692712879409 * S_Recency
609586    +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
609587    +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
609588    +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
609589    +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
609590    +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
609591    +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
609592    +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
609593    +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
609594    +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
609595    +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
609596    +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
609597    +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
609598    +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
609599    +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
609600    +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
609601    +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
609602    +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
609603    +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
609604    +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
609605    +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
609606    +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
609607    +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
609608    +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
609609    +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
609610    +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
609611    +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
609612    +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
609613    +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
609614    +        EducationGraduation  +     1.25189584055994 * EducationMaster
609615    +          +     0.26230568150721 * Marital_StatusDivorced
609616    +          +     0.27563523967756 * Marital_StatusMarried
609617    +          +     0.54464481618478 * Marital_StatusSingle
609618    +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
609619    +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
609620    +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
609621    +        EducationGraduation  +     0.29772013614284 * EducationMaster
609622    +          +    -0.06750661313108 * Marital_StatusDivorced
609623    +          +     1.48628445854207 * Marital_StatusMarried
609624    +          +    -0.52197797291165 * Marital_StatusSingle
609625    +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
609626    +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
609627    +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
609628    +        EducationGraduation  +     0.45665087056809 * EducationMaster
609629    +          +     0.03219453957597 * Marital_StatusDivorced
609630    +          +    -0.73835008216677 * Marital_StatusMarried
609631    +          +     0.11212575818086 * Marital_StatusSingle
609632    +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
609633    +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
609634    +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
609635    +        EducationGraduation  +    -1.00228990059701 * EducationMaster
609636    +          +    -0.95055539413405 * Marital_StatusDivorced
609637    +          +    -1.65922419336067 * Marital_StatusMarried
609638    +          +     0.78727538125107 * Marital_StatusSingle
609639    +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
609640    +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
609641    +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
609642    +        EducationGraduation  +     0.46710355433642 * EducationMaster
609643    +          +     -4.1747415035634 * Marital_StatusDivorced
609644    +          +     3.61194282451968 * Marital_StatusMarried
609645    +          +     -3.2800495365546 * Marital_StatusSingle
609646    +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
609647    +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
609648    +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
609649    +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
609650    +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
609651    +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
609652    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
609653    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
609654    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
609655    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
609656    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
609657    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
609658    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
609659    +END;
MPRINT(EM_DIAGRAM):   END;
609660    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609661    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
609662    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
609663    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
609664    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
609665    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
609666    +END;
MPRINT(EM_DIAGRAM):   END;
609667    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609668    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
609669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609670    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609671    +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
609672    +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
609673    +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
609674    +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
609675    +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
609676    +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
609677    +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
609678    +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
609679    +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
609680    +          +     1.29727972396867 * S_NumDealsPurchases
609681    +          +     -0.4796144286007 * S_NumDistPurchases
609682    +          +     0.88365985808591 * S_NumStorePurchases
609683    +          +     0.68522096892804 * S_NumWebPurchases
609684    +          +     0.54931043107798 * S_NumWebVisitsMonth
609685    +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
609686    +        S_RMntFrq  +     2.35704770144328 * S_Recency
609687    +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
609688    +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
609689    +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
609690    +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
609691    +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
609692    +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
609693    +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
609694    +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
609695    +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
609696    +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
609697    +          +     0.26997834581422 * S_NumDealsPurchases
609698    +          +      1.4974894627406 * S_NumDistPurchases
609699    +          +     0.20577850505638 * S_NumStorePurchases
609700    +          +     0.67578530037026 * S_NumWebPurchases
609701    +          +     1.48893165613941 * S_NumWebVisitsMonth
609702    +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
609703    +        S_RMntFrq  +    -1.40718347701522 * S_Recency
609704    +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
609705    +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
609706    +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
609707    +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
609708    +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
609709    +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
609710    +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
609711    +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
609712    +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
609713    +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
609714    +          +    -0.75474919633886 * S_NumDealsPurchases
609715    +          +     2.21872386475638 * S_NumDistPurchases
609716    +          +    -0.36191460108989 * S_NumStorePurchases
609717    +          +     0.03160010932412 * S_NumWebPurchases
609718    +          +     0.00984650739909 * S_NumWebVisitsMonth
609719    +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
609720    +        S_RMntFrq  +     0.97890474913417 * S_Recency
609721    +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
609722    +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
609723    +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
609724    +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
609725    +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
609726    +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
609727    +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
609728    +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
609729    +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
609730    +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
609731    +          +    -1.12057357865269 * S_NumDealsPurchases
609732    +          +    -0.70841760614521 * S_NumDistPurchases
609733    +          +    -1.39174816270404 * S_NumStorePurchases
609734    +          +    -1.62343249380806 * S_NumWebPurchases
609735    +          +    -0.73097954508465 * S_NumWebVisitsMonth
609736    +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
609737    +        S_RMntFrq  +    -1.13585643618227 * S_Recency
609738    +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
609739    +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
609740    +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
609741    +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
609742    +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
609743    +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
609744    +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
609745    +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
609746    +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
609747    +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
609748    +          +     0.66880481485557 * S_NumDealsPurchases
609749    +          +     0.69540174544859 * S_NumDistPurchases
609750    +          +     1.68246546921736 * S_NumStorePurchases
609751    +          +     1.85958176898295 * S_NumWebPurchases
609752    +          +    -0.23815810306565 * S_NumWebVisitsMonth
609753    +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
609754    +        S_RMntFrq  +    -2.12360922264332 * S_Recency
609755    +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
609756    +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
609757    +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
609758    +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
609759    +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
609760    +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
609761    +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
609762    +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
609763    +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
609764    +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
609765    +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
609766    +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
609767    +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
609768    +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
609769    +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
609770    +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
609771    +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
609772    +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
609773    +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
609774    +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
609775    +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
609776    +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
609777    +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
609778    +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
609779    +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
609780    +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
609781    +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
609782    +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
609783    +        EducationGraduation  +     0.32623787352656 * EducationMaster
609784    +          +      0.2766977476799 * Marital_StatusDivorced
609785    +          +     0.99585126449473 * Marital_StatusMarried
609786    +          +    -0.71244490682808 * Marital_StatusSingle
609787    +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
609788    +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
609789    +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
609790    +        EducationGraduation  +     0.47239961039918 * EducationMaster
609791    +          +     0.04724779113048 * Marital_StatusDivorced
609792    +          +    -0.80186231440666 * Marital_StatusMarried
609793    +          +    -0.02226793584171 * Marital_StatusSingle
609794    +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
609795    +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
609796    +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
609797    +        EducationGraduation  +     0.41284540548646 * EducationMaster
609798    +          +     0.28206835683721 * Marital_StatusDivorced
609799    +          +     0.46500886756532 * Marital_StatusMarried
609800    +          +     0.35327545255503 * Marital_StatusSingle
609801    +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
609802    +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
609803    +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
609804    +        EducationGraduation  +    -0.29812527209479 * EducationMaster
609805    +          +     1.22291788006392 * Marital_StatusDivorced
609806    +          +    -2.27040720272432 * Marital_StatusMarried
609807    +          +     1.13606780043773 * Marital_StatusSingle
609808    +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
609809    +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
609810    +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
609811    +        EducationGraduation  +      0.4909097120378 * EducationMaster
609812    +          +     -0.3999800759199 * Marital_StatusDivorced
609813    +          +    -0.40978271635345 * Marital_StatusMarried
609814    +          +    -0.55524279444227 * Marital_StatusSingle
609815    +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
609816    +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
609817    +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
609818    +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
609819    +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
609820    +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
609821    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
609822    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
609823    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
609824    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
609825    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
609826    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
609827    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
609828    +END;
MPRINT(EM_DIAGRAM):   END;
609829    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609830    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
609831    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
609832    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
609833    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
609834    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
609835    +END;
MPRINT(EM_DIAGRAM):   END;
609836    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609837    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
609838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609839    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609840    +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
609841    +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
609842    +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
609843    +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
609844    +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
609845    +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
609846    +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
609847    +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
609848    +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
609849    +          +     0.15783958682465 * S_NumDealsPurchases
609850    +          +     1.52124708558457 * S_NumDistPurchases
609851    +          +     -1.3804418313581 * S_NumStorePurchases
609852    +          +    -1.29570111649272 * S_NumWebPurchases
609853    +          +    -0.64280706056547 * S_NumWebVisitsMonth
609854    +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
609855    +        S_RMntFrq  +    -0.06726660535826 * S_Recency
609856    +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
609857    +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
609858    +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
609859    +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
609860    +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
609861    +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
609862    +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
609863    +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
609864    +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
609865    +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
609866    +          +     0.12337111358286 * S_NumDealsPurchases
609867    +          +     -2.3848926094027 * S_NumDistPurchases
609868    +          +    -1.20666646996433 * S_NumStorePurchases
609869    +          +     0.89549302881365 * S_NumWebPurchases
609870    +          +     0.95359042569947 * S_NumWebVisitsMonth
609871    +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
609872    +        S_RMntFrq  +     0.17682790616815 * S_Recency
609873    +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
609874    +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
609875    +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
609876    +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
609877    +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
609878    +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
609879    +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
609880    +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
609881    +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
609882    +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
609883    +          +    -1.05383642674948 * S_NumDealsPurchases
609884    +          +     1.71861984509369 * S_NumDistPurchases
609885    +          +     1.47595181536047 * S_NumStorePurchases
609886    +          +    -1.64165005491178 * S_NumWebPurchases
609887    +          +    -2.35130004742828 * S_NumWebVisitsMonth
609888    +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
609889    +        S_RMntFrq  +    -1.27356615687944 * S_Recency
609890    +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
609891    +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
609892    +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
609893    +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
609894    +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
609895    +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
609896    +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
609897    +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
609898    +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
609899    +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
609900    +          +     0.13347794794222 * S_NumDealsPurchases
609901    +          +     0.30533639886561 * S_NumDistPurchases
609902    +          +     1.63892955540526 * S_NumStorePurchases
609903    +          +     0.43734586516446 * S_NumWebPurchases
609904    +          +     1.79260779802864 * S_NumWebVisitsMonth
609905    +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
609906    +        S_RMntFrq  +    -0.32271271703746 * S_Recency
609907    +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
609908    +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
609909    +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
609910    +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
609911    +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
609912    +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
609913    +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
609914    +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
609915    +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
609916    +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
609917    +          +     1.64209094349557 * S_NumDealsPurchases
609918    +          +    -0.38876870460627 * S_NumDistPurchases
609919    +          +    -0.48559309584971 * S_NumStorePurchases
609920    +          +     0.21254626353218 * S_NumWebPurchases
609921    +          +    -0.71484448532542 * S_NumWebVisitsMonth
609922    +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
609923    +        S_RMntFrq  +     0.44893411588775 * S_Recency
609924    +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
609925    +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
609926    +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
609927    +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
609928    +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
609929    +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
609930    +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
609931    +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
609932    +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
609933    +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
609934    +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
609935    +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
609936    +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
609937    +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
609938    +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
609939    +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
609940    +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
609941    +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
609942    +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
609943    +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
609944    +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
609945    +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
609946    +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
609947    +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
609948    +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
609949    +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
609950    +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
609951    +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
609952    +        EducationGraduation  +     0.46887304015863 * EducationMaster
609953    +          +     1.33953173091973 * Marital_StatusDivorced
609954    +          +    -0.26253208073262 * Marital_StatusMarried
609955    +          +    -0.00960552682431 * Marital_StatusSingle
609956    +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
609957    +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
609958    +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
609959    +        EducationGraduation  +     1.05325310300372 * EducationMaster
609960    +          +     1.43150850334311 * Marital_StatusDivorced
609961    +          +    -0.69239127844934 * Marital_StatusMarried
609962    +          +     2.08477562471559 * Marital_StatusSingle
609963    +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
609964    +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
609965    +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
609966    +        EducationGraduation  +     1.80436924796338 * EducationMaster
609967    +          +     1.08387556786168 * Marital_StatusDivorced
609968    +          +      1.0283506000217 * Marital_StatusMarried
609969    +          +    -0.87069431107983 * Marital_StatusSingle
609970    +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
609971    +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
609972    +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
609973    +        EducationGraduation  +    -1.53859265107051 * EducationMaster
609974    +          +      -1.347780188307 * Marital_StatusDivorced
609975    +          +    -0.53911983240372 * Marital_StatusMarried
609976    +          +     0.22083074159185 * Marital_StatusSingle
609977    +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
609978    +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
609979    +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
609980    +        EducationGraduation  +      1.6087631135774 * EducationMaster
609981    +          +     1.46582538311384 * Marital_StatusDivorced
609982    +          +     0.05256161016002 * Marital_StatusMarried
609983    +          +    -1.21402967626877 * Marital_StatusSingle
609984    +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
609985    +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
609986    +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
609987    +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
609988    +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
609989    +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
609990    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
609991    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
609992    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
609993    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
609994    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
609995    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
609996    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
609997    +END;
MPRINT(EM_DIAGRAM):   END;
609998    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609999    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
610000    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
610001    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
610002    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
610003    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
610004    +END;
MPRINT(EM_DIAGRAM):   END;
610005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610006    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
610007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610008    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610009    +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
610010    +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
610011    +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
610012    +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
610013    +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
610014    +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
610015    +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
610016    +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
610017    +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
610018    +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
610019    +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
610020    +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
610021    +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
610022    +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
610023    +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
610024    +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
610025    +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
610026    +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
610027    +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
610028    +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
610029    +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
610030    +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
610031    +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
610032    +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
610033    +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
610034    +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
610035    +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
610036    +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
610037    +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
610038    +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
610039    +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
610040    +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
610041    +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
610042    +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
610043    +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
610044    +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
610045    +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
610046    +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
610047    +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
610048    +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
610049    +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
610050    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
610051    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
610052    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
610053    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
610054    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
610055    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
610056    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
610057    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
610058    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
610059    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
610060    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
610061    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
610062    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
610063    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
610064    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
610065    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
610066    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
610067    +END;
MPRINT(EM_DIAGRAM):   END;
610068    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610069    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
610070    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
610071    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
610072    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
610073    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
610074    +END;
MPRINT(EM_DIAGRAM):   END;
610075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610076    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
610077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610078    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610079    +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
610080    +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
610081    +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
610082    +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
610083    +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
610084    +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
610085    +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
610086    +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
610087    +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
610088    +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
610089    +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
610090    +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
610091    +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
610092    +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
610093    +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
610094    +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
610095    +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
610096    +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
610097    +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
610098    +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
610099    +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
610100    +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
610101    +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
610102    +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
610103    +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
610104    +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
610105    +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
610106    +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
610107    +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
610108    +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
610109    +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
610110    +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
610111    +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
610112    +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
610113    +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
610114    +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
610115    +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
610116    +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
610117    +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
610118    +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
610119    +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
610120    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
610121    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
610122    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
610123    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
610124    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
610125    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
610126    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
610127    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
610128    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
610129    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
610130    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
610131    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
610132    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
610133    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
610134    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
610135    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
610136    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
610137    +END;
MPRINT(EM_DIAGRAM):   END;
610138    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610139    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
610140    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
610141    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
610142    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
610143    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
610144    +END;
MPRINT(EM_DIAGRAM):   END;
610145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610146    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
610147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610148    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610149    +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
610150    +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
610151    +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
610152    +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
610153    +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
610154    +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
610155    +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
610156    +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
610157    +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
610158    +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
610159    +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
610160    +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
610161    +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
610162    +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
610163    +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
610164    +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
610165    +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
610166    +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
610167    +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
610168    +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
610169    +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
610170    +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
610171    +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
610172    +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
610173    +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
610174    +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
610175    +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
610176    +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
610177    +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
610178    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
610179    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
610180    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
610181    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
610182    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
610183    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
610184    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
610185    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
610186    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
610187    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
610188    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
610189    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
610190    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
610191    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
610192    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
610193    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
610194    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
610195    +END;
MPRINT(EM_DIAGRAM):   END;
610196    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610197    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
610198    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
610199    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
610200    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
610201    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
610202    +END;
MPRINT(EM_DIAGRAM):   END;
610203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610204    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
610205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610206    +
610207    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
610208    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
610209    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
610210    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
610211    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
610212    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610213    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
610214    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
610215    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
610216    +end;
MPRINT(EM_DIAGRAM):   end;
610217    +else do;
MPRINT(EM_DIAGRAM):   else do;
610218    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
610219    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
610220    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
610221    +   end;
MPRINT(EM_DIAGRAM):   end;
610222    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
610223    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
610224    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
610225    +   end;
MPRINT(EM_DIAGRAM):   end;
610226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610227    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
610228    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
610229    +   end;
MPRINT(EM_DIAGRAM):   end;
610230    +end;
MPRINT(EM_DIAGRAM):   end;
610231    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610232    +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
610233    +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
610234    +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
610235    +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
610236    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
610237    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
610238    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
610239    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
610240    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
610241    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
610242    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
610243    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
610244    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
610245    +END;
MPRINT(EM_DIAGRAM):   END;
610246    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610247    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
610248    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
610249    +END;
MPRINT(EM_DIAGRAM):   END;
610250    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
610251    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
610252    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
610253    +END;
MPRINT(EM_DIAGRAM):   END;
610254    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
610255    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
610256    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
610257    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
610258    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
610259    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
610260    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
610261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610262    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
610263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610264    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
610265    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
610266    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
610267    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
610268    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
610269    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
610270    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
610271    +END;
MPRINT(EM_DIAGRAM):   END;
610272    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
610273    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
610274    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
610275    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
610276     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
610277     quit;
610278     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
610279     filename emflow
610279   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
610280     *------------------------------------------------------------*;
610281     * AutoNeural10: Scoring VALIDATE data;
610282     *------------------------------------------------------------*;
610283     data EMWS8.AutoNeural10_VALIDATE
610284     / view=EMWS8.AutoNeural10_VALIDATE
610285     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_VALIDATE / view=EMWS8.AutoNeural10_VALIDATE ;
610286     set EMWS8.Meta_VALIDATE
610287     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
610288     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
610289    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
610290    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
610291    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
610292    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
610293    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
610294    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
610295    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
610296    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
610297    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
610298    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
610299    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
610300    +LENGTH _WARN_ $4
610301    +      F_DepVar  $ 12
610302    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
610303    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
610304    +
610305    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
610306    +
610307    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
610308    +
610309    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
610310    +
610311    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
610312    +
610313    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
610314    +
610315    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
610316    +
610317    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
610318    +
610319    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
610320    +
610321    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
610322    +
610323    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
610324    +
610325    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
610326    +
610327    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
610328    +
610329    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
610330    +
610331    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
610332    +
610333    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
610334    +
610335    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
610336    +
610337    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
610338    +
610339    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
610340    +
610341    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
610342    +
610343    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
610344    +
610345    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
610346    +
610347    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
610348    +
610349    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
610350    +
610351    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
610352    +
610353    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
610354    +
610355    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
610356    +
610357    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
610358    +
610359    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
610360    +
610361    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
610362    +
610363    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
610364    +
610365    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
610366    +
610367    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
610368    +
610369    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
610370    +
610371    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
610372    +
610373    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
610374    +
610375    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
610376    +
610377    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
610378    +
610379    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
610380    +
610381    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
610382    +
610383    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
610384    +
610385    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
610386    +
610387    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
610388    +
610389    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
610390    +
610391    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
610392    +
610393    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
610394    +
610395    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
610396    +
610397    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
610398    +
610399    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
610400    +
610401    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
610402    +
610403    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
610404    +
610405    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
610406    +
610407    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
610408    +
610409    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
610410    +
610411    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
610412    +
610413    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
610414    +
610415    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
610416    +
610417    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
610418    +
610419    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
610420    +
610421    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
610422    +
610423    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
610424    +
610425    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
610426    +
610427    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
610428    +
610429    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
610430    +
610431    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
610432    +
610433    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
610434    +
610435    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
610436    +
610437    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
610438    +
610439    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
610440    +
610441    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
610442    +
610443    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
610444    +
610445    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
610446    +
610447    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
610448    +
610449    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
610450    +
610451    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
610452    +
610453    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
610454    +
610455    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
610456    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
610457    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
610458    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
610459    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610460    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610461    +end;
MPRINT(EM_DIAGRAM):   end;
610462    +else do;
MPRINT(EM_DIAGRAM):   else do;
610463    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610464    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
610465    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610466    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610467    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
610468    +   end;
MPRINT(EM_DIAGRAM):   end;
610469    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610470    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
610471    +   end;
MPRINT(EM_DIAGRAM):   end;
610472    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610473    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
610474    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610475    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610476    +   end;
MPRINT(EM_DIAGRAM):   end;
610477    +end;
MPRINT(EM_DIAGRAM):   end;
610478    +
610479    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
610480    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
610481    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
610482    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
610483    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610484    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610485    +end;
MPRINT(EM_DIAGRAM):   end;
610486    +else do;
MPRINT(EM_DIAGRAM):   else do;
610487    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610488    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
610489    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610490    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610491    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
610492    +   end;
MPRINT(EM_DIAGRAM):   end;
610493    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610494    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
610495    +   end;
MPRINT(EM_DIAGRAM):   end;
610496    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610497    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
610498    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610499    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610500    +   end;
MPRINT(EM_DIAGRAM):   end;
610501    +end;
MPRINT(EM_DIAGRAM):   end;
610502    +
610503    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
610504    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
610505    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
610506    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
610507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610509    +end;
MPRINT(EM_DIAGRAM):   end;
610510    +else do;
MPRINT(EM_DIAGRAM):   else do;
610511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610512    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
610513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610514    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610515    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
610516    +   end;
MPRINT(EM_DIAGRAM):   end;
610517    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610518    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
610519    +   end;
MPRINT(EM_DIAGRAM):   end;
610520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610521    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
610522    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610523    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610524    +   end;
MPRINT(EM_DIAGRAM):   end;
610525    +end;
MPRINT(EM_DIAGRAM):   end;
610526    +
610527    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
610528    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
610529    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
610530    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
610531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610533    +end;
MPRINT(EM_DIAGRAM):   end;
610534    +else do;
MPRINT(EM_DIAGRAM):   else do;
610535    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610536    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
610537    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610538    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610539    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
610540    +   end;
MPRINT(EM_DIAGRAM):   end;
610541    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610542    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
610543    +   end;
MPRINT(EM_DIAGRAM):   end;
610544    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610545    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
610546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610548    +   end;
MPRINT(EM_DIAGRAM):   end;
610549    +end;
MPRINT(EM_DIAGRAM):   end;
610550    +
610551    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
610552    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
610553    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
610554    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
610555    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610556    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610557    +end;
MPRINT(EM_DIAGRAM):   end;
610558    +else do;
MPRINT(EM_DIAGRAM):   else do;
610559    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610560    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
610561    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610562    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610563    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
610564    +   end;
MPRINT(EM_DIAGRAM):   end;
610565    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610566    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
610567    +   end;
MPRINT(EM_DIAGRAM):   end;
610568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610569    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
610570    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610571    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610572    +   end;
MPRINT(EM_DIAGRAM):   end;
610573    +end;
MPRINT(EM_DIAGRAM):   end;
610574    +
610575    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
610576    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
610577    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
610578    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
610579    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610580    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610581    +end;
MPRINT(EM_DIAGRAM):   end;
610582    +else do;
MPRINT(EM_DIAGRAM):   else do;
610583    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610584    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
610585    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610586    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610587    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
610588    +   end;
MPRINT(EM_DIAGRAM):   end;
610589    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610590    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
610591    +   end;
MPRINT(EM_DIAGRAM):   end;
610592    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610593    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
610594    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610595    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610596    +   end;
MPRINT(EM_DIAGRAM):   end;
610597    +end;
MPRINT(EM_DIAGRAM):   end;
610598    +
610599    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
610600    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
610601    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
610602    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
610603    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610604    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610605    +end;
MPRINT(EM_DIAGRAM):   end;
610606    +else do;
MPRINT(EM_DIAGRAM):   else do;
610607    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610608    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
610609    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610610    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
610611    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
610612    +   end;
MPRINT(EM_DIAGRAM):   end;
610613    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
610614    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
610615    +   end;
MPRINT(EM_DIAGRAM):   end;
610616    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610617    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
610618    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610619    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610620    +   end;
MPRINT(EM_DIAGRAM):   end;
610621    +end;
MPRINT(EM_DIAGRAM):   end;
610622    +
610623    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
610624    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
610625    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
610626    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
610627    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
610628    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
610629    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
610630    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
610631    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
610632    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
610633    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
610634    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
610635    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610637    +end;
MPRINT(EM_DIAGRAM):   end;
610638    +else do;
MPRINT(EM_DIAGRAM):   else do;
610639    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
610640    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
610641    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610642    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
610643    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
610644    +   end;
MPRINT(EM_DIAGRAM):   end;
610645    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
610646    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
610647    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
610648    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
610649    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
610650    +   end;
MPRINT(EM_DIAGRAM):   end;
610651    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
610652    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
610653    +   end;
MPRINT(EM_DIAGRAM):   end;
610654    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
610655    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
610656    +   end;
MPRINT(EM_DIAGRAM):   end;
610657    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
610658    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
610659    +   end;
MPRINT(EM_DIAGRAM):   end;
610660    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610661    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
610662    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
610663    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
610664    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
610665    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610666    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610667    +   end;
MPRINT(EM_DIAGRAM):   end;
610668    +end;
MPRINT(EM_DIAGRAM):   end;
610669    +
610670    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
610671    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
610672    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
610673    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
610674    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
610675    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
610676    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
610677    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
610678    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
610679    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
610680    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
610681    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
610682    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
610683    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610684    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610685    +end;
MPRINT(EM_DIAGRAM):   end;
610686    +else do;
MPRINT(EM_DIAGRAM):   else do;
610687    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
610688    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
610689    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610690    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
610691    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
610692    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
610693    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
610694    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
610695    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610696    +         end;
MPRINT(EM_DIAGRAM):   end;
610697    +         else do;
MPRINT(EM_DIAGRAM):   else do;
610698    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
610699    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
610700    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610701    +            end;
MPRINT(EM_DIAGRAM):   end;
610702    +         end;
MPRINT(EM_DIAGRAM):   end;
610703    +      end;
MPRINT(EM_DIAGRAM):   end;
610704    +      else do;
MPRINT(EM_DIAGRAM):   else do;
610705    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
610706    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
610707    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610708    +         end;
MPRINT(EM_DIAGRAM):   end;
610709    +      end;
MPRINT(EM_DIAGRAM):   end;
610710    +   end;
MPRINT(EM_DIAGRAM):   end;
610711    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610712    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
610713    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
610714    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610715    +      end;
MPRINT(EM_DIAGRAM):   end;
610716    +      else do;
MPRINT(EM_DIAGRAM):   else do;
610717    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
610718    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
610719    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
610720    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
610721    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
610722    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610723    +         end;
MPRINT(EM_DIAGRAM):   end;
610724    +      end;
MPRINT(EM_DIAGRAM):   end;
610725    +   end;
MPRINT(EM_DIAGRAM):   end;
610726    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
610727    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
610728    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
610729    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
610730    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
610731    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610732    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610733    +   end;
MPRINT(EM_DIAGRAM):   end;
610734    +end;
MPRINT(EM_DIAGRAM):   end;
610735    +
610736    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610737    +*** Checking missing input Interval
610738    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
610739    +
610740    +IF NMISS(
610741    +   AcceptedCmpTotal ,
610742    +   Age ,
610743    +   Frq ,
610744    +   Income ,
610745    +   Kidhome ,
610746    +   Mnt ,
610747    +   MntFishProducts ,
610748    +   MntFruits ,
610749    +   MntGoldProds ,
610750    +   MntMeatProducts ,
610751    +   MntSweetProducts ,
610752    +   MntWines ,
610753    +   MonthsAsCustomer ,
610754    +   NumCatalogPurchases ,
610755    +   NumDealsPurchases ,
610756    +   NumDistPurchases ,
610757    +   NumStorePurchases ,
610758    +   NumWebPurchases ,
610759    +   NumWebVisitsMonth ,
610760    +   RFMstat ,
610761    +   RMntFrq ,
610762    +   Recency ,
610763    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
610764    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
610765    +
610766    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610767    +END;
MPRINT(EM_DIAGRAM):   END;
610768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610769    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
610770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610771    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610772    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
610773    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
610774    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
610775    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
610776    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
610777    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
610778    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
610779    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
610780    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
610781    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
610782    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
610783    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
610784    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
610785    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
610786    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
610787    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
610788    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
610789    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
610790    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
610791    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
610792    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
610793    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
610794    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
610795    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
610796    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
610797    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
610798    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
610799    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
610800    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
610801    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
610802    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
610803    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
610804    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
610805    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
610806    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
610807    +END;
MPRINT(EM_DIAGRAM):   END;
610808    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610809    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
610810    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
610811    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
610812    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
610813    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
610814    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
610815    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
610816    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
610817    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
610818    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
610819    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
610820    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
610821    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
610822    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
610823    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
610824    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
610825    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
610826    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
610827    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
610828    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
610829    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
610830    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
610831    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
610832    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
610833    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
610834    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
610835    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
610836    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
610837    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
610838    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
610839    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
610840    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
610841    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
610842    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
610843    +   ELSE S_NumCatalogPurchases
610844    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
610845    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
610846    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
610847    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
610848    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
610849    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
610850    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
610851    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
610852    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
610853    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
610854    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
610855    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
610856    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
610857    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
610858    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
610859    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
610860    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
610861    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
610862    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
610863    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
610864    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
610865    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
610866    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
610867    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
610868    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
610869    +END;
MPRINT(EM_DIAGRAM):   END;
610870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610871    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
610872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610873    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610874    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
610875    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610877    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
610878    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610879    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610880    +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
610881    +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
610882    +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
610883    +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
610884    +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
610885    +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
610886    +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
610887    +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
610888    +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
610889    +          +     3.45371614080196 * S_NumDealsPurchases
610890    +          +     0.19118374544537 * S_NumDistPurchases
610891    +          +    -2.45138001446793 * S_NumStorePurchases
610892    +          +    -0.11424280244155 * S_NumWebPurchases
610893    +          +    -2.31770357716565 * S_NumWebVisitsMonth
610894    +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
610895    +        S_RMntFrq  +     0.26870809438679 * S_Recency
610896    +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
610897    +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
610898    +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
610899    +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
610900    +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
610901    +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
610902    +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
610903    +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
610904    +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
610905    +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
610906    +          +    -1.28390925647659 * S_NumDealsPurchases
610907    +          +     0.82669177239926 * S_NumDistPurchases
610908    +          +     1.71678585204511 * S_NumStorePurchases
610909    +          +     1.49226295608046 * S_NumWebPurchases
610910    +          +     -4.0105103018388 * S_NumWebVisitsMonth
610911    +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
610912    +        S_RMntFrq  +     4.74241121363086 * S_Recency
610913    +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
610914    +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
610915    +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
610916    +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
610917    +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
610918    +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
610919    +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
610920    +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
610921    +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
610922    +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
610923    +          +     0.22958626391725 * S_NumDealsPurchases
610924    +          +    -0.02046515813996 * S_NumDistPurchases
610925    +          +      0.8618502050837 * S_NumStorePurchases
610926    +          +     1.45175370326009 * S_NumWebPurchases
610927    +          +    -0.86122442436156 * S_NumWebVisitsMonth
610928    +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
610929    +        S_RMntFrq  +    -0.08202178452839 * S_Recency
610930    +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
610931    +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
610932    +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
610933    +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
610934    +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
610935    +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
610936    +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
610937    +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
610938    +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
610939    +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
610940    +          +     1.25310034610344 * S_NumDealsPurchases
610941    +          +     0.92141098602176 * S_NumDistPurchases
610942    +          +    -0.08806509391473 * S_NumStorePurchases
610943    +          +     -1.0533787624668 * S_NumWebPurchases
610944    +          +     3.07050739830585 * S_NumWebVisitsMonth
610945    +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
610946    +        S_RMntFrq  +     -3.8741602707981 * S_Recency
610947    +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
610948    +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
610949    +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
610950    +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
610951    +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
610952    +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
610953    +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
610954    +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
610955    +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
610956    +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
610957    +          +    -1.68259553608287 * S_NumDealsPurchases
610958    +          +    -0.53835572290445 * S_NumDistPurchases
610959    +          +     1.25833922835446 * S_NumStorePurchases
610960    +          +     0.48300830623998 * S_NumWebPurchases
610961    +          +    -2.20119275236582 * S_NumWebVisitsMonth
610962    +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
610963    +        S_RMntFrq  +     0.35692712879409 * S_Recency
610964    +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
610965    +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
610966    +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
610967    +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
610968    +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
610969    +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
610970    +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
610971    +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
610972    +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
610973    +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
610974    +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
610975    +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
610976    +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
610977    +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
610978    +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
610979    +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
610980    +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
610981    +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
610982    +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
610983    +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
610984    +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
610985    +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
610986    +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
610987    +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
610988    +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
610989    +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
610990    +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
610991    +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
610992    +        EducationGraduation  +     1.25189584055994 * EducationMaster
610993    +          +     0.26230568150721 * Marital_StatusDivorced
610994    +          +     0.27563523967756 * Marital_StatusMarried
610995    +          +     0.54464481618478 * Marital_StatusSingle
610996    +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
610997    +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
610998    +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
610999    +        EducationGraduation  +     0.29772013614284 * EducationMaster
611000    +          +    -0.06750661313108 * Marital_StatusDivorced
611001    +          +     1.48628445854207 * Marital_StatusMarried
611002    +          +    -0.52197797291165 * Marital_StatusSingle
611003    +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
611004    +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
611005    +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
611006    +        EducationGraduation  +     0.45665087056809 * EducationMaster
611007    +          +     0.03219453957597 * Marital_StatusDivorced
611008    +          +    -0.73835008216677 * Marital_StatusMarried
611009    +          +     0.11212575818086 * Marital_StatusSingle
611010    +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
611011    +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
611012    +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
611013    +        EducationGraduation  +    -1.00228990059701 * EducationMaster
611014    +          +    -0.95055539413405 * Marital_StatusDivorced
611015    +          +    -1.65922419336067 * Marital_StatusMarried
611016    +          +     0.78727538125107 * Marital_StatusSingle
611017    +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
611018    +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
611019    +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
611020    +        EducationGraduation  +     0.46710355433642 * EducationMaster
611021    +          +     -4.1747415035634 * Marital_StatusDivorced
611022    +          +     3.61194282451968 * Marital_StatusMarried
611023    +          +     -3.2800495365546 * Marital_StatusSingle
611024    +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
611025    +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
611026    +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
611027    +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
611028    +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
611029    +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
611030    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
611031    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
611032    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
611033    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
611034    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
611035    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
611036    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
611037    +END;
MPRINT(EM_DIAGRAM):   END;
611038    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611039    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
611040    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
611041    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
611042    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
611043    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
611044    +END;
MPRINT(EM_DIAGRAM):   END;
611045    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611046    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
611047    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611048    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611049    +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
611050    +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
611051    +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
611052    +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
611053    +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
611054    +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
611055    +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
611056    +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
611057    +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
611058    +          +     1.29727972396867 * S_NumDealsPurchases
611059    +          +     -0.4796144286007 * S_NumDistPurchases
611060    +          +     0.88365985808591 * S_NumStorePurchases
611061    +          +     0.68522096892804 * S_NumWebPurchases
611062    +          +     0.54931043107798 * S_NumWebVisitsMonth
611063    +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
611064    +        S_RMntFrq  +     2.35704770144328 * S_Recency
611065    +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
611066    +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
611067    +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
611068    +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
611069    +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
611070    +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
611071    +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
611072    +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
611073    +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
611074    +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
611075    +          +     0.26997834581422 * S_NumDealsPurchases
611076    +          +      1.4974894627406 * S_NumDistPurchases
611077    +          +     0.20577850505638 * S_NumStorePurchases
611078    +          +     0.67578530037026 * S_NumWebPurchases
611079    +          +     1.48893165613941 * S_NumWebVisitsMonth
611080    +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
611081    +        S_RMntFrq  +    -1.40718347701522 * S_Recency
611082    +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
611083    +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
611084    +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
611085    +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
611086    +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
611087    +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
611088    +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
611089    +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
611090    +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
611091    +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
611092    +          +    -0.75474919633886 * S_NumDealsPurchases
611093    +          +     2.21872386475638 * S_NumDistPurchases
611094    +          +    -0.36191460108989 * S_NumStorePurchases
611095    +          +     0.03160010932412 * S_NumWebPurchases
611096    +          +     0.00984650739909 * S_NumWebVisitsMonth
611097    +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
611098    +        S_RMntFrq  +     0.97890474913417 * S_Recency
611099    +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
611100    +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
611101    +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
611102    +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
611103    +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
611104    +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
611105    +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
611106    +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
611107    +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
611108    +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
611109    +          +    -1.12057357865269 * S_NumDealsPurchases
611110    +          +    -0.70841760614521 * S_NumDistPurchases
611111    +          +    -1.39174816270404 * S_NumStorePurchases
611112    +          +    -1.62343249380806 * S_NumWebPurchases
611113    +          +    -0.73097954508465 * S_NumWebVisitsMonth
611114    +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
611115    +        S_RMntFrq  +    -1.13585643618227 * S_Recency
611116    +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
611117    +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
611118    +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
611119    +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
611120    +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
611121    +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
611122    +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
611123    +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
611124    +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
611125    +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
611126    +          +     0.66880481485557 * S_NumDealsPurchases
611127    +          +     0.69540174544859 * S_NumDistPurchases
611128    +          +     1.68246546921736 * S_NumStorePurchases
611129    +          +     1.85958176898295 * S_NumWebPurchases
611130    +          +    -0.23815810306565 * S_NumWebVisitsMonth
611131    +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
611132    +        S_RMntFrq  +    -2.12360922264332 * S_Recency
611133    +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
611134    +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
611135    +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
611136    +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
611137    +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
611138    +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
611139    +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
611140    +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
611141    +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
611142    +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
611143    +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
611144    +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
611145    +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
611146    +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
611147    +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
611148    +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
611149    +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
611150    +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
611151    +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
611152    +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
611153    +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
611154    +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
611155    +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
611156    +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
611157    +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
611158    +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
611159    +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
611160    +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
611161    +        EducationGraduation  +     0.32623787352656 * EducationMaster
611162    +          +      0.2766977476799 * Marital_StatusDivorced
611163    +          +     0.99585126449473 * Marital_StatusMarried
611164    +          +    -0.71244490682808 * Marital_StatusSingle
611165    +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
611166    +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
611167    +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
611168    +        EducationGraduation  +     0.47239961039918 * EducationMaster
611169    +          +     0.04724779113048 * Marital_StatusDivorced
611170    +          +    -0.80186231440666 * Marital_StatusMarried
611171    +          +    -0.02226793584171 * Marital_StatusSingle
611172    +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
611173    +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
611174    +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
611175    +        EducationGraduation  +     0.41284540548646 * EducationMaster
611176    +          +     0.28206835683721 * Marital_StatusDivorced
611177    +          +     0.46500886756532 * Marital_StatusMarried
611178    +          +     0.35327545255503 * Marital_StatusSingle
611179    +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
611180    +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
611181    +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
611182    +        EducationGraduation  +    -0.29812527209479 * EducationMaster
611183    +          +     1.22291788006392 * Marital_StatusDivorced
611184    +          +    -2.27040720272432 * Marital_StatusMarried
611185    +          +     1.13606780043773 * Marital_StatusSingle
611186    +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
611187    +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
611188    +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
611189    +        EducationGraduation  +      0.4909097120378 * EducationMaster
611190    +          +     -0.3999800759199 * Marital_StatusDivorced
611191    +          +    -0.40978271635345 * Marital_StatusMarried
611192    +          +    -0.55524279444227 * Marital_StatusSingle
611193    +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
611194    +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
611195    +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
611196    +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
611197    +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
611198    +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
611199    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
611200    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
611201    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
611202    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
611203    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
611204    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
611205    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
611206    +END;
MPRINT(EM_DIAGRAM):   END;
611207    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611208    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
611209    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
611210    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
611211    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
611212    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
611213    +END;
MPRINT(EM_DIAGRAM):   END;
611214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611215    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
611216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611217    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611218    +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
611219    +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
611220    +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
611221    +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
611222    +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
611223    +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
611224    +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
611225    +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
611226    +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
611227    +          +     0.15783958682465 * S_NumDealsPurchases
611228    +          +     1.52124708558457 * S_NumDistPurchases
611229    +          +     -1.3804418313581 * S_NumStorePurchases
611230    +          +    -1.29570111649272 * S_NumWebPurchases
611231    +          +    -0.64280706056547 * S_NumWebVisitsMonth
611232    +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
611233    +        S_RMntFrq  +    -0.06726660535826 * S_Recency
611234    +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
611235    +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
611236    +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
611237    +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
611238    +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
611239    +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
611240    +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
611241    +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
611242    +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
611243    +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
611244    +          +     0.12337111358286 * S_NumDealsPurchases
611245    +          +     -2.3848926094027 * S_NumDistPurchases
611246    +          +    -1.20666646996433 * S_NumStorePurchases
611247    +          +     0.89549302881365 * S_NumWebPurchases
611248    +          +     0.95359042569947 * S_NumWebVisitsMonth
611249    +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
611250    +        S_RMntFrq  +     0.17682790616815 * S_Recency
611251    +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
611252    +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
611253    +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
611254    +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
611255    +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
611256    +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
611257    +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
611258    +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
611259    +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
611260    +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
611261    +          +    -1.05383642674948 * S_NumDealsPurchases
611262    +          +     1.71861984509369 * S_NumDistPurchases
611263    +          +     1.47595181536047 * S_NumStorePurchases
611264    +          +    -1.64165005491178 * S_NumWebPurchases
611265    +          +    -2.35130004742828 * S_NumWebVisitsMonth
611266    +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
611267    +        S_RMntFrq  +    -1.27356615687944 * S_Recency
611268    +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
611269    +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
611270    +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
611271    +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
611272    +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
611273    +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
611274    +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
611275    +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
611276    +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
611277    +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
611278    +          +     0.13347794794222 * S_NumDealsPurchases
611279    +          +     0.30533639886561 * S_NumDistPurchases
611280    +          +     1.63892955540526 * S_NumStorePurchases
611281    +          +     0.43734586516446 * S_NumWebPurchases
611282    +          +     1.79260779802864 * S_NumWebVisitsMonth
611283    +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
611284    +        S_RMntFrq  +    -0.32271271703746 * S_Recency
611285    +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
611286    +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
611287    +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
611288    +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
611289    +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
611290    +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
611291    +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
611292    +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
611293    +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
611294    +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
611295    +          +     1.64209094349557 * S_NumDealsPurchases
611296    +          +    -0.38876870460627 * S_NumDistPurchases
611297    +          +    -0.48559309584971 * S_NumStorePurchases
611298    +          +     0.21254626353218 * S_NumWebPurchases
611299    +          +    -0.71484448532542 * S_NumWebVisitsMonth
611300    +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
611301    +        S_RMntFrq  +     0.44893411588775 * S_Recency
611302    +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
611303    +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
611304    +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
611305    +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
611306    +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
611307    +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
611308    +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
611309    +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
611310    +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
611311    +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
611312    +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
611313    +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
611314    +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
611315    +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
611316    +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
611317    +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
611318    +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
611319    +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
611320    +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
611321    +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
611322    +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
611323    +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
611324    +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
611325    +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
611326    +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
611327    +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
611328    +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
611329    +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
611330    +        EducationGraduation  +     0.46887304015863 * EducationMaster
611331    +          +     1.33953173091973 * Marital_StatusDivorced
611332    +          +    -0.26253208073262 * Marital_StatusMarried
611333    +          +    -0.00960552682431 * Marital_StatusSingle
611334    +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
611335    +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
611336    +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
611337    +        EducationGraduation  +     1.05325310300372 * EducationMaster
611338    +          +     1.43150850334311 * Marital_StatusDivorced
611339    +          +    -0.69239127844934 * Marital_StatusMarried
611340    +          +     2.08477562471559 * Marital_StatusSingle
611341    +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
611342    +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
611343    +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
611344    +        EducationGraduation  +     1.80436924796338 * EducationMaster
611345    +          +     1.08387556786168 * Marital_StatusDivorced
611346    +          +      1.0283506000217 * Marital_StatusMarried
611347    +          +    -0.87069431107983 * Marital_StatusSingle
611348    +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
611349    +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
611350    +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
611351    +        EducationGraduation  +    -1.53859265107051 * EducationMaster
611352    +          +      -1.347780188307 * Marital_StatusDivorced
611353    +          +    -0.53911983240372 * Marital_StatusMarried
611354    +          +     0.22083074159185 * Marital_StatusSingle
611355    +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
611356    +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
611357    +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
611358    +        EducationGraduation  +      1.6087631135774 * EducationMaster
611359    +          +     1.46582538311384 * Marital_StatusDivorced
611360    +          +     0.05256161016002 * Marital_StatusMarried
611361    +          +    -1.21402967626877 * Marital_StatusSingle
611362    +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
611363    +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
611364    +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
611365    +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
611366    +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
611367    +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
611368    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
611369    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
611370    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
611371    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
611372    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
611373    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
611374    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
611375    +END;
MPRINT(EM_DIAGRAM):   END;
611376    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611377    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
611378    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
611379    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
611380    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
611381    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
611382    +END;
MPRINT(EM_DIAGRAM):   END;
611383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611384    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
611385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611386    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611387    +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
611388    +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
611389    +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
611390    +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
611391    +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
611392    +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
611393    +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
611394    +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
611395    +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
611396    +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
611397    +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
611398    +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
611399    +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
611400    +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
611401    +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
611402    +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
611403    +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
611404    +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
611405    +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
611406    +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
611407    +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
611408    +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
611409    +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
611410    +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
611411    +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
611412    +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
611413    +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
611414    +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
611415    +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
611416    +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
611417    +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
611418    +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
611419    +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
611420    +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
611421    +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
611422    +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
611423    +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
611424    +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
611425    +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
611426    +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
611427    +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
611428    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
611429    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
611430    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
611431    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
611432    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
611433    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
611434    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
611435    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
611436    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
611437    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
611438    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
611439    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
611440    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
611441    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
611442    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
611443    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
611444    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
611445    +END;
MPRINT(EM_DIAGRAM):   END;
611446    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611447    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
611448    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
611449    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
611450    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
611451    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
611452    +END;
MPRINT(EM_DIAGRAM):   END;
611453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611454    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
611455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611456    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611457    +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
611458    +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
611459    +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
611460    +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
611461    +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
611462    +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
611463    +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
611464    +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
611465    +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
611466    +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
611467    +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
611468    +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
611469    +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
611470    +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
611471    +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
611472    +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
611473    +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
611474    +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
611475    +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
611476    +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
611477    +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
611478    +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
611479    +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
611480    +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
611481    +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
611482    +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
611483    +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
611484    +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
611485    +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
611486    +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
611487    +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
611488    +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
611489    +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
611490    +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
611491    +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
611492    +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
611493    +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
611494    +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
611495    +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
611496    +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
611497    +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
611498    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
611499    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
611500    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
611501    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
611502    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
611503    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
611504    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
611505    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
611506    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
611507    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
611508    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
611509    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
611510    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
611511    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
611512    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
611513    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
611514    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
611515    +END;
MPRINT(EM_DIAGRAM):   END;
611516    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611517    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
611518    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
611519    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
611520    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
611521    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
611522    +END;
MPRINT(EM_DIAGRAM):   END;
611523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611524    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
611525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611526    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611527    +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
611528    +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
611529    +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
611530    +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
611531    +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
611532    +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
611533    +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
611534    +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
611535    +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
611536    +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
611537    +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
611538    +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
611539    +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
611540    +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
611541    +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
611542    +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
611543    +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
611544    +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
611545    +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
611546    +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
611547    +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
611548    +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
611549    +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
611550    +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
611551    +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
611552    +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
611553    +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
611554    +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
611555    +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
611556    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
611557    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
611558    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
611559    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
611560    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
611561    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
611562    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
611563    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
611564    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
611565    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
611566    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
611567    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
611568    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
611569    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
611570    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
611571    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
611572    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
611573    +END;
MPRINT(EM_DIAGRAM):   END;
611574    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611575    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
611576    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
611577    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
611578    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
611579    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
611580    +END;
MPRINT(EM_DIAGRAM):   END;
611581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611582    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
611583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611584    +
611585    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
611586    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
611587    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
611588    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
611589    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
611590    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
611591    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
611592    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
611593    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
611594    +end;
MPRINT(EM_DIAGRAM):   end;
611595    +else do;
MPRINT(EM_DIAGRAM):   else do;
611596    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
611597    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
611598    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
611599    +   end;
MPRINT(EM_DIAGRAM):   end;
611600    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
611601    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
611602    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
611603    +   end;
MPRINT(EM_DIAGRAM):   end;
611604    +   else do;
MPRINT(EM_DIAGRAM):   else do;
611605    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
611606    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
611607    +   end;
MPRINT(EM_DIAGRAM):   end;
611608    +end;
MPRINT(EM_DIAGRAM):   end;
611609    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611610    +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
611611    +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
611612    +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
611613    +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
611614    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
611615    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
611616    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
611617    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
611618    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
611619    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
611620    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
611621    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
611622    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
611623    +END;
MPRINT(EM_DIAGRAM):   END;
611624    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611625    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
611626    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
611627    +END;
MPRINT(EM_DIAGRAM):   END;
611628    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
611629    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
611630    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
611631    +END;
MPRINT(EM_DIAGRAM):   END;
611632    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
611633    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
611634    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
611635    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
611636    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
611637    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
611638    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
611639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611640    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
611641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611642    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
611643    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
611644    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
611645    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
611646    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
611647    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
611648    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
611649    +END;
MPRINT(EM_DIAGRAM):   END;
611650    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
611651    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
611652    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
611653    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
611654     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
611655     quit;
611656     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
611657     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
611658     * AutoNeural10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Computing metadata for TRAIN data;
611659     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural10_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural10_TRAIN out=WORK.M3BVXRWK 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BVXRWK;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BVXRWK(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BVXRWK;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BVXRWK;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2NE_U1X NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RWDLB7(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural10";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
611971     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
611972     set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
611973     where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
611974     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE (DATA='AutoNeural10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

611975     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMINFO;
611976     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
611977     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
611978     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
611982     run;
611983     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
611984     set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
611985     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

611986     proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
611987     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
611988     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

611989     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
611990     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
611991     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

611992     proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
611993     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
611994     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

611995     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
611996     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
611997     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
611998     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

611999     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
612000     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
612001     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
612002     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
