MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.37 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.37 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1GO8J5U 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1GO8J5U new;
MPRINT(EM_DIAGRAM):   run;
370864     filename emflow
370864   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
370865     *------------------------------------------------------------*;
370866     * AutoNeural10: Scoring DATA data;
370867     *------------------------------------------------------------*;
370868     data EMWS8.AutoNeural10_TRAIN
370869     / view=EMWS8.AutoNeural10_TRAIN
370870     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_TRAIN / view=EMWS8.AutoNeural10_TRAIN ;
370871     set EMWS8.Meta_TRAIN
370872     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
370873     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
370874    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
370875    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
370876    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
370877    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
370878    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
370879    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
370880    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
370881    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
370882    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
370883    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
370884    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
370885    +LENGTH _WARN_ $4
370886    +      F_DepVar  $ 12
370887    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
370888    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
370889    +
370890    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
370891    +
370892    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
370893    +
370894    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
370895    +
370896    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
370897    +
370898    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
370899    +
370900    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
370901    +
370902    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
370903    +
370904    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
370905    +
370906    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
370907    +
370908    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
370909    +
370910    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
370911    +
370912    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
370913    +
370914    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
370915    +
370916    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
370917    +
370918    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
370919    +
370920    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
370921    +
370922    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
370923    +
370924    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
370925    +
370926    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
370927    +
370928    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
370929    +
370930    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
370931    +
370932    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
370933    +
370934    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
370935    +
370936    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
370937    +
370938    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
370939    +
370940    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
370941    +
370942    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
370943    +
370944    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
370945    +
370946    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
370947    +
370948    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
370949    +
370950    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
370951    +
370952    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
370953    +
370954    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
370955    +
370956    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
370957    +
370958    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
370959    +
370960    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
370961    +
370962    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
370963    +
370964    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
370965    +
370966    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
370967    +
370968    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
370969    +
370970    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
370971    +
370972    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
370973    +
370974    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
370975    +
370976    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
370977    +
370978    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
370979    +
370980    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
370981    +
370982    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
370983    +
370984    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
370985    +
370986    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
370987    +
370988    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
370989    +
370990    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
370991    +
370992    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
370993    +
370994    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
370995    +
370996    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
370997    +
370998    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
370999    +
371000    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
371001    +
371002    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
371003    +
371004    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
371005    +
371006    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
371007    +
371008    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
371009    +
371010    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
371011    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
371012    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
371013    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
371014    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371015    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371016    +end;
MPRINT(EM_DIAGRAM):   end;
371017    +else do;
MPRINT(EM_DIAGRAM):   else do;
371018    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371019    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
371020    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371021    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371022    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
371023    +   end;
MPRINT(EM_DIAGRAM):   end;
371024    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371025    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
371026    +   end;
MPRINT(EM_DIAGRAM):   end;
371027    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371028    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
371029    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371030    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371031    +   end;
MPRINT(EM_DIAGRAM):   end;
371032    +end;
MPRINT(EM_DIAGRAM):   end;
371033    +
371034    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
371035    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
371036    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
371037    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
371038    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371039    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371040    +end;
MPRINT(EM_DIAGRAM):   end;
371041    +else do;
MPRINT(EM_DIAGRAM):   else do;
371042    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371043    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
371044    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371045    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371046    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
371047    +   end;
MPRINT(EM_DIAGRAM):   end;
371048    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371049    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
371050    +   end;
MPRINT(EM_DIAGRAM):   end;
371051    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371052    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
371053    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371054    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371055    +   end;
MPRINT(EM_DIAGRAM):   end;
371056    +end;
MPRINT(EM_DIAGRAM):   end;
371057    +
371058    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
371059    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
371060    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
371061    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
371062    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371063    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371064    +end;
MPRINT(EM_DIAGRAM):   end;
371065    +else do;
MPRINT(EM_DIAGRAM):   else do;
371066    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371067    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
371068    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371069    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371070    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
371071    +   end;
MPRINT(EM_DIAGRAM):   end;
371072    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371073    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
371074    +   end;
MPRINT(EM_DIAGRAM):   end;
371075    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371076    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
371077    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371078    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371079    +   end;
MPRINT(EM_DIAGRAM):   end;
371080    +end;
MPRINT(EM_DIAGRAM):   end;
371081    +
371082    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
371083    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
371084    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
371085    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
371086    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371087    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371088    +end;
MPRINT(EM_DIAGRAM):   end;
371089    +else do;
MPRINT(EM_DIAGRAM):   else do;
371090    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371091    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
371092    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371093    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371094    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
371095    +   end;
MPRINT(EM_DIAGRAM):   end;
371096    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371097    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
371098    +   end;
MPRINT(EM_DIAGRAM):   end;
371099    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371100    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
371101    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371102    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371103    +   end;
MPRINT(EM_DIAGRAM):   end;
371104    +end;
MPRINT(EM_DIAGRAM):   end;
371105    +
371106    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
371107    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
371108    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
371109    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
371110    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371111    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371112    +end;
MPRINT(EM_DIAGRAM):   end;
371113    +else do;
MPRINT(EM_DIAGRAM):   else do;
371114    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371115    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
371116    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371117    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371118    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
371119    +   end;
MPRINT(EM_DIAGRAM):   end;
371120    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371121    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
371122    +   end;
MPRINT(EM_DIAGRAM):   end;
371123    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371124    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
371125    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371126    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371127    +   end;
MPRINT(EM_DIAGRAM):   end;
371128    +end;
MPRINT(EM_DIAGRAM):   end;
371129    +
371130    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
371131    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
371132    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
371133    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
371134    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371135    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371136    +end;
MPRINT(EM_DIAGRAM):   end;
371137    +else do;
MPRINT(EM_DIAGRAM):   else do;
371138    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371139    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
371140    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371141    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371142    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
371143    +   end;
MPRINT(EM_DIAGRAM):   end;
371144    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371145    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
371146    +   end;
MPRINT(EM_DIAGRAM):   end;
371147    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371148    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
371149    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371150    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371151    +   end;
MPRINT(EM_DIAGRAM):   end;
371152    +end;
MPRINT(EM_DIAGRAM):   end;
371153    +
371154    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
371155    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
371156    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
371157    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
371158    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371159    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371160    +end;
MPRINT(EM_DIAGRAM):   end;
371161    +else do;
MPRINT(EM_DIAGRAM):   else do;
371162    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371163    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
371164    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371165    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
371166    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
371167    +   end;
MPRINT(EM_DIAGRAM):   end;
371168    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
371169    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
371170    +   end;
MPRINT(EM_DIAGRAM):   end;
371171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371172    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
371173    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371174    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371175    +   end;
MPRINT(EM_DIAGRAM):   end;
371176    +end;
MPRINT(EM_DIAGRAM):   end;
371177    +
371178    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
371179    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
371180    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
371181    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
371182    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
371183    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
371184    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
371185    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
371186    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
371187    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
371188    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
371189    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
371190    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371191    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371192    +end;
MPRINT(EM_DIAGRAM):   end;
371193    +else do;
MPRINT(EM_DIAGRAM):   else do;
371194    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
371195    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
371196    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371197    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
371198    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
371199    +   end;
MPRINT(EM_DIAGRAM):   end;
371200    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
371201    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
371202    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
371203    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
371204    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
371205    +   end;
MPRINT(EM_DIAGRAM):   end;
371206    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
371207    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
371208    +   end;
MPRINT(EM_DIAGRAM):   end;
371209    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
371210    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
371211    +   end;
MPRINT(EM_DIAGRAM):   end;
371212    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
371213    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
371214    +   end;
MPRINT(EM_DIAGRAM):   end;
371215    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371216    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
371217    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
371218    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
371219    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
371220    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371221    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371222    +   end;
MPRINT(EM_DIAGRAM):   end;
371223    +end;
MPRINT(EM_DIAGRAM):   end;
371224    +
371225    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
371226    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
371227    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
371228    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
371229    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
371230    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
371231    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
371232    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
371233    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
371234    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
371235    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
371236    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
371237    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
371238    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371239    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371240    +end;
MPRINT(EM_DIAGRAM):   end;
371241    +else do;
MPRINT(EM_DIAGRAM):   else do;
371242    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
371243    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
371244    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371245    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
371246    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
371247    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
371248    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
371249    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
371250    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371251    +         end;
MPRINT(EM_DIAGRAM):   end;
371252    +         else do;
MPRINT(EM_DIAGRAM):   else do;
371253    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
371254    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
371255    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371256    +            end;
MPRINT(EM_DIAGRAM):   end;
371257    +         end;
MPRINT(EM_DIAGRAM):   end;
371258    +      end;
MPRINT(EM_DIAGRAM):   end;
371259    +      else do;
MPRINT(EM_DIAGRAM):   else do;
371260    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
371261    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
371262    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371263    +         end;
MPRINT(EM_DIAGRAM):   end;
371264    +      end;
MPRINT(EM_DIAGRAM):   end;
371265    +   end;
MPRINT(EM_DIAGRAM):   end;
371266    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371267    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
371268    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
371269    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371270    +      end;
MPRINT(EM_DIAGRAM):   end;
371271    +      else do;
MPRINT(EM_DIAGRAM):   else do;
371272    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
371273    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
371274    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
371275    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
371276    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
371277    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371278    +         end;
MPRINT(EM_DIAGRAM):   end;
371279    +      end;
MPRINT(EM_DIAGRAM):   end;
371280    +   end;
MPRINT(EM_DIAGRAM):   end;
371281    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
371282    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
371283    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
371284    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
371285    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
371286    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371287    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371288    +   end;
MPRINT(EM_DIAGRAM):   end;
371289    +end;
MPRINT(EM_DIAGRAM):   end;
371290    +
371291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371292    +*** Checking missing input Interval
371293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
371294    +
371295    +IF NMISS(
371296    +   AcceptedCmpTotal ,
371297    +   Age ,
371298    +   Frq ,
371299    +   Income ,
371300    +   Kidhome ,
371301    +   Mnt ,
371302    +   MntFishProducts ,
371303    +   MntFruits ,
371304    +   MntGoldProds ,
371305    +   MntMeatProducts ,
371306    +   MntSweetProducts ,
371307    +   MntWines ,
371308    +   MonthsAsCustomer ,
371309    +   NumCatalogPurchases ,
371310    +   NumDealsPurchases ,
371311    +   NumDistPurchases ,
371312    +   NumStorePurchases ,
371313    +   NumWebPurchases ,
371314    +   NumWebVisitsMonth ,
371315    +   RFMstat ,
371316    +   RMntFrq ,
371317    +   Recency ,
371318    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
371319    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
371320    +
371321    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371322    +END;
MPRINT(EM_DIAGRAM):   END;
371323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371324    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
371325    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371326    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371327    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
371328    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
371329    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
371330    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
371331    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
371332    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
371333    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
371334    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
371335    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
371336    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
371337    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
371338    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
371339    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
371340    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
371341    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
371342    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
371343    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
371344    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
371345    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
371346    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
371347    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
371348    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
371349    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
371350    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
371351    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
371352    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
371353    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
371354    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
371355    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
371356    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
371357    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
371358    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
371359    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
371360    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
371361    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
371362    +END;
MPRINT(EM_DIAGRAM):   END;
371363    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371364    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
371365    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
371366    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
371367    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
371368    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
371369    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
371370    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
371371    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
371372    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
371373    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
371374    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
371375    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
371376    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
371377    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
371378    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
371379    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
371380    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
371381    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
371382    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
371383    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
371384    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
371385    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
371386    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
371387    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
371388    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
371389    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
371390    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
371391    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
371392    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
371393    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
371394    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
371395    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
371396    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
371397    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
371398    +   ELSE S_NumCatalogPurchases
371399    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
371400    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
371401    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
371402    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
371403    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
371404    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
371405    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
371406    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
371407    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
371408    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
371409    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
371410    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
371411    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
371412    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
371413    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
371414    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
371415    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
371416    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
371417    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
371418    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
371419    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
371420    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
371421    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
371422    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
371423    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
371424    +END;
MPRINT(EM_DIAGRAM):   END;
371425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371426    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
371427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371429    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
371430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371432    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
371433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371434    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371435    +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
371436    +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
371437    +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
371438    +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
371439    +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
371440    +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
371441    +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
371442    +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
371443    +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
371444    +          +      3.4758215776031 * S_NumDealsPurchases
371445    +          +     0.17094021755289 * S_NumDistPurchases
371446    +          +    -2.72090095694641 * S_NumStorePurchases
371447    +          +    -0.31877935826328 * S_NumWebPurchases
371448    +          +    -2.03399974412918 * S_NumWebVisitsMonth
371449    +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
371450    +        S_RMntFrq  +     0.29064555076615 * S_Recency
371451    +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 * 
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome 
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 * 
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts + 
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 * 
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 * 
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 * 
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 * 
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq + 
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
371452    +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
371453    +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
371454    +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
371455    +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
371456    +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
371457    +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
371458    +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
371459    +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
371460    +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
371461    +          +    -1.21013804197082 * S_NumDealsPurchases
371462    +          +     0.59974279122188 * S_NumDistPurchases
371463    +          +     1.92425710681156 * S_NumStorePurchases
371464    +          +     1.02413182452324 * S_NumWebPurchases
371465    +          +    -3.63276285340174 * S_NumWebVisitsMonth
371466    +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
371467    +        S_RMntFrq  +     3.87352563099005 * S_Recency
371468    +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 * 
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome 
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 * 
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts + 
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 * 
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 * 
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 * 
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 * 
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq + 
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
371469    +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
371470    +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
371471    +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
371472    +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
371473    +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
371474    +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
371475    +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
371476    +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
371477    +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
371478    +          +      0.4928343071801 * S_NumDealsPurchases
371479    +          +     -0.0196677325409 * S_NumDistPurchases
371480    +          +     0.44395828164873 * S_NumStorePurchases
371481    +          +     0.86947051591224 * S_NumWebPurchases
371482    +          +    -0.96787241206077 * S_NumWebVisitsMonth
371483    +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
371484    +        S_RMntFrq  +     0.24582117217188 * S_Recency
371485    +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 * 
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome 
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 * 
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts + 
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 * 
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 * 
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 * 
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 * 
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq + 
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
371486    +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
371487    +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
371488    +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
371489    +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
371490    +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
371491    +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
371492    +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
371493    +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
371494    +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
371495    +          +     1.10280977051932 * S_NumDealsPurchases
371496    +          +     0.99310057404036 * S_NumDistPurchases
371497    +          +    -0.05647459609331 * S_NumStorePurchases
371498    +          +    -0.89852483938631 * S_NumWebPurchases
371499    +          +     2.63022480227445 * S_NumWebVisitsMonth
371500    +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
371501    +        S_RMntFrq  +    -4.46436997560659 * S_Recency
371502    +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 * 
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome 
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 * 
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts + 
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 * 
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 * 
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 * 
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 * 
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq + 
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
371503    +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
371504    +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
371505    +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
371506    +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
371507    +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
371508    +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
371509    +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
371510    +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
371511    +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
371512    +          +    -2.62220616180571 * S_NumDealsPurchases
371513    +          +    -0.51737930835331 * S_NumDistPurchases
371514    +          +     0.88655783158133 * S_NumStorePurchases
371515    +          +     0.35132468809969 * S_NumWebPurchases
371516    +          +     -1.6320869675862 * S_NumWebVisitsMonth
371517    +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
371518    +        S_RMntFrq  +     1.06226028677401 * S_Recency
371519    +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 * 
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 * 
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843 
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts + 
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 * 
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 * 
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 * 
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 * 
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq + 
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
371520    +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
371521    +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
371522    +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
371523    +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
371524    +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 * 
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 + 
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 * 
HigherEducationBinary0 ;
371525    +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
371526    +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
371527    +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
371528    +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
371529    +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 * 
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 + 
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 * 
HigherEducationBinary0 ;
371530    +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
371531    +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
371532    +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
371533    +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
371534    +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 * 
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 + 
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 * 
HigherEducationBinary0 ;
371535    +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
371536    +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
371537    +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
371538    +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
371539    +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306 
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 + 
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 * 
HigherEducationBinary0 ;
371540    +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
371541    +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
371542    +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
371543    +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
371544    +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 * 
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 + 
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 * 
HigherEducationBinary0 ;
371545    +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
371546    +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
371547    +        EducationGraduation  +     1.42539292513854 * EducationMaster
371548    +          +     0.34809919741136 * Marital_StatusDivorced
371549    +          +    -0.26594093535929 * Marital_StatusMarried
371550    +          +     0.70249715999987 * Marital_StatusSingle
371551    +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle + 
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854 
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 * 
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 * 
Marital_StatusTogether ;
371552    +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
371553    +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
371554    +        EducationGraduation  +    -0.28204692640004 * EducationMaster
371555    +          +    -0.20448765627193 * Marital_StatusDivorced
371556    +          +     1.73231344674733 * Marital_StatusMarried
371557    +          +    -0.70956480480373 * Marital_StatusSingle
371558    +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle + 
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004 
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 * 
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 * 
Marital_StatusTogether ;
371559    +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
371560    +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
371561    +        EducationGraduation  +     1.01284161768787 * EducationMaster
371562    +          +     0.30333818684353 * Marital_StatusDivorced
371563    +          +    -1.44603535988199 * Marital_StatusMarried
371564    +          +     0.48409598426383 * Marital_StatusSingle
371565    +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle + 
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation + 
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced + 
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle + 
-1.14528682521622 * Marital_StatusTogether ;
371566    +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
371567    +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
371568    +        EducationGraduation  +    -1.17735200022013 * EducationMaster
371569    +          +     -1.5342907846297 * Marital_StatusDivorced
371570    +          +    -1.79544684592172 * Marital_StatusMarried
371571    +          +     0.65604313645117 * Marital_StatusSingle
371572    +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle + 
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013 
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 * 
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 * 
Marital_StatusTogether ;
371573    +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
371574    +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
371575    +        EducationGraduation  +     0.09618331198762 * EducationMaster
371576    +          +    -3.97940893560267 * Marital_StatusDivorced
371577    +          +      3.5880254142663 * Marital_StatusMarried
371578    +          +     -2.9897737730927 * Marital_StatusSingle
371579    +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle + 
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762 
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 * 
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 * 
Marital_StatusTogether ;
371580    +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
371581    +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
371582    +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
371583    +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
371584    +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
371585    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
371586    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
371587    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
371588    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
371589    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
371590    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
371591    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
371592    +END;
MPRINT(EM_DIAGRAM):   END;
371593    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371594    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
371595    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
371596    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
371597    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
371598    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
371599    +END;
MPRINT(EM_DIAGRAM):   END;
371600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371601    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
371602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371603    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371604    +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
371605    +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
371606    +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
371607    +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
371608    +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
371609    +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
371610    +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
371611    +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
371612    +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
371613    +          +     0.07279889333775 * S_NumDealsPurchases
371614    +          +     0.07542203992452 * S_NumDistPurchases
371615    +          +     0.16296239303342 * S_NumStorePurchases
371616    +          +     1.59193921229231 * S_NumWebPurchases
371617    +          +    -0.35227839362603 * S_NumWebVisitsMonth
371618    +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
371619    +        S_RMntFrq  +     0.43315770276588 * S_Recency
371620    +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 * 
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 * 
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts + 
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 * 
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines + 
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases + 
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases + 
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases + 
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 * 
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
371621    +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
371622    +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
371623    +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
371624    +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
371625    +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
371626    +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
371627    +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
371628    +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
371629    +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
371630    +          +    -0.37456959251084 * S_NumDealsPurchases
371631    +          +    -1.15252469975668 * S_NumDistPurchases
371632    +          +    -1.39822501888899 * S_NumStorePurchases
371633    +          +    -0.32777847360723 * S_NumWebPurchases
371634    +          +     0.84026499832926 * S_NumWebVisitsMonth
371635    +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
371636    +        S_RMntFrq  +     1.21016626691186 * S_Recency
371637    +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 * 
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome 
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 * 
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts + 
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 * 
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 * 
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 * 
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 * 
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq + 
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
371638    +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
371639    +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
371640    +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
371641    +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
371642    +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
371643    +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
371644    +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
371645    +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
371646    +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
371647    +          +     1.14090099538367 * S_NumDealsPurchases
371648    +          +     -0.2600155774492 * S_NumDistPurchases
371649    +          +     1.31362002392113 * S_NumStorePurchases
371650    +          +     1.31465307763555 * S_NumWebPurchases
371651    +          +    -0.18041623858351 * S_NumWebVisitsMonth
371652    +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
371653    +        S_RMntFrq  +    -0.81910738140729 * S_Recency
371654    +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 * 
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome 
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 * 
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts + 
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 * 
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 * 
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 * 
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 * 
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq + 
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
371655    +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
371656    +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
371657    +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
371658    +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
371659    +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
371660    +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
371661    +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
371662    +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
371663    +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
371664    +          +     1.06486073796679 * S_NumDealsPurchases
371665    +          +    -0.04890191247577 * S_NumDistPurchases
371666    +          +     0.86871320720698 * S_NumStorePurchases
371667    +          +     0.03183587281884 * S_NumWebPurchases
371668    +          +     -0.4863802923315 * S_NumWebVisitsMonth
371669    +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
371670    +        S_RMntFrq  +     0.17186861211542 * S_Recency
371671    +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 * 
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome 
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 * 
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts + 
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 * 
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 * 
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 * 
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 * 
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq + 
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
371672    +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
371673    +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
371674    +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
371675    +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
371676    +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
371677    +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
371678    +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
371679    +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
371680    +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
371681    +          +    -0.01160267590349 * S_NumDealsPurchases
371682    +          +    -0.92773075463083 * S_NumDistPurchases
371683    +          +    -0.83326680533995 * S_NumStorePurchases
371684    +          +    -1.16991058954473 * S_NumWebPurchases
371685    +          +    -2.07771165573723 * S_NumWebVisitsMonth
371686    +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
371687    +        S_RMntFrq  +     0.80165981122986 * S_Recency
371688    +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 * 
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome 
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 * 
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts + 
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 * 
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 * 
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 * 
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 * 
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq + 
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
371689    +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
371690    +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
371691    +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
371692    +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
371693    +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 * 
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 + 
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 * 
HigherEducationBinary0 ;
371694    +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
371695    +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
371696    +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
371697    +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
371698    +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277 
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 + 
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 * 
HigherEducationBinary0 ;
371699    +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
371700    +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
371701    +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
371702    +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
371703    +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 * 
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 + 
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 * 
HigherEducationBinary0 ;
371704    +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
371705    +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
371706    +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
371707    +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
371708    +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089 
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 + 
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 * 
HigherEducationBinary0 ;
371709    +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
371710    +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
371711    +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
371712    +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
371713    +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 * 
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 + 
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 * 
HigherEducationBinary0 ;
371714    +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
371715    +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
371716    +        EducationGraduation  +    -0.22397098444024 * EducationMaster
371717    +          +    -0.10361472385198 * Marital_StatusDivorced
371718    +          +     0.05574820877885 * Marital_StatusMarried
371719    +          +     0.13130988205279 * Marital_StatusSingle
371720    +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle + 
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024 
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 * 
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 * 
Marital_StatusTogether ;
371721    +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
371722    +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
371723    +        EducationGraduation  +     1.44983505587452 * EducationMaster
371724    +          +      0.0059353523794 * Marital_StatusDivorced
371725    +          +    -0.59379435051653 * Marital_StatusMarried
371726    +          +    -1.93587108708999 * Marital_StatusSingle
371727    +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle + 
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452 
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 * 
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 * 
Marital_StatusTogether ;
371728    +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
371729    +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
371730    +        EducationGraduation  +     0.16497026569775 * EducationMaster
371731    +          +    -0.74333797840386 * Marital_StatusDivorced
371732    +          +    -0.93061135117658 * Marital_StatusMarried
371733    +          +     1.04024182655844 * Marital_StatusSingle
371734    +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle + 
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775 
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 * 
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 * 
Marital_StatusTogether ;
371735    +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
371736    +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
371737    +        EducationGraduation  +     1.71196178631559 * EducationMaster
371738    +          +    -3.01050675344463 * Marital_StatusDivorced
371739    +          +      0.1638723582239 * Marital_StatusMarried
371740    +          +     0.94548468360304 * Marital_StatusSingle
371741    +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle + 
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559 
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 * 
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 * 
Marital_StatusTogether ;
371742    +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
371743    +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
371744    +        EducationGraduation  +     0.57450456442662 * EducationMaster
371745    +          +    -1.37013926274158 * Marital_StatusDivorced
371746    +          +    -0.34168970042779 * Marital_StatusMarried
371747    +          +     0.63383683543962 * Marital_StatusSingle
371748    +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle + 
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662 
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 * 
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 * 
Marital_StatusTogether ;
371749    +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
371750    +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
371751    +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
371752    +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
371753    +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
371754    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
371755    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
371756    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
371757    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
371758    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
371759    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
371760    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
371761    +END;
MPRINT(EM_DIAGRAM):   END;
371762    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371763    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
371764    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
371765    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
371766    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
371767    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
371768    +END;
MPRINT(EM_DIAGRAM):   END;
371769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371770    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
371771    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371772    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371773    +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
371774    +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
371775    +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 + 
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
371776    +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
371777    +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
371778    +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 + 
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
371779    +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
371780    +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
371781    +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 + 
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
371782    +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
371783    +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
371784    +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 + 
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
371785    +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
371786    +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
371787    +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 + 
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
371788    +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
371789    +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
371790    +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2 
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
371791    +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
371792    +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
371793    +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2 
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
371794    +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
371795    +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
371796    +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2 
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
371797    +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
371798    +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
371799    +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2 
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
371800    +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
371801    +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
371802    +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2 
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
371803    +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
371804    +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
371805    +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
371806    +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
371807    +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
371808    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
371809    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
371810    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
371811    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
371812    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
371813    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
371814    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
371815    +END;
MPRINT(EM_DIAGRAM):   END;
371816    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371817    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
371818    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
371819    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
371820    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
371821    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
371822    +END;
MPRINT(EM_DIAGRAM):   END;
371823    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371824    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
371825    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371826    +
371827    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
371828    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
371829    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
371830    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
371831    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
371832    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371833    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
371834    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
371835    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
371836    +end;
MPRINT(EM_DIAGRAM):   end;
371837    +else do;
MPRINT(EM_DIAGRAM):   else do;
371838    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
371839    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
371840    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
371841    +   end;
MPRINT(EM_DIAGRAM):   end;
371842    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
371843    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
371844    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
371845    +   end;
MPRINT(EM_DIAGRAM):   end;
371846    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371847    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
371848    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
371849    +   end;
MPRINT(EM_DIAGRAM):   end;
371850    +end;
MPRINT(EM_DIAGRAM):   end;
371851    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371852    +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
371853    +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
371854    +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 + 
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
371855    +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
371856    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
371857    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
371858    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
371859    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
371860    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
371861    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
371862    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
371863    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
371864    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
371865    +END;
MPRINT(EM_DIAGRAM):   END;
371866    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371867    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
371868    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
371869    +END;
MPRINT(EM_DIAGRAM):   END;
371870    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
371871    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
371872    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
371873    +END;
MPRINT(EM_DIAGRAM):   END;
371874    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
371875    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
371876    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
371877    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
371878    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
371879    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
371880    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
371881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371882    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
371883    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371884    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
371885    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
371886    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
371887    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
371888    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
371889    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
371890    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
371891    +END;
MPRINT(EM_DIAGRAM):   END;
371892    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371893    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
371894    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371895    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
371896     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
371897     quit;
371898     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
371899     filename emflow
371899   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371900     *------------------------------------------------------------*;
371901     * AutoNeural10: Scoring VALIDATE data;
371902     *------------------------------------------------------------*;
371903     data EMWS8.AutoNeural10_VALIDATE
371904     / view=EMWS8.AutoNeural10_VALIDATE
371905     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_VALIDATE / view=EMWS8.AutoNeural10_VALIDATE ;
371906     set EMWS8.Meta_VALIDATE
371907     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
371908     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
371909    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
371910    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
371911    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
371912    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
371913    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
371914    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
371915    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
371916    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
371917    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
371918    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
371919    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
371920    +LENGTH _WARN_ $4
371921    +      F_DepVar  $ 12
371922    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
371923    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
371924    +
371925    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
371926    +
371927    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
371928    +
371929    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
371930    +
371931    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
371932    +
371933    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
371934    +
371935    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
371936    +
371937    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
371938    +
371939    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
371940    +
371941    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
371942    +
371943    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
371944    +
371945    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
371946    +
371947    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
371948    +
371949    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
371950    +
371951    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
371952    +
371953    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
371954    +
371955    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
371956    +
371957    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
371958    +
371959    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
371960    +
371961    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
371962    +
371963    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
371964    +
371965    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
371966    +
371967    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
371968    +
371969    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
371970    +
371971    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
371972    +
371973    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
371974    +
371975    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
371976    +
371977    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
371978    +
371979    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
371980    +
371981    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
371982    +
371983    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
371984    +
371985    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
371986    +
371987    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
371988    +
371989    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
371990    +
371991    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
371992    +
371993    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
371994    +
371995    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
371996    +
371997    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
371998    +
371999    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
372000    +
372001    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
372002    +
372003    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
372004    +
372005    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
372006    +
372007    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
372008    +
372009    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
372010    +
372011    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
372012    +
372013    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
372014    +
372015    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
372016    +
372017    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
372018    +
372019    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
372020    +
372021    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
372022    +
372023    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
372024    +
372025    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
372026    +
372027    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
372028    +
372029    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
372030    +
372031    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
372032    +
372033    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
372034    +
372035    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
372036    +
372037    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
372038    +
372039    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
372040    +
372041    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
372042    +
372043    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
372044    +
372045    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
372046    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
372047    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
372048    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
372049    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372050    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372051    +end;
MPRINT(EM_DIAGRAM):   end;
372052    +else do;
MPRINT(EM_DIAGRAM):   else do;
372053    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372054    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
372055    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372056    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372057    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
372058    +   end;
MPRINT(EM_DIAGRAM):   end;
372059    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372060    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
372061    +   end;
MPRINT(EM_DIAGRAM):   end;
372062    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372063    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
372064    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372065    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372066    +   end;
MPRINT(EM_DIAGRAM):   end;
372067    +end;
MPRINT(EM_DIAGRAM):   end;
372068    +
372069    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
372070    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
372071    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
372072    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
372073    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372074    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372075    +end;
MPRINT(EM_DIAGRAM):   end;
372076    +else do;
MPRINT(EM_DIAGRAM):   else do;
372077    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372078    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
372079    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372080    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372081    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
372082    +   end;
MPRINT(EM_DIAGRAM):   end;
372083    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372084    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
372085    +   end;
MPRINT(EM_DIAGRAM):   end;
372086    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372087    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
372088    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372089    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372090    +   end;
MPRINT(EM_DIAGRAM):   end;
372091    +end;
MPRINT(EM_DIAGRAM):   end;
372092    +
372093    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
372094    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
372095    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
372096    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
372097    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372098    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372099    +end;
MPRINT(EM_DIAGRAM):   end;
372100    +else do;
MPRINT(EM_DIAGRAM):   else do;
372101    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372102    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
372103    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372104    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372105    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
372106    +   end;
MPRINT(EM_DIAGRAM):   end;
372107    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372108    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
372109    +   end;
MPRINT(EM_DIAGRAM):   end;
372110    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372111    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
372112    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372113    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372114    +   end;
MPRINT(EM_DIAGRAM):   end;
372115    +end;
MPRINT(EM_DIAGRAM):   end;
372116    +
372117    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
372118    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
372119    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
372120    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
372121    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372122    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372123    +end;
MPRINT(EM_DIAGRAM):   end;
372124    +else do;
MPRINT(EM_DIAGRAM):   else do;
372125    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372126    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
372127    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372128    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372129    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
372130    +   end;
MPRINT(EM_DIAGRAM):   end;
372131    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372132    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
372133    +   end;
MPRINT(EM_DIAGRAM):   end;
372134    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372135    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
372136    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372137    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372138    +   end;
MPRINT(EM_DIAGRAM):   end;
372139    +end;
MPRINT(EM_DIAGRAM):   end;
372140    +
372141    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
372142    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
372143    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
372144    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
372145    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372146    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372147    +end;
MPRINT(EM_DIAGRAM):   end;
372148    +else do;
MPRINT(EM_DIAGRAM):   else do;
372149    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372150    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
372151    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372152    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372153    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
372154    +   end;
MPRINT(EM_DIAGRAM):   end;
372155    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372156    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
372157    +   end;
MPRINT(EM_DIAGRAM):   end;
372158    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372159    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
372160    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372161    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372162    +   end;
MPRINT(EM_DIAGRAM):   end;
372163    +end;
MPRINT(EM_DIAGRAM):   end;
372164    +
372165    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
372166    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
372167    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
372168    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
372169    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372170    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372171    +end;
MPRINT(EM_DIAGRAM):   end;
372172    +else do;
MPRINT(EM_DIAGRAM):   else do;
372173    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372174    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
372175    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372176    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372177    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
372178    +   end;
MPRINT(EM_DIAGRAM):   end;
372179    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372180    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
372181    +   end;
MPRINT(EM_DIAGRAM):   end;
372182    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372183    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
372184    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372185    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372186    +   end;
MPRINT(EM_DIAGRAM):   end;
372187    +end;
MPRINT(EM_DIAGRAM):   end;
372188    +
372189    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
372190    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
372191    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
372192    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
372193    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372194    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372195    +end;
MPRINT(EM_DIAGRAM):   end;
372196    +else do;
MPRINT(EM_DIAGRAM):   else do;
372197    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372198    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
372199    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372200    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
372201    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
372202    +   end;
MPRINT(EM_DIAGRAM):   end;
372203    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
372204    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
372205    +   end;
MPRINT(EM_DIAGRAM):   end;
372206    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372207    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
372208    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372209    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372210    +   end;
MPRINT(EM_DIAGRAM):   end;
372211    +end;
MPRINT(EM_DIAGRAM):   end;
372212    +
372213    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
372214    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
372215    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
372216    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
372217    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
372218    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
372219    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
372220    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
372221    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
372222    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
372223    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
372224    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
372225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372227    +end;
MPRINT(EM_DIAGRAM):   end;
372228    +else do;
MPRINT(EM_DIAGRAM):   else do;
372229    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
372230    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
372231    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372232    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
372233    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
372234    +   end;
MPRINT(EM_DIAGRAM):   end;
372235    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
372236    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
372237    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
372238    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
372239    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
372240    +   end;
MPRINT(EM_DIAGRAM):   end;
372241    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
372242    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
372243    +   end;
MPRINT(EM_DIAGRAM):   end;
372244    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
372245    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
372246    +   end;
MPRINT(EM_DIAGRAM):   end;
372247    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
372248    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
372249    +   end;
MPRINT(EM_DIAGRAM):   end;
372250    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372251    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
372252    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
372253    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
372254    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
372255    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372256    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372257    +   end;
MPRINT(EM_DIAGRAM):   end;
372258    +end;
MPRINT(EM_DIAGRAM):   end;
372259    +
372260    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
372261    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
372262    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
372263    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
372264    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
372265    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
372266    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
372267    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
372268    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
372269    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
372270    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
372271    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
372272    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
372273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372275    +end;
MPRINT(EM_DIAGRAM):   end;
372276    +else do;
MPRINT(EM_DIAGRAM):   else do;
372277    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
372278    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
372279    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372280    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
372281    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
372282    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
372283    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
372284    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
372285    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372286    +         end;
MPRINT(EM_DIAGRAM):   end;
372287    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372288    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
372289    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
372290    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372291    +            end;
MPRINT(EM_DIAGRAM):   end;
372292    +         end;
MPRINT(EM_DIAGRAM):   end;
372293    +      end;
MPRINT(EM_DIAGRAM):   end;
372294    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372295    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
372296    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
372297    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372298    +         end;
MPRINT(EM_DIAGRAM):   end;
372299    +      end;
MPRINT(EM_DIAGRAM):   end;
372300    +   end;
MPRINT(EM_DIAGRAM):   end;
372301    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372302    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
372303    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
372304    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372305    +      end;
MPRINT(EM_DIAGRAM):   end;
372306    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372307    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
372308    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
372309    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
372310    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
372311    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
372312    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372313    +         end;
MPRINT(EM_DIAGRAM):   end;
372314    +      end;
MPRINT(EM_DIAGRAM):   end;
372315    +   end;
MPRINT(EM_DIAGRAM):   end;
372316    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
372317    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
372318    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
372319    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
372320    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
372321    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372322    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372323    +   end;
MPRINT(EM_DIAGRAM):   end;
372324    +end;
MPRINT(EM_DIAGRAM):   end;
372325    +
372326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372327    +*** Checking missing input Interval
372328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
372329    +
372330    +IF NMISS(
372331    +   AcceptedCmpTotal ,
372332    +   Age ,
372333    +   Frq ,
372334    +   Income ,
372335    +   Kidhome ,
372336    +   Mnt ,
372337    +   MntFishProducts ,
372338    +   MntFruits ,
372339    +   MntGoldProds ,
372340    +   MntMeatProducts ,
372341    +   MntSweetProducts ,
372342    +   MntWines ,
372343    +   MonthsAsCustomer ,
372344    +   NumCatalogPurchases ,
372345    +   NumDealsPurchases ,
372346    +   NumDistPurchases ,
372347    +   NumStorePurchases ,
372348    +   NumWebPurchases ,
372349    +   NumWebVisitsMonth ,
372350    +   RFMstat ,
372351    +   RMntFrq ,
372352    +   Recency ,
372353    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
372354    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
372355    +
372356    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372357    +END;
MPRINT(EM_DIAGRAM):   END;
372358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372359    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
372360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372361    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372362    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
372363    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
372364    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
372365    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
372366    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
372367    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
372368    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
372369    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
372370    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
372371    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
372372    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
372373    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
372374    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
372375    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
372376    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
372377    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
372378    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
372379    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
372380    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
372381    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
372382    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
372383    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
372384    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
372385    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
372386    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
372387    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
372388    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
372389    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
372390    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
372391    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
372392    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
372393    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
372394    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
372395    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
372396    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
372397    +END;
MPRINT(EM_DIAGRAM):   END;
372398    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372399    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
372400    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
372401    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
372402    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
372403    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
372404    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
372405    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
372406    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
372407    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
372408    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
372409    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
372410    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
372411    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
372412    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
372413    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
372414    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
372415    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
372416    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
372417    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
372418    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
372419    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
372420    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
372421    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
372422    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
372423    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
372424    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
372425    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
372426    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
372427    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
372428    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
372429    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
372430    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
372431    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
372432    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
372433    +   ELSE S_NumCatalogPurchases
372434    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
372435    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
372436    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
372437    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
372438    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
372439    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
372440    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
372441    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
372442    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
372443    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
372444    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
372445    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
372446    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
372447    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
372448    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
372449    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
372450    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
372451    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
372452    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
372453    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
372454    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
372455    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
372456    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
372457    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
372458    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
372459    +END;
MPRINT(EM_DIAGRAM):   END;
372460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372461    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
372462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372464    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
372465    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372467    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
372468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372469    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372470    +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
372471    +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
372472    +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
372473    +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
372474    +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
372475    +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
372476    +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
372477    +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
372478    +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
372479    +          +      3.4758215776031 * S_NumDealsPurchases
372480    +          +     0.17094021755289 * S_NumDistPurchases
372481    +          +    -2.72090095694641 * S_NumStorePurchases
372482    +          +    -0.31877935826328 * S_NumWebPurchases
372483    +          +    -2.03399974412918 * S_NumWebVisitsMonth
372484    +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
372485    +        S_RMntFrq  +     0.29064555076615 * S_Recency
372486    +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 * 
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome 
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 * 
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts + 
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 * 
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 * 
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 * 
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 * 
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq + 
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
372487    +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
372488    +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
372489    +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
372490    +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
372491    +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
372492    +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
372493    +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
372494    +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
372495    +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
372496    +          +    -1.21013804197082 * S_NumDealsPurchases
372497    +          +     0.59974279122188 * S_NumDistPurchases
372498    +          +     1.92425710681156 * S_NumStorePurchases
372499    +          +     1.02413182452324 * S_NumWebPurchases
372500    +          +    -3.63276285340174 * S_NumWebVisitsMonth
372501    +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
372502    +        S_RMntFrq  +     3.87352563099005 * S_Recency
372503    +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 * 
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome 
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 * 
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts + 
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 * 
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 * 
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 * 
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 * 
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq + 
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
372504    +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
372505    +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
372506    +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
372507    +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
372508    +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
372509    +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
372510    +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
372511    +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
372512    +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
372513    +          +      0.4928343071801 * S_NumDealsPurchases
372514    +          +     -0.0196677325409 * S_NumDistPurchases
372515    +          +     0.44395828164873 * S_NumStorePurchases
372516    +          +     0.86947051591224 * S_NumWebPurchases
372517    +          +    -0.96787241206077 * S_NumWebVisitsMonth
372518    +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
372519    +        S_RMntFrq  +     0.24582117217188 * S_Recency
372520    +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 * 
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome 
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 * 
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts + 
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 * 
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 * 
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 * 
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 * 
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq + 
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
372521    +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
372522    +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
372523    +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
372524    +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
372525    +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
372526    +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
372527    +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
372528    +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
372529    +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
372530    +          +     1.10280977051932 * S_NumDealsPurchases
372531    +          +     0.99310057404036 * S_NumDistPurchases
372532    +          +    -0.05647459609331 * S_NumStorePurchases
372533    +          +    -0.89852483938631 * S_NumWebPurchases
372534    +          +     2.63022480227445 * S_NumWebVisitsMonth
372535    +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
372536    +        S_RMntFrq  +    -4.46436997560659 * S_Recency
372537    +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 * 
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome 
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 * 
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts + 
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 * 
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 * 
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 * 
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 * 
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq + 
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
372538    +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
372539    +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
372540    +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
372541    +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
372542    +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
372543    +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
372544    +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
372545    +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
372546    +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
372547    +          +    -2.62220616180571 * S_NumDealsPurchases
372548    +          +    -0.51737930835331 * S_NumDistPurchases
372549    +          +     0.88655783158133 * S_NumStorePurchases
372550    +          +     0.35132468809969 * S_NumWebPurchases
372551    +          +     -1.6320869675862 * S_NumWebVisitsMonth
372552    +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
372553    +        S_RMntFrq  +     1.06226028677401 * S_Recency
372554    +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 * 
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 * 
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843 
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts + 
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 * 
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 * 
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 * 
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 * 
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq + 
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
372555    +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
372556    +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
372557    +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
372558    +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
372559    +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 * 
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 + 
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 * 
HigherEducationBinary0 ;
372560    +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
372561    +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
372562    +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
372563    +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
372564    +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 * 
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 + 
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 * 
HigherEducationBinary0 ;
372565    +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
372566    +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
372567    +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
372568    +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
372569    +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 * 
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 + 
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 * 
HigherEducationBinary0 ;
372570    +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
372571    +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
372572    +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
372573    +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
372574    +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306 
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 + 
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 * 
HigherEducationBinary0 ;
372575    +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
372576    +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
372577    +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
372578    +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
372579    +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 * 
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 + 
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 * 
HigherEducationBinary0 ;
372580    +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
372581    +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
372582    +        EducationGraduation  +     1.42539292513854 * EducationMaster
372583    +          +     0.34809919741136 * Marital_StatusDivorced
372584    +          +    -0.26594093535929 * Marital_StatusMarried
372585    +          +     0.70249715999987 * Marital_StatusSingle
372586    +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle + 
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854 
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 * 
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 * 
Marital_StatusTogether ;
372587    +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
372588    +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
372589    +        EducationGraduation  +    -0.28204692640004 * EducationMaster
372590    +          +    -0.20448765627193 * Marital_StatusDivorced
372591    +          +     1.73231344674733 * Marital_StatusMarried
372592    +          +    -0.70956480480373 * Marital_StatusSingle
372593    +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle + 
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004 
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 * 
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 * 
Marital_StatusTogether ;
372594    +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
372595    +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
372596    +        EducationGraduation  +     1.01284161768787 * EducationMaster
372597    +          +     0.30333818684353 * Marital_StatusDivorced
372598    +          +    -1.44603535988199 * Marital_StatusMarried
372599    +          +     0.48409598426383 * Marital_StatusSingle
372600    +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle + 
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation + 
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced + 
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle + 
-1.14528682521622 * Marital_StatusTogether ;
372601    +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
372602    +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
372603    +        EducationGraduation  +    -1.17735200022013 * EducationMaster
372604    +          +     -1.5342907846297 * Marital_StatusDivorced
372605    +          +    -1.79544684592172 * Marital_StatusMarried
372606    +          +     0.65604313645117 * Marital_StatusSingle
372607    +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle + 
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013 
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 * 
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 * 
Marital_StatusTogether ;
372608    +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
372609    +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
372610    +        EducationGraduation  +     0.09618331198762 * EducationMaster
372611    +          +    -3.97940893560267 * Marital_StatusDivorced
372612    +          +      3.5880254142663 * Marital_StatusMarried
372613    +          +     -2.9897737730927 * Marital_StatusSingle
372614    +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle + 
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762 
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 * 
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 * 
Marital_StatusTogether ;
372615    +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
372616    +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
372617    +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
372618    +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
372619    +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
372620    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
372621    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
372622    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
372623    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
372624    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
372625    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
372626    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
372627    +END;
MPRINT(EM_DIAGRAM):   END;
372628    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372629    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
372630    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
372631    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
372632    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
372633    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
372634    +END;
MPRINT(EM_DIAGRAM):   END;
372635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372636    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
372637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372638    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372639    +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
372640    +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
372641    +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
372642    +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
372643    +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
372644    +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
372645    +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
372646    +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
372647    +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
372648    +          +     0.07279889333775 * S_NumDealsPurchases
372649    +          +     0.07542203992452 * S_NumDistPurchases
372650    +          +     0.16296239303342 * S_NumStorePurchases
372651    +          +     1.59193921229231 * S_NumWebPurchases
372652    +          +    -0.35227839362603 * S_NumWebVisitsMonth
372653    +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
372654    +        S_RMntFrq  +     0.43315770276588 * S_Recency
372655    +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 * 
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 * 
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts + 
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 * 
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines + 
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases + 
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases + 
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases + 
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 * 
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
372656    +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
372657    +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
372658    +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
372659    +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
372660    +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
372661    +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
372662    +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
372663    +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
372664    +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
372665    +          +    -0.37456959251084 * S_NumDealsPurchases
372666    +          +    -1.15252469975668 * S_NumDistPurchases
372667    +          +    -1.39822501888899 * S_NumStorePurchases
372668    +          +    -0.32777847360723 * S_NumWebPurchases
372669    +          +     0.84026499832926 * S_NumWebVisitsMonth
372670    +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
372671    +        S_RMntFrq  +     1.21016626691186 * S_Recency
372672    +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 * 
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome 
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 * 
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts + 
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 * 
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 * 
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 * 
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 * 
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq + 
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
372673    +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
372674    +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
372675    +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
372676    +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
372677    +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
372678    +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
372679    +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
372680    +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
372681    +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
372682    +          +     1.14090099538367 * S_NumDealsPurchases
372683    +          +     -0.2600155774492 * S_NumDistPurchases
372684    +          +     1.31362002392113 * S_NumStorePurchases
372685    +          +     1.31465307763555 * S_NumWebPurchases
372686    +          +    -0.18041623858351 * S_NumWebVisitsMonth
372687    +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
372688    +        S_RMntFrq  +    -0.81910738140729 * S_Recency
372689    +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 * 
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome 
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 * 
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts + 
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 * 
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 * 
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 * 
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 * 
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq + 
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
372690    +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
372691    +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
372692    +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
372693    +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
372694    +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
372695    +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
372696    +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
372697    +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
372698    +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
372699    +          +     1.06486073796679 * S_NumDealsPurchases
372700    +          +    -0.04890191247577 * S_NumDistPurchases
372701    +          +     0.86871320720698 * S_NumStorePurchases
372702    +          +     0.03183587281884 * S_NumWebPurchases
372703    +          +     -0.4863802923315 * S_NumWebVisitsMonth
372704    +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
372705    +        S_RMntFrq  +     0.17186861211542 * S_Recency
372706    +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 * 
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome 
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 * 
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts + 
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 * 
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 * 
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 * 
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 * 
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq + 
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
372707    +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
372708    +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
372709    +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
372710    +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
372711    +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
372712    +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
372713    +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
372714    +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
372715    +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
372716    +          +    -0.01160267590349 * S_NumDealsPurchases
372717    +          +    -0.92773075463083 * S_NumDistPurchases
372718    +          +    -0.83326680533995 * S_NumStorePurchases
372719    +          +    -1.16991058954473 * S_NumWebPurchases
372720    +          +    -2.07771165573723 * S_NumWebVisitsMonth
372721    +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
372722    +        S_RMntFrq  +     0.80165981122986 * S_Recency
372723    +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 * 
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome 
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 * 
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts + 
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 * 
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 * 
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 * 
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 * 
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq + 
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
372724    +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
372725    +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
372726    +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
372727    +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
372728    +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 * 
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 + 
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 * 
HigherEducationBinary0 ;
372729    +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
372730    +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
372731    +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
372732    +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
372733    +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277 
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 + 
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 * 
HigherEducationBinary0 ;
372734    +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
372735    +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
372736    +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
372737    +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
372738    +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 * 
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 + 
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 * 
HigherEducationBinary0 ;
372739    +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
372740    +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
372741    +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
372742    +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
372743    +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089 
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 + 
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 * 
HigherEducationBinary0 ;
372744    +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
372745    +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
372746    +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
372747    +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
372748    +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 * 
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 + 
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 * 
HigherEducationBinary0 ;
372749    +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
372750    +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
372751    +        EducationGraduation  +    -0.22397098444024 * EducationMaster
372752    +          +    -0.10361472385198 * Marital_StatusDivorced
372753    +          +     0.05574820877885 * Marital_StatusMarried
372754    +          +     0.13130988205279 * Marital_StatusSingle
372755    +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle + 
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024 
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 * 
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 * 
Marital_StatusTogether ;
372756    +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
372757    +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
372758    +        EducationGraduation  +     1.44983505587452 * EducationMaster
372759    +          +      0.0059353523794 * Marital_StatusDivorced
372760    +          +    -0.59379435051653 * Marital_StatusMarried
372761    +          +    -1.93587108708999 * Marital_StatusSingle
372762    +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle + 
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452 
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 * 
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 * 
Marital_StatusTogether ;
372763    +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
372764    +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
372765    +        EducationGraduation  +     0.16497026569775 * EducationMaster
372766    +          +    -0.74333797840386 * Marital_StatusDivorced
372767    +          +    -0.93061135117658 * Marital_StatusMarried
372768    +          +     1.04024182655844 * Marital_StatusSingle
372769    +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle + 
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775 
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 * 
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 * 
Marital_StatusTogether ;
372770    +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
372771    +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
372772    +        EducationGraduation  +     1.71196178631559 * EducationMaster
372773    +          +    -3.01050675344463 * Marital_StatusDivorced
372774    +          +      0.1638723582239 * Marital_StatusMarried
372775    +          +     0.94548468360304 * Marital_StatusSingle
372776    +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle + 
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559 
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 * 
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 * 
Marital_StatusTogether ;
372777    +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
372778    +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
372779    +        EducationGraduation  +     0.57450456442662 * EducationMaster
372780    +          +    -1.37013926274158 * Marital_StatusDivorced
372781    +          +    -0.34168970042779 * Marital_StatusMarried
372782    +          +     0.63383683543962 * Marital_StatusSingle
372783    +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle + 
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662 
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 * 
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 * 
Marital_StatusTogether ;
372784    +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
372785    +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
372786    +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
372787    +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
372788    +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
372789    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
372790    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
372791    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
372792    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
372793    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
372794    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
372795    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
372796    +END;
MPRINT(EM_DIAGRAM):   END;
372797    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372798    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
372799    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
372800    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
372801    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
372802    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
372803    +END;
MPRINT(EM_DIAGRAM):   END;
372804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372805    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
372806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372807    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372808    +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
372809    +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
372810    +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 + 
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
372811    +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
372812    +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
372813    +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 + 
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
372814    +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
372815    +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
372816    +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 + 
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
372817    +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
372818    +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
372819    +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 + 
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
372820    +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
372821    +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
372822    +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 + 
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
372823    +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
372824    +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
372825    +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2 
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
372826    +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
372827    +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
372828    +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2 
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
372829    +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
372830    +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
372831    +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2 
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
372832    +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
372833    +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
372834    +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2 
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
372835    +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
372836    +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
372837    +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2 
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
372838    +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
372839    +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
372840    +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
372841    +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
372842    +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
372843    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
372844    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
372845    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
372846    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
372847    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
372848    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
372849    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
372850    +END;
MPRINT(EM_DIAGRAM):   END;
372851    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372852    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
372853    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
372854    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
372855    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
372856    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
372857    +END;
MPRINT(EM_DIAGRAM):   END;
372858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372859    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
372860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372861    +
372862    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
372863    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
372864    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
372865    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
372866    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
372867    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372868    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
372869    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
372870    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
372871    +end;
MPRINT(EM_DIAGRAM):   end;
372872    +else do;
MPRINT(EM_DIAGRAM):   else do;
372873    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
372874    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
372875    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
372876    +   end;
MPRINT(EM_DIAGRAM):   end;
372877    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
372878    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
372879    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
372880    +   end;
MPRINT(EM_DIAGRAM):   end;
372881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372882    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
372883    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
372884    +   end;
MPRINT(EM_DIAGRAM):   end;
372885    +end;
MPRINT(EM_DIAGRAM):   end;
372886    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372887    +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
372888    +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
372889    +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 + 
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
372890    +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
372891    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
372892    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
372893    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
372894    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
372895    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
372896    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
372897    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
372898    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
372899    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
372900    +END;
MPRINT(EM_DIAGRAM):   END;
372901    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372902    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
372903    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
372904    +END;
MPRINT(EM_DIAGRAM):   END;
372905    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
372906    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
372907    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
372908    +END;
MPRINT(EM_DIAGRAM):   END;
372909    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
372910    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
372911    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
372912    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
372913    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
372914    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
372915    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
372916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372917    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
372918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372919    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
372920    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
372921    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
372922    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
372923    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
372924    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
372925    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
372926    +END;
MPRINT(EM_DIAGRAM):   END;
372927    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
372928    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
372929    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
372930    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
372931     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
372932     quit;
372933     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
372934     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
372935     * AutoNeural10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Computing metadata for TRAIN data;
372936     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural10_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural10_TRAIN out=WORK.M3BZPTN9 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BZPTN9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BZPTN9(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BZPTN9;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BZPTN9;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M05RXD13 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KD56E8(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   set WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural10";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
373248     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
373249     set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
373250     where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
373251     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE (DATA='AutoNeural10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373252     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMINFO;
373253     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
373254     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
373255     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
373259     run;
373260     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
373261     set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
373262     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373263     proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
373264     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373265     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373266     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
373267     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373268     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373269     proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
373270     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373271     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

373272     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
373273     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
373274     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373275     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

373276     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
373277     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
373278     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
373279     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.37 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
