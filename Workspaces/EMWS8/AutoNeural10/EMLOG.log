*------------------------------------------------------------*
User:                Lukas Fahr
Date:                21. April 2016
Time:                18.37 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.32 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                21. April 2016
Time:                18.32 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O04L1PAK
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O04L1PAK new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.32 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.32 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
368443     proc freq data=EMWS8.AutoNeural10_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural10_VariableSet noprint;
368444     table ROLE*LEVEL/out=WORK.AutoNeural10META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural10META;
368445     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL10META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
368446     proc print data=WORK.AutoNeural10META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural10META label noobs;
368447     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
368448     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
368448   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
368448   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
368449     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
368450     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
368451     run;
 
NOTE: There were 5 observations read from the data set WORK.AUTONEURAL10META.
NOTE: The PROCEDURE PRINT printed page 356.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368452     title10;
MPRINT(EM_DIAGRAM):   title10;
368453     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural10_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_DepVar_DD
out=EMWS8.AutoNeural10_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
368500     data WORK.AutoNeural10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
368501     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
368502     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
368502   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
368502   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
368503        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
368503   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
368503   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
368504     set EMWS8.AUTONEURAL10_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL10_DEPVAR_DM( where=(_TYPE_="TARGET"));
368505     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
368506     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
368507     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
368508     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
368509     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
368510     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
368511     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
368512     end;
MPRINT(EM_DIAGRAM):   end;
368513     output;
MPRINT(EM_DIAGRAM):   output;
368514     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL10_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
368515     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
368516     proc print data=WORK.AutoNeural10_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural10_EVENT noobs label;
368517     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
368518     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
368519     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
368520     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL10_EVENT.
NOTE: The PROCEDURE PRINT printed page 357.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368521     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
368522     proc print data = EMWS8.AutoNeural10_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural10_DepVar_DM noobs label;
368523     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
368524     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
368525     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
368525   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
368525   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
368526     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
368527     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
368528     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL10_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 358.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368529     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M399DW1C;
MPRINT(EM_DIAGRAM):   set WORK.M399DW1C;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
368538     data WORK.M399DW1C;
MPRINT(EM_DIAGRAM):    data WORK.M399DW1C;
368539     set WORK.M399DW1C end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M399DW1C end=eof;
368540     output;
MPRINT(EM_DIAGRAM):   output;
368541     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
368542     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
368543     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
368544     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
368545     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
368546     output;
MPRINT(EM_DIAGRAM):   output;
368547     end;
MPRINT(EM_DIAGRAM):   end;
368548     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M399DW1C.
NOTE: The data set WORK.M399DW1C has 34 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL10_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
368549     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
368550     * AutoNeural10: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Create decision matrix;
368551     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
368552     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
368553       length   DepVar                           $  32
368554                COUNT                                8
368555                DATAPRIOR                            8
368556                TRAINPRIOR                           8
368557                DECPRIOR                             8
368558                DECISION1                            8
368559                DECISION2                            8
368560                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
368561
368562       label    COUNT="Level Counts"
368563                DATAPRIOR="Data Proportions"
368564                TRAINPRIOR="Training Proportions"
368565                DECPRIOR="Decision Priors"
368566                DECISION1="1"
368567                DECISION2="0"
368568                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
368569       format   COUNT 10.
368570                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
368571     DepVar="1"; COUNT=359; DATAPRIOR=0.15122156697556; TRAINPRIOR=0.15122156697556;
368571   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
368572     output;
MPRINT(EM_DIAGRAM):   output;
368573     DepVar="0"; COUNT=2015; DATAPRIOR=0.84877843302443; TRAINPRIOR=0.84877843302443;
368573   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
368574     output;
MPRINT(EM_DIAGRAM):   output;
368575     ;
MPRINT(EM_DIAGRAM):   ;
368576     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368577     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
368578     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
368579     label DECISION1= '1';
368580     label DECISION2= '0';
368581     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
368582     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
368583     data EM_AutoNeural10;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural10;
368584     set EMWS8.Meta_TRAIN(keep=
368585     AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5
368586     AcceptedCmpTotal Age Complain DepVar Education Frq HigherEducationBinary Income
368587     Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
368588     MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
368589     NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases
368590     NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome );
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN(keep= AcceptedCmp1 AcceptedCmp2 AcceptedCmp3
AcceptedCmp4 AcceptedCmp5 AcceptedCmpTotal Age Complain DepVar Education Frq
HigherEducationBinary Income Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome );
368591     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368592     *------------------------------------------------------------* ;
368593     * AutoNeural10: DMDBClass Macro ;
368594     *------------------------------------------------------------* ;
368595     %macro DMDBClass;
368596         AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
368597        AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC)
368598        HigherEducationBinary(ASC) Marital_Status(ASC)
368599     %mend DMDBClass;
368600     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368601     * AutoNeural10: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: DMDBVar Macro ;
368602     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368603     %macro DMDBVar;
368604         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
368605        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
368606        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
368607        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
368608     %mend DMDBVar;
368609     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
368610     * AutoNeural10: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Create DMDB;
368611     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
368612     proc dmdb batch data=WORK.EM_AutoNeural10
368613     dmdbcat=WORK.AutoNeural10_DMDB
368614     maxlevel = 513
368615     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
368616     class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) HigherEducationBinary(ASC)
Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
368617     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):  ;
368618     target
368619     DepVar
368620     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
368621     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL10.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
368622     quit;
368623     *--- end code ---*;
 
368624     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
368625     * AutoNeural10: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Interval Inputs Macro ;
368626     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368627     %macro INTINPUTS;
368628         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
368629        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
368630        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
368631        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
368632     %mend INTINPUTS;
368633     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368634     * AutoNeural10: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Binary Inputs Macro ;
368635     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368636     %macro BININPUTS;
368637         AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain
368638        HigherEducationBinary
368639     %mend BININPUTS;
368640     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368641     * AutoNeural10: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Nominal Inputs Macro ;
368642     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368643     %macro NOMINPUTS;
368644         Education Marital_Status
368645     %mend NOMINPUTS;
368646     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368647     * AutoNeural10: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Ordinal Inputs Macro ;
368648     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
368649     %macro ORDINPUTS;
368650
368651     %mend ORDINPUTS;
368652     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
368653     ;
MPRINT(EM_DIAGRAM):   ;
368654     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
368655     options pagesize = 6000;
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
368656     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
368657     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
368658     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
368659     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
368660     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
368660   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
368661     *;
 
368662     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368663     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
368664     ;
MPRINT(EM_DIAGRAM):   ;
368665     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368666     *;
MPRINT(EM_DIAGRAM):   *;
 
368667     *;
MPRINT(EM_DIAGRAM):    *;
368668     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
368669     validdata=EMWS8.Meta_VALIDATE
368670     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
368671     *;
MPRINT(EM_DIAGRAM):   *;
368672     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
368673     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
368674     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
368675     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
368676     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
368677     target DepVar / level=NOMINAL id=DepVar
368678     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
368679     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368680     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
368681     ;
MPRINT(EM_DIAGRAM):   ;
368682     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368683     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
368684     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
368685     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
368686     *;
MPRINT(EM_DIAGRAM):   *;
368687     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
368688     *;
MPRINT(EM_DIAGRAM):   *;
368689     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
368690     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
368690   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 56 observations and 54 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
368691     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
368692     tech = Default;
368693     ;
368694     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.50 seconds
      cpu time            0.49 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.51 seconds
      cpu time            0.51 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
368695     *;
368696     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
368697     var _iter_ _aic_ _averr_ _misc_
368698     _vaverr_ _vmisc_
368699     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
368700     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 359.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368701     *------------------------------------------------------------*;
368702     * Extract best iteration;
368703     ;
368704     *------------------------------------------------------------*;
368705     %global _iter;
368706     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
368707     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
368708     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
368709     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
368710     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
368711     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
368712     end;
MPRINT(EM_DIAGRAM):   end;
368713     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
368714     *;
 
368715     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
368716     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
368717     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
368718     output;
MPRINT(EM_DIAGRAM):   output;
368719     stop;
MPRINT(EM_DIAGRAM):   stop;
368720     end;
MPRINT(EM_DIAGRAM):   end;
368721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
368722     *;
368723     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
368724     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
368725     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
368726     output;
MPRINT(EM_DIAGRAM):   output;
368727     stop;
MPRINT(EM_DIAGRAM):   stop;
368728     end;
MPRINT(EM_DIAGRAM):   end;
368729     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368730     *;
MPRINT(EM_DIAGRAM):    *;
368731     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
368732     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
368732   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
368733     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
368734     var _iter_ _aic_ _averr_ _misc_
368735     _vaverr_ _vmisc_
368736     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
368737     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 360.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368738     title9;
MPRINT(EM_DIAGRAM):   title9;
368739     title10;
MPRINT(EM_DIAGRAM):   title10;
368740     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
368741     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
368742     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
368743     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
368743   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
368744     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
368744   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
368745     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
368745   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
368746     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
368746   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
368747     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
368748     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
368749     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
368750     set
368751     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
368752     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
368753     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
368754     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
368755     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368756     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
368757     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368758     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
368759     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368760     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
368761     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368762     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
368763     ;
MPRINT(EM_DIAGRAM):   ;
368764     data WORK.SAVEDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1GFQOWY;
368765     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
368766     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1GFQOWY has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368767     data EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_BESTDS;
368768     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
368769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_BESTDS has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368770     data WORK.BFITDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1GFQOWY;
368771     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368772     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1GFQOWY has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368773     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
368774     ;
MPRINT(EM_DIAGRAM):   ;
368775     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
368776     set EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY;
368777     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
368778     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
368779     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
368780     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
368781     ;
MPRINT(EM_DIAGRAM):   ;
368782     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
368783     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368784     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
368785     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
368786     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
368787     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
368788     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
368789     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368790     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
368791     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
368792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368793     *;
MPRINT(EM_DIAGRAM):    *;
368794     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
368795     validdata=EMWS8.Meta_VALIDATE
368796     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
368797     *;
MPRINT(EM_DIAGRAM):   *;
368798     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
368799     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
368800     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
368801     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
368802     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
368803     target DepVar / level=NOMINAL id=DepVar
368804     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
368805     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368806     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
368807     ;
MPRINT(EM_DIAGRAM):   ;
368808     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368809     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
368810     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
368811     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
368812     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
368813     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
368814     *;
MPRINT(EM_DIAGRAM):   *;
368815     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
368816     *;
MPRINT(EM_DIAGRAM):   *;
368817     initial
368818     ;
MPRINT(EM_DIAGRAM):   initial ;
368819     *;
MPRINT(EM_DIAGRAM):   *;
368820     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
368821     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
368821   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=45 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 216 variables.
MPRINT(EM_DIAGRAM):   *;
368822     prelim 20 outest=_anpre pretime=45 preiter=25
368823     tech = Default
368824     ;
368825     *;
368826     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
368827     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
368827   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 216 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
368828     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
368829     tech = Default;
368830     ;
368831     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           10.06 seconds
      cpu time            10.04 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 361.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           10.06 seconds
      cpu time            10.06 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
368832     *;
368833     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
368834     var _iter_ _aic_ _averr_ _misc_
368835     _vaverr_ _vmisc_
368836     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
368837     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 362.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368838     *------------------------------------------------------------*;
368839     * Extract best iteration;
368840     ;
368841     *------------------------------------------------------------*;
368842     %global _iter;
368843     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
368844     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
368845     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
368846     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
368847     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
368848     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
368849     end;
MPRINT(EM_DIAGRAM):   end;
368850     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
368851     *;
 
368852     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
368853     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
368854     if _ITER_ eq 30 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 30 then do;
368855     output;
MPRINT(EM_DIAGRAM):   output;
368856     stop;
MPRINT(EM_DIAGRAM):   stop;
368857     end;
MPRINT(EM_DIAGRAM):   end;
368858     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 31 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
368859     *;
368860     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
368861     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
368862     if _ITER_ eq 30 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 30 and _NAME_ eq "OVERALL" then do;
368863     output;
MPRINT(EM_DIAGRAM):   output;
368864     stop;
MPRINT(EM_DIAGRAM):   stop;
368865     end;
MPRINT(EM_DIAGRAM):   end;
368866     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 62 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368867     *;
MPRINT(EM_DIAGRAM):    *;
368868     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
368869     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
368869   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
368870     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
368871     var _iter_ _aic_ _averr_ _misc_
368872     _vaverr_ _vmisc_
368873     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
368874     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 363.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368875     title9;
MPRINT(EM_DIAGRAM):   title9;
368876     title10;
MPRINT(EM_DIAGRAM):   title10;
368877     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
368878     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368879     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
368880     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368881     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
368882     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368883     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
368884     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
368885     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
368886     ;
MPRINT(EM_DIAGRAM):   ;
368887     data WORK.SAVEDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1GFQOWY;
368888     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
368889     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1GFQOWY has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368890     data EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_BESTDS;
368891     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
368892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_BESTDS has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
368893     data WORK.BFITDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1GFQOWY;
368894     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1GFQOWY has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368896     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
368897     ;
MPRINT(EM_DIAGRAM):   ;
368898     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
368899     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368900     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
368901     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
368902     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
368903     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
368904     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
368905     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368906     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
368907     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
368908     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
368909     *;
MPRINT(EM_DIAGRAM):    *;
368910     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
368911     validdata=EMWS8.Meta_VALIDATE
368912     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
368913     *;
MPRINT(EM_DIAGRAM):   *;
368914     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
368915     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
368916     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
368917     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
368918     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
368919     target DepVar / level=NOMINAL id=DepVar
368920     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
368921     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368922     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
368923     ;
MPRINT(EM_DIAGRAM):   ;
368924     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368925     Hidden 5 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SINE;
368926     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
368927     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
368928     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
368929     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
368930     *;
MPRINT(EM_DIAGRAM):   *;
368931     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
368932     *;
MPRINT(EM_DIAGRAM):   *;
368933     initial
368934     ;
MPRINT(EM_DIAGRAM):   initial ;
368935     *;
MPRINT(EM_DIAGRAM):   *;
368936     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
368937     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
368937   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 216 variables.
MPRINT(EM_DIAGRAM):   *;
368938     prelim 20 outest=_anpre pretime=44 preiter=25
368939     tech = Default
368940     ;
368941     *;
368942     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
368943     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
368943   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=897
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 216 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
368944     train estiter=1 outest=_anest outfit=_anfit maxtime=897 maxiter=50
MPRINT(EM_DIAGRAM):   run;
368945     tech = Default;
368946     ;
368947     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           9.60 seconds
      cpu time            9.51 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 364.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           9.61 seconds
      cpu time            9.53 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
368948     *;
368949     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
368950     var _iter_ _aic_ _averr_ _misc_
368951     _vaverr_ _vmisc_
368952     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
368953     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 365.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
368954     *------------------------------------------------------------*;
368955     * Extract best iteration;
368956     ;
368957     *------------------------------------------------------------*;
368958     %global _iter;
368959     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
368960     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
368961     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
368962     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
368963     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
368964     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
368965     end;
MPRINT(EM_DIAGRAM):   end;
368966     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
368967     *;
 
368968     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
368969     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
368970     if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
368971     output;
MPRINT(EM_DIAGRAM):   output;
368972     stop;
MPRINT(EM_DIAGRAM):   stop;
368973     end;
MPRINT(EM_DIAGRAM):   end;
368974     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
368975     *;
368976     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
368977     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
368978     if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
368979     output;
MPRINT(EM_DIAGRAM):   output;
368980     stop;
MPRINT(EM_DIAGRAM):   stop;
368981     end;
MPRINT(EM_DIAGRAM):   end;
368982     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368983     *;
MPRINT(EM_DIAGRAM):    *;
368984     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
368985     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
368985   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
368986     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
368987     var _iter_ _aic_ _averr_ _misc_
368988     _vaverr_ _vmisc_
368989     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
368990     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 366.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368991     title9;
MPRINT(EM_DIAGRAM):   title9;
368992     title10;
MPRINT(EM_DIAGRAM):   title10;
368993     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
368994     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368995     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
368996     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
368997     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
368998     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
368999     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369000     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369001     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369002     ;
MPRINT(EM_DIAGRAM):   ;
369003     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369004     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369005     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369006     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
369007     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
369008     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
369009     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
369010     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369011     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369012     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369014     *;
MPRINT(EM_DIAGRAM):    *;
369015     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
369016     validdata=EMWS8.Meta_VALIDATE
369017     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
369018     *;
MPRINT(EM_DIAGRAM):   *;
369019     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
369020     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
369021     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
369022     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
369023     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
369024     target DepVar / level=NOMINAL id=DepVar
369025     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
369026     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369027     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
369028     ;
MPRINT(EM_DIAGRAM):   ;
369029     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369030     Hidden 5 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SOFTMAX;
369031     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
369032     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
369033     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
369034     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
369035     *;
MPRINT(EM_DIAGRAM):   *;
369036     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
369037     *;
MPRINT(EM_DIAGRAM):   *;
369038     initial
369039     ;
MPRINT(EM_DIAGRAM):   initial ;
369040     *;
MPRINT(EM_DIAGRAM):   *;
369041     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369042     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
369042   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 177 variables.
MPRINT(EM_DIAGRAM):   *;
369043     prelim 20 outest=_anpre pretime=44 preiter=25
369044     tech = Default
369045     ;
369046     *;
369047     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369048     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
369048   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=895
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 177 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
369049     train estiter=1 outest=_anest outfit=_anfit maxtime=895 maxiter=50
MPRINT(EM_DIAGRAM):   run;
369050     tech = Default;
369051     ;
369052     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           10.14 seconds
      cpu time            10.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 367.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           10.15 seconds
      cpu time            10.12 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369053     *;
369054     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
369055     var _iter_ _aic_ _averr_ _misc_
369056     _vaverr_ _vmisc_
369057     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369058     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 368.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369059     *------------------------------------------------------------*;
369060     * Extract best iteration;
369061     ;
369062     *------------------------------------------------------------*;
369063     %global _iter;
369064     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
369065     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
369066     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
369067     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
369068     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
369069     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
369070     end;
MPRINT(EM_DIAGRAM):   end;
369071     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369072     *;
 
369073     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
369074     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
369075     if _ITER_ eq 28 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 28 then do;
369076     output;
MPRINT(EM_DIAGRAM):   output;
369077     stop;
MPRINT(EM_DIAGRAM):   stop;
369078     end;
MPRINT(EM_DIAGRAM):   end;
369079     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 29 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 177
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369080     *;
369081     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369082     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
369083     if _ITER_ eq 28 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 28 and _NAME_ eq "OVERALL" then do;
369084     output;
MPRINT(EM_DIAGRAM):   output;
369085     stop;
MPRINT(EM_DIAGRAM):   stop;
369086     end;
MPRINT(EM_DIAGRAM):   end;
369087     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369088     *;
MPRINT(EM_DIAGRAM):    *;
369089     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369090     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
369090   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
369091     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
369092     var _iter_ _aic_ _averr_ _misc_
369093     _vaverr_ _vmisc_
369094     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369095     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 369.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369096     title9;
MPRINT(EM_DIAGRAM):   title9;
369097     title10;
MPRINT(EM_DIAGRAM):   title10;
369098     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369099     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369100     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369101     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369102     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369103     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369104     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369105     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369106     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369107     ;
MPRINT(EM_DIAGRAM):   ;
369108     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369109     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369110     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369111     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
369112     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
369113     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
369114     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
369115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369116     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369117     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369118     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369119     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
369120     ;
MPRINT(EM_DIAGRAM):   ;
369121     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
369122     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
369123     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369124     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369125     set WORK.BFITDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1GFQOWY;
369126     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1GFQOWY.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369127     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369128     ;
MPRINT(EM_DIAGRAM):   ;
369129     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369130     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369131     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369132     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
369133     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
369134     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
369135     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
369136     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369137     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369138     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369139     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369140     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369141     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369142     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369143     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369144     *;
MPRINT(EM_DIAGRAM):    *;
369145     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
369146     validdata=EMWS8.Meta_VALIDATE
369147     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
369148     *;
MPRINT(EM_DIAGRAM):   *;
369149     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
369150     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
369151     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
369152     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
369153     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
369154     target DepVar / level=NOMINAL id=DepVar
369155     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
369156     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369157     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
369158     ;
MPRINT(EM_DIAGRAM):   ;
369159     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369160     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
369161     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
369162     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
369163     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369164     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
369165     ;
MPRINT(EM_DIAGRAM):   ;
369166     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369167     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
369168     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
369169     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
369170     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
369171     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
369172     *;
MPRINT(EM_DIAGRAM):   *;
369173     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
369174     *;
MPRINT(EM_DIAGRAM):   *;
369175     initial
369176     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
369177     ;
MPRINT(EM_DIAGRAM):   ;
369178     *;
MPRINT(EM_DIAGRAM):   *;
369179     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369180     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
369180   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
369181     prelim 20 outest=_anpre pretime=44 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 254 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
MPRINT(EM_DIAGRAM):   *;
369182     tech = Default
369183     inest = EMWS8.AutoNeural10_ESTDS bylabel
369184     ;
369185     *;
369186     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369187     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
369187   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 254 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
369188     train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=50
MPRINT(EM_DIAGRAM):   run;
369189     tech = Default;
369190     ;
369191     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1.97 seconds
      cpu time            1.60 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 370.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.97 seconds
      cpu time            1.60 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369192     *;
369193     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
369194     var _iter_ _aic_ _averr_ _misc_
369195     _vaverr_ _vmisc_
369196     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369197     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 371.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369198     *------------------------------------------------------------*;
369199     * Extract best iteration;
369200     ;
369201     *------------------------------------------------------------*;
369202     %global _iter;
369203     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
369204     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
369205     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
369206     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
369207     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
369208     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
369209     end;
MPRINT(EM_DIAGRAM):   end;
369210     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369211     *;
 
369212     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
369213     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
369214     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
369215     output;
MPRINT(EM_DIAGRAM):   output;
369216     stop;
MPRINT(EM_DIAGRAM):   stop;
369217     end;
MPRINT(EM_DIAGRAM):   end;
369218     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369219     *;
369220     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369221     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
369222     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
369223     output;
MPRINT(EM_DIAGRAM):   output;
369224     stop;
MPRINT(EM_DIAGRAM):   stop;
369225     end;
MPRINT(EM_DIAGRAM):   end;
369226     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369227     *;
MPRINT(EM_DIAGRAM):    *;
369228     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369229     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
369229   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
369230     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
369231     var _iter_ _aic_ _averr_ _misc_
369232     _vaverr_ _vmisc_
369233     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369234     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 372.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369235     title9;
MPRINT(EM_DIAGRAM):   title9;
369236     title10;
MPRINT(EM_DIAGRAM):   title10;
369237     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369238     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369239     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369240     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369241     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369242     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369243     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369244     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369245     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
369246     ;
MPRINT(EM_DIAGRAM):   ;
369247     data WORK.SAVEDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1GFQOWY;
369248     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
369249     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1GFQOWY has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369250     data EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_BESTDS;
369251     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
369252     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_BESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369253     data WORK.BFITDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1GFQOWY;
369254     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369255     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1GFQOWY has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369256     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369257     ;
MPRINT(EM_DIAGRAM):   ;
369258     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369259     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369260     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369261     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
369262     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
369263     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
369264     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
369265     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369266     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369267     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369268     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369269     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
369270     ;
MPRINT(EM_DIAGRAM):   ;
369271     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
369272     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
369273     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369274     *;
MPRINT(EM_DIAGRAM):    *;
369275     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
369276     validdata=EMWS8.Meta_VALIDATE
369277     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
369278     *;
MPRINT(EM_DIAGRAM):   *;
369279     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
369280     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
369281     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
369282     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
369283     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
369284     target DepVar / level=NOMINAL id=DepVar
369285     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
369286     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369287     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
369288     ;
MPRINT(EM_DIAGRAM):   ;
369289     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369290     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
369291     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
369292     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
369293     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
369294     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
369295     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
369296     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
369297     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
369298     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369299     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
369300     ;
MPRINT(EM_DIAGRAM):   ;
369301     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369302     Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
369303     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
369304     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
369305     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
369306     *;
MPRINT(EM_DIAGRAM):   *;
369307     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
369308     *;
MPRINT(EM_DIAGRAM):   *;
369309     initial
369310     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
369311     ;
MPRINT(EM_DIAGRAM):   ;
369312     *;
MPRINT(EM_DIAGRAM):   *;
369313     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369314     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
369314   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
369315     prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 466 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
369316     tech = Default
369317     inest = EMWS8.AutoNeural10_ESTDS bylabel
369318     ;
369319     *;
369320     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369321     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
369321   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=891
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 466 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
369322     train estiter=1 outest=_anest outfit=_anfit maxtime=891 maxiter=50
MPRINT(EM_DIAGRAM):   run;
369323     tech = Default;
369324     ;
369325     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           18.83 seconds
      cpu time            18.78 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 373.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           18.84 seconds
      cpu time            18.78 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369326     *;
369327     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
369328     var _iter_ _aic_ _averr_ _misc_
369329     _vaverr_ _vmisc_
369330     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369331     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 374.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369332     *------------------------------------------------------------*;
369333     * Extract best iteration;
369334     ;
369335     *------------------------------------------------------------*;
369336     %global _iter;
369337     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
369338     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
369339     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
369340     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
369341     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
369342     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
369343     end;
MPRINT(EM_DIAGRAM):   end;
369344     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369345     *;
 
369346     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
369347     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
369348     if _ITER_ eq 23 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 23 then do;
369349     output;
MPRINT(EM_DIAGRAM):   output;
369350     stop;
MPRINT(EM_DIAGRAM):   stop;
369351     end;
MPRINT(EM_DIAGRAM):   end;
369352     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 466
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369353     *;
369354     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369355     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
369356     if _ITER_ eq 23 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 23 and _NAME_ eq "OVERALL" then do;
369357     output;
MPRINT(EM_DIAGRAM):   output;
369358     stop;
MPRINT(EM_DIAGRAM):   stop;
369359     end;
MPRINT(EM_DIAGRAM):   end;
369360     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369361     *;
MPRINT(EM_DIAGRAM):    *;
369362     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369363     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
369363   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
369364     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
369365     var _iter_ _aic_ _averr_ _misc_
369366     _vaverr_ _vmisc_
369367     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369368     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 375.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369369     title9;
MPRINT(EM_DIAGRAM):   title9;
369370     title10;
MPRINT(EM_DIAGRAM):   title10;
369371     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369372     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369373     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369374     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369375     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369376     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369377     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369378     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369379     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369380     ;
MPRINT(EM_DIAGRAM):   ;
369381     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369382     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369383     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369384     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
369385     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
369386     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
369387     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
369388     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369389     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369390     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369391     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369392     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
369393     ;
MPRINT(EM_DIAGRAM):   ;
369394     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
369395     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
369396     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369397     *;
MPRINT(EM_DIAGRAM):    *;
369398     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
369399     validdata=EMWS8.Meta_VALIDATE
369400     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
369401     *;
MPRINT(EM_DIAGRAM):   *;
369402     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
369403     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
369404     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
369405     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
369406     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
369407     target DepVar / level=NOMINAL id=DepVar
369408     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
369409     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369410     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
369411     ;
MPRINT(EM_DIAGRAM):   ;
369412     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369413     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
369414     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
369415     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
369416     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
369417     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
369418     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
369419     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
369420     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
369421     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369422     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
369423     ;
MPRINT(EM_DIAGRAM):   ;
369424     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369425     Hidden 5 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SINE;
369426     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
369427     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
369428     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
369429     *;
MPRINT(EM_DIAGRAM):   *;
369430     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
369431     *;
MPRINT(EM_DIAGRAM):   *;
369432     initial
369433     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
369434     ;
MPRINT(EM_DIAGRAM):   ;
369435     *;
MPRINT(EM_DIAGRAM):   *;
369436     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369437     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
369437   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
369438     prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 466 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
369439     tech = Default
369440     inest = EMWS8.AutoNeural10_ESTDS bylabel
369441     ;
369442     *;
369443     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369444     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
369444   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=887
maxiter=50 tech = Default;
NOTE: Convergence criterion (ABSCONV=0.0020529663) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set WORK._ANEST has 49 observations and 466 variables.
NOTE: The data set WORK._ANFIT has 96 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
369445     train estiter=1 outest=_anest outfit=_anfit maxtime=887 maxiter=50
MPRINT(EM_DIAGRAM):   run;
369446     tech = Default;
369447     ;
369448     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           16.93 seconds
      cpu time            16.91 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 376.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           16.93 seconds
      cpu time            16.91 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369449     *;
369450     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
369451     var _iter_ _aic_ _averr_ _misc_
369452     _vaverr_ _vmisc_
369453     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369454     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 377.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369455     *------------------------------------------------------------*;
369456     * Extract best iteration;
369457     ;
369458     *------------------------------------------------------------*;
369459     %global _iter;
369460     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
369461     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
369462     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
369463     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
369464     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
369465     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
369466     end;
MPRINT(EM_DIAGRAM):   end;
369467     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369468     *;
 
369469     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
369470     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
369471     if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
369472     output;
MPRINT(EM_DIAGRAM):   output;
369473     stop;
MPRINT(EM_DIAGRAM):   stop;
369474     end;
MPRINT(EM_DIAGRAM):   end;
369475     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 466
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369476     *;
369477     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369478     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
369479     if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
369480     output;
MPRINT(EM_DIAGRAM):   output;
369481     stop;
MPRINT(EM_DIAGRAM):   stop;
369482     end;
MPRINT(EM_DIAGRAM):   end;
369483     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369484     *;
MPRINT(EM_DIAGRAM):    *;
369485     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369486     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
369486   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
369487     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
369488     var _iter_ _aic_ _averr_ _misc_
369489     _vaverr_ _vmisc_
369490     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369491     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 378.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369492     title9;
MPRINT(EM_DIAGRAM):   title9;
369493     title10;
MPRINT(EM_DIAGRAM):   title10;
369494     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369495     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369496     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369497     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369498     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369499     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369500     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369501     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369502     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369503     ;
MPRINT(EM_DIAGRAM):   ;
369504     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369505     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369506     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369507     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
369508     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
369509     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
369510     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
369511     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369512     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369513     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369514     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369515     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
369516     ;
MPRINT(EM_DIAGRAM):   ;
369517     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
369518     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
369519     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369520     *;
MPRINT(EM_DIAGRAM):    *;
369521     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
369522     validdata=EMWS8.Meta_VALIDATE
369523     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
369524     *;
MPRINT(EM_DIAGRAM):   *;
369525     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
369526     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
369527     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
369528     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
369529     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
369530     target DepVar / level=NOMINAL id=DepVar
369531     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
369532     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369533     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
369534     ;
MPRINT(EM_DIAGRAM):   ;
369535     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369536     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
369537     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
369538     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
369539     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
369540     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
The SAS System
 
369541     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
369542     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
369543     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
369544     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369545     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
369546     ;
MPRINT(EM_DIAGRAM):   ;
369547     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369548     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
369549     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
369550     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
369551     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
369552     *;
MPRINT(EM_DIAGRAM):   *;
369553     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
369554     *;
MPRINT(EM_DIAGRAM):   *;
369555     initial
369556     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
369557     ;
MPRINT(EM_DIAGRAM):   ;
369558     *;
MPRINT(EM_DIAGRAM):   *;
369559     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369560     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
369560   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
369561     prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 455 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
369562     tech = Default
369563     inest = EMWS8.AutoNeural10_ESTDS bylabel
369564     ;
369565     *;
369566     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369567     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
369567   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=882
maxiter=50 tech = Default;
NOTE: Convergence criterion (ABSCONV=0.0020529663) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set WORK._ANEST has 52 observations and 455 variables.
NOTE: The data set WORK._ANFIT has 102 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
369568     train estiter=1 outest=_anest outfit=_anfit maxtime=882 maxiter=50
MPRINT(EM_DIAGRAM):   run;
369569     tech = Default;
369570     ;
369571     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           18.13 seconds
      cpu time            18.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 379.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           18.14 seconds
      cpu time            18.12 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369572     *;
369573     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
369574     var _iter_ _aic_ _averr_ _misc_
369575     _vaverr_ _vmisc_
369576     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369577     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 380.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369578     *------------------------------------------------------------*;
369579     * Extract best iteration;
369580     ;
369581     *------------------------------------------------------------*;
369582     %global _iter;
369583     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
369584     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
369585     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
369586     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
369587     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
369588     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
369589     end;
MPRINT(EM_DIAGRAM):   end;
369590     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369591     *;
 
369592     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
369593     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
369594     if _ITER_ eq 11 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 11 then do;
369595     output;
MPRINT(EM_DIAGRAM):   output;
369596     stop;
MPRINT(EM_DIAGRAM):   stop;
369597     end;
MPRINT(EM_DIAGRAM):   end;
369598     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 455
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369599     *;
369600     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369601     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
369602     if _ITER_ eq 11 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 11 and _NAME_ eq "OVERALL" then do;
369603     output;
MPRINT(EM_DIAGRAM):   output;
369604     stop;
MPRINT(EM_DIAGRAM):   stop;
369605     end;
MPRINT(EM_DIAGRAM):   end;
369606     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369607     *;
MPRINT(EM_DIAGRAM):    *;
369608     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369609     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
369609   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
369610     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
369611     var _iter_ _aic_ _averr_ _misc_
369612     _vaverr_ _vmisc_
369613     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369614     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 381.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369615     title9;
MPRINT(EM_DIAGRAM):   title9;
369616     title10;
MPRINT(EM_DIAGRAM):   title10;
369617     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369618     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369619     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369620     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369621     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369622     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369623     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369624     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369625     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369626     ;
MPRINT(EM_DIAGRAM):   ;
369627     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369628     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369629     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369630     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
369631     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
369632     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
369633     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
369634     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369635     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369636     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369637     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369638     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
369639     ;
MPRINT(EM_DIAGRAM):   ;
369640     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
369641     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
369642     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369643     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369644     set WORK.BFITDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1GFQOWY;
369645     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1GFQOWY.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369646     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369647     ;
MPRINT(EM_DIAGRAM):   ;
369648     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369649     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369650     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369651     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
369652     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
369653     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
369654     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
369655     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369656     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369657     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369658     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369659     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369660     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369661     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369663     *;
MPRINT(EM_DIAGRAM):    *;
369664     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
369665     validdata=EMWS8.Meta_VALIDATE
369666     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
369667     *;
MPRINT(EM_DIAGRAM):   *;
369668     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
369669     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
369670     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
369671     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
369672     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
369673     target DepVar / level=NOMINAL id=DepVar
369674     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
369675     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369676     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
369677     ;
MPRINT(EM_DIAGRAM):   ;
369678     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369679     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
369680     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
369681     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
369682     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369683     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
369684     ;
MPRINT(EM_DIAGRAM):   ;
369685     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369686     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
369687     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
369688     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
369689     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
369690     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
369691     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
369692     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
369693     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
369694     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369695     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
369696     ;
MPRINT(EM_DIAGRAM):   ;
369697     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369698     Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
369699     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
369700     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
369701     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
369702     *;
MPRINT(EM_DIAGRAM):   *;
369703     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
369704     *;
MPRINT(EM_DIAGRAM):   *;
369705     initial
369706     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
369707     ;
MPRINT(EM_DIAGRAM):   ;
369708     *;
MPRINT(EM_DIAGRAM):   *;
369709     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369710     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
369710   ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
369711     prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 504 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
369712     tech = Default
369713     inest = EMWS8.AutoNeural10_ESTDS bylabel
369714     ;
369715     *;
369716     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369717     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
369717   ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=878
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 504 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
369718     train estiter=1 outest=_anest outfit=_anfit maxtime=878 maxiter=50
MPRINT(EM_DIAGRAM):   run;
369719     tech = Default;
369720     ;
369721     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           20.41 seconds
      cpu time            20.29 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 382.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           20.42 seconds
      cpu time            20.29 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369722     *;
369723     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
369724     var _iter_ _aic_ _averr_ _misc_
369725     _vaverr_ _vmisc_
369726     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369727     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 383.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369728     *------------------------------------------------------------*;
369729     * Extract best iteration;
369730     ;
369731     *------------------------------------------------------------*;
369732     %global _iter;
369733     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
369734     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
369735     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
369736     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
369737     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
369738     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
369739     end;
MPRINT(EM_DIAGRAM):   end;
369740     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369741     *;
 
369742     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
369743     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
369744     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
369745     output;
MPRINT(EM_DIAGRAM):   output;
369746     stop;
MPRINT(EM_DIAGRAM):   stop;
369747     end;
MPRINT(EM_DIAGRAM):   end;
369748     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369749     *;
369750     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369751     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
369752     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
369753     output;
MPRINT(EM_DIAGRAM):   output;
369754     stop;
MPRINT(EM_DIAGRAM):   stop;
369755     end;
MPRINT(EM_DIAGRAM):   end;
369756     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369757     *;
MPRINT(EM_DIAGRAM):    *;
369758     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369759     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
369759   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
369760     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
369761     var _iter_ _aic_ _averr_ _misc_
369762     _vaverr_ _vmisc_
369763     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369764     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 384.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369765     title9;
MPRINT(EM_DIAGRAM):   title9;
369766     title10;
MPRINT(EM_DIAGRAM):   title10;
369767     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369768     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369769     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369771     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369772     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369773     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369774     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369775     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
369776     ;
MPRINT(EM_DIAGRAM):   ;
369777     data WORK.SAVEDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1GFQOWY;
369778     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
369779     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1GFQOWY has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369780     data EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_BESTDS;
369781     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
369782     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_BESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369783     data WORK.BFITDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1GFQOWY;
369784     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369785     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1GFQOWY has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369786     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369787     ;
MPRINT(EM_DIAGRAM):   ;
369788     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369789     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369790     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369791     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
369792     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
369793     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
369794     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
369795     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369796     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369797     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369798     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369799     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
369800     ;
MPRINT(EM_DIAGRAM):   ;
369801     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
369802     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
369803     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369804     *;
MPRINT(EM_DIAGRAM):    *;
369805     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
369806     validdata=EMWS8.Meta_VALIDATE
369807     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
369808     *;
MPRINT(EM_DIAGRAM):   *;
369809     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
369810     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
369811     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
369812     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
369813     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
369814     target DepVar / level=NOMINAL id=DepVar
369815     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
369816     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369817     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
369818     ;
MPRINT(EM_DIAGRAM):   ;
369819     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369820     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
369821     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
369822     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
369823     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369824     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
369825     ;
MPRINT(EM_DIAGRAM):   ;
369826     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369827     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
369828     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
369829     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
369830     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
369831     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
369832     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
369833     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
369834     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
369835     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369836     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
369837     ;
MPRINT(EM_DIAGRAM):   ;
369838     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369839     Hidden 5 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SINE;
369840     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
369841     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
369842     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
369843     *;
MPRINT(EM_DIAGRAM):   *;
369844     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
369845     *;
MPRINT(EM_DIAGRAM):   *;
369846     initial
369847     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
369848     ;
MPRINT(EM_DIAGRAM):   ;
369849     *;
MPRINT(EM_DIAGRAM):   *;
369850     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369851     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
369851   ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
369852     prelim 25 outest=_anpre pretime=34 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=34 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 504 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
MPRINT(EM_DIAGRAM):   *;
369853     tech = Default
369854     inest = EMWS8.AutoNeural10_ESTDS bylabel
369855     ;
369856     *;
369857     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369858     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
369858   ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=873
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 504 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
369859     train estiter=1 outest=_anest outfit=_anfit maxtime=873 maxiter=50
MPRINT(EM_DIAGRAM):   run;
369860     tech = Default;
369861     ;
369862     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.23 seconds
      cpu time            2.23 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 385.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.24 seconds
      cpu time            2.23 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369863     *;
369864     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
369865     var _iter_ _aic_ _averr_ _misc_
369866     _vaverr_ _vmisc_
369867     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369868     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 386.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369869     *------------------------------------------------------------*;
369870     * Extract best iteration;
369871     ;
369872     *------------------------------------------------------------*;
369873     %global _iter;
369874     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
369875     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
369876     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
369877     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
369878     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
369879     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
369880     end;
MPRINT(EM_DIAGRAM):   end;
369881     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369882     *;
 
369883     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
369884     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
369885     if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
369886     output;
MPRINT(EM_DIAGRAM):   output;
369887     stop;
MPRINT(EM_DIAGRAM):   stop;
369888     end;
MPRINT(EM_DIAGRAM):   end;
369889     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369890     *;
369891     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369892     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
369893     if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
369894     output;
MPRINT(EM_DIAGRAM):   output;
369895     stop;
MPRINT(EM_DIAGRAM):   stop;
369896     end;
MPRINT(EM_DIAGRAM):   end;
369897     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369898     *;
MPRINT(EM_DIAGRAM):    *;
369899     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369900     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
369900   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
369901     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
369902     var _iter_ _aic_ _averr_ _misc_
369903     _vaverr_ _vmisc_
369904     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369905     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 387.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369906     title9;
MPRINT(EM_DIAGRAM):   title9;
369907     title10;
MPRINT(EM_DIAGRAM):   title10;
369908     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369909     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369910     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369911     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369912     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
369913     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369914     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
369915     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
369916     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
369917     ;
MPRINT(EM_DIAGRAM):   ;
369918     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
369919     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
369920     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
369921     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
369922     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
369923     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
369924     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
369925     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369926     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
369927     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
369928     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369929     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
369930     ;
MPRINT(EM_DIAGRAM):   ;
369931     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
369932     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
369933     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
369934     *;
MPRINT(EM_DIAGRAM):    *;
369935     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
369936     validdata=EMWS8.Meta_VALIDATE
369937     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
369938     *;
MPRINT(EM_DIAGRAM):   *;
369939     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
369940     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
369941     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
369942     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
369943     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
369944     target DepVar / level=NOMINAL id=DepVar
369945     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
369946     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369947     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
369948     ;
MPRINT(EM_DIAGRAM):   ;
369949     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369950     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
369951     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
369952     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
369953     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369954     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
369955     ;
MPRINT(EM_DIAGRAM):   ;
369956     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369957     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
369958     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
369959     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
369960     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
369961     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
369962     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
369963     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
369964     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
369965     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369966     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
369967     ;
MPRINT(EM_DIAGRAM):   ;
369968     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369969     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
369970     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
369971     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
369972     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
369973     *;
MPRINT(EM_DIAGRAM):   *;
369974     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
369975     *;
MPRINT(EM_DIAGRAM):   *;
369976     initial
369977     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
369978     ;
MPRINT(EM_DIAGRAM):   ;
369979     *;
MPRINT(EM_DIAGRAM):   *;
369980     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369981     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
369981   ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
369982     prelim 25 outest=_anpre pretime=34 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=34 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 493 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
MPRINT(EM_DIAGRAM):   *;
369983     tech = Default
369984     inest = EMWS8.AutoNeural10_ESTDS bylabel
369985     ;
369986     *;
369987     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
369988     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
369988   ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=872
maxiter=50 tech = Default;
NOTE: Convergence criterion (ABSCONV=0.0020529663) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set WORK._ANEST has 50 observations and 493 variables.
NOTE: The data set WORK._ANFIT has 98 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
369989     train estiter=1 outest=_anest outfit=_anfit maxtime=872 maxiter=50
MPRINT(EM_DIAGRAM):   run;
369990     tech = Default;
369991     ;
369992     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           2.16 seconds
      cpu time            2.13 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 388.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.17 seconds
      cpu time            2.13 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
369993     *;
369994     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
369995     var _iter_ _aic_ _averr_ _misc_
369996     _vaverr_ _vmisc_
369997     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
369998     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 389.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
369999     *------------------------------------------------------------*;
370000     * Extract best iteration;
370001     ;
370002     *------------------------------------------------------------*;
370003     %global _iter;
370004     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370005     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370006     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370007     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370008     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370009     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370010     end;
MPRINT(EM_DIAGRAM):   end;
370011     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 49 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370012     *;
 
370013     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
370014     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370015     if _ITER_ eq 12 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 then do;
370016     output;
MPRINT(EM_DIAGRAM):   output;
370017     stop;
MPRINT(EM_DIAGRAM):   stop;
370018     end;
MPRINT(EM_DIAGRAM):   end;
370019     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370020     *;
370021     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370022     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370023     if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
370024     output;
MPRINT(EM_DIAGRAM):   output;
370025     stop;
MPRINT(EM_DIAGRAM):   stop;
370026     end;
MPRINT(EM_DIAGRAM):   end;
370027     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370028     *;
MPRINT(EM_DIAGRAM):    *;
370029     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370030     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370030   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370031     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
370032     var _iter_ _aic_ _averr_ _misc_
370033     _vaverr_ _vmisc_
370034     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370035     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 390.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370036     title9;
MPRINT(EM_DIAGRAM):   title9;
370037     title10;
MPRINT(EM_DIAGRAM):   title10;
370038     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370039     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370040     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370041     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370042     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370043     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370044     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370045     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370046     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370047     ;
MPRINT(EM_DIAGRAM):   ;
370048     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370049     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370050     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370051     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
370052     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
370053     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
370054     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
370055     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370056     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
370057     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
370058     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370059     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
370060     ;
MPRINT(EM_DIAGRAM):   ;
370061     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
370062     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
370063     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370064     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370065     set WORK.BFITDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1GFQOWY;
370066     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1GFQOWY.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370067     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370068     ;
MPRINT(EM_DIAGRAM):   ;
370069     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370070     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370071     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370072     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
370073     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
370074     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
370075     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
370076     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370077     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
370078     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
370079     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370080     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370081     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370082     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370083     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370084     *;
MPRINT(EM_DIAGRAM):    *;
370085     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
370086     validdata=EMWS8.Meta_VALIDATE
370087     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
370088     *;
MPRINT(EM_DIAGRAM):   *;
370089     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370090     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370091     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370092     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
370093     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370094     target DepVar / level=NOMINAL id=DepVar
370095     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
370096     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370097     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
370098     ;
MPRINT(EM_DIAGRAM):   ;
370099     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370100     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
370101     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
370102     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
370103     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370104     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370105     ;
MPRINT(EM_DIAGRAM):   ;
370106     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370107     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
370108     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370109     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
370110     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370111     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
370112     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
370113     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
370114     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
370115     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
370116     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
370117     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
370118     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
370119     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370120     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
370121     ;
MPRINT(EM_DIAGRAM):   ;
370122     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370123     Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
370124     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
370125     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
370126     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
370127     Hidden 5 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=LOG;
370128     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
370129     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
370130     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
370131     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370132     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
370133     ;
MPRINT(EM_DIAGRAM):   ;
370134     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370135     Hidden 5 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=LOG;
370136     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
370137     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
370138     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
370139     *;
MPRINT(EM_DIAGRAM):   *;
370140     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370141     *;
MPRINT(EM_DIAGRAM):   *;
370142     initial
370143     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
370144     ;
MPRINT(EM_DIAGRAM):   ;
370145     *;
MPRINT(EM_DIAGRAM):   *;
370146     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370147     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
370147   ! Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
370148     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 859 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
MPRINT(EM_DIAGRAM):   *;
370149     tech = Default
370150     inest = EMWS8.AutoNeural10_ESTDS bylabel
370151     ;
370152     *;
370153     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370154     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
370154   ! Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=872
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 859 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
370155     train estiter=1 outest=_anest outfit=_anfit maxtime=872 maxiter=50
MPRINT(EM_DIAGRAM):   run;
370156     tech = Default;
370157     ;
370158     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           54.53 seconds
      cpu time            54.27 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 391.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           54.54 seconds
      cpu time            54.27 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370159     *;
370160     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
370161     var _iter_ _aic_ _averr_ _misc_
370162     _vaverr_ _vmisc_
370163     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370164     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 392.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370165     *------------------------------------------------------------*;
370166     * Extract best iteration;
370167     ;
370168     *------------------------------------------------------------*;
370169     %global _iter;
370170     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370171     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370172     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370173     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370174     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370175     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370176     end;
MPRINT(EM_DIAGRAM):   end;
370177     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370178     *;
 
370179     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
370180     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370181     if _ITER_ eq 7 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 then do;
370182     output;
MPRINT(EM_DIAGRAM):   output;
370183     stop;
MPRINT(EM_DIAGRAM):   stop;
370184     end;
MPRINT(EM_DIAGRAM):   end;
370185     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 859
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370186     *;
370187     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370188     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370189     if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
370190     output;
MPRINT(EM_DIAGRAM):   output;
370191     stop;
MPRINT(EM_DIAGRAM):   stop;
370192     end;
MPRINT(EM_DIAGRAM):   end;
370193     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370194     *;
MPRINT(EM_DIAGRAM):    *;
370195     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370196     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370196   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370197     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
370198     var _iter_ _aic_ _averr_ _misc_
370199     _vaverr_ _vmisc_
370200     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370201     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 393.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370202     title9;
MPRINT(EM_DIAGRAM):   title9;
370203     title10;
MPRINT(EM_DIAGRAM):   title10;
370204     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370205     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370206     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370207     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370208     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370209     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370210     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370211     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370212     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370213     ;
MPRINT(EM_DIAGRAM):   ;
370214     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370215     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370216     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370217     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
370218     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
370219     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
370220     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
370221     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370222     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
370223     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
370224     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370225     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
370226     ;
MPRINT(EM_DIAGRAM):   ;
370227     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
370228     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
370229     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370230     *;
MPRINT(EM_DIAGRAM):    *;
370231     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
370232     validdata=EMWS8.Meta_VALIDATE
370233     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
370234     *;
MPRINT(EM_DIAGRAM):   *;
370235     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370236     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370237     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370238     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
370239     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370240     target DepVar / level=NOMINAL id=DepVar
370241     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
370242     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370243     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
370244     ;
MPRINT(EM_DIAGRAM):   ;
370245     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370246     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
370247     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
370248     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
370249     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370250     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370251     ;
MPRINT(EM_DIAGRAM):   ;
370252     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370253     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
370254     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370255     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
370256     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370257     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
370258     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
370259     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
370260     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
370261     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
370262     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
370263     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
370264     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
370265     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370266     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
370267     ;
MPRINT(EM_DIAGRAM):   ;
370268     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370269     Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
370270     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
370271     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
370272     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
370273     Hidden 5 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=LOG;
370274     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
370275     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
370276     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
370277     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370278     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
370279     ;
MPRINT(EM_DIAGRAM):   ;
370280     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370281     Hidden 5 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SINE;
370282     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
370283     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
370284     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
370285     *;
MPRINT(EM_DIAGRAM):   *;
370286     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370287     *;
MPRINT(EM_DIAGRAM):   *;
370288     initial
370289     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
370290     ;
MPRINT(EM_DIAGRAM):   ;
370291     *;
MPRINT(EM_DIAGRAM):   *;
370292     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370293     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
370293   ! Search # 4 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
370294     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 859 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
MPRINT(EM_DIAGRAM):   *;
370295     tech = Default
370296     inest = EMWS8.AutoNeural10_ESTDS bylabel
370297     ;
370298     *;
370299     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370300     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
370300   ! Search # 4 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=858
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 859 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
370301     train estiter=1 outest=_anest outfit=_anfit maxtime=858 maxiter=50
MPRINT(EM_DIAGRAM):   run;
370302     tech = Default;
370303     ;
370304     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           47.56 seconds
      cpu time            47.37 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 394.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           47.57 seconds
      cpu time            47.37 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370305     *;
370306     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
370307     var _iter_ _aic_ _averr_ _misc_
370308     _vaverr_ _vmisc_
370309     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370310     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 395.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370311     *------------------------------------------------------------*;
370312     * Extract best iteration;
370313     ;
370314     *------------------------------------------------------------*;
370315     %global _iter;
370316     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370317     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370318     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370319     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370320     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370321     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370322     end;
MPRINT(EM_DIAGRAM):   end;
370323     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370324     *;
 
370325     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
370326     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370327     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
370328     output;
MPRINT(EM_DIAGRAM):   output;
370329     stop;
MPRINT(EM_DIAGRAM):   stop;
370330     end;
MPRINT(EM_DIAGRAM):   end;
370331     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 859
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370332     *;
370333     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370334     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370335     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
370336     output;
MPRINT(EM_DIAGRAM):   output;
370337     stop;
MPRINT(EM_DIAGRAM):   stop;
370338     end;
MPRINT(EM_DIAGRAM):   end;
370339     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370340     *;
MPRINT(EM_DIAGRAM):    *;
370341     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370342     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370342   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370343     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
370344     var _iter_ _aic_ _averr_ _misc_
370345     _vaverr_ _vmisc_
370346     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370347     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 396.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370348     title9;
MPRINT(EM_DIAGRAM):   title9;
370349     title10;
MPRINT(EM_DIAGRAM):   title10;
370350     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370351     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370352     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370354     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370355     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370356     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370357     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370358     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370359     ;
MPRINT(EM_DIAGRAM):   ;
370360     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370361     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370362     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370363     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
370364     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
370365     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
370366     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
370367     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370368     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
370369     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
370370     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 17 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370371     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
370372     ;
MPRINT(EM_DIAGRAM):   ;
370373     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
370374     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
370375     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370376     *;
MPRINT(EM_DIAGRAM):    *;
370377     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
370378     validdata=EMWS8.Meta_VALIDATE
370379     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
370380     *;
MPRINT(EM_DIAGRAM):   *;
370381     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370382     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370383     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370384     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
370385     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370386     target DepVar / level=NOMINAL id=DepVar
370387     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
370388     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370389     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
370390     ;
MPRINT(EM_DIAGRAM):   ;
370391     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370392     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
370393     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
370394     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
370395     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370396     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370397     ;
MPRINT(EM_DIAGRAM):   ;
370398     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370399     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
370400     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370401     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
370402     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370403     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
370404     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
370405     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
370406     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
370407     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
370408     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
370409     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
370410     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
370411     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370412     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
370413     ;
MPRINT(EM_DIAGRAM):   ;
370414     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370415     Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
370416     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
370417     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
370418     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
370419     Hidden 5 / id = H2x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=LOG;
370420     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
370421     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
370422     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
370423     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370424     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
370425     ;
MPRINT(EM_DIAGRAM):   ;
370426     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370427     Hidden 5 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SOFTMAX;
370428     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
370429     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
370430     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
370431     *;
MPRINT(EM_DIAGRAM):   *;
370432     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370433     *;
MPRINT(EM_DIAGRAM):   *;
370434     initial
370435     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
370436     ;
MPRINT(EM_DIAGRAM):   ;
370437     *;
MPRINT(EM_DIAGRAM):   *;
370438     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370439     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
370439   ! Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
370440     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 848 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
MPRINT(EM_DIAGRAM):   *;
370441     tech = Default
370442     inest = EMWS8.AutoNeural10_ESTDS bylabel
370443     ;
370444     *;
370445     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370446     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
370446   ! Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=846
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 848 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
370447     train estiter=1 outest=_anest outfit=_anfit maxtime=846 maxiter=50
MPRINT(EM_DIAGRAM):   run;
370448     tech = Default;
370449     ;
370450     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           51.71 seconds
      cpu time            51.54 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 397.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           51.71 seconds
      cpu time            51.54 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370451     *;
370452     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
370453     var _iter_ _aic_ _averr_ _misc_
370454     _vaverr_ _vmisc_
370455     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370456     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 398.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370457     *------------------------------------------------------------*;
370458     * Extract best iteration;
370459     ;
370460     *------------------------------------------------------------*;
370461     %global _iter;
370462     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370463     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370464     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370465     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370466     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370467     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370468     end;
MPRINT(EM_DIAGRAM):   end;
370469     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370470     *;
 
370471     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
370472     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370473     if _ITER_ eq 7 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 then do;
370474     output;
MPRINT(EM_DIAGRAM):   output;
370475     stop;
MPRINT(EM_DIAGRAM):   stop;
370476     end;
MPRINT(EM_DIAGRAM):   end;
370477     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 848
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370478     *;
370479     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370480     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370481     if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
370482     output;
MPRINT(EM_DIAGRAM):   output;
370483     stop;
MPRINT(EM_DIAGRAM):   stop;
370484     end;
MPRINT(EM_DIAGRAM):   end;
370485     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370486     *;
MPRINT(EM_DIAGRAM):    *;
370487     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370488     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370488   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370489     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
370490     var _iter_ _aic_ _averr_ _misc_
370491     _vaverr_ _vmisc_
370492     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370493     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 399.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370494     title9;
MPRINT(EM_DIAGRAM):   title9;
370495     title10;
MPRINT(EM_DIAGRAM):   title10;
370496     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370497     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370498     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370499     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370500     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
370501     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370502     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
370503     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370504     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370505     ;
MPRINT(EM_DIAGRAM):   ;
370506     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370507     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370508     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370509     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
370510     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
370511     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
370512     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
370513     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370514     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
370515     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
370516     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 18 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370517     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
370518     set WORK.SAVEDS_AUTONEUR_1GFQOWY;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_1GFQOWY;
370519     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_1GFQOWY.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370520     *;
MPRINT(EM_DIAGRAM):    *;
370521     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
370522     validdata=EMWS8.Meta_VALIDATE
370523     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
370524     *;
MPRINT(EM_DIAGRAM):   *;
370525     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370526     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370527     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370528     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
370529     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370530     target DepVar / level=NOMINAL id=DepVar
370531     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
370532     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370533     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
370534     ;
MPRINT(EM_DIAGRAM):   ;
370535     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370536     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
370537     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
370538     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
370539     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370540     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370541     ;
MPRINT(EM_DIAGRAM):   ;
370542     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370543     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
370544     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370545     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
370546     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370547     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
370548     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
370549     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
370550     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
370551     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370552     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
370553     ;
MPRINT(EM_DIAGRAM):   ;
370554     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370555     Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
370556     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
370557     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
370558     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
370559     *;
MPRINT(EM_DIAGRAM):   *;
370560     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
370561     *;
MPRINT(EM_DIAGRAM):   *;
370562     initial
370563     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
370564     ;
MPRINT(EM_DIAGRAM):   ;
370565     *;
MPRINT(EM_DIAGRAM):   *;
370566     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370567     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
370567   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
370568     prelim 25 outest=_anpre pretime=33 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=33 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 504 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
MPRINT(EM_DIAGRAM):   *;
370569     tech = Default
370570     inest = EMWS8.AutoNeural10_ESTDS bylabel
370571     ;
370572     *;
370573     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370574     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
370574   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=833
maxiter=5 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 504 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
370575     train estiter=1 outest=_anest outfit=_anfit maxtime=833 maxiter=5
MPRINT(EM_DIAGRAM):   run;
370576     tech = Default;
370577     ;
370578     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1.08 seconds
      cpu time            1.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 400.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.09 seconds
      cpu time            1.09 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370579     *;
370580     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
370581     var _iter_ _aic_ _averr_ _misc_
370582     _vaverr_ _vmisc_
370583     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370584     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 401.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370585     *------------------------------------------------------------*;
370586     * Extract best iteration;
370587     ;
370588     *------------------------------------------------------------*;
370589     %global _iter;
370590     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
370591     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
370592     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
370593     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
370594     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
370595     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
370596     end;
MPRINT(EM_DIAGRAM):   end;
370597     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370598     *;
 
370599     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
370600     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
370601     if _ITER_ eq 4 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 then do;
370602     output;
MPRINT(EM_DIAGRAM):   output;
370603     stop;
MPRINT(EM_DIAGRAM):   stop;
370604     end;
MPRINT(EM_DIAGRAM):   end;
370605     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
370606     *;
370607     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370608     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
370609     if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 4 and _NAME_ eq "OVERALL" then do;
370610     output;
MPRINT(EM_DIAGRAM):   output;
370611     stop;
MPRINT(EM_DIAGRAM):   stop;
370612     end;
MPRINT(EM_DIAGRAM):   end;
370613     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370614     *;
MPRINT(EM_DIAGRAM):    *;
370615     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
370616     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
370616   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
370617     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
370618     var _iter_ _aic_ _averr_ _misc_
370619     _vaverr_ _vmisc_
370620     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
370621     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 402.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370622     title9;
MPRINT(EM_DIAGRAM):   title9;
370623     title10;
MPRINT(EM_DIAGRAM):   title10;
370624     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
370625     ;
MPRINT(EM_DIAGRAM):   ;
370626     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370627     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
370628     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
370629     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
370630     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
370631     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
370632     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
370633     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370634     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
370635     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
370636     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 19 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370637     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
370638     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
370638   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
370639     proc print data=EMWS8.AutoNeural10_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_HISTORY noobs;
370640     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
370641     _vaverr_ _vmisc_
370642     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
370643     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: The PROCEDURE PRINT printed page 403.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370644     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
370645     set EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY;
370646     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
370647     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
370648     else neurons=5;
MPRINT(EM_DIAGRAM):   else neurons=5;
370649     label neurons="%sysfunc(sasmsg(sashelp.dmine,
370649   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
370650     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 3 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370651     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
370652     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
370652   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
370653     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
370653   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
370653   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
370654     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
370655     var _func_ _averr_
370656     _vaverr_
370657     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
370658     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
370659     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 404.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370660     title8;
MPRINT(EM_DIAGRAM):   title8;
370661     title9;
MPRINT(EM_DIAGRAM):   title9;
370662     title10;
MPRINT(EM_DIAGRAM):   title10;
370663     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370664     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
370665     ;
MPRINT(EM_DIAGRAM):   ;
370666     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370667     *;
MPRINT(EM_DIAGRAM):   *;
370668     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
370669     validdata=EMWS8.Meta_VALIDATE
370670     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
370671     *;
MPRINT(EM_DIAGRAM):   *;
370672     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
370673     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
370674     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
370675     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
370676     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
370677     target DepVar / level=NOMINAL id=DepVar
370678     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
370679     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370680     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
370681     ;
MPRINT(EM_DIAGRAM):   ;
370682     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370683     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
370684     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
370685     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
370686     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
370687     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
370688     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
370689     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
370690     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
370691     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370692     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
370693     ;
MPRINT(EM_DIAGRAM):   ;
370694     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370695     Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
370696     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
370697     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
370698     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
370699     *;
MPRINT(EM_DIAGRAM):   *;
370700     initial inest= EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
370701     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
370702     code
370702   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\SCO
370702   ! RECODE.sas"
370703     group=AutoNeural10
370704     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\SCORECODE.sas"
 group=AutoNeural10 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\SCORECODE.sas
      opened.
370705     ;
MPRINT(EM_DIAGRAM):   ;
370706     code
370706   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\RES
370706   ! IDUALSCORECODE.sas"
370707     group=AutoNeural10
370708     residual
370709     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\RESIDUALSCOREC
ODE.sas" group=AutoNeural10 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\RESIDUALSCOREC
      ODE.sas opened.
370710     ;
MPRINT(EM_DIAGRAM):   ;
370711     score data=EMWS8.Meta_TRAIN out=_NULL_
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
370712     outfit=WORK.FIT1
370713     role=TRAIN
370714     outkey=EMWS8.AutoNeural10_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural10_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL10_OUTKEY has 65 observations and 8
      variables.
NOTE: The data set EMWS8.META_TRAIN has . observations and 45 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
370715     score data=EMWS8.Meta_VALIDATE out=_NULL_
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
370716     outfit=WORK.FIT2
370717     outkey=EMWS8.AutoNeural10_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural10_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL10_OUTKEY has 65 observations and 8
      variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
370718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.24 seconds
      cpu time            0.24 seconds
 
 
370719     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
370720     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
370721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370722     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370723     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
370724     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
370725     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
370725   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
370726     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
370727     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 496 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370728     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
370729     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
370730     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 496 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
370731     proc transpose data=tempweight out=EMWS8.AutoNeural10_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural10_WEIGHTS;
370732     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
370733     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL10_WEIGHTS has 494 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
370734     data EMWS8.AutoNeural10_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_WEIGHTS;
370735     set EMWS8.AutoNeural10_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_WEIGHTS;
370736     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
370737     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
370738     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
370739     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
370740     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
370740   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
370740   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
370740   ! NOQUOTE))" WEIGHT =
370741        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
370742     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
370743     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 494 observations read from the data set
      EMWS8.AUTONEURAL10_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL10_WEIGHTS has 489 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
370744     * restore printing options;
370745     ;
370746     title10;
MPRINT(EM_DIAGRAM):   title10;
370747     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
370748     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
370749     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
370750     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
370751     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
370752     *;
370753     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
370754     delete EM_AutoNeural10;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural10;
370755     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL10 (memtype=DATA).
370756     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
370757     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_HISTORY;
370758     set EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY;
370759     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
370760     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
370760   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
370761     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
370762     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS8.AUTONEURAL10_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 19 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.37 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.37 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1GO8J5U
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1GO8J5U new;
MPRINT(EM_DIAGRAM):   run;
370864     filename emflow
370864   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
370865     *------------------------------------------------------------*;
370866     * AutoNeural10: Scoring DATA data;
370867     *------------------------------------------------------------*;
370868     data EMWS8.AutoNeural10_TRAIN
370869     / view=EMWS8.AutoNeural10_TRAIN
370870     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_TRAIN / view=EMWS8.AutoNeural10_TRAIN ;
370871     set EMWS8.Meta_TRAIN
370872     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
370873     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
370874    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
370875    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
370876    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
370877    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
370878    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
370879    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
370880    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
370881    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
370882    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
370883    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
370884    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
370885    +LENGTH _WARN_ $4
370886    +      F_DepVar  $ 12
370887    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
370888    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
370889    +
370890    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
370891    +
370892    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
370893    +
370894    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
370895    +
370896    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
370897    +
370898    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
370899    +
370900    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
370901    +
370902    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
370903    +
370904    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
370905    +
370906    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
370907    +
370908    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
370909    +
370910    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
370911    +
370912    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
370913    +
370914    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
370915    +
370916    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
370917    +
370918    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
370919    +
370920    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
370921    +
370922    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
370923    +
370924    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
370925    +
370926    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
370927    +
370928    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
370929    +
370930    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
370931    +
370932    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
370933    +
370934    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
370935    +
370936    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
370937    +
370938    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
370939    +
370940    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
370941    +
370942    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
370943    +
370944    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
370945    +
370946    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
370947    +
370948    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
370949    +
370950    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
370951    +
370952    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
370953    +
370954    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
370955    +
370956    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
370957    +
370958    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
370959    +
370960    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
370961    +
370962    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
370963    +
370964    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
370965    +
370966    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
370967    +
370968    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
370969    +
370970    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
370971    +
370972    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
370973    +
370974    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
370975    +
370976    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
370977    +
370978    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
370979    +
370980    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
370981    +
370982    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
370983    +
370984    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
370985    +
370986    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
370987    +
370988    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
370989    +
370990    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
370991    +
370992    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
370993    +
370994    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
370995    +
370996    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
370997    +
370998    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
370999    +
371000    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
371001    +
371002    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
371003    +
371004    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
371005    +
371006    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
371007    +
371008    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
371009    +
371010    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
371011    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
371012    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
371013    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
371014    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371015    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371016    +end;
MPRINT(EM_DIAGRAM):   end;
371017    +else do;
MPRINT(EM_DIAGRAM):   else do;
371018    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371019    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
371020    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371021    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371022    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
371023    +   end;
MPRINT(EM_DIAGRAM):   end;
371024    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371025    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
371026    +   end;
MPRINT(EM_DIAGRAM):   end;
371027    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371028    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
371029    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371030    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371031    +   end;
MPRINT(EM_DIAGRAM):   end;
371032    +end;
MPRINT(EM_DIAGRAM):   end;
371033    +
371034    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
371035    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
371036    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
371037    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
371038    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371039    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371040    +end;
MPRINT(EM_DIAGRAM):   end;
371041    +else do;
MPRINT(EM_DIAGRAM):   else do;
371042    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371043    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
371044    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371045    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371046    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
371047    +   end;
MPRINT(EM_DIAGRAM):   end;
371048    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371049    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
371050    +   end;
MPRINT(EM_DIAGRAM):   end;
371051    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371052    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
371053    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371054    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371055    +   end;
MPRINT(EM_DIAGRAM):   end;
371056    +end;
MPRINT(EM_DIAGRAM):   end;
371057    +
371058    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
371059    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
371060    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
371061    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
371062    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371063    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371064    +end;
MPRINT(EM_DIAGRAM):   end;
371065    +else do;
MPRINT(EM_DIAGRAM):   else do;
371066    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371067    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
371068    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371069    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371070    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
371071    +   end;
MPRINT(EM_DIAGRAM):   end;
371072    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371073    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
371074    +   end;
MPRINT(EM_DIAGRAM):   end;
371075    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371076    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
371077    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371078    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371079    +   end;
MPRINT(EM_DIAGRAM):   end;
371080    +end;
MPRINT(EM_DIAGRAM):   end;
371081    +
371082    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
371083    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
371084    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
371085    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
371086    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371087    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371088    +end;
MPRINT(EM_DIAGRAM):   end;
371089    +else do;
MPRINT(EM_DIAGRAM):   else do;
371090    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371091    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
371092    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371093    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371094    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
371095    +   end;
MPRINT(EM_DIAGRAM):   end;
371096    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371097    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
371098    +   end;
MPRINT(EM_DIAGRAM):   end;
371099    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371100    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
371101    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371102    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371103    +   end;
MPRINT(EM_DIAGRAM):   end;
371104    +end;
MPRINT(EM_DIAGRAM):   end;
371105    +
371106    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
371107    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
371108    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
371109    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
371110    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371111    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371112    +end;
MPRINT(EM_DIAGRAM):   end;
371113    +else do;
MPRINT(EM_DIAGRAM):   else do;
371114    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371115    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
371116    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371117    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371118    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
371119    +   end;
MPRINT(EM_DIAGRAM):   end;
371120    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371121    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
371122    +   end;
MPRINT(EM_DIAGRAM):   end;
371123    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371124    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
371125    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371126    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371127    +   end;
MPRINT(EM_DIAGRAM):   end;
371128    +end;
MPRINT(EM_DIAGRAM):   end;
371129    +
371130    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
371131    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
371132    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
371133    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
371134    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371135    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371136    +end;
MPRINT(EM_DIAGRAM):   end;
371137    +else do;
MPRINT(EM_DIAGRAM):   else do;
371138    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371139    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
371140    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371141    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
371142    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
371143    +   end;
MPRINT(EM_DIAGRAM):   end;
371144    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
371145    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
371146    +   end;
MPRINT(EM_DIAGRAM):   end;
371147    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371148    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
371149    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371150    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371151    +   end;
MPRINT(EM_DIAGRAM):   end;
371152    +end;
MPRINT(EM_DIAGRAM):   end;
371153    +
371154    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
371155    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
371156    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
371157    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
371158    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371159    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371160    +end;
MPRINT(EM_DIAGRAM):   end;
371161    +else do;
MPRINT(EM_DIAGRAM):   else do;
371162    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
371163    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
371164    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371165    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
371166    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
371167    +   end;
MPRINT(EM_DIAGRAM):   end;
371168    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
371169    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
371170    +   end;
MPRINT(EM_DIAGRAM):   end;
371171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371172    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
371173    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371174    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371175    +   end;
MPRINT(EM_DIAGRAM):   end;
371176    +end;
MPRINT(EM_DIAGRAM):   end;
371177    +
371178    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
371179    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
371180    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
371181    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
371182    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
371183    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
371184    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
371185    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
371186    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
371187    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
371188    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
371189    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
371190    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371191    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371192    +end;
MPRINT(EM_DIAGRAM):   end;
371193    +else do;
MPRINT(EM_DIAGRAM):   else do;
371194    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
371195    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
371196    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371197    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
371198    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
371199    +   end;
MPRINT(EM_DIAGRAM):   end;
371200    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
371201    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
371202    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
371203    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
371204    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
371205    +   end;
MPRINT(EM_DIAGRAM):   end;
371206    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
371207    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
371208    +   end;
MPRINT(EM_DIAGRAM):   end;
371209    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
371210    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
371211    +   end;
MPRINT(EM_DIAGRAM):   end;
371212    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
371213    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
371214    +   end;
MPRINT(EM_DIAGRAM):   end;
371215    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371216    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
371217    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
371218    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
371219    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
371220    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371221    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371222    +   end;
MPRINT(EM_DIAGRAM):   end;
371223    +end;
MPRINT(EM_DIAGRAM):   end;
371224    +
371225    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
371226    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
371227    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
371228    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
371229    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
371230    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
371231    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
371232    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
371233    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
371234    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
371235    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
371236    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
371237    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
371238    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
371239    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371240    +end;
MPRINT(EM_DIAGRAM):   end;
371241    +else do;
MPRINT(EM_DIAGRAM):   else do;
371242    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
371243    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
371244    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371245    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
371246    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
371247    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
371248    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
371249    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
371250    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371251    +         end;
MPRINT(EM_DIAGRAM):   end;
371252    +         else do;
MPRINT(EM_DIAGRAM):   else do;
371253    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
371254    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
371255    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371256    +            end;
MPRINT(EM_DIAGRAM):   end;
371257    +         end;
MPRINT(EM_DIAGRAM):   end;
371258    +      end;
MPRINT(EM_DIAGRAM):   end;
371259    +      else do;
MPRINT(EM_DIAGRAM):   else do;
371260    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
371261    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
371262    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371263    +         end;
MPRINT(EM_DIAGRAM):   end;
371264    +      end;
MPRINT(EM_DIAGRAM):   end;
371265    +   end;
MPRINT(EM_DIAGRAM):   end;
371266    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371267    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
371268    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
371269    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371270    +      end;
MPRINT(EM_DIAGRAM):   end;
371271    +      else do;
MPRINT(EM_DIAGRAM):   else do;
371272    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
371273    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
371274    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
371275    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
371276    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
371277    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
371278    +         end;
MPRINT(EM_DIAGRAM):   end;
371279    +      end;
MPRINT(EM_DIAGRAM):   end;
371280    +   end;
MPRINT(EM_DIAGRAM):   end;
371281    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
371282    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
371283    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
371284    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
371285    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
371286    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
371287    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371288    +   end;
MPRINT(EM_DIAGRAM):   end;
371289    +end;
MPRINT(EM_DIAGRAM):   end;
371290    +
371291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371292    +*** Checking missing input Interval
371293    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
371294    +
371295    +IF NMISS(
371296    +   AcceptedCmpTotal ,
371297    +   Age ,
371298    +   Frq ,
371299    +   Income ,
371300    +   Kidhome ,
371301    +   Mnt ,
371302    +   MntFishProducts ,
371303    +   MntFruits ,
371304    +   MntGoldProds ,
371305    +   MntMeatProducts ,
371306    +   MntSweetProducts ,
371307    +   MntWines ,
371308    +   MonthsAsCustomer ,
371309    +   NumCatalogPurchases ,
371310    +   NumDealsPurchases ,
371311    +   NumDistPurchases ,
371312    +   NumStorePurchases ,
371313    +   NumWebPurchases ,
371314    +   NumWebVisitsMonth ,
371315    +   RFMstat ,
371316    +   RMntFrq ,
371317    +   Recency ,
371318    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
371319    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
371320    +
371321    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
371322    +END;
MPRINT(EM_DIAGRAM):   END;
371323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371324    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
371325    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371326    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371327    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
371328    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
371329    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
371330    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
371331    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
371332    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
371333    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
371334    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
371335    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
371336    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
371337    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
371338    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
371339    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
371340    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
371341    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
371342    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
371343    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
371344    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
371345    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
371346    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
371347    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
371348    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
371349    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
371350    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
371351    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
371352    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
371353    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
371354    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
371355    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
371356    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
371357    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
371358    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
371359    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
371360    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
371361    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
371362    +END;
MPRINT(EM_DIAGRAM):   END;
371363    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371364    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
371365    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
371366    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
371367    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
371368    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
371369    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
371370    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
371371    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
371372    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
371373    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
371374    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
371375    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
371376    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
371377    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
371378    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
371379    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
371380    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
371381    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
371382    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
371383    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
371384    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
371385    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
371386    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
371387    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
371388    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
371389    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
371390    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
371391    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
371392    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
371393    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
371394    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
371395    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
371396    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
371397    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
371398    +   ELSE S_NumCatalogPurchases
371399    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
371400    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
371401    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
371402    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
371403    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
371404    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
371405    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
371406    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
371407    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
371408    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
371409    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
371410    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
371411    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
371412    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
371413    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
371414    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
371415    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
371416    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
371417    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
371418    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
371419    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
371420    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
371421    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
371422    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
371423    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
371424    +END;
MPRINT(EM_DIAGRAM):   END;
371425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371426    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
371427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371429    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
371430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371431    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371432    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
371433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371434    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371435    +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
371436    +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
371437    +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
371438    +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
371439    +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
371440    +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
371441    +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
371442    +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
371443    +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
371444    +          +      3.4758215776031 * S_NumDealsPurchases
371445    +          +     0.17094021755289 * S_NumDistPurchases
371446    +          +    -2.72090095694641 * S_NumStorePurchases
371447    +          +    -0.31877935826328 * S_NumWebPurchases
371448    +          +    -2.03399974412918 * S_NumWebVisitsMonth
371449    +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
371450    +        S_RMntFrq  +     0.29064555076615 * S_Recency
371451    +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
371452    +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
371453    +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
371454    +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
371455    +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
371456    +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
371457    +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
371458    +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
371459    +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
371460    +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
371461    +          +    -1.21013804197082 * S_NumDealsPurchases
371462    +          +     0.59974279122188 * S_NumDistPurchases
371463    +          +     1.92425710681156 * S_NumStorePurchases
371464    +          +     1.02413182452324 * S_NumWebPurchases
371465    +          +    -3.63276285340174 * S_NumWebVisitsMonth
371466    +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
371467    +        S_RMntFrq  +     3.87352563099005 * S_Recency
371468    +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
371469    +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
371470    +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
371471    +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
371472    +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
371473    +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
371474    +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
371475    +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
371476    +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
371477    +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
371478    +          +      0.4928343071801 * S_NumDealsPurchases
371479    +          +     -0.0196677325409 * S_NumDistPurchases
371480    +          +     0.44395828164873 * S_NumStorePurchases
371481    +          +     0.86947051591224 * S_NumWebPurchases
371482    +          +    -0.96787241206077 * S_NumWebVisitsMonth
371483    +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
371484    +        S_RMntFrq  +     0.24582117217188 * S_Recency
371485    +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
371486    +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
371487    +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
371488    +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
371489    +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
371490    +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
371491    +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
371492    +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
371493    +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
371494    +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
371495    +          +     1.10280977051932 * S_NumDealsPurchases
371496    +          +     0.99310057404036 * S_NumDistPurchases
371497    +          +    -0.05647459609331 * S_NumStorePurchases
371498    +          +    -0.89852483938631 * S_NumWebPurchases
371499    +          +     2.63022480227445 * S_NumWebVisitsMonth
371500    +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
371501    +        S_RMntFrq  +    -4.46436997560659 * S_Recency
371502    +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
371503    +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
371504    +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
371505    +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
371506    +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
371507    +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
371508    +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
371509    +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
371510    +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
371511    +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
371512    +          +    -2.62220616180571 * S_NumDealsPurchases
371513    +          +    -0.51737930835331 * S_NumDistPurchases
371514    +          +     0.88655783158133 * S_NumStorePurchases
371515    +          +     0.35132468809969 * S_NumWebPurchases
371516    +          +     -1.6320869675862 * S_NumWebVisitsMonth
371517    +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
371518    +        S_RMntFrq  +     1.06226028677401 * S_Recency
371519    +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
371520    +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
371521    +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
371522    +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
371523    +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
371524    +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
371525    +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
371526    +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
371527    +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
371528    +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
371529    +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
371530    +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
371531    +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
371532    +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
371533    +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
371534    +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
371535    +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
371536    +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
371537    +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
371538    +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
371539    +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
371540    +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
371541    +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
371542    +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
371543    +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
371544    +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
371545    +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
371546    +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
371547    +        EducationGraduation  +     1.42539292513854 * EducationMaster
371548    +          +     0.34809919741136 * Marital_StatusDivorced
371549    +          +    -0.26594093535929 * Marital_StatusMarried
371550    +          +     0.70249715999987 * Marital_StatusSingle
371551    +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
371552    +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
371553    +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
371554    +        EducationGraduation  +    -0.28204692640004 * EducationMaster
371555    +          +    -0.20448765627193 * Marital_StatusDivorced
371556    +          +     1.73231344674733 * Marital_StatusMarried
371557    +          +    -0.70956480480373 * Marital_StatusSingle
371558    +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
371559    +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
371560    +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
371561    +        EducationGraduation  +     1.01284161768787 * EducationMaster
371562    +          +     0.30333818684353 * Marital_StatusDivorced
371563    +          +    -1.44603535988199 * Marital_StatusMarried
371564    +          +     0.48409598426383 * Marital_StatusSingle
371565    +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
371566    +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
371567    +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
371568    +        EducationGraduation  +    -1.17735200022013 * EducationMaster
371569    +          +     -1.5342907846297 * Marital_StatusDivorced
371570    +          +    -1.79544684592172 * Marital_StatusMarried
371571    +          +     0.65604313645117 * Marital_StatusSingle
371572    +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
371573    +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
371574    +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
371575    +        EducationGraduation  +     0.09618331198762 * EducationMaster
371576    +          +    -3.97940893560267 * Marital_StatusDivorced
371577    +          +      3.5880254142663 * Marital_StatusMarried
371578    +          +     -2.9897737730927 * Marital_StatusSingle
371579    +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
371580    +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
371581    +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
371582    +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
371583    +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
371584    +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
371585    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
371586    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
371587    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
371588    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
371589    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
371590    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
371591    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
371592    +END;
MPRINT(EM_DIAGRAM):   END;
371593    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371594    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
371595    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
371596    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
371597    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
371598    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
371599    +END;
MPRINT(EM_DIAGRAM):   END;
371600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371601    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
371602    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371603    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371604    +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
371605    +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
371606    +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
371607    +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
371608    +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
371609    +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
371610    +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
371611    +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
371612    +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
371613    +          +     0.07279889333775 * S_NumDealsPurchases
371614    +          +     0.07542203992452 * S_NumDistPurchases
371615    +          +     0.16296239303342 * S_NumStorePurchases
371616    +          +     1.59193921229231 * S_NumWebPurchases
371617    +          +    -0.35227839362603 * S_NumWebVisitsMonth
371618    +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
371619    +        S_RMntFrq  +     0.43315770276588 * S_Recency
371620    +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
371621    +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
371622    +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
371623    +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
371624    +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
371625    +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
371626    +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
371627    +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
371628    +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
371629    +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
371630    +          +    -0.37456959251084 * S_NumDealsPurchases
371631    +          +    -1.15252469975668 * S_NumDistPurchases
371632    +          +    -1.39822501888899 * S_NumStorePurchases
371633    +          +    -0.32777847360723 * S_NumWebPurchases
371634    +          +     0.84026499832926 * S_NumWebVisitsMonth
371635    +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
371636    +        S_RMntFrq  +     1.21016626691186 * S_Recency
371637    +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
371638    +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
371639    +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
371640    +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
371641    +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
371642    +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
371643    +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
371644    +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
371645    +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
371646    +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
371647    +          +     1.14090099538367 * S_NumDealsPurchases
371648    +          +     -0.2600155774492 * S_NumDistPurchases
371649    +          +     1.31362002392113 * S_NumStorePurchases
371650    +          +     1.31465307763555 * S_NumWebPurchases
371651    +          +    -0.18041623858351 * S_NumWebVisitsMonth
371652    +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
371653    +        S_RMntFrq  +    -0.81910738140729 * S_Recency
371654    +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
371655    +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
371656    +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
371657    +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
371658    +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
371659    +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
371660    +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
371661    +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
371662    +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
371663    +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
371664    +          +     1.06486073796679 * S_NumDealsPurchases
371665    +          +    -0.04890191247577 * S_NumDistPurchases
371666    +          +     0.86871320720698 * S_NumStorePurchases
371667    +          +     0.03183587281884 * S_NumWebPurchases
371668    +          +     -0.4863802923315 * S_NumWebVisitsMonth
371669    +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
371670    +        S_RMntFrq  +     0.17186861211542 * S_Recency
371671    +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
371672    +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
371673    +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
371674    +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
371675    +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
371676    +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
371677    +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
371678    +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
371679    +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
371680    +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
371681    +          +    -0.01160267590349 * S_NumDealsPurchases
371682    +          +    -0.92773075463083 * S_NumDistPurchases
371683    +          +    -0.83326680533995 * S_NumStorePurchases
371684    +          +    -1.16991058954473 * S_NumWebPurchases
371685    +          +    -2.07771165573723 * S_NumWebVisitsMonth
371686    +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
371687    +        S_RMntFrq  +     0.80165981122986 * S_Recency
371688    +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
371689    +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
371690    +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
371691    +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
371692    +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
371693    +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
371694    +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
371695    +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
371696    +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
371697    +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
371698    +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
371699    +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
371700    +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
371701    +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
371702    +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
371703    +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
371704    +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
371705    +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
371706    +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
371707    +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
371708    +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
371709    +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
371710    +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
371711    +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
371712    +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
371713    +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
371714    +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
371715    +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
371716    +        EducationGraduation  +    -0.22397098444024 * EducationMaster
371717    +          +    -0.10361472385198 * Marital_StatusDivorced
371718    +          +     0.05574820877885 * Marital_StatusMarried
371719    +          +     0.13130988205279 * Marital_StatusSingle
371720    +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
371721    +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
371722    +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
371723    +        EducationGraduation  +     1.44983505587452 * EducationMaster
371724    +          +      0.0059353523794 * Marital_StatusDivorced
371725    +          +    -0.59379435051653 * Marital_StatusMarried
371726    +          +    -1.93587108708999 * Marital_StatusSingle
371727    +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
371728    +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
371729    +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
371730    +        EducationGraduation  +     0.16497026569775 * EducationMaster
371731    +          +    -0.74333797840386 * Marital_StatusDivorced
371732    +          +    -0.93061135117658 * Marital_StatusMarried
371733    +          +     1.04024182655844 * Marital_StatusSingle
371734    +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
371735    +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
371736    +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
371737    +        EducationGraduation  +     1.71196178631559 * EducationMaster
371738    +          +    -3.01050675344463 * Marital_StatusDivorced
371739    +          +      0.1638723582239 * Marital_StatusMarried
371740    +          +     0.94548468360304 * Marital_StatusSingle
371741    +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
371742    +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
371743    +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
371744    +        EducationGraduation  +     0.57450456442662 * EducationMaster
371745    +          +    -1.37013926274158 * Marital_StatusDivorced
371746    +          +    -0.34168970042779 * Marital_StatusMarried
371747    +          +     0.63383683543962 * Marital_StatusSingle
371748    +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
371749    +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
371750    +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
371751    +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
371752    +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
371753    +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
371754    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
371755    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
371756    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
371757    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
371758    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
371759    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
371760    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
371761    +END;
MPRINT(EM_DIAGRAM):   END;
371762    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371763    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
371764    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
371765    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
371766    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
371767    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
371768    +END;
MPRINT(EM_DIAGRAM):   END;
371769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371770    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
371771    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371772    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371773    +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
371774    +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
371775    +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
371776    +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
371777    +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
371778    +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
371779    +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
371780    +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
371781    +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
371782    +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
371783    +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
371784    +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
371785    +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
371786    +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
371787    +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
371788    +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
371789    +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
371790    +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
371791    +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
371792    +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
371793    +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
371794    +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
371795    +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
371796    +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
371797    +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
371798    +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
371799    +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
371800    +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
371801    +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
371802    +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
371803    +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
371804    +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
371805    +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
371806    +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
371807    +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
371808    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
371809    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
371810    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
371811    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
371812    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
371813    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
371814    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
371815    +END;
MPRINT(EM_DIAGRAM):   END;
371816    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371817    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
371818    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
371819    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
371820    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
371821    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
371822    +END;
MPRINT(EM_DIAGRAM):   END;
371823    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371824    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
371825    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371826    +
371827    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
371828    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
371829    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
371830    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
371831    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
371832    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
371833    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
371834    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
371835    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
371836    +end;
MPRINT(EM_DIAGRAM):   end;
371837    +else do;
MPRINT(EM_DIAGRAM):   else do;
371838    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
371839    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
371840    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
371841    +   end;
MPRINT(EM_DIAGRAM):   end;
371842    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
371843    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
371844    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
371845    +   end;
MPRINT(EM_DIAGRAM):   end;
371846    +   else do;
MPRINT(EM_DIAGRAM):   else do;
371847    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
371848    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
371849    +   end;
MPRINT(EM_DIAGRAM):   end;
371850    +end;
MPRINT(EM_DIAGRAM):   end;
371851    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
371852    +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
371853    +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
371854    +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
371855    +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
371856    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
371857    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
371858    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
371859    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
371860    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
371861    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
371862    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
371863    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
371864    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
371865    +END;
MPRINT(EM_DIAGRAM):   END;
371866    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
371867    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
371868    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
371869    +END;
MPRINT(EM_DIAGRAM):   END;
371870    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
371871    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
371872    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
371873    +END;
MPRINT(EM_DIAGRAM):   END;
371874    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
371875    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
371876    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
371877    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
371878    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
371879    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
371880    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
371881    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371882    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
371883    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
371884    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
371885    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
371886    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
371887    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
371888    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
371889    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
371890    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
371891    +END;
MPRINT(EM_DIAGRAM):   END;
371892    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371893    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
371894    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
371895    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
371896     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
371897     quit;
371898     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
371899     filename emflow
371899   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
371900     *------------------------------------------------------------*;
371901     * AutoNeural10: Scoring VALIDATE data;
371902     *------------------------------------------------------------*;
371903     data EMWS8.AutoNeural10_VALIDATE
371904     / view=EMWS8.AutoNeural10_VALIDATE
371905     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_VALIDATE / view=EMWS8.AutoNeural10_VALIDATE ;
371906     set EMWS8.Meta_VALIDATE
371907     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
371908     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
371909    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
371910    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
371911    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
371912    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
371913    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
371914    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
371915    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
371916    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
371917    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
371918    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
371919    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
371920    +LENGTH _WARN_ $4
371921    +      F_DepVar  $ 12
371922    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
371923    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
371924    +
371925    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
371926    +
371927    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
371928    +
371929    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
371930    +
371931    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
371932    +
371933    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
371934    +
371935    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
371936    +
371937    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
371938    +
371939    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
371940    +
371941    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
371942    +
371943    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
371944    +
371945    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
371946    +
371947    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
371948    +
371949    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
371950    +
371951    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
371952    +
371953    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
371954    +
371955    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
371956    +
371957    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
371958    +
371959    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
371960    +
371961    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
371962    +
371963    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
371964    +
371965    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
371966    +
371967    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
371968    +
371969    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
371970    +
371971    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
371972    +
371973    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
371974    +
371975    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
371976    +
371977    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
371978    +
371979    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
371980    +
371981    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
371982    +
371983    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
371984    +
371985    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
371986    +
371987    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
371988    +
371989    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
371990    +
371991    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
371992    +
371993    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
371994    +
371995    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
371996    +
371997    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
371998    +
371999    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
372000    +
372001    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
372002    +
372003    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
372004    +
372005    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
372006    +
372007    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
372008    +
372009    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
372010    +
372011    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
372012    +
372013    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
372014    +
372015    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
372016    +
372017    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
372018    +
372019    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
372020    +
372021    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
372022    +
372023    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
372024    +
372025    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
372026    +
372027    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
372028    +
372029    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
372030    +
372031    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
372032    +
372033    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
372034    +
372035    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
372036    +
372037    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
372038    +
372039    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
372040    +
372041    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
372042    +
372043    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
372044    +
372045    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
372046    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
372047    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
372048    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
372049    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372050    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372051    +end;
MPRINT(EM_DIAGRAM):   end;
372052    +else do;
MPRINT(EM_DIAGRAM):   else do;
372053    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372054    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
372055    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372056    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372057    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
372058    +   end;
MPRINT(EM_DIAGRAM):   end;
372059    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372060    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
372061    +   end;
MPRINT(EM_DIAGRAM):   end;
372062    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372063    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
372064    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372065    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372066    +   end;
MPRINT(EM_DIAGRAM):   end;
372067    +end;
MPRINT(EM_DIAGRAM):   end;
372068    +
372069    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
372070    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
372071    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
372072    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
372073    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372074    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372075    +end;
MPRINT(EM_DIAGRAM):   end;
372076    +else do;
MPRINT(EM_DIAGRAM):   else do;
372077    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372078    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
372079    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372080    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372081    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
372082    +   end;
MPRINT(EM_DIAGRAM):   end;
372083    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372084    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
372085    +   end;
MPRINT(EM_DIAGRAM):   end;
372086    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372087    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
372088    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372089    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372090    +   end;
MPRINT(EM_DIAGRAM):   end;
372091    +end;
MPRINT(EM_DIAGRAM):   end;
372092    +
372093    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
372094    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
372095    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
372096    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
372097    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372098    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372099    +end;
MPRINT(EM_DIAGRAM):   end;
372100    +else do;
MPRINT(EM_DIAGRAM):   else do;
372101    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372102    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
372103    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372104    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372105    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
372106    +   end;
MPRINT(EM_DIAGRAM):   end;
372107    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372108    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
372109    +   end;
MPRINT(EM_DIAGRAM):   end;
372110    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372111    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
372112    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372113    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372114    +   end;
MPRINT(EM_DIAGRAM):   end;
372115    +end;
MPRINT(EM_DIAGRAM):   end;
372116    +
372117    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
372118    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
372119    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
372120    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
372121    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372122    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372123    +end;
MPRINT(EM_DIAGRAM):   end;
372124    +else do;
MPRINT(EM_DIAGRAM):   else do;
372125    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372126    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
372127    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372128    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372129    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
372130    +   end;
MPRINT(EM_DIAGRAM):   end;
372131    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372132    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
372133    +   end;
MPRINT(EM_DIAGRAM):   end;
372134    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372135    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
372136    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372137    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372138    +   end;
MPRINT(EM_DIAGRAM):   end;
372139    +end;
MPRINT(EM_DIAGRAM):   end;
372140    +
372141    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
372142    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
372143    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
372144    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
372145    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372146    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372147    +end;
MPRINT(EM_DIAGRAM):   end;
372148    +else do;
MPRINT(EM_DIAGRAM):   else do;
372149    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372150    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
372151    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372152    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372153    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
372154    +   end;
MPRINT(EM_DIAGRAM):   end;
372155    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372156    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
372157    +   end;
MPRINT(EM_DIAGRAM):   end;
372158    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372159    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
372160    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372161    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372162    +   end;
MPRINT(EM_DIAGRAM):   end;
372163    +end;
MPRINT(EM_DIAGRAM):   end;
372164    +
372165    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
372166    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
372167    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
372168    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
372169    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372170    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372171    +end;
MPRINT(EM_DIAGRAM):   end;
372172    +else do;
MPRINT(EM_DIAGRAM):   else do;
372173    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372174    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
372175    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372176    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
372177    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
372178    +   end;
MPRINT(EM_DIAGRAM):   end;
372179    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
372180    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
372181    +   end;
MPRINT(EM_DIAGRAM):   end;
372182    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372183    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
372184    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372185    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372186    +   end;
MPRINT(EM_DIAGRAM):   end;
372187    +end;
MPRINT(EM_DIAGRAM):   end;
372188    +
372189    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
372190    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
372191    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
372192    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
372193    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372194    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372195    +end;
MPRINT(EM_DIAGRAM):   end;
372196    +else do;
MPRINT(EM_DIAGRAM):   else do;
372197    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
372198    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
372199    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372200    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
372201    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
372202    +   end;
MPRINT(EM_DIAGRAM):   end;
372203    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
372204    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
372205    +   end;
MPRINT(EM_DIAGRAM):   end;
372206    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372207    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
372208    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372209    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372210    +   end;
MPRINT(EM_DIAGRAM):   end;
372211    +end;
MPRINT(EM_DIAGRAM):   end;
372212    +
372213    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
372214    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
372215    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
372216    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
372217    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
372218    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
372219    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
372220    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
372221    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
372222    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
372223    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
372224    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
372225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372227    +end;
MPRINT(EM_DIAGRAM):   end;
372228    +else do;
MPRINT(EM_DIAGRAM):   else do;
372229    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
372230    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
372231    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372232    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
372233    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
372234    +   end;
MPRINT(EM_DIAGRAM):   end;
372235    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
372236    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
372237    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
372238    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
372239    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
372240    +   end;
MPRINT(EM_DIAGRAM):   end;
372241    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
372242    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
372243    +   end;
MPRINT(EM_DIAGRAM):   end;
372244    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
372245    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
372246    +   end;
MPRINT(EM_DIAGRAM):   end;
372247    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
372248    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
372249    +   end;
MPRINT(EM_DIAGRAM):   end;
372250    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372251    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
372252    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
372253    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
372254    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
372255    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372256    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372257    +   end;
MPRINT(EM_DIAGRAM):   end;
372258    +end;
MPRINT(EM_DIAGRAM):   end;
372259    +
372260    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
372261    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
372262    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
372263    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
372264    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
372265    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
372266    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
372267    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
372268    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
372269    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
372270    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
372271    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
372272    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
372273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
372274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372275    +end;
MPRINT(EM_DIAGRAM):   end;
372276    +else do;
MPRINT(EM_DIAGRAM):   else do;
372277    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
372278    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
372279    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372280    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
372281    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
372282    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
372283    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
372284    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
372285    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372286    +         end;
MPRINT(EM_DIAGRAM):   end;
372287    +         else do;
MPRINT(EM_DIAGRAM):   else do;
372288    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
372289    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
372290    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372291    +            end;
MPRINT(EM_DIAGRAM):   end;
372292    +         end;
MPRINT(EM_DIAGRAM):   end;
372293    +      end;
MPRINT(EM_DIAGRAM):   end;
372294    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372295    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
372296    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
372297    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372298    +         end;
MPRINT(EM_DIAGRAM):   end;
372299    +      end;
MPRINT(EM_DIAGRAM):   end;
372300    +   end;
MPRINT(EM_DIAGRAM):   end;
372301    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372302    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
372303    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
372304    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372305    +      end;
MPRINT(EM_DIAGRAM):   end;
372306    +      else do;
MPRINT(EM_DIAGRAM):   else do;
372307    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
372308    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
372309    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
372310    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
372311    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
372312    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
372313    +         end;
MPRINT(EM_DIAGRAM):   end;
372314    +      end;
MPRINT(EM_DIAGRAM):   end;
372315    +   end;
MPRINT(EM_DIAGRAM):   end;
372316    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
372317    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
372318    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
372319    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
372320    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
372321    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
372322    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372323    +   end;
MPRINT(EM_DIAGRAM):   end;
372324    +end;
MPRINT(EM_DIAGRAM):   end;
372325    +
372326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372327    +*** Checking missing input Interval
372328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
372329    +
372330    +IF NMISS(
372331    +   AcceptedCmpTotal ,
372332    +   Age ,
372333    +   Frq ,
372334    +   Income ,
372335    +   Kidhome ,
372336    +   Mnt ,
372337    +   MntFishProducts ,
372338    +   MntFruits ,
372339    +   MntGoldProds ,
372340    +   MntMeatProducts ,
372341    +   MntSweetProducts ,
372342    +   MntWines ,
372343    +   MonthsAsCustomer ,
372344    +   NumCatalogPurchases ,
372345    +   NumDealsPurchases ,
372346    +   NumDistPurchases ,
372347    +   NumStorePurchases ,
372348    +   NumWebPurchases ,
372349    +   NumWebVisitsMonth ,
372350    +   RFMstat ,
372351    +   RMntFrq ,
372352    +   Recency ,
372353    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
372354    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
372355    +
372356    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
372357    +END;
MPRINT(EM_DIAGRAM):   END;
372358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372359    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
372360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372361    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372362    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
372363    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
372364    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
372365    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
372366    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
372367    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
372368    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
372369    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
372370    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
372371    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
372372    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
372373    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
372374    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
372375    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
372376    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
372377    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
372378    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
372379    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
372380    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
372381    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
372382    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
372383    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
372384    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
372385    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
372386    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
372387    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
372388    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
372389    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
372390    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
372391    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
372392    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
372393    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
372394    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
372395    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
372396    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
372397    +END;
MPRINT(EM_DIAGRAM):   END;
372398    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372399    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
372400    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
372401    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
372402    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
372403    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
372404    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
372405    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
372406    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
372407    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
372408    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
372409    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
372410    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
372411    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
372412    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
372413    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
372414    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
372415    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
372416    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
372417    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
372418    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
372419    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
372420    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
372421    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
372422    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
372423    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
372424    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
372425    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
372426    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
372427    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
372428    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
372429    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
372430    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
372431    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 *
MonthsAsCustomer ;
372432    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
372433    +   ELSE S_NumCatalogPurchases
372434    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
372435    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
372436    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
372437    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
372438    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
372439    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
372440    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
372441    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
372442    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
372443    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
372444    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
372445    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
372446    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
372447    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
372448    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
372449    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
372450    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
372451    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
372452    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
372453    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
372454    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
372455    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
372456    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
372457    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
372458    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
372459    +END;
MPRINT(EM_DIAGRAM):   END;
372460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372461    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
372462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372464    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
372465    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372467    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
372468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372469    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372470    +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
372471    +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
372472    +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
372473    +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
372474    +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
372475    +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
372476    +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
372477    +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
372478    +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
372479    +          +      3.4758215776031 * S_NumDealsPurchases
372480    +          +     0.17094021755289 * S_NumDistPurchases
372481    +          +    -2.72090095694641 * S_NumStorePurchases
372482    +          +    -0.31877935826328 * S_NumWebPurchases
372483    +          +    -2.03399974412918 * S_NumWebVisitsMonth
372484    +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
372485    +        S_RMntFrq  +     0.29064555076615 * S_Recency
372486    +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 *
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 *
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts +
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 *
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 *
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 *
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 *
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq +
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
372487    +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
372488    +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
372489    +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
372490    +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
372491    +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
372492    +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
372493    +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
372494    +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
372495    +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
372496    +          +    -1.21013804197082 * S_NumDealsPurchases
372497    +          +     0.59974279122188 * S_NumDistPurchases
372498    +          +     1.92425710681156 * S_NumStorePurchases
372499    +          +     1.02413182452324 * S_NumWebPurchases
372500    +          +    -3.63276285340174 * S_NumWebVisitsMonth
372501    +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
372502    +        S_RMntFrq  +     3.87352563099005 * S_Recency
372503    +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 *
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 *
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts +
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 *
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 *
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 *
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 *
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq +
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
372504    +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
372505    +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
372506    +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
372507    +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
372508    +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
372509    +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
372510    +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
372511    +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
372512    +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
372513    +          +      0.4928343071801 * S_NumDealsPurchases
372514    +          +     -0.0196677325409 * S_NumDistPurchases
372515    +          +     0.44395828164873 * S_NumStorePurchases
372516    +          +     0.86947051591224 * S_NumWebPurchases
372517    +          +    -0.96787241206077 * S_NumWebVisitsMonth
372518    +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
372519    +        S_RMntFrq  +     0.24582117217188 * S_Recency
372520    +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 *
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 *
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts +
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 *
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 *
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 *
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 *
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq +
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
372521    +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
372522    +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
372523    +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
372524    +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
372525    +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
372526    +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
372527    +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
372528    +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
372529    +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
372530    +          +     1.10280977051932 * S_NumDealsPurchases
372531    +          +     0.99310057404036 * S_NumDistPurchases
372532    +          +    -0.05647459609331 * S_NumStorePurchases
372533    +          +    -0.89852483938631 * S_NumWebPurchases
372534    +          +     2.63022480227445 * S_NumWebVisitsMonth
372535    +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
372536    +        S_RMntFrq  +    -4.46436997560659 * S_Recency
372537    +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 *
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 *
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts +
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 *
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 *
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 *
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 *
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq +
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
372538    +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
372539    +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
372540    +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
372541    +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
372542    +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
372543    +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
372544    +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
372545    +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
372546    +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
372547    +          +    -2.62220616180571 * S_NumDealsPurchases
372548    +          +    -0.51737930835331 * S_NumDistPurchases
372549    +          +     0.88655783158133 * S_NumStorePurchases
372550    +          +     0.35132468809969 * S_NumWebPurchases
372551    +          +     -1.6320869675862 * S_NumWebVisitsMonth
372552    +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
372553    +        S_RMntFrq  +     1.06226028677401 * S_Recency
372554    +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 *
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 *
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts +
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 *
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 *
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 *
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 *
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq +
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
372555    +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
372556    +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
372557    +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
372558    +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
372559    +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 *
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 +
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 *
HigherEducationBinary0 ;
372560    +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
372561    +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
372562    +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
372563    +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
372564    +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 *
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 +
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 *
HigherEducationBinary0 ;
372565    +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
372566    +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
372567    +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
372568    +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
372569    +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 *
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 +
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 *
HigherEducationBinary0 ;
372570    +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
372571    +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
372572    +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
372573    +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
372574    +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 +
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 *
HigherEducationBinary0 ;
372575    +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
372576    +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
372577    +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
372578    +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
372579    +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 *
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 +
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 *
HigherEducationBinary0 ;
372580    +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
372581    +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
372582    +        EducationGraduation  +     1.42539292513854 * EducationMaster
372583    +          +     0.34809919741136 * Marital_StatusDivorced
372584    +          +    -0.26594093535929 * Marital_StatusMarried
372585    +          +     0.70249715999987 * Marital_StatusSingle
372586    +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle +
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 *
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 *
Marital_StatusTogether ;
372587    +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
372588    +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
372589    +        EducationGraduation  +    -0.28204692640004 * EducationMaster
372590    +          +    -0.20448765627193 * Marital_StatusDivorced
372591    +          +     1.73231344674733 * Marital_StatusMarried
372592    +          +    -0.70956480480373 * Marital_StatusSingle
372593    +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle +
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 *
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 *
Marital_StatusTogether ;
372594    +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
372595    +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
372596    +        EducationGraduation  +     1.01284161768787 * EducationMaster
372597    +          +     0.30333818684353 * Marital_StatusDivorced
372598    +          +    -1.44603535988199 * Marital_StatusMarried
372599    +          +     0.48409598426383 * Marital_StatusSingle
372600    +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle +
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation +
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced +
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle +
-1.14528682521622 * Marital_StatusTogether ;
372601    +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
372602    +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
372603    +        EducationGraduation  +    -1.17735200022013 * EducationMaster
372604    +          +     -1.5342907846297 * Marital_StatusDivorced
372605    +          +    -1.79544684592172 * Marital_StatusMarried
372606    +          +     0.65604313645117 * Marital_StatusSingle
372607    +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle +
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 *
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 *
Marital_StatusTogether ;
372608    +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
372609    +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
372610    +        EducationGraduation  +     0.09618331198762 * EducationMaster
372611    +          +    -3.97940893560267 * Marital_StatusDivorced
372612    +          +      3.5880254142663 * Marital_StatusMarried
372613    +          +     -2.9897737730927 * Marital_StatusSingle
372614    +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle +
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 *
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 *
Marital_StatusTogether ;
372615    +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
372616    +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
372617    +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
372618    +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
372619    +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
372620    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
372621    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
372622    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
372623    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
372624    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
372625    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
372626    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
372627    +END;
MPRINT(EM_DIAGRAM):   END;
372628    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372629    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
372630    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
372631    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
372632    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
372633    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
372634    +END;
MPRINT(EM_DIAGRAM):   END;
372635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372636    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
372637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372638    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372639    +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
372640    +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
372641    +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
372642    +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
372643    +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
372644    +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
372645    +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
372646    +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
372647    +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
372648    +          +     0.07279889333775 * S_NumDealsPurchases
372649    +          +     0.07542203992452 * S_NumDistPurchases
372650    +          +     0.16296239303342 * S_NumStorePurchases
372651    +          +     1.59193921229231 * S_NumWebPurchases
372652    +          +    -0.35227839362603 * S_NumWebVisitsMonth
372653    +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
372654    +        S_RMntFrq  +     0.43315770276588 * S_Recency
372655    +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 *
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 *
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts +
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 *
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines +
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases +
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases +
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases +
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 *
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
372656    +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
372657    +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
372658    +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
372659    +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
372660    +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
372661    +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
372662    +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
372663    +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
372664    +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
372665    +          +    -0.37456959251084 * S_NumDealsPurchases
372666    +          +    -1.15252469975668 * S_NumDistPurchases
372667    +          +    -1.39822501888899 * S_NumStorePurchases
372668    +          +    -0.32777847360723 * S_NumWebPurchases
372669    +          +     0.84026499832926 * S_NumWebVisitsMonth
372670    +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
372671    +        S_RMntFrq  +     1.21016626691186 * S_Recency
372672    +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 *
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 *
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts +
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 *
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 *
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 *
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 *
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq +
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
372673    +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
372674    +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
372675    +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
372676    +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
372677    +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
372678    +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
372679    +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
372680    +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
372681    +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
372682    +          +     1.14090099538367 * S_NumDealsPurchases
372683    +          +     -0.2600155774492 * S_NumDistPurchases
372684    +          +     1.31362002392113 * S_NumStorePurchases
372685    +          +     1.31465307763555 * S_NumWebPurchases
372686    +          +    -0.18041623858351 * S_NumWebVisitsMonth
372687    +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
372688    +        S_RMntFrq  +    -0.81910738140729 * S_Recency
372689    +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 *
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 *
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts +
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 *
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 *
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 *
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 *
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq +
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
372690    +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
372691    +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
372692    +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
372693    +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
372694    +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
372695    +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
372696    +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
372697    +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
372698    +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
372699    +          +     1.06486073796679 * S_NumDealsPurchases
372700    +          +    -0.04890191247577 * S_NumDistPurchases
372701    +          +     0.86871320720698 * S_NumStorePurchases
372702    +          +     0.03183587281884 * S_NumWebPurchases
372703    +          +     -0.4863802923315 * S_NumWebVisitsMonth
372704    +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
372705    +        S_RMntFrq  +     0.17186861211542 * S_Recency
372706    +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 *
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 *
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts +
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 *
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 *
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 *
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 *
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq +
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
372707    +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
372708    +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
372709    +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
372710    +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
372711    +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
372712    +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
372713    +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
372714    +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
372715    +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
372716    +          +    -0.01160267590349 * S_NumDealsPurchases
372717    +          +    -0.92773075463083 * S_NumDistPurchases
372718    +          +    -0.83326680533995 * S_NumStorePurchases
372719    +          +    -1.16991058954473 * S_NumWebPurchases
372720    +          +    -2.07771165573723 * S_NumWebVisitsMonth
372721    +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
372722    +        S_RMntFrq  +     0.80165981122986 * S_Recency
372723    +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 *
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 *
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts +
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 *
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 *
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 *
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 *
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq +
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
372724    +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
372725    +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
372726    +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
372727    +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
372728    +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 *
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 +
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 *
HigherEducationBinary0 ;
372729    +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
372730    +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
372731    +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
372732    +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
372733    +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 +
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 *
HigherEducationBinary0 ;
372734    +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
372735    +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
372736    +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
372737    +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
372738    +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 *
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 +
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 *
HigherEducationBinary0 ;
372739    +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
372740    +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
372741    +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
372742    +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
372743    +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 +
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 *
HigherEducationBinary0 ;
372744    +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
372745    +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
372746    +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
372747    +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
372748    +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 *
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 +
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 *
HigherEducationBinary0 ;
372749    +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
372750    +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
372751    +        EducationGraduation  +    -0.22397098444024 * EducationMaster
372752    +          +    -0.10361472385198 * Marital_StatusDivorced
372753    +          +     0.05574820877885 * Marital_StatusMarried
372754    +          +     0.13130988205279 * Marital_StatusSingle
372755    +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle +
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 *
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 *
Marital_StatusTogether ;
372756    +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
372757    +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
372758    +        EducationGraduation  +     1.44983505587452 * EducationMaster
372759    +          +      0.0059353523794 * Marital_StatusDivorced
372760    +          +    -0.59379435051653 * Marital_StatusMarried
372761    +          +    -1.93587108708999 * Marital_StatusSingle
372762    +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle +
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 *
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 *
Marital_StatusTogether ;
372763    +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
372764    +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
372765    +        EducationGraduation  +     0.16497026569775 * EducationMaster
372766    +          +    -0.74333797840386 * Marital_StatusDivorced
372767    +          +    -0.93061135117658 * Marital_StatusMarried
372768    +          +     1.04024182655844 * Marital_StatusSingle
372769    +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle +
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 *
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 *
Marital_StatusTogether ;
372770    +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
372771    +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
372772    +        EducationGraduation  +     1.71196178631559 * EducationMaster
372773    +          +    -3.01050675344463 * Marital_StatusDivorced
372774    +          +      0.1638723582239 * Marital_StatusMarried
372775    +          +     0.94548468360304 * Marital_StatusSingle
372776    +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle +
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 *
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 *
Marital_StatusTogether ;
372777    +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
372778    +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
372779    +        EducationGraduation  +     0.57450456442662 * EducationMaster
372780    +          +    -1.37013926274158 * Marital_StatusDivorced
372781    +          +    -0.34168970042779 * Marital_StatusMarried
372782    +          +     0.63383683543962 * Marital_StatusSingle
372783    +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle +
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 *
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 *
Marital_StatusTogether ;
372784    +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
372785    +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
372786    +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
372787    +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
372788    +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
372789    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
372790    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
372791    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
372792    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
372793    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
372794    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
372795    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
372796    +END;
MPRINT(EM_DIAGRAM):   END;
372797    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372798    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
372799    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
372800    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
372801    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
372802    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
372803    +END;
MPRINT(EM_DIAGRAM):   END;
372804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372805    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
372806    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372807    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372808    +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
372809    +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
372810    +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 +
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
372811    +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
372812    +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
372813    +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 +
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
372814    +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
372815    +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
372816    +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 +
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
372817    +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
372818    +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
372819    +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 +
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
372820    +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
372821    +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
372822    +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 +
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
372823    +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
372824    +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
372825    +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
372826    +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
372827    +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
372828    +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
372829    +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
372830    +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
372831    +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
372832    +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
372833    +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
372834    +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
372835    +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
372836    +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
372837    +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
372838    +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
372839    +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
372840    +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
372841    +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
372842    +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
372843    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
372844    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
372845    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
372846    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
372847    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
372848    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
372849    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
372850    +END;
MPRINT(EM_DIAGRAM):   END;
372851    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372852    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
372853    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
372854    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
372855    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
372856    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
372857    +END;
MPRINT(EM_DIAGRAM):   END;
372858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372859    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
372860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372861    +
372862    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
372863    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
372864    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
372865    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
372866    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
372867    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
372868    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
372869    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
372870    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
372871    +end;
MPRINT(EM_DIAGRAM):   end;
372872    +else do;
MPRINT(EM_DIAGRAM):   else do;
372873    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
372874    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
372875    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
372876    +   end;
MPRINT(EM_DIAGRAM):   end;
372877    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
372878    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
372879    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
372880    +   end;
MPRINT(EM_DIAGRAM):   end;
372881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
372882    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
372883    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
372884    +   end;
MPRINT(EM_DIAGRAM):   end;
372885    +end;
MPRINT(EM_DIAGRAM):   end;
372886    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
372887    +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
372888    +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
372889    +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 +
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
372890    +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
372891    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
372892    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
372893    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
372894    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
372895    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
372896    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
372897    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
372898    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
372899    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
372900    +END;
MPRINT(EM_DIAGRAM):   END;
372901    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
372902    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
372903    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
372904    +END;
MPRINT(EM_DIAGRAM):   END;
372905    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
372906    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
372907    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
372908    +END;
MPRINT(EM_DIAGRAM):   END;
372909    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
372910    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
372911    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
372912    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
372913    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
372914    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
372915    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
372916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372917    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
372918    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
372919    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
372920    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
372921    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
372922    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
372923    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
372924    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
372925    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
372926    +END;
MPRINT(EM_DIAGRAM):   END;
372927    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
372928    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
372929    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
372930    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
372931     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
372932     quit;
372933     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
372934     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
372935     * AutoNeural10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Computing metadata for TRAIN data;
372936     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural10_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural10_TRAIN out=WORK.M3BZPTN9
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BZPTN9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BZPTN9(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BZPTN9;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BZPTN9;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M05RXD13 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KD56E8(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   set WORK.M05RXD13;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural10";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
373248     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
373249     set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
373250     where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
373251     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE (DATA='AutoNeural10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373252     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMINFO;
373253     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
373254     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
373255     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
373259     run;
373260     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
373261     set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
373262     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373263     proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
373264     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373265     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373266     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
373267     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373268     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373269     proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
373270     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373271     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
373272     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
373273     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
373274     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
373275     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373276     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
373277     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
373278     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
373279     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.37 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.37 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                21. April 2016
Time:                18.37 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2DAD66R
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2DAD66R new;
MPRINT(EM_DIAGRAM):   run;
373303     proc sort data=EMWS8.AutoNeural10_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural10_OUTFIT nodupkey;
373304     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
373305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL10_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373306     data EMWS8.AutoNeural10_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMOUTFIT(rename=(_NAME_=TARGET));
373307     set EMWS8.AutoNeural10_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT(where=(_NAME_ eq 'OVERALL'));
373308     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
373309     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
373310     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
373311     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL10_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
373312     data EMWS8.AutoNeural10_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMOUTFIT;
373313     set EMWS8.AutoNeural10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMOUTFIT;
373314     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
373315     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
373315   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
373316     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
373317     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373318     proc sort data=EMWS8.AutoNeural10_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural10_EMREPORTFIT nothreads;
373319     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
373320     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL10_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373321     %let _EMwarndup = 0;
373322     %let _EMtargetdup =;
373323     %let _EMASEtargetdup =;
373324     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
373325     set EMWS8.AutoNeural10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMOUTFIT;
373326     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
373327     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
373328     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
373329     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
373330     end;
MPRINT(EM_DIAGRAM):   end;
373331     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373332     proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
373333     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
373335     proc sort data=EMWS8.AutoNeural10_VariableSet out=WORK.SUBSETVARSET(keep=NAME
373335   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
373336     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373337     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373338     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
373339     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
373340     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
373341     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373342     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
373343     set EMWS8.AutoNeural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_CMeta_TRAIN;
373344     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
373344   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
373345     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL10_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
373346     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
373347     set EMWS8.AutoNeural10_TRAIN(keep=
373348     F_DepVar
373349     I_DepVar
373350     P_DepVar0
373351     P_DepVar1
373352     R_DepVar0
373353     R_DepVar1
373354     U_DepVar
373355     _WARN_
373356     DepVar
373357     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
373358     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL10_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural10_247ESSR nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural10_247ESSR;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_247ESSR(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_247ESSR;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_247ESSR;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 7.100793E-10 OVLMAX 0.9845793603 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
377624     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
377625     set EMWS8.AutoNeural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_CMeta_TRAIN;
377626     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
377626   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
377627     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL10_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
377628     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
377629     set EMWS8.AutoNeural10_VALIDATE(keep=
377630     F_DepVar
377631     I_DepVar
377632     P_DepVar0
377633     P_DepVar1
377634     R_DepVar0
377635     R_DepVar1
377636     U_DepVar
377637     _WARN_
377638     DepVar
377639     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
377640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL10_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural10_1MDMW2T nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural10_1MDMW2T;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_1MDMW2T(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMCLASSIFICATION WORK.AutoNeural10_1MDMW2T;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_1MDMW2T;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
The SAS System
 
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 7.311724E-10 OVLMAX 0.9839408308 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
381915     %let _cn = %sysfunc(getoption(CENTER));
381916     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
381917     proc print data=EMWS8.AutoNeural10_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMREPORTFIT noobs label;
381918     var STAT LABEL TRAIN
381919     VALIDATE
381920     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
381921     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
381922     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
381923     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
381924     run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL10_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 405.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
381925     title10;
MPRINT(EM_DIAGRAM):   title10;
381926     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
381927     proc sort data=EMWS8.AutoNeural10_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural10_EMCLASSIFICATION nothreads;
381928     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
381929     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL10_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL10_EMCLASSIFICATION has 7 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
381930     %let _cn = %sysfunc(getoption(CENTER));
381931     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
381932     proc print data=EMWS8.AutoNeural10_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMCLASSIFICATION noobs label;
381933     var from into pct_row pct_col count percent
381934     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
381935     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
381936     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
381937     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
381938     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
381939     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
381940     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
381941     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
381942     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
381943     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
381944     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
381945     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL10_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 406.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
381946     title9;
MPRINT(EM_DIAGRAM):   title9;
381947     title10;
MPRINT(EM_DIAGRAM):   title10;
381948     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
381949     %let _cn = %sysfunc(getoption(CENTER));
381950     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
381951     data EMWS8.AutoNeural10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMEVENTREPORT;
381952     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
381952   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
381953     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
381953   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
381953   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
381953   ! FALSEEVENT
381954     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
381954   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
381954   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
381955        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
381956     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
381957     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
381958     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
381959     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
381960     set EMWS8.AutoNeural10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMEVENTREPORT;
381961     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL10_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL10_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
381962     proc print data=EMWS8.AutoNeural10_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMEVENTREPORT noobs label;
381963     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
381964     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
381965     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
381966     run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL10_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 407.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
381967     title10;
MPRINT(EM_DIAGRAM):   title10;
381968     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
381969     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
381970     modify AutoNeural10_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural10_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
381971     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
381972     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
381972   ! ;
MPRINT(EM_DIAGRAM):   run;
381973     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL10_EMRANK.DATA.
381974     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.11 seconds
 
 
381975     %let _cn = %sysfunc(getoption(CENTER));
381976     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
381977     proc print data=EMWS8.AutoNeural10_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMRANK label noobs;
381978     var
381979     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
381980     by
381981     notsorted DATAROLE
381982     notsorted TARGET
381983     notsorted TARGETLABEL
381984     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
381985     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
381986     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
381987     run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL10_EMRANK.
NOTE: The PROCEDURE PRINT printed page 408.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
381988     title10;
MPRINT(EM_DIAGRAM):   title10;
381989     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
381990     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
381991     modify AutoNeural10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
381992     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
381992   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
381993     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
381993   ! ;
MPRINT(EM_DIAGRAM):   run;
381994     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL10_EMSCOREDIST.DATA.
381995     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
