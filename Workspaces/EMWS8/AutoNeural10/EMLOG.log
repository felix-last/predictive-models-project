*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                08.36 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.28 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                08.28 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0S_G2CL
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0S_G2CL new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.28 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.28 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
605910     proc freq data=EMWS8.AutoNeural10_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural10_VariableSet noprint;
605911     table ROLE*LEVEL/out=WORK.AutoNeural10META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural10META;
605912     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL10META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
605913     proc print data=WORK.AutoNeural10META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural10META label noobs;
605914     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
605915     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
605915   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
605915   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
605916     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
605917     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
605918     run;
 
NOTE: There were 5 observations read from the data set WORK.AUTONEURAL10META.
NOTE: The PROCEDURE PRINT printed page 432.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
605919     title10;
MPRINT(EM_DIAGRAM):   title10;
605920     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN
EMWS8.Meta_TRAIN EMWS8.Meta_TRAIN EMWS8 Meta_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural10_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_DepVar_DD
out=EMWS8.AutoNeural10_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
605967     data WORK.AutoNeural10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural10_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
605968     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
605969     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
605969   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
605969   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
605970        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
605970   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
605970   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
605971     set EMWS8.AUTONEURAL10_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL10_DEPVAR_DM( where=(_TYPE_="TARGET"));
605972     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
605973     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
605974     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
605975     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
605976     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
605977     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
605978     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
605979     end;
MPRINT(EM_DIAGRAM):   end;
605980     output;
MPRINT(EM_DIAGRAM):   output;
605981     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL10_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
605982     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
605983     proc print data=WORK.AutoNeural10_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural10_EVENT noobs label;
605984     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
605985     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
605986     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
605987     run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL10_EVENT.
NOTE: The PROCEDURE PRINT printed page 433.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
605988     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
605989     proc print data = EMWS8.AutoNeural10_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural10_DepVar_DM noobs label;
605990     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
605991     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
605992     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
605992   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
605992   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
605993     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
605994     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
605995     run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL10_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 434.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
605996     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2UXNAAS;
MPRINT(EM_DIAGRAM):   set WORK.M2UXNAAS;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
606005     data WORK.M2UXNAAS;
MPRINT(EM_DIAGRAM):    data WORK.M2UXNAAS;
606006     set WORK.M2UXNAAS end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M2UXNAAS end=eof;
606007     output;
MPRINT(EM_DIAGRAM):   output;
606008     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
606009     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
606010     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
606011     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
606012     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
606013     output;
MPRINT(EM_DIAGRAM):   output;
606014     end;
MPRINT(EM_DIAGRAM):   end;
606015     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.M2UXNAAS.
NOTE: The data set WORK.M2UXNAAS has 34 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL10_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
606016     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
606017     * AutoNeural10: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Create decision matrix;
606018     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606019     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
606020       length   DepVar                           $  32
606021                COUNT                                8
606022                DATAPRIOR                            8
606023                TRAINPRIOR                           8
606024                DECPRIOR                             8
606025                DECISION1                            8
606026                DECISION2                            8
606027                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
606028
606029       label    COUNT="Level Counts"
606030                DATAPRIOR="Data Proportions"
606031                TRAINPRIOR="Training Proportions"
606032                DECPRIOR="Decision Priors"
606033                DECISION1="1"
606034                DECISION2="0"
606035                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
606036       format   COUNT 10.
606037                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
606038     DepVar="1"; COUNT=359; DATAPRIOR=0.15122156697556; TRAINPRIOR=0.15122156697556;
606038   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
606039     output;
MPRINT(EM_DIAGRAM):   output;
606040     DepVar="0"; COUNT=2015; DATAPRIOR=0.84877843302443; TRAINPRIOR=0.84877843302443;
606040   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
606041     output;
MPRINT(EM_DIAGRAM):   output;
606042     ;
MPRINT(EM_DIAGRAM):   ;
606043     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606044     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
606045     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
606046     label DECISION1= '1';
606047     label DECISION2= '0';
606048     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
606049     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
606050     data EM_AutoNeural10;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural10;
606051     set EMWS8.Meta_TRAIN(keep=
606052     AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5
606053     AcceptedCmpTotal Age Complain DepVar Education Frq HigherEducationBinary Income
606054     Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
606055     MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
606056     NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases
606057     NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome );
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN(keep= AcceptedCmp1 AcceptedCmp2 AcceptedCmp3
AcceptedCmp4 AcceptedCmp5 AcceptedCmpTotal Age Complain DepVar Education Frq
HigherEducationBinary Income Kidhome Marital_Status Mnt MntFishProducts MntFruits MntGoldProds
MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome );
606058     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606059     *------------------------------------------------------------* ;
606060     * AutoNeural10: DMDBClass Macro ;
606061     *------------------------------------------------------------* ;
606062     %macro DMDBClass;
606063         AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
606064        AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC)
606065        HigherEducationBinary(ASC) Marital_Status(ASC)
606066     %mend DMDBClass;
606067     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606068     * AutoNeural10: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: DMDBVar Macro ;
606069     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606070     %macro DMDBVar;
606071         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
606072        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
606073        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
606074        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
606075     %mend DMDBVar;
606076     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606077     * AutoNeural10: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Create DMDB;
606078     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
606079     proc dmdb batch data=WORK.EM_AutoNeural10
606080     dmdbcat=WORK.AutoNeural10_DMDB
606081     maxlevel = 513
606082     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
606083     class %DMDBClass;
MPRINT(DMDBCLASS):   AcceptedCmp1(ASC) AcceptedCmp2(ASC) AcceptedCmp3(ASC) AcceptedCmp4(ASC)
AcceptedCmp5(ASC) Complain(ASC) DepVar(DESC) Education(ASC) HigherEducationBinary(ASC)
Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
606084     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer NumCatalogPurchases
NumDealsPurchases NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):  ;
606085     target
606086     DepVar
606087     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
606088     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL10.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
606089     quit;
606090     *--- end code ---*;
 
606091     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
606092     * AutoNeural10: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Interval Inputs Macro ;
606093     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606094     %macro INTINPUTS;
606095         AcceptedCmpTotal Age Frq Income Kidhome Mnt MntFishProducts MntFruits
606096        MntGoldProds MntMeatProducts MntSweetProducts MntWines MonthsAsCustomer
606097        NumCatalogPurchases NumDealsPurchases NumDistPurchases NumStorePurchases
606098        NumWebPurchases NumWebVisitsMonth RFMstat RMntFrq Recency Teenhome
606099     %mend INTINPUTS;
606100     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606101     * AutoNeural10: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Binary Inputs Macro ;
606102     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606103     %macro BININPUTS;
606104         AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 Complain
606105        HigherEducationBinary
606106     %mend BININPUTS;
606107     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606108     * AutoNeural10: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Nominal Inputs Macro ;
606109     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606110     %macro NOMINPUTS;
606111         Education Marital_Status
606112     %mend NOMINPUTS;
606113     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606114     * AutoNeural10: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Ordinal Inputs Macro ;
606115     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
606116     %macro ORDINPUTS;
606117
606118     %mend ORDINPUTS;
606119     * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
606120     ;
MPRINT(EM_DIAGRAM):   ;
606121     options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
606122     options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
606123     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
606124     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
606125     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
606126     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606127     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
606127   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
606128     *;
 
606129     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606130     * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
606131     ;
MPRINT(EM_DIAGRAM):   ;
606132     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606133     *;
MPRINT(EM_DIAGRAM):   *;
 
606134     *;
MPRINT(EM_DIAGRAM):    *;
606135     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
606136     validdata=EMWS8.Meta_VALIDATE
606137     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
606138     *;
MPRINT(EM_DIAGRAM):   *;
606139     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
606140     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
606141     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
606142     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
606143     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
606144     target DepVar / level=NOMINAL id=DepVar
606145     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
606146     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606147     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
606148     ;
MPRINT(EM_DIAGRAM):   ;
606149     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606150     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
606151     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
606152     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
606153     *;
MPRINT(EM_DIAGRAM):   *;
606154     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
606155     *;
MPRINT(EM_DIAGRAM):   *;
606156     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606157     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
606157   ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (ABSGCONV=0.00001) satisfied.
NOTE: The data set WORK._ANEST has 56 observations and 54 variables.
NOTE: The data set WORK._ANFIT has 32 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
606158     train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
606159     tech = Default;
606160     ;
606161     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.51 seconds
      cpu time            0.51 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.52 seconds
      cpu time            0.53 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606162     *;
606163     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
606164     var _iter_ _aic_ _averr_ _misc_
606165     _vaverr_ _vmisc_
606166     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606167     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 435.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606168     *------------------------------------------------------------*;
606169     * Extract best iteration;
606170     ;
606171     *------------------------------------------------------------*;
606172     %global _iter;
606173     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
606174     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
606175     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
606176     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
606177     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
606178     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
606179     end;
MPRINT(EM_DIAGRAM):   end;
606180     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606181     *;
 
606182     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
606183     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
606184     if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
606185     output;
MPRINT(EM_DIAGRAM):   output;
606186     stop;
MPRINT(EM_DIAGRAM):   stop;
606187     end;
MPRINT(EM_DIAGRAM):   end;
606188     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606189     *;
606190     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606191     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
606192     if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
606193     output;
MPRINT(EM_DIAGRAM):   output;
606194     stop;
MPRINT(EM_DIAGRAM):   stop;
606195     end;
MPRINT(EM_DIAGRAM):   end;
606196     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606197     *;
MPRINT(EM_DIAGRAM):    *;
606198     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606199     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
606199   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
606200     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
606201     var _iter_ _aic_ _averr_ _misc_
606202     _vaverr_ _vmisc_
606203     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606204     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 436.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606205     title9;
MPRINT(EM_DIAGRAM):   title9;
606206     title10;
MPRINT(EM_DIAGRAM):   title10;
606207     %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
606208     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606209     length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
606210     label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
606210   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
606211     label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
606211   !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
606212     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
606212   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
606213     label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
606213   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
606214     _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
606215     _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
606216     _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
606217     set
606218     _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
606219     ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
606220     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606221     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606222     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606223     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606224     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606225     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606226     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606227     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606228     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606229     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
606230     ;
MPRINT(EM_DIAGRAM):   ;
606231     data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
606232     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
606233     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_0VY9DAJ has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606234     data EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_BESTDS;
606235     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
606236     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_BESTDS has 1 observations and 54
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606237     data WORK.BFITDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_0VY9DAJ;
606238     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606239     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_0VY9DAJ has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606240     * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
606241     ;
MPRINT(EM_DIAGRAM):   ;
606242     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606243     set EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY;
606244     _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
606245     _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
606246     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606247     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
606248     ;
MPRINT(EM_DIAGRAM):   ;
606249     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606250     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606251     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
606252     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
606253     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
606254     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
606255     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
606256     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606257     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606258     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
606259     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606260     *;
MPRINT(EM_DIAGRAM):    *;
606261     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
606262     validdata=EMWS8.Meta_VALIDATE
606263     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
606264     *;
MPRINT(EM_DIAGRAM):   *;
606265     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
606266     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
606267     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
606268     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
606269     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
606270     target DepVar / level=NOMINAL id=DepVar
606271     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
606272     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606273     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
606274     ;
MPRINT(EM_DIAGRAM):   ;
606275     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606276     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
606277     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
606278     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
606279     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
606280     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
606281     *;
MPRINT(EM_DIAGRAM):   *;
606282     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
606283     *;
MPRINT(EM_DIAGRAM):   *;
606284     initial
606285     ;
MPRINT(EM_DIAGRAM):   initial ;
606286     *;
MPRINT(EM_DIAGRAM):   *;
606287     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606288     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
606288   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=45 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 216 variables.
MPRINT(EM_DIAGRAM):   *;
606289     prelim 20 outest=_anpre pretime=45 preiter=25
606290     tech = Default
606291     ;
606292     *;
606293     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606294     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
606294   ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=900
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 216 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
606295     train estiter=1 outest=_anest outfit=_anfit maxtime=900 maxiter=50
MPRINT(EM_DIAGRAM):   run;
606296     tech = Default;
606297     ;
606298     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           9.89 seconds
      cpu time            9.78 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 437.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           9.89 seconds
      cpu time            9.78 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606299     *;
606300     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
606301     var _iter_ _aic_ _averr_ _misc_
606302     _vaverr_ _vmisc_
606303     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606304     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 438.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606305     *------------------------------------------------------------*;
606306     * Extract best iteration;
606307     ;
606308     *------------------------------------------------------------*;
606309     %global _iter;
606310     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
606311     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
606312     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
606313     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
606314     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
606315     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
606316     end;
MPRINT(EM_DIAGRAM):   end;
606317     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606318     *;
 
606319     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
606320     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
606321     if _ITER_ eq 35 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 35 then do;
606322     output;
MPRINT(EM_DIAGRAM):   output;
606323     stop;
MPRINT(EM_DIAGRAM):   stop;
606324     end;
MPRINT(EM_DIAGRAM):   end;
606325     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606326     *;
606327     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606328     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
606329     if _ITER_ eq 35 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 35 and _NAME_ eq "OVERALL" then do;
606330     output;
MPRINT(EM_DIAGRAM):   output;
606331     stop;
MPRINT(EM_DIAGRAM):   stop;
606332     end;
MPRINT(EM_DIAGRAM):   end;
606333     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 72 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
606334     *;
MPRINT(EM_DIAGRAM):    *;
606335     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606336     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
606336   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
606337     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
606338     var _iter_ _aic_ _averr_ _misc_
606339     _vaverr_ _vmisc_
606340     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606341     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 439.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606342     title9;
MPRINT(EM_DIAGRAM):   title9;
606343     title10;
MPRINT(EM_DIAGRAM):   title10;
606344     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606345     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606346     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606347     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606348     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606349     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606350     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606351     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606352     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
606353     ;
MPRINT(EM_DIAGRAM):   ;
606354     data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
606355     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
606356     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_0VY9DAJ has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606357     data EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_BESTDS;
606358     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
606359     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_BESTDS has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606360     data WORK.BFITDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_0VY9DAJ;
606361     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606362     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_0VY9DAJ has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
606363     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
606364     ;
MPRINT(EM_DIAGRAM):   ;
606365     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606366     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606367     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
606368     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
606369     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
606370     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
606371     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
606372     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606373     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606374     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
606375     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606376     *;
MPRINT(EM_DIAGRAM):    *;
606377     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
606378     validdata=EMWS8.Meta_VALIDATE
606379     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
606380     *;
MPRINT(EM_DIAGRAM):   *;
606381     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
606382     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
606383     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
606384     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
606385     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
606386     target DepVar / level=NOMINAL id=DepVar
606387     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
606388     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606389     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
606390     ;
MPRINT(EM_DIAGRAM):   ;
606391     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606392     Hidden 5 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SINE;
606393     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
606394     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
606395     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
606396     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
606397     *;
MPRINT(EM_DIAGRAM):   *;
606398     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
606399     *;
MPRINT(EM_DIAGRAM):   *;
606400     initial
606401     ;
MPRINT(EM_DIAGRAM):   initial ;
606402     *;
MPRINT(EM_DIAGRAM):   *;
606403     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606404     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
606404   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 216 variables.
MPRINT(EM_DIAGRAM):   *;
606405     prelim 20 outest=_anpre pretime=44 preiter=25
606406     tech = Default
606407     ;
606408     *;
606409     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606410     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
606410   ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=897
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 216 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
606411     train estiter=1 outest=_anest outfit=_anfit maxtime=897 maxiter=50
MPRINT(EM_DIAGRAM):   run;
606412     tech = Default;
606413     ;
606414     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           9.48 seconds
      cpu time            9.43 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 440.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           9.48 seconds
      cpu time            9.43 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606415     *;
606416     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
606417     var _iter_ _aic_ _averr_ _misc_
606418     _vaverr_ _vmisc_
606419     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606420     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 441.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606421     *------------------------------------------------------------*;
606422     * Extract best iteration;
606423     ;
606424     *------------------------------------------------------------*;
606425     %global _iter;
606426     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
606427     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
606428     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
606429     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
606430     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
606431     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
606432     end;
MPRINT(EM_DIAGRAM):   end;
606433     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606434     *;
 
606435     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
606436     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
606437     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
606438     output;
MPRINT(EM_DIAGRAM):   output;
606439     stop;
MPRINT(EM_DIAGRAM):   stop;
606440     end;
MPRINT(EM_DIAGRAM):   end;
606441     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606442     *;
606443     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606444     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
606445     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
606446     output;
MPRINT(EM_DIAGRAM):   output;
606447     stop;
MPRINT(EM_DIAGRAM):   stop;
606448     end;
MPRINT(EM_DIAGRAM):   end;
606449     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606450     *;
MPRINT(EM_DIAGRAM):    *;
606451     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606452     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
606452   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
606453     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
606454     var _iter_ _aic_ _averr_ _misc_
606455     _vaverr_ _vmisc_
606456     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606457     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 442.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606458     title9;
MPRINT(EM_DIAGRAM):   title9;
606459     title10;
MPRINT(EM_DIAGRAM):   title10;
606460     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606461     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606462     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606463     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606464     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606465     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606466     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606467     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606468     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
606469     ;
MPRINT(EM_DIAGRAM):   ;
606470     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606471     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606472     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
606473     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
606474     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
606475     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
606476     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
606477     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606478     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606479     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
606480     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606481     *;
MPRINT(EM_DIAGRAM):    *;
606482     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
606483     validdata=EMWS8.Meta_VALIDATE
606484     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
606485     *;
MPRINT(EM_DIAGRAM):   *;
606486     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
606487     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
606488     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
606489     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
606490     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
606491     target DepVar / level=NOMINAL id=DepVar
606492     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
606493     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606494     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
606495     ;
MPRINT(EM_DIAGRAM):   ;
606496     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606497     Hidden 5 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=SOFTMAX;
606498     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
606499     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
606500     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
606501     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
606502     *;
MPRINT(EM_DIAGRAM):   *;
606503     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
606504     *;
MPRINT(EM_DIAGRAM):   *;
606505     initial
606506     ;
MPRINT(EM_DIAGRAM):   initial ;
606507     *;
MPRINT(EM_DIAGRAM):   *;
606508     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606509     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
606509   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 177 variables.
MPRINT(EM_DIAGRAM):   *;
606510     prelim 20 outest=_anpre pretime=44 preiter=25
606511     tech = Default
606512     ;
606513     *;
606514     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606515     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
606515   ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=895
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 177 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
606516     train estiter=1 outest=_anest outfit=_anfit maxtime=895 maxiter=50
MPRINT(EM_DIAGRAM):   run;
606517     tech = Default;
606518     ;
606519     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           10.00 seconds
      cpu time            9.98 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 443.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           10.01 seconds
      cpu time            10.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606520     *;
606521     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
606522     var _iter_ _aic_ _averr_ _misc_
606523     _vaverr_ _vmisc_
606524     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 444.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606526     *------------------------------------------------------------*;
606527     * Extract best iteration;
606528     ;
606529     *------------------------------------------------------------*;
606530     %global _iter;
606531     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
606532     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
606533     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
606534     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
606535     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
606536     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
606537     end;
MPRINT(EM_DIAGRAM):   end;
606538     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606539     *;
 
606540     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
606541     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
606542     if _ITER_ eq 27 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 27 then do;
606543     output;
MPRINT(EM_DIAGRAM):   output;
606544     stop;
MPRINT(EM_DIAGRAM):   stop;
606545     end;
MPRINT(EM_DIAGRAM):   end;
606546     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 177
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606547     *;
606548     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606549     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
606550     if _ITER_ eq 27 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 27 and _NAME_ eq "OVERALL" then do;
606551     output;
MPRINT(EM_DIAGRAM):   output;
606552     stop;
MPRINT(EM_DIAGRAM):   stop;
606553     end;
MPRINT(EM_DIAGRAM):   end;
606554     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606555     *;
MPRINT(EM_DIAGRAM):    *;
606556     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606557     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
606557   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
606558     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
606559     var _iter_ _aic_ _averr_ _misc_
606560     _vaverr_ _vmisc_
606561     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606562     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 445.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606563     title9;
MPRINT(EM_DIAGRAM):   title9;
606564     title10;
MPRINT(EM_DIAGRAM):   title10;
606565     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606566     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606567     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606568     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606569     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606570     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606571     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606572     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606573     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
606574     ;
MPRINT(EM_DIAGRAM):   ;
606575     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606576     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606577     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
606578     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
606579     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
606580     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
606581     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
606582     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
606583     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606584     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
606585     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606586     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
606587     ;
MPRINT(EM_DIAGRAM):   ;
606588     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
606589     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
606590     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606591     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606592     set WORK.BFITDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_0VY9DAJ;
606593     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_0VY9DAJ.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606594     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
606595     ;
MPRINT(EM_DIAGRAM):   ;
606596     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606597     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606598     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
606599     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
606600     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
606601     _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
606602     _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
606603     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606604     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606605     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
606606     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606607     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606608     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606609     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606610     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606611     *;
MPRINT(EM_DIAGRAM):    *;
606612     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
606613     validdata=EMWS8.Meta_VALIDATE
606614     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
606615     *;
MPRINT(EM_DIAGRAM):   *;
606616     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
606617     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
606618     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
606619     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
606620     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
606621     target DepVar / level=NOMINAL id=DepVar
606622     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
606623     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606624     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
606625     ;
MPRINT(EM_DIAGRAM):   ;
606626     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606627     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
606628     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
606629     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
606630     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606631     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
606632     ;
MPRINT(EM_DIAGRAM):   ;
606633     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606634     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
606635     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
606636     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
606637     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
606638     connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
606639     *;
MPRINT(EM_DIAGRAM):   *;
606640     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
606641     *;
MPRINT(EM_DIAGRAM):   *;
606642     initial
606643     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
606644     ;
MPRINT(EM_DIAGRAM):   ;
606645     *;
MPRINT(EM_DIAGRAM):   *;
606646     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606647     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
606647   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Prelim";
606648     prelim 20 outest=_anpre pretime=44 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=44 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 254 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 216
      variables.
MPRINT(EM_DIAGRAM):   *;
606649     tech = Default
606650     inest = EMWS8.AutoNeural10_ESTDS bylabel
606651     ;
606652     *;
606653     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606654     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
606654   ! Search # 2 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 254 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
606655     train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=50
MPRINT(EM_DIAGRAM):   run;
606656     tech = Default;
606657     ;
606658     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1.64 seconds
      cpu time            1.65 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 446.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.64 seconds
      cpu time            1.65 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606659     *;
606660     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
606661     var _iter_ _aic_ _averr_ _misc_
606662     _vaverr_ _vmisc_
606663     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606664     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 447.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606665     *------------------------------------------------------------*;
606666     * Extract best iteration;
606667     ;
606668     *------------------------------------------------------------*;
606669     %global _iter;
606670     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
606671     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
606672     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
606673     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
606674     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
606675     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
606676     end;
MPRINT(EM_DIAGRAM):   end;
606677     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606678     *;
 
606679     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
606680     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
606681     if _ITER_ eq 14 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 14 then do;
606682     output;
MPRINT(EM_DIAGRAM):   output;
606683     stop;
MPRINT(EM_DIAGRAM):   stop;
606684     end;
MPRINT(EM_DIAGRAM):   end;
606685     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606686     *;
606687     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606688     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
606689     if _ITER_ eq 14 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 14 and _NAME_ eq "OVERALL" then do;
606690     output;
MPRINT(EM_DIAGRAM):   output;
606691     stop;
MPRINT(EM_DIAGRAM):   stop;
606692     end;
MPRINT(EM_DIAGRAM):   end;
606693     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606694     *;
MPRINT(EM_DIAGRAM):    *;
606695     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606696     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
606696   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
606697     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
606698     var _iter_ _aic_ _averr_ _misc_
606699     _vaverr_ _vmisc_
606700     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606701     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 448.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606702     title9;
MPRINT(EM_DIAGRAM):   title9;
606703     title10;
MPRINT(EM_DIAGRAM):   title10;
606704     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606705     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606706     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606707     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606708     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606709     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606710     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606711     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606712     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
606713     ;
MPRINT(EM_DIAGRAM):   ;
606714     data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
606715     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
606716     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_0VY9DAJ has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606717     data EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_BESTDS;
606718     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
606719     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_BESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606720     data WORK.BFITDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_0VY9DAJ;
606721     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606722     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_0VY9DAJ has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606723     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
606724     ;
MPRINT(EM_DIAGRAM):   ;
606725     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606726     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606727     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
606728     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
606729     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
606730     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
606731     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
606732     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606733     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606734     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
606735     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606736     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
606737     ;
MPRINT(EM_DIAGRAM):   ;
606738     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
606739     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
606740     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606741     *;
MPRINT(EM_DIAGRAM):    *;
606742     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
606743     validdata=EMWS8.Meta_VALIDATE
606744     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
606745     *;
MPRINT(EM_DIAGRAM):   *;
606746     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
606747     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
606748     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
606749     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
606750     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
606751     target DepVar / level=NOMINAL id=DepVar
606752     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
606753     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606754     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
606755     ;
MPRINT(EM_DIAGRAM):   ;
606756     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606757     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
606758     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
606759     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
606760     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
606761     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
606762     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
606763     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
606764     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
606765     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606766     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
606767     ;
MPRINT(EM_DIAGRAM):   ;
606768     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606769     Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
606770     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
606771     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
606772     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
606773     *;
MPRINT(EM_DIAGRAM):   *;
606774     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
606775     *;
MPRINT(EM_DIAGRAM):   *;
606776     initial
606777     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
606778     ;
MPRINT(EM_DIAGRAM):   ;
606779     *;
MPRINT(EM_DIAGRAM):   *;
606780     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606781     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
606781   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
606782     prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 466 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
606783     tech = Default
606784     inest = EMWS8.AutoNeural10_ESTDS bylabel
606785     ;
606786     *;
606787     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606788     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
606788   ! Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=892
maxiter=50 tech = Default;
NOTE: Convergence criterion (ABSCONV=0.0020529663) satisfied.
NOTE: The data set WORK._ANEST has 43 observations and 466 variables.
NOTE: The data set WORK._ANFIT has 84 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
606789     train estiter=1 outest=_anest outfit=_anfit maxtime=892 maxiter=50
MPRINT(EM_DIAGRAM):   run;
606790     tech = Default;
606791     ;
606792     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           18.88 seconds
      cpu time            18.75 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 449.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           18.88 seconds
      cpu time            18.76 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606793     *;
606794     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
606795     var _iter_ _aic_ _averr_ _misc_
606796     _vaverr_ _vmisc_
606797     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606798     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 450.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606799     *------------------------------------------------------------*;
606800     * Extract best iteration;
606801     ;
606802     *------------------------------------------------------------*;
606803     %global _iter;
606804     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
606805     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
606806     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
606807     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
606808     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
606809     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
606810     end;
MPRINT(EM_DIAGRAM):   end;
606811     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606812     *;
 
606813     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
606814     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
606815     if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
606816     output;
MPRINT(EM_DIAGRAM):   output;
606817     stop;
MPRINT(EM_DIAGRAM):   stop;
606818     end;
MPRINT(EM_DIAGRAM):   end;
606819     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 466
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606820     *;
606821     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606822     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
606823     if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
606824     output;
MPRINT(EM_DIAGRAM):   output;
606825     stop;
MPRINT(EM_DIAGRAM):   stop;
606826     end;
MPRINT(EM_DIAGRAM):   end;
606827     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606828     *;
MPRINT(EM_DIAGRAM):    *;
606829     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606830     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
606830   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
606831     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
606832     var _iter_ _aic_ _averr_ _misc_
606833     _vaverr_ _vmisc_
606834     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606835     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 451.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606836     title9;
MPRINT(EM_DIAGRAM):   title9;
606837     title10;
MPRINT(EM_DIAGRAM):   title10;
606838     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606839     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606840     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606841     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606842     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606843     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606844     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606845     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606846     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
606847     ;
MPRINT(EM_DIAGRAM):   ;
606848     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606849     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606850     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
606851     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
606852     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
606853     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
606854     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
606855     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606856     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606857     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
606858     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606859     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
606860     ;
MPRINT(EM_DIAGRAM):   ;
606861     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
606862     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
606863     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606864     *;
MPRINT(EM_DIAGRAM):    *;
606865     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
606866     validdata=EMWS8.Meta_VALIDATE
606867     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
606868     *;
MPRINT(EM_DIAGRAM):   *;
606869     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
606870     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
606871     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
606872     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
606873     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
606874     target DepVar / level=NOMINAL id=DepVar
606875     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
606876     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606877     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
606878     ;
MPRINT(EM_DIAGRAM):   ;
606879     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606880     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
606881     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
606882     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
606883     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
606884     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
606885     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
606886     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
606887     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
606888     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606889     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
606890     ;
MPRINT(EM_DIAGRAM):   ;
606891     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606892     Hidden 5 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SINE;
606893     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
606894     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
606895     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
606896     *;
MPRINT(EM_DIAGRAM):   *;
606897     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
606898     *;
MPRINT(EM_DIAGRAM):   *;
606899     initial
606900     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
606901     ;
MPRINT(EM_DIAGRAM):   ;
606902     *;
MPRINT(EM_DIAGRAM):   *;
606903     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606904     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
606904   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
606905     prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 466 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
606906     tech = Default
606907     inest = EMWS8.AutoNeural10_ESTDS bylabel
606908     ;
606909     *;
606910     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606911     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
606911   ! Search # 2 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=887
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 466 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
606912     train estiter=1 outest=_anest outfit=_anfit maxtime=887 maxiter=50
MPRINT(EM_DIAGRAM):   run;
606913     tech = Default;
606914     ;
606915     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           17.77 seconds
      cpu time            17.58 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 452.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           17.77 seconds
      cpu time            17.58 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606916     *;
606917     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
606918     var _iter_ _aic_ _averr_ _misc_
606919     _vaverr_ _vmisc_
606920     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606921     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 453.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
606922     *------------------------------------------------------------*;
606923     * Extract best iteration;
606924     ;
606925     *------------------------------------------------------------*;
606926     %global _iter;
606927     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
606928     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
606929     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
606930     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
606931     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
606932     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
606933     end;
MPRINT(EM_DIAGRAM):   end;
606934     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606935     *;
 
606936     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
606937     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
606938     if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
606939     output;
MPRINT(EM_DIAGRAM):   output;
606940     stop;
MPRINT(EM_DIAGRAM):   stop;
606941     end;
MPRINT(EM_DIAGRAM):   end;
606942     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 466
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
606943     *;
606944     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606945     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
606946     if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
606947     output;
MPRINT(EM_DIAGRAM):   output;
606948     stop;
MPRINT(EM_DIAGRAM):   stop;
606949     end;
MPRINT(EM_DIAGRAM):   end;
606950     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606951     *;
MPRINT(EM_DIAGRAM):    *;
606952     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
606953     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
606953   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
606954     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
606955     var _iter_ _aic_ _averr_ _misc_
606956     _vaverr_ _vmisc_
606957     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
606958     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 454.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606959     title9;
MPRINT(EM_DIAGRAM):   title9;
606960     title10;
MPRINT(EM_DIAGRAM):   title10;
606961     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606962     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606963     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
606965     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
606966     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606967     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
606968     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606969     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
606970     ;
MPRINT(EM_DIAGRAM):   ;
606971     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
606972     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
606973     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
606974     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
606975     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
606976     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
606977     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
606978     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606979     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
606980     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
606981     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606982     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
606983     ;
MPRINT(EM_DIAGRAM):   ;
606984     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
606985     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
606986     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
606987     *;
MPRINT(EM_DIAGRAM):    *;
606988     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
606989     validdata=EMWS8.Meta_VALIDATE
606990     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
606991     *;
MPRINT(EM_DIAGRAM):   *;
606992     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
606993     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
606994     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
606995     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
606996     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
606997     target DepVar / level=NOMINAL id=DepVar
606998     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
606999     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607000     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
607001     ;
MPRINT(EM_DIAGRAM):   ;
607002     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607003     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
607004     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
607005     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
607006     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
607007     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
607008     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
607009     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
607010     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
607011     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607012     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
607013     ;
MPRINT(EM_DIAGRAM):   ;
607014     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607015     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
607016     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
607017     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
607018     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
607019     *;
MPRINT(EM_DIAGRAM):   *;
607020     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
607021     *;
MPRINT(EM_DIAGRAM):   *;
607022     initial
607023     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
607024     ;
MPRINT(EM_DIAGRAM):   ;
607025     *;
MPRINT(EM_DIAGRAM):   *;
607026     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607027     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
607027   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
607028     prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 455 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
607029     tech = Default
607030     inest = EMWS8.AutoNeural10_ESTDS bylabel
607031     ;
607032     *;
607033     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607034     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
607034   ! Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=882
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 455 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
607035     train estiter=1 outest=_anest outfit=_anfit maxtime=882 maxiter=50
MPRINT(EM_DIAGRAM):   run;
607036     tech = Default;
607037     ;
607038     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           19.41 seconds
      cpu time            19.18 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 455.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           19.41 seconds
      cpu time            19.20 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607039     *;
607040     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
607041     var _iter_ _aic_ _averr_ _misc_
607042     _vaverr_ _vmisc_
607043     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607044     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 456.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607045     *------------------------------------------------------------*;
607046     * Extract best iteration;
607047     ;
607048     *------------------------------------------------------------*;
607049     %global _iter;
607050     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
607051     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
607052     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
607053     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
607054     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
607055     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
607056     end;
MPRINT(EM_DIAGRAM):   end;
607057     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607058     *;
 
607059     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
607060     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
607061     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
607062     output;
MPRINT(EM_DIAGRAM):   output;
607063     stop;
MPRINT(EM_DIAGRAM):   stop;
607064     end;
MPRINT(EM_DIAGRAM):   end;
607065     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 455
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607066     *;
607067     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607068     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
607069     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
607070     output;
MPRINT(EM_DIAGRAM):   output;
607071     stop;
MPRINT(EM_DIAGRAM):   stop;
607072     end;
MPRINT(EM_DIAGRAM):   end;
607073     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607074     *;
MPRINT(EM_DIAGRAM):    *;
607075     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607076     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
607076   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
607077     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
607078     var _iter_ _aic_ _averr_ _misc_
607079     _vaverr_ _vmisc_
607080     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607081     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 457.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607082     title9;
MPRINT(EM_DIAGRAM):   title9;
607083     title10;
MPRINT(EM_DIAGRAM):   title10;
607084     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607085     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607086     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607087     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607088     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607089     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607090     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607091     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607092     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
607093     ;
MPRINT(EM_DIAGRAM):   ;
607094     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607095     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607096     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
607097     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
607098     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
607099     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
607100     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
607101     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607102     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
607103     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
607104     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607105     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
607106     ;
MPRINT(EM_DIAGRAM):   ;
607107     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
607108     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
607109     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607110     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607111     set WORK.BFITDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_0VY9DAJ;
607112     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_0VY9DAJ.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607113     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
607114     ;
MPRINT(EM_DIAGRAM):   ;
607115     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607116     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607117     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
607118     _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
607119     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
607120     _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
607121     _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
607122     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607123     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
607124     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
607125     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607126     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607127     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607128     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607129     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607130     *;
MPRINT(EM_DIAGRAM):    *;
607131     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
607132     validdata=EMWS8.Meta_VALIDATE
607133     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
607134     *;
MPRINT(EM_DIAGRAM):   *;
607135     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
607136     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
607137     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
607138     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
607139     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
607140     target DepVar / level=NOMINAL id=DepVar
607141     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
607142     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607143     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
607144     ;
MPRINT(EM_DIAGRAM):   ;
607145     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607146     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
607147     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
607148     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
607149     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607150     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
607151     ;
MPRINT(EM_DIAGRAM):   ;
607152     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607153     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
607154     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
607155     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
607156     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
607157     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
607158     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
607159     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
607160     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
607161     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607162     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
607163     ;
MPRINT(EM_DIAGRAM):   ;
607164     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607165     Hidden 5 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=LOG;
607166     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
607167     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
607168     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
607169     *;
MPRINT(EM_DIAGRAM):   *;
607170     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
607171     *;
MPRINT(EM_DIAGRAM):   *;
607172     initial
607173     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
607174     ;
MPRINT(EM_DIAGRAM):   ;
607175     *;
MPRINT(EM_DIAGRAM):   *;
607176     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607177     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
607177   ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
607178     prelim 25 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 504 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
607179     tech = Default
607180     inest = EMWS8.AutoNeural10_ESTDS bylabel
607181     ;
607182     *;
607183     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607184     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
607184   ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=877
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 504 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
607185     train estiter=1 outest=_anest outfit=_anfit maxtime=877 maxiter=50
MPRINT(EM_DIAGRAM):   run;
607186     tech = Default;
607187     ;
607188     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           20.88 seconds
      cpu time            20.81 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 458.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           20.88 seconds
      cpu time            20.82 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607189     *;
607190     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
607191     var _iter_ _aic_ _averr_ _misc_
607192     _vaverr_ _vmisc_
607193     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607194     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 459.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607195     *------------------------------------------------------------*;
607196     * Extract best iteration;
607197     ;
607198     *------------------------------------------------------------*;
607199     %global _iter;
607200     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
607201     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
607202     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
607203     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
607204     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
607205     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
607206     end;
MPRINT(EM_DIAGRAM):   end;
607207     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607208     *;
 
607209     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
607210     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
607211     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
607212     output;
MPRINT(EM_DIAGRAM):   output;
607213     stop;
MPRINT(EM_DIAGRAM):   stop;
607214     end;
MPRINT(EM_DIAGRAM):   end;
607215     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607216     *;
607217     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607218     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
607219     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
607220     output;
MPRINT(EM_DIAGRAM):   output;
607221     stop;
MPRINT(EM_DIAGRAM):   stop;
607222     end;
MPRINT(EM_DIAGRAM):   end;
607223     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607224     *;
MPRINT(EM_DIAGRAM):    *;
607225     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607226     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
607226   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
607227     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
607228     var _iter_ _aic_ _averr_ _misc_
607229     _vaverr_ _vmisc_
607230     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607231     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 460.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607232     title9;
MPRINT(EM_DIAGRAM):   title9;
607233     title10;
MPRINT(EM_DIAGRAM):   title10;
607234     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607235     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607236     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607237     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607238     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607239     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607240     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607241     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607242     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
607243     ;
MPRINT(EM_DIAGRAM):   ;
607244     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607245     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607246     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
607247     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
607248     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
607249     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
607250     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
607251     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607252     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
607253     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
607254     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607255     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
607256     ;
MPRINT(EM_DIAGRAM):   ;
607257     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
607258     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
607259     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607260     *;
MPRINT(EM_DIAGRAM):    *;
607261     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
607262     validdata=EMWS8.Meta_VALIDATE
607263     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
607264     *;
MPRINT(EM_DIAGRAM):   *;
607265     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
607266     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
607267     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
607268     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
607269     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
607270     target DepVar / level=NOMINAL id=DepVar
607271     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
607272     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607273     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
607274     ;
MPRINT(EM_DIAGRAM):   ;
607275     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607276     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
607277     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
607278     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
607279     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607280     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
607281     ;
MPRINT(EM_DIAGRAM):   ;
607282     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607283     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
607284     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
607285     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
607286     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
607287     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
607288     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
607289     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
607290     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
607291     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607292     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
607293     ;
MPRINT(EM_DIAGRAM):   ;
607294     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607295     Hidden 5 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SINE;
607296     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
607297     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
607298     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
607299     *;
MPRINT(EM_DIAGRAM):   *;
607300     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
607301     *;
MPRINT(EM_DIAGRAM):   *;
607302     initial
607303     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
607304     ;
MPRINT(EM_DIAGRAM):   ;
607305     *;
MPRINT(EM_DIAGRAM):   *;
607306     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607307     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
607307   ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
607308     prelim 25 outest=_anpre pretime=34 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=34 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 504 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
607309     tech = Default
607310     inest = EMWS8.AutoNeural10_ESTDS bylabel
607311     ;
607312     *;
607313     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607314     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
607314   ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=872
maxiter=50 tech = Default;
NOTE: Convergence criterion (ABSCONV=0.0020529663) satisfied.
NOTE: At least one element of the gradient is greater than 1e-3.
NOTE: The data set WORK._ANEST has 53 observations and 504 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
607315     train estiter=1 outest=_anest outfit=_anfit maxtime=872 maxiter=50
MPRINT(EM_DIAGRAM):   run;
607316     tech = Default;
607317     ;
607318     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           19.62 seconds
      cpu time            19.46 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 461.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           19.63 seconds
      cpu time            19.46 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607319     *;
607320     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
607321     var _iter_ _aic_ _averr_ _misc_
607322     _vaverr_ _vmisc_
607323     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607324     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 462.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607325     *------------------------------------------------------------*;
607326     * Extract best iteration;
607327     ;
607328     *------------------------------------------------------------*;
607329     %global _iter;
607330     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
607331     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
607332     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
607333     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
607334     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
607335     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
607336     end;
MPRINT(EM_DIAGRAM):   end;
607337     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607338     *;
 
607339     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
607340     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
607341     if _ITER_ eq 3 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 then do;
607342     output;
MPRINT(EM_DIAGRAM):   output;
607343     stop;
MPRINT(EM_DIAGRAM):   stop;
607344     end;
MPRINT(EM_DIAGRAM):   end;
607345     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 504
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607346     *;
607347     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607348     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
607349     if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 3 and _NAME_ eq "OVERALL" then do;
607350     output;
MPRINT(EM_DIAGRAM):   output;
607351     stop;
MPRINT(EM_DIAGRAM):   stop;
607352     end;
MPRINT(EM_DIAGRAM):   end;
607353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607354     *;
MPRINT(EM_DIAGRAM):    *;
607355     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607356     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
607356   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
607357     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
607358     var _iter_ _aic_ _averr_ _misc_
607359     _vaverr_ _vmisc_
607360     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607361     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 463.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607362     title9;
MPRINT(EM_DIAGRAM):   title9;
607363     title10;
MPRINT(EM_DIAGRAM):   title10;
607364     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607365     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607366     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607367     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607368     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607369     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607370     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607371     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607372     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
607373     ;
MPRINT(EM_DIAGRAM):   ;
607374     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607375     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607376     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
607377     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
607378     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
607379     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
607380     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
607381     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607382     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
607383     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
607384     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607385     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
607386     ;
MPRINT(EM_DIAGRAM):   ;
607387     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
607388     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
607389     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607390     *;
MPRINT(EM_DIAGRAM):    *;
607391     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
607392     validdata=EMWS8.Meta_VALIDATE
607393     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
607394     *;
MPRINT(EM_DIAGRAM):   *;
607395     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
607396     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
607397     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
607398     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
607399     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
607400     target DepVar / level=NOMINAL id=DepVar
607401     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
607402     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607403     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
607404     ;
MPRINT(EM_DIAGRAM):   ;
607405     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607406     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
607407     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
607408     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
607409     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607410     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
607411     ;
MPRINT(EM_DIAGRAM):   ;
607412     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607413     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
607414     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
607415     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
607416     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
607417     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
607418     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
607419     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
607420     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
607421     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607422     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
607423     ;
MPRINT(EM_DIAGRAM):   ;
607424     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607425     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
607426     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
607427     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
607428     connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
607429     *;
MPRINT(EM_DIAGRAM):   *;
607430     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
607431     *;
MPRINT(EM_DIAGRAM):   *;
607432     initial
607433     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
607434     ;
MPRINT(EM_DIAGRAM):   ;
607435     *;
MPRINT(EM_DIAGRAM):   *;
607436     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607437     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
607437   ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
607438     prelim 25 outest=_anpre pretime=34 preiter=25
MPRINT(EM_DIAGRAM):   prelim 25 outest=_anpre pretime=34 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 51 observations and 493 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 254
      variables.
MPRINT(EM_DIAGRAM):   *;
607439     tech = Default
607440     inest = EMWS8.AutoNeural10_ESTDS bylabel
607441     ;
607442     *;
607443     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607444     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
607444   ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=867
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 493 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
607445     train estiter=1 outest=_anest outfit=_anfit maxtime=867 maxiter=50
MPRINT(EM_DIAGRAM):   run;
607446     tech = Default;
607447     ;
607448     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           19.71 seconds
      cpu time            19.59 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 464.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           19.72 seconds
      cpu time            19.60 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607449     *;
607450     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
607451     var _iter_ _aic_ _averr_ _misc_
607452     _vaverr_ _vmisc_
607453     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607454     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 465.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607455     *------------------------------------------------------------*;
607456     * Extract best iteration;
607457     ;
607458     *------------------------------------------------------------*;
607459     %global _iter;
607460     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
607461     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
607462     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
607463     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
607464     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
607465     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
607466     end;
MPRINT(EM_DIAGRAM):   end;
607467     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607468     *;
 
607469     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
607470     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
607471     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
607472     output;
MPRINT(EM_DIAGRAM):   output;
607473     stop;
MPRINT(EM_DIAGRAM):   stop;
607474     end;
MPRINT(EM_DIAGRAM):   end;
607475     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607476     *;
607477     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607478     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
607479     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
607480     output;
MPRINT(EM_DIAGRAM):   output;
607481     stop;
MPRINT(EM_DIAGRAM):   stop;
607482     end;
MPRINT(EM_DIAGRAM):   end;
607483     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607484     *;
MPRINT(EM_DIAGRAM):    *;
607485     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607486     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
607486   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
607487     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
607488     var _iter_ _aic_ _averr_ _misc_
607489     _vaverr_ _vmisc_
607490     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607491     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 466.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607492     title9;
MPRINT(EM_DIAGRAM):   title9;
607493     title10;
MPRINT(EM_DIAGRAM):   title10;
607494     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607495     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607496     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607497     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607498     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607499     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607500     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607501     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607502     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
607503     ;
MPRINT(EM_DIAGRAM):   ;
607504     data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
607505     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
607506     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_0VY9DAJ has 1 observations and 493
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607507     data EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_BESTDS;
607508     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
607509     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_BESTDS has 1 observations and 493
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607510     data WORK.BFITDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_0VY9DAJ;
607511     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607512     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_0VY9DAJ has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607513     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
607514     ;
MPRINT(EM_DIAGRAM):   ;
607515     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607516     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607517     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
607518     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
607519     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
607520     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
607521     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
607522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607523     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
607524     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
607525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607526     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
607527     ;
MPRINT(EM_DIAGRAM):   ;
607528     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
607529     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
607530     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607531     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607532     set WORK.BFITDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_0VY9DAJ;
607533     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_0VY9DAJ.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
607534     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
607535     ;
MPRINT(EM_DIAGRAM):   ;
607536     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607537     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607538     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
607539     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
607540     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
607541     _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
607542     _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
607543     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607544     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
607545     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
607546     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607547     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607548     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607549     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607550     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607551     *;
MPRINT(EM_DIAGRAM):    *;
607552     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
607553     validdata=EMWS8.Meta_VALIDATE
607554     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
607555     *;
MPRINT(EM_DIAGRAM):   *;
607556     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
607557     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
607558     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
607559     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
607560     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
607561     target DepVar / level=NOMINAL id=DepVar
607562     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
607563     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607564     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
607565     ;
MPRINT(EM_DIAGRAM):   ;
607566     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607567     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
607568     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
607569     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
607570     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607571     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
607572     ;
MPRINT(EM_DIAGRAM):   ;
607573     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607574     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
607575     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
607576     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
607577     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
607578     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
607579     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
607580     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
607581     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
607582     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
607583     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
607584     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
607585     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
607586     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607587     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
607588     ;
MPRINT(EM_DIAGRAM):   ;
607589     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607590     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
607591     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
607592     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
607593     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
607594     Hidden 5 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=SOFTMAX;
607595     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
607596     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
607597     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
607598     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607599     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
607600     ;
MPRINT(EM_DIAGRAM):   ;
607601     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607602     Hidden 5 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=LOG;
607603     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
607604     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
607605     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
607606     *;
MPRINT(EM_DIAGRAM):   *;
607607     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
607608     *;
MPRINT(EM_DIAGRAM):   *;
607609     initial
607610     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
607611     ;
MPRINT(EM_DIAGRAM):   ;
607612     *;
MPRINT(EM_DIAGRAM):   *;
607613     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607614     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
607614   ! Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
607615     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 827 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
MPRINT(EM_DIAGRAM):   *;
607616     tech = Default
607617     inest = EMWS8.AutoNeural10_ESTDS bylabel
607618     ;
607619     *;
607620     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607621     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
607621   ! Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=862
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 827 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
607622     train estiter=1 outest=_anest outfit=_anfit maxtime=862 maxiter=50
MPRINT(EM_DIAGRAM):   run;
607623     tech = Default;
607624     ;
607625     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           47.67 seconds
      cpu time            47.17 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 467.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           47.68 seconds
      cpu time            47.17 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607626     *;
607627     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
607628     var _iter_ _aic_ _averr_ _misc_
607629     _vaverr_ _vmisc_
607630     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607631     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 468.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607632     *------------------------------------------------------------*;
607633     * Extract best iteration;
607634     ;
607635     *------------------------------------------------------------*;
607636     %global _iter;
607637     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
607638     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
607639     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
607640     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
607641     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
607642     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
607643     end;
MPRINT(EM_DIAGRAM):   end;
607644     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607645     *;
 
607646     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
607647     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
607648     if _ITER_ eq 12 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 then do;
607649     output;
MPRINT(EM_DIAGRAM):   output;
607650     stop;
MPRINT(EM_DIAGRAM):   stop;
607651     end;
MPRINT(EM_DIAGRAM):   end;
607652     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 827
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607653     *;
607654     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607655     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
607656     if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
607657     output;
MPRINT(EM_DIAGRAM):   output;
607658     stop;
MPRINT(EM_DIAGRAM):   stop;
607659     end;
MPRINT(EM_DIAGRAM):   end;
607660     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607661     *;
MPRINT(EM_DIAGRAM):    *;
607662     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607663     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
607663   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
607664     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
607665     var _iter_ _aic_ _averr_ _misc_
607666     _vaverr_ _vmisc_
607667     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 469.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607669     title9;
MPRINT(EM_DIAGRAM):   title9;
607670     title10;
MPRINT(EM_DIAGRAM):   title10;
607671     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607672     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607673     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607674     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607675     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607676     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607677     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607678     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607679     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
607680     ;
MPRINT(EM_DIAGRAM):   ;
607681     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607682     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607683     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
607684     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
607685     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
607686     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
607687     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
607688     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607689     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
607690     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
607691     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607692     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
607693     ;
MPRINT(EM_DIAGRAM):   ;
607694     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
607695     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
607696     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607697     *;
MPRINT(EM_DIAGRAM):    *;
607698     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
607699     validdata=EMWS8.Meta_VALIDATE
607700     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
607701     *;
MPRINT(EM_DIAGRAM):   *;
607702     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
607703     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
607704     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
607705     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
607706     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
607707     target DepVar / level=NOMINAL id=DepVar
607708     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
607709     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607710     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
607711     ;
MPRINT(EM_DIAGRAM):   ;
607712     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607713     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
607714     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
607715     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
607716     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607717     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
607718     ;
MPRINT(EM_DIAGRAM):   ;
607719     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607720     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
607721     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
607722     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
607723     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
607724     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
607725     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
607726     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
607727     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
607728     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
607729     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
607730     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
607731     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
607732     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607733     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
607734     ;
MPRINT(EM_DIAGRAM):   ;
607735     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607736     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
607737     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
607738     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
607739     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
607740     Hidden 5 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=SOFTMAX;
607741     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
607742     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
607743     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
607744     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607745     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
607746     ;
MPRINT(EM_DIAGRAM):   ;
607747     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607748     Hidden 5 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SINE;
607749     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
607750     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
607751     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
607752     *;
MPRINT(EM_DIAGRAM):   *;
607753     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
607754     *;
MPRINT(EM_DIAGRAM):   *;
607755     initial
607756     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
607757     ;
MPRINT(EM_DIAGRAM):   ;
607758     *;
MPRINT(EM_DIAGRAM):   *;
607759     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607760     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
607760   ! Search # 4 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
607761     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 827 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
MPRINT(EM_DIAGRAM):   *;
607762     tech = Default
607763     inest = EMWS8.AutoNeural10_ESTDS bylabel
607764     ;
607765     *;
607766     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607767     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
607767   ! Search # 4 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=850
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 827 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
607768     train estiter=1 outest=_anest outfit=_anfit maxtime=850 maxiter=50
MPRINT(EM_DIAGRAM):   run;
607769     tech = Default;
607770     ;
607771     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           48.20 seconds
      cpu time            47.37 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 470.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           48.21 seconds
      cpu time            47.37 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607772     *;
607773     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
607774     var _iter_ _aic_ _averr_ _misc_
607775     _vaverr_ _vmisc_
607776     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607777     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 471.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607778     *------------------------------------------------------------*;
607779     * Extract best iteration;
607780     ;
607781     *------------------------------------------------------------*;
607782     %global _iter;
607783     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
607784     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
607785     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
607786     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
607787     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
607788     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
607789     end;
MPRINT(EM_DIAGRAM):   end;
607790     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607791     *;
 
607792     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
607793     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
607794     if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
607795     output;
MPRINT(EM_DIAGRAM):   output;
607796     stop;
MPRINT(EM_DIAGRAM):   stop;
607797     end;
MPRINT(EM_DIAGRAM):   end;
607798     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 827
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607799     *;
607800     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607801     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
607802     if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
607803     output;
MPRINT(EM_DIAGRAM):   output;
607804     stop;
MPRINT(EM_DIAGRAM):   stop;
607805     end;
MPRINT(EM_DIAGRAM):   end;
607806     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607807     *;
MPRINT(EM_DIAGRAM):    *;
607808     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607809     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
607809   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
607810     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
607811     var _iter_ _aic_ _averr_ _misc_
607812     _vaverr_ _vmisc_
607813     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607814     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 472.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607815     title9;
MPRINT(EM_DIAGRAM):   title9;
607816     title10;
MPRINT(EM_DIAGRAM):   title10;
607817     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607818     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607819     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607820     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
607821     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607822     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607823     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607824     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607825     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
607826     ;
MPRINT(EM_DIAGRAM):   ;
607827     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607828     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607829     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
607830     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
607831     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
607832     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
607833     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
607834     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607835     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
607836     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
607837     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 17 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607838     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
607839     ;
MPRINT(EM_DIAGRAM):   ;
607840     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
607841     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
607842     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607843     *;
MPRINT(EM_DIAGRAM):    *;
607844     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
607845     validdata=EMWS8.Meta_VALIDATE
607846     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
607847     *;
MPRINT(EM_DIAGRAM):   *;
607848     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
607849     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
607850     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
607851     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
607852     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
607853     target DepVar / level=NOMINAL id=DepVar
607854     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
607855     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607856     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
607857     ;
MPRINT(EM_DIAGRAM):   ;
607858     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607859     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
607860     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
607861     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
607862     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607863     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
607864     ;
MPRINT(EM_DIAGRAM):   ;
607865     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607866     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
607867     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
607868     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
607869     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
607870     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
607871     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
607872     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
607873     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
The SAS System
 
607874     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
607875     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
607876     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
607877     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
607878     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607879     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
607880     ;
MPRINT(EM_DIAGRAM):   ;
607881     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607882     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
607883     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
607884     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
607885     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
607886     Hidden 5 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=SOFTMAX;
607887     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
607888     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
607889     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
607890     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607891     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
607892     ;
MPRINT(EM_DIAGRAM):   ;
607893     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607894     Hidden 5 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SOFTMAX;
607895     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
607896     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
607897     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
607898     *;
MPRINT(EM_DIAGRAM):   *;
607899     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
607900     *;
MPRINT(EM_DIAGRAM):   *;
607901     initial
607902     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
607903     ;
MPRINT(EM_DIAGRAM):   ;
607904     *;
MPRINT(EM_DIAGRAM):   *;
607905     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607906     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
607906   ! Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
607907     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 61 observations and 816 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 493
      variables.
MPRINT(EM_DIAGRAM):   *;
607908     tech = Default
607909     inest = EMWS8.AutoNeural10_ESTDS bylabel
607910     ;
607911     *;
607912     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607913     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
607913   ! Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=838
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 816 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
607914     train estiter=1 outest=_anest outfit=_anfit maxtime=838 maxiter=50
MPRINT(EM_DIAGRAM):   run;
607915     tech = Default;
607916     ;
607917     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           49.87 seconds
      cpu time            49.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 473.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           49.87 seconds
      cpu time            49.14 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607918     *;
607919     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
607920     var _iter_ _aic_ _averr_ _misc_
607921     _vaverr_ _vmisc_
607922     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607923     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 474.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
607924     *------------------------------------------------------------*;
607925     * Extract best iteration;
607926     ;
607927     *------------------------------------------------------------*;
607928     %global _iter;
607929     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
607930     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
607931     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
607932     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
607933     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
607934     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
607935     end;
MPRINT(EM_DIAGRAM):   end;
607936     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607937     *;
 
607938     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
607939     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
607940     if _ITER_ eq 8 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 then do;
607941     output;
MPRINT(EM_DIAGRAM):   output;
607942     stop;
MPRINT(EM_DIAGRAM):   stop;
607943     end;
MPRINT(EM_DIAGRAM):   end;
607944     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
607945     *;
607946     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607947     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
607948     if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 8 and _NAME_ eq "OVERALL" then do;
607949     output;
MPRINT(EM_DIAGRAM):   output;
607950     stop;
MPRINT(EM_DIAGRAM):   stop;
607951     end;
MPRINT(EM_DIAGRAM):   end;
607952     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607953     *;
MPRINT(EM_DIAGRAM):    *;
607954     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
607955     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
607955   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
607956     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
607957     var _iter_ _aic_ _averr_ _misc_
607958     _vaverr_ _vmisc_
607959     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
607960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 475.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607961     title9;
MPRINT(EM_DIAGRAM):   title9;
607962     title10;
MPRINT(EM_DIAGRAM):   title10;
607963     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607964     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607965     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607966     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607967     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
607968     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607969     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
607970     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607971     *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
607972     ;
MPRINT(EM_DIAGRAM):   ;
607973     data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_0VY9DAJ;
607974     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
607975     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_0VY9DAJ has 1 observations and 816
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607976     data EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_BESTDS;
607977     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
607978     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_BESTDS has 1 observations and 816
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
607979     data WORK.BFITDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_0VY9DAJ;
607980     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607981     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_0VY9DAJ has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607982     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
607983     ;
MPRINT(EM_DIAGRAM):   ;
607984     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
607985     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
607986     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
607987     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
607988     _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
607989     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
607990     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
607991     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607992     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
607993     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
607994     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 18 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
607995     *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
607996     ;
MPRINT(EM_DIAGRAM):   ;
607997     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
607998     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
607999     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608000     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608001     set WORK.BFITDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_0VY9DAJ;
608002     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_0VY9DAJ.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608003     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
608004     ;
MPRINT(EM_DIAGRAM):   ;
608005     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608006     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608007     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
608008     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
608009     _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
608010     _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
608011     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
608012     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608013     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
608014     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
608015     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 19 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608016     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
608017     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608018     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
608019     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
608020     *;
MPRINT(EM_DIAGRAM):    *;
608021     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
608022     validdata=EMWS8.Meta_VALIDATE
608023     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
608024     *;
MPRINT(EM_DIAGRAM):   *;
608025     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
608026     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
608027     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
608028     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
608029     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
608030     target DepVar / level=NOMINAL id=DepVar
608031     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
608032     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608033     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
608034     ;
MPRINT(EM_DIAGRAM):   ;
608035     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608036     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
608037     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
608038     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
608039     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608040     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
608041     ;
MPRINT(EM_DIAGRAM):   ;
608042     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608043     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
608044     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
608045     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
608046     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
608047     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
608048     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
608049     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
608050     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
608051     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
608052     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
608053     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
608054     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
608055     Hidden 5 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x4_ act=LOG;
608056     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
608057     connect binary H1x4_;
MPRINT(EM_DIAGRAM):   connect binary H1x4_;
608058     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
608059     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608060     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
608061     ;
MPRINT(EM_DIAGRAM):   ;
608062     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608063     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
608064     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
608065     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
608066     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
608067     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
608068     Hidden 5 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=SOFTMAX;
608069     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
608070     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
608071     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
608072     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
608073     Hidden 5 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x3_ act=SOFTMAX;
608074     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
608075     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
608076     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
608077     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
608078     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608079     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
608080     ;
MPRINT(EM_DIAGRAM):   ;
608081     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608082     Hidden 5 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SOFTMAX;
608083     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
608084     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
608085     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
608086     Hidden 5 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x2_ act=SOFTMAX;
608087     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
608088     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
608089     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
608090     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608091     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
608092     ;
MPRINT(EM_DIAGRAM):   ;
608093     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608094     Hidden 5 / id = H4x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H4x1_ act=LOG;
608095     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
608096     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
608097     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
608098     *;
MPRINT(EM_DIAGRAM):   *;
608099     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
608100     *;
MPRINT(EM_DIAGRAM):   *;
608101     initial
608102     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
608103     ;
MPRINT(EM_DIAGRAM):   ;
608104     *;
MPRINT(EM_DIAGRAM):   *;
608105     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608106     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
608106   ! Search # 5 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
608107     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1274 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
MPRINT(EM_DIAGRAM):   *;
608108     tech = Default
608109     inest = EMWS8.AutoNeural10_ESTDS bylabel
608110     ;
608111     *;
608112     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608113     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
608113   ! Search # 5 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=826
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1274 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
608114     train estiter=1 outest=_anest outfit=_anfit maxtime=826 maxiter=50
MPRINT(EM_DIAGRAM):   run;
608115     tech = Default;
608116     ;
608117     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1:16.37
      cpu time            1:15.55
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 476.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:16.38
      cpu time            1:15.55
 
 
MPRINT(EM_DIAGRAM):   *;
608118     *;
608119     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
608120     var _iter_ _aic_ _averr_ _misc_
608121     _vaverr_ _vmisc_
608122     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
608123     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 477.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608124     *------------------------------------------------------------*;
608125     * Extract best iteration;
608126     ;
608127     *------------------------------------------------------------*;
608128     %global _iter;
608129     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
608130     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
608131     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
608132     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
608133     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
608134     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
608135     end;
MPRINT(EM_DIAGRAM):   end;
608136     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
608137     *;
 
608138     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
608139     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
608140     if _ITER_ eq 23 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 23 then do;
608141     output;
MPRINT(EM_DIAGRAM):   output;
608142     stop;
MPRINT(EM_DIAGRAM):   stop;
608143     end;
MPRINT(EM_DIAGRAM):   end;
608144     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 1274
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
608145     *;
608146     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608147     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
608148     if _ITER_ eq 23 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 23 and _NAME_ eq "OVERALL" then do;
608149     output;
MPRINT(EM_DIAGRAM):   output;
608150     stop;
MPRINT(EM_DIAGRAM):   stop;
608151     end;
MPRINT(EM_DIAGRAM):   end;
608152     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
608153     *;
MPRINT(EM_DIAGRAM):    *;
608154     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608155     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
608155   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
608156     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
608157     var _iter_ _aic_ _averr_ _misc_
608158     _vaverr_ _vmisc_
608159     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
608160     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 478.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608161     title9;
MPRINT(EM_DIAGRAM):   title9;
608162     title10;
MPRINT(EM_DIAGRAM):   title10;
608163     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
608164     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608165     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
608166     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608167     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
608168     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608169     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
608170     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608171     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
608172     ;
MPRINT(EM_DIAGRAM):   ;
608173     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608174     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608175     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
608176     _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
608177     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
608178     _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
608179     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
608180     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608181     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
608182     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
608183     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 20 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608184     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
608185     ;
MPRINT(EM_DIAGRAM):   ;
608186     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
608187     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
608188     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608189     *;
MPRINT(EM_DIAGRAM):    *;
608190     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
608191     validdata=EMWS8.Meta_VALIDATE
608192     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
608193     *;
MPRINT(EM_DIAGRAM):   *;
608194     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
608195     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
608196     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
608197     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
608198     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
608199     target DepVar / level=NOMINAL id=DepVar
608200     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
608201     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608202     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
608203     ;
MPRINT(EM_DIAGRAM):   ;
608204     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608205     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
608206     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
608207     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
608208     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608209     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
608210     ;
MPRINT(EM_DIAGRAM):   ;
608211     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608212     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
608213     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
608214     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
608215     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
608216     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
608217     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
608218     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
608219     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
608220     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
608221     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
608222     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
608223     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
608224     Hidden 5 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x4_ act=LOG;
608225     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
608226     connect binary H1x4_;
MPRINT(EM_DIAGRAM):   connect binary H1x4_;
608227     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
608228     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608229     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
608230     ;
MPRINT(EM_DIAGRAM):   ;
608231     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608232     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
608233     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
608234     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
608235     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
608236     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
608237     Hidden 5 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=SOFTMAX;
608238     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
608239     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
608240     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
608241     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
608242     Hidden 5 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x3_ act=SOFTMAX;
608243     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
608244     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
608245     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
608246     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
608247     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608248     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
608249     ;
MPRINT(EM_DIAGRAM):   ;
608250     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608251     Hidden 5 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SOFTMAX;
608252     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
608253     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
608254     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
608255     Hidden 5 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x2_ act=SOFTMAX;
608256     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
608257     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
608258     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
608259     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608260     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
608261     ;
MPRINT(EM_DIAGRAM):   ;
608262     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608263     Hidden 5 / id = H4x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H4x1_ act=SINE;
608264     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
608265     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
608266     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
608267     *;
MPRINT(EM_DIAGRAM):   *;
608268     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
608269     *;
MPRINT(EM_DIAGRAM):   *;
608270     initial
608271     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
608272     ;
MPRINT(EM_DIAGRAM):   ;
608273     *;
MPRINT(EM_DIAGRAM):   *;
608274     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608275     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
608275   ! Search # 5 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
608276     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1274 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
MPRINT(EM_DIAGRAM):   *;
608277     tech = Default
608278     inest = EMWS8.AutoNeural10_ESTDS bylabel
608279     ;
608280     *;
608281     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608282     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
608282   ! Search # 5 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=807
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1274 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
608283     train estiter=1 outest=_anest outfit=_anfit maxtime=807 maxiter=50
MPRINT(EM_DIAGRAM):   run;
608284     tech = Default;
608285     ;
608286     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1:12.75
      cpu time            1:12.07
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 479.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:12.76
      cpu time            1:12.08
 
 
MPRINT(EM_DIAGRAM):   *;
608287     *;
608288     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
608289     var _iter_ _aic_ _averr_ _misc_
608290     _vaverr_ _vmisc_
608291     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
608292     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 480.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608293     *------------------------------------------------------------*;
608294     * Extract best iteration;
608295     ;
608296     *------------------------------------------------------------*;
608297     %global _iter;
608298     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
608299     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
608300     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
608301     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
608302     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
608303     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
608304     end;
MPRINT(EM_DIAGRAM):   end;
608305     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
608306     *;
 
608307     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
608308     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
608309     if _ITER_ eq 7 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 then do;
608310     output;
MPRINT(EM_DIAGRAM):   output;
608311     stop;
MPRINT(EM_DIAGRAM):   stop;
608312     end;
MPRINT(EM_DIAGRAM):   end;
608313     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 1274
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
608314     *;
608315     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608316     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
608317     if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
608318     output;
MPRINT(EM_DIAGRAM):   output;
608319     stop;
MPRINT(EM_DIAGRAM):   stop;
608320     end;
MPRINT(EM_DIAGRAM):   end;
608321     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608322     *;
MPRINT(EM_DIAGRAM):    *;
608323     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608324     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
608324   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
608325     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
608326     var _iter_ _aic_ _averr_ _misc_
608327     _vaverr_ _vmisc_
608328     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
608329     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 481.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608330     title9;
MPRINT(EM_DIAGRAM):   title9;
608331     title10;
MPRINT(EM_DIAGRAM):   title10;
608332     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
608333     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608334     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
608335     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608336     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
608337     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608338     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
608339     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
608340     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
608341     ;
MPRINT(EM_DIAGRAM):   ;
608342     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608343     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608344     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
608345     _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
608346     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
608347     _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
608348     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
608349     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608350     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
608351     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
608352     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 21 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608353     * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
608354     ;
MPRINT(EM_DIAGRAM):   ;
608355     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_ESTDS;
608356     set EMWS8.AutoNeural10_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_BESTDS;
608357     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608358     *;
MPRINT(EM_DIAGRAM):    *;
608359     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
608360     validdata=EMWS8.Meta_VALIDATE
608361     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
608362     *;
MPRINT(EM_DIAGRAM):   *;
608363     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
608364     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
608365     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
608366     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
608367     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
608368     target DepVar / level=NOMINAL id=DepVar
608369     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
608370     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608371     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
608372     ;
MPRINT(EM_DIAGRAM):   ;
608373     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608374     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
608375     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
608376     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
608377     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608378     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
608379     ;
MPRINT(EM_DIAGRAM):   ;
608380     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608381     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
608382     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
608383     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
608384     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
608385     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
608386     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
608387     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
608388     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
608389     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
608390     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
608391     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
608392     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
608393     Hidden 5 / id = H1x4_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x4_ act=LOG;
608394     connect interval H1x4_;
MPRINT(EM_DIAGRAM):   connect interval H1x4_;
608395     connect binary H1x4_;
MPRINT(EM_DIAGRAM):   connect binary H1x4_;
608396     connect nominal H1x4_;
MPRINT(EM_DIAGRAM):   connect nominal H1x4_;
608397     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608398     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
608399     ;
MPRINT(EM_DIAGRAM):   ;
608400     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608401     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
608402     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
608403     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
608404     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
608405     connect H1x4_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x1_;
608406     Hidden 5 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=SOFTMAX;
608407     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
608408     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
608409     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
608410     connect H1x4_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x2_;
608411     Hidden 5 / id = H2x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x3_ act=SOFTMAX;
608412     connect H1x1_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x3_;
608413     connect H1x2_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x3_;
608414     connect H1x3_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x3_;
608415     connect H1x4_ H2x3_;
MPRINT(EM_DIAGRAM):   connect H1x4_ H2x3_;
608416     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608417     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
608418     ;
MPRINT(EM_DIAGRAM):   ;
608419     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608420     Hidden 5 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SOFTMAX;
608421     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
608422     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
608423     connect H2x3_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x1_;
608424     Hidden 5 / id = H3x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x2_ act=SOFTMAX;
608425     connect H2x1_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x2_;
608426     connect H2x2_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x2_;
608427     connect H2x3_ H3x2_;
MPRINT(EM_DIAGRAM):   connect H2x3_ H3x2_;
608428     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608429     * Layer #4;
MPRINT(EM_DIAGRAM):   * Layer #4;
608430     ;
MPRINT(EM_DIAGRAM):   ;
608431     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608432     Hidden 5 / id = H4x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H4x1_ act=SOFTMAX;
608433     connect H3x1_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x1_ H4x1_;
608434     connect H3x2_ H4x1_;
MPRINT(EM_DIAGRAM):   connect H3x2_ H4x1_;
608435     connect H4x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H4x1_ DepVar;
608436     *;
MPRINT(EM_DIAGRAM):   *;
608437     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
608438     *;
MPRINT(EM_DIAGRAM):   *;
608439     initial
608440     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
608441     ;
MPRINT(EM_DIAGRAM):   ;
608442     *;
MPRINT(EM_DIAGRAM):   *;
608443     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608444     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
608444   ! Search # 5 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
608445     prelim 32 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 32 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 65 observations and 1263 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
MPRINT(EM_DIAGRAM):   *;
608446     tech = Default
608447     inest = EMWS8.AutoNeural10_ESTDS bylabel
608448     ;
608449     *;
608450     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608451     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
608451   ! Search # 5 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 5 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=788
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1263 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
608452     train estiter=1 outest=_anest outfit=_anfit maxtime=788 maxiter=50
MPRINT(EM_DIAGRAM):   run;
608453     tech = Default;
608454     ;
608455     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1:15.16
      cpu time            1:14.44
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 482.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:15.17
      cpu time            1:14.44
 
 
MPRINT(EM_DIAGRAM):   *;
608456     *;
608457     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
608458     var _iter_ _aic_ _averr_ _misc_
608459     _vaverr_ _vmisc_
608460     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
608461     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 483.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608462     *------------------------------------------------------------*;
608463     * Extract best iteration;
608464     ;
608465     *------------------------------------------------------------*;
608466     %global _iter;
608467     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
608468     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
608469     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
608470     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
608471     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
608472     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
608473     end;
MPRINT(EM_DIAGRAM):   end;
608474     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
608475     *;
 
608476     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
608477     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
608478     if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
608479     output;
MPRINT(EM_DIAGRAM):   output;
608480     stop;
MPRINT(EM_DIAGRAM):   stop;
608481     end;
MPRINT(EM_DIAGRAM):   end;
608482     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 1263
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
608483     *;
608484     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608485     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
608486     if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
608487     output;
MPRINT(EM_DIAGRAM):   output;
608488     stop;
MPRINT(EM_DIAGRAM):   stop;
608489     end;
MPRINT(EM_DIAGRAM):   end;
608490     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
608491     *;
MPRINT(EM_DIAGRAM):    *;
608492     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608493     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
608493   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
608494     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
608495     var _iter_ _aic_ _averr_ _misc_
608496     _vaverr_ _vmisc_
608497     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
608498     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 484.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608499     title9;
MPRINT(EM_DIAGRAM):   title9;
608500     title10;
MPRINT(EM_DIAGRAM):   title10;
608501     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
608502     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608503     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
608504     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608505     data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
608506     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608507     if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
608508     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
608509     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
608510     ;
MPRINT(EM_DIAGRAM):   ;
608511     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608512     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608513     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
608514     _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
608515     _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
608516     _step_ = "FUNNEL LAYERS 5";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 5";
608517     _index_ = 5;
MPRINT(EM_DIAGRAM):   _index_ = 5;
608518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608519     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
608520     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
608521     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 22 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608522     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
608523     set WORK.SAVEDS_AUTONEUR_0VY9DAJ;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_0VY9DAJ;
608524     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_0VY9DAJ.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
608525     *;
MPRINT(EM_DIAGRAM):    *;
608526     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
608527     validdata=EMWS8.Meta_VALIDATE
608528     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
608529     *;
MPRINT(EM_DIAGRAM):   *;
608530     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
608531     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
608532     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
608533     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
608534     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
608535     target DepVar / level=NOMINAL id=DepVar
608536     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
608537     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608538     * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
608539     ;
MPRINT(EM_DIAGRAM):   ;
608540     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608541     connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
608542     connect binary DepVar;
MPRINT(EM_DIAGRAM):   connect binary DepVar;
608543     connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
608544     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608545     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
608546     ;
MPRINT(EM_DIAGRAM):   ;
608547     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608548     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
608549     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
608550     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
608551     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
608552     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
608553     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
608554     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
608555     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
608556     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
608557     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
608558     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
608559     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
608560     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608561     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
608562     ;
MPRINT(EM_DIAGRAM):   ;
608563     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608564     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
608565     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
608566     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
608567     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
608568     Hidden 5 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=SOFTMAX;
608569     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
608570     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
608571     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
608572     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608573     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
608574     ;
MPRINT(EM_DIAGRAM):   ;
608575     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608576     Hidden 5 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SOFTMAX;
608577     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
608578     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
608579     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
608580     *;
MPRINT(EM_DIAGRAM):   *;
608581     netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
608582     *;
MPRINT(EM_DIAGRAM):   *;
608583     initial
608584     inest = EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
608585     ;
MPRINT(EM_DIAGRAM):   ;
608586     *;
MPRINT(EM_DIAGRAM):   *;
608587     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608588     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
608588   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
608589     prelim 30 outest=_anpre pretime=30 preiter=25
MPRINT(EM_DIAGRAM):   prelim 30 outest=_anpre pretime=30 preiter=25 tech =
Default inest = EMWS8.AutoNeural10_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 816 variables.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
MPRINT(EM_DIAGRAM):   *;
608590     tech = Default
608591     inest = EMWS8.AutoNeural10_ESTDS bylabel
608592     ;
608593     *;
608594     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608595     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
608595   ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=769
maxiter=5 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 816 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
608596     train estiter=1 outest=_anest outfit=_anfit maxtime=769 maxiter=5
MPRINT(EM_DIAGRAM):   run;
608597     tech = Default;
608598     ;
608599     run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           1.99 seconds
      cpu time            1.99 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 485.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.00 seconds
      cpu time            2.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
608600     *;
608601     proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
608602     var _iter_ _aic_ _averr_ _misc_
608603     _vaverr_ _vmisc_
608604     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
608605     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 486.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608606     *------------------------------------------------------------*;
608607     * Extract best iteration;
608608     ;
608609     *------------------------------------------------------------*;
608610     %global _iter;
608611     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
608612     set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
608613     retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
608614     if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
608615     _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
608616     call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
608617     end;
MPRINT(EM_DIAGRAM):   end;
608618     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
608619     *;
 
608620     data EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_ESTDS;
608621     set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
608622     if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
608623     output;
MPRINT(EM_DIAGRAM):   output;
608624     stop;
MPRINT(EM_DIAGRAM):   stop;
608625     end;
MPRINT(EM_DIAGRAM):   end;
608626     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
608627     *;
608628     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608629     set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
608630     if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
608631     output;
MPRINT(EM_DIAGRAM):   output;
608632     stop;
MPRINT(EM_DIAGRAM):   stop;
608633     end;
MPRINT(EM_DIAGRAM):   end;
608634     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608635     *;
MPRINT(EM_DIAGRAM):    *;
608636     title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
608637     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
608637   ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
608638     proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_OUTFIT noobs;
608639     var _iter_ _aic_ _averr_ _misc_
608640     _vaverr_ _vmisc_
608641     ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
608642     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 487.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608643     title9;
MPRINT(EM_DIAGRAM):   title9;
608644     title10;
MPRINT(EM_DIAGRAM):   title10;
608645     * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
608646     ;
MPRINT(EM_DIAGRAM):   ;
608647     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608648     set EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT;
608649     length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
608650     _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
608651     _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
608652     _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
608653     _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
608654     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608655     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_HISTORY;
608656     set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY EMWS8.AutoNeural10_OUTFIT;
608657     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 22 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL10_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 23 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608658     title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
608659     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
608659   ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
608660     proc print data=EMWS8.AutoNeural10_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_HISTORY noobs;
608661     var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
608662     _vaverr_ _vmisc_
608663     ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
608664     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: The PROCEDURE PRINT printed page 488.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608665     data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
608666     set EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY;
608667     if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
608668     if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
608669     else neurons=5;
MPRINT(EM_DIAGRAM):   else neurons=5;
608670     label neurons="%sysfunc(sasmsg(sashelp.dmine,
608670   ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
608671     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set
      EMWS8.AUTONEURAL10_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 4 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608672     title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
608673     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
608673   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
608674     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
608674   ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
608674   ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
608675     proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
608676     var _func_ _averr_
608677     _vaverr_
608678     neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
608679     sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
608680     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 489.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608681     title8;
MPRINT(EM_DIAGRAM):   title8;
608682     title9;
MPRINT(EM_DIAGRAM):   title9;
608683     title10;
MPRINT(EM_DIAGRAM):   title10;
608684     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608685     * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
608686     ;
MPRINT(EM_DIAGRAM):   ;
608687     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608688     *;
MPRINT(EM_DIAGRAM):   *;
608689     proc neural data=EM_AutoNeural10 dmdbcat=WORK.AutoNeural10_DMDB
608690     validdata=EMWS8.Meta_VALIDATE
608691     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural10
dmdbcat=WORK.AutoNeural10_DMDB validdata=EMWS8.Meta_VALIDATE ;
608692     *;
MPRINT(EM_DIAGRAM):   *;
608693     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
608694     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
608695     input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   AcceptedCmpTotal Age Frq Income Kidhome Mnt
MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases
NumDistPurchases NumStorePurchases NumWebPurchases NumWebVisitsMonth RFMstat
RMntFrq Recency Teenhome
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
608696     input %BININPUTS / level=nominal id=binary;
MPRINT(BININPUTS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4
AcceptedCmp5 Complain HigherEducationBinary
MPRINT(EM_DIAGRAM):   / level=nominal id=binary;
MPRINT(EM_DIAGRAM):   input
608697     input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   Education Marital_Status
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
608698     target DepVar / level=NOMINAL id=DepVar
608699     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
608700     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608701     * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
608702     ;
MPRINT(EM_DIAGRAM):   ;
608703     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608704     Hidden 5 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x1_ act=LOG;
608705     connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
608706     connect binary H1x1_;
MPRINT(EM_DIAGRAM):   connect binary H1x1_;
608707     connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
608708     Hidden 5 / id = H1x2_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x2_ act=LOG;
608709     connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
608710     connect binary H1x2_;
MPRINT(EM_DIAGRAM):   connect binary H1x2_;
608711     connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
608712     Hidden 5 / id = H1x3_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H1x3_ act=LOG;
608713     connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
608714     connect binary H1x3_;
MPRINT(EM_DIAGRAM):   connect binary H1x3_;
608715     connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
608716     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608717     * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
608718     ;
MPRINT(EM_DIAGRAM):   ;
608719     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608720     Hidden 5 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x1_ act=SOFTMAX;
608721     connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
608722     connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
608723     connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
608724     Hidden 5 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H2x2_ act=SOFTMAX;
608725     connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
608726     connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
608727     connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
608728     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608729     * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
608730     ;
MPRINT(EM_DIAGRAM):   ;
608731     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608732     Hidden 5 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 5 / id = H3x1_ act=SOFTMAX;
608733     connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
608734     connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
608735     connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
608736     *;
MPRINT(EM_DIAGRAM):   *;
608737     initial inest= EMWS8.AutoNeural10_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural10_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL10_ESTDS has 1 observations and 816
      variables.
608738     train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
608739     code
608739   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\SCO
608739   ! RECODE.sas"
608740     group=AutoNeural10
608741     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\SCORECODE.sas"
 group=AutoNeural10 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\SCORECODE.sas
      opened.
608742     ;
MPRINT(EM_DIAGRAM):   ;
608743     code
608743   ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\RES
608743   ! IDUALSCORECODE.sas"
608744     group=AutoNeural10
608745     residual
608746     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\RESIDUALSCOREC
ODE.sas" group=AutoNeural10 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\RESIDUALSCOREC
      ODE.sas opened.
608747     ;
MPRINT(EM_DIAGRAM):   ;
608748     score data=EMWS8.Meta_TRAIN out=_NULL_
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
608749     outfit=WORK.FIT1
608750     role=TRAIN
608751     outkey=EMWS8.AutoNeural10_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_TRAIN out=_NULL_ outfit=WORK.FIT1
role=TRAIN outkey=EMWS8.AutoNeural10_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL10_OUTKEY has 80 observations and 8
      variables.
NOTE: The data set EMWS8.META_TRAIN has . observations and 45 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
608752     score data=EMWS8.Meta_VALIDATE out=_NULL_
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
608753     outfit=WORK.FIT2
608754     outkey=EMWS8.AutoNeural10_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural10_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL10_OUTKEY has 80 observations and 8
      variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
608755     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL10 has 2374 observations and 33 variables.
NOTE: The data set EMWS8.META_VALIDATE has . observations and 45 variables.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.27 seconds
      cpu time            0.26 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
 
608756     data EMWS8.AutoNeural10_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_OUTFIT;
608757     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
608758     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608759     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608760     * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
608761     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
608762     data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
608762   ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
608763     set EMWS8.AutoNeural10_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_ESTDS;
608764     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 808 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
608765     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
608766     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
608767     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 808 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
608768     proc transpose data=tempweight out=EMWS8.AutoNeural10_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural10_WEIGHTS;
608769     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
608770     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL10_WEIGHTS has 806 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
608771     data EMWS8.AutoNeural10_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_WEIGHTS;
608772     set EMWS8.AutoNeural10_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_WEIGHTS;
608773     FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
608774     TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
608775     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
608776     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
608777     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
608777   ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
608777   ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
608777   ! NOQUOTE))" WEIGHT =
608778        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
608779     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
608780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 806 observations read from the data set
      EMWS8.AUTONEURAL10_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL10_WEIGHTS has 801 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
608781     * restore printing options;
608782     ;
608783     title10;
MPRINT(EM_DIAGRAM):   title10;
608784     options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
608785     options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
608786     options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
608787     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
608788     options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
608789     *;
608790     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
608791     delete EM_AutoNeural10;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural10;
608792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL10 (memtype=DATA).
608793     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
608794     data EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_HISTORY;
608795     set EMWS8.AutoNeural10_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_HISTORY;
608796     label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
608797     label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
608797   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
608798     _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
608799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS8.AUTONEURAL10_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL10_HISTORY has 23 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3ONFJN_
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3ONFJN_ new;
MPRINT(EM_DIAGRAM):   run;
608901     filename emflow
608901   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
608902     *------------------------------------------------------------*;
608903     * AutoNeural10: Scoring DATA data;
608904     *------------------------------------------------------------*;
608905     data EMWS8.AutoNeural10_TRAIN
608906     / view=EMWS8.AutoNeural10_TRAIN
608907     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_TRAIN / view=EMWS8.AutoNeural10_TRAIN ;
608908     set EMWS8.Meta_TRAIN
608909     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
608910     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
608911    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
608912    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
608913    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
608914    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
608915    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
608916    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
608917    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
608918    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
608919    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
608920    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
608921    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
608922    +LENGTH _WARN_ $4
608923    +      F_DepVar  $ 12
608924    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
608925    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
608926    +
608927    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
608928    +
608929    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
608930    +
608931    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
608932    +
608933    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
608934    +
608935    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
608936    +
608937    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
608938    +
608939    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
608940    +
608941    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
608942    +
608943    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
608944    +
608945    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
608946    +
608947    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
608948    +
608949    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
608950    +
608951    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
608952    +
608953    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
608954    +
608955    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
608956    +
608957    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
608958    +
608959    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
608960    +
608961    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
608962    +
608963    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
608964    +
608965    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
608966    +
608967    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
608968    +
608969    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
608970    +
608971    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
608972    +
608973    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
608974    +
608975    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
608976    +
608977    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
608978    +
608979    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
608980    +
608981    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
608982    +
608983    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
608984    +
608985    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
608986    +
608987    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
608988    +
608989    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
608990    +
608991    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
608992    +
608993    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
608994    +
608995    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
608996    +
608997    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
608998    +
608999    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
609000    +
609001    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
609002    +
609003    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
609004    +
609005    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
609006    +
609007    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
609008    +
609009    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
609010    +
609011    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
609012    +
609013    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
609014    +
609015    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
609016    +
609017    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
609018    +
609019    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
609020    +
609021    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
609022    +
609023    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
609024    +
609025    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
609026    +
609027    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
609028    +
609029    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
609030    +
609031    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
609032    +
609033    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
609034    +
609035    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
609036    +
609037    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
609038    +
609039    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
609040    +
609041    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
609042    +
609043    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
609044    +
609045    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
609046    +
609047    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
609048    +
609049    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
609050    +
609051    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
609052    +
609053    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
609054    +
609055    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
609056    +
609057    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
609058    +
609059    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
609060    +
609061    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
609062    +
609063    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
609064    +
609065    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
609066    +
609067    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
609068    +
609069    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
609070    +
609071    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
609072    +
609073    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
609074    +
609075    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
609076    +
609077    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
609078    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
609079    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
609080    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
609081    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609082    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609083    +end;
MPRINT(EM_DIAGRAM):   end;
609084    +else do;
MPRINT(EM_DIAGRAM):   else do;
609085    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609086    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
609087    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609088    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609089    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
609090    +   end;
MPRINT(EM_DIAGRAM):   end;
609091    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609092    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
609093    +   end;
MPRINT(EM_DIAGRAM):   end;
609094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609095    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
609096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609098    +   end;
MPRINT(EM_DIAGRAM):   end;
609099    +end;
MPRINT(EM_DIAGRAM):   end;
609100    +
609101    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
609102    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
609103    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
609104    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
609105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609107    +end;
MPRINT(EM_DIAGRAM):   end;
609108    +else do;
MPRINT(EM_DIAGRAM):   else do;
609109    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609110    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
609111    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609112    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609113    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
609114    +   end;
MPRINT(EM_DIAGRAM):   end;
609115    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609116    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
609117    +   end;
MPRINT(EM_DIAGRAM):   end;
609118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609119    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
609120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609122    +   end;
MPRINT(EM_DIAGRAM):   end;
609123    +end;
MPRINT(EM_DIAGRAM):   end;
609124    +
609125    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
609126    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
609127    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
609128    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
609129    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609130    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609131    +end;
MPRINT(EM_DIAGRAM):   end;
609132    +else do;
MPRINT(EM_DIAGRAM):   else do;
609133    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609134    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
609135    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609136    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609137    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
609138    +   end;
MPRINT(EM_DIAGRAM):   end;
609139    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609140    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
609141    +   end;
MPRINT(EM_DIAGRAM):   end;
609142    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609143    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
609144    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609145    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609146    +   end;
MPRINT(EM_DIAGRAM):   end;
609147    +end;
MPRINT(EM_DIAGRAM):   end;
609148    +
609149    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
609150    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
609151    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
609152    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
609153    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609154    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609155    +end;
MPRINT(EM_DIAGRAM):   end;
609156    +else do;
MPRINT(EM_DIAGRAM):   else do;
609157    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609158    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
609159    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609160    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609161    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
609162    +   end;
MPRINT(EM_DIAGRAM):   end;
609163    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609164    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
609165    +   end;
MPRINT(EM_DIAGRAM):   end;
609166    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609167    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
609168    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609169    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609170    +   end;
MPRINT(EM_DIAGRAM):   end;
609171    +end;
MPRINT(EM_DIAGRAM):   end;
609172    +
609173    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
609174    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
609175    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
609176    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
609177    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609178    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609179    +end;
MPRINT(EM_DIAGRAM):   end;
609180    +else do;
MPRINT(EM_DIAGRAM):   else do;
609181    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609182    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
609183    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609184    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609185    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
609186    +   end;
MPRINT(EM_DIAGRAM):   end;
609187    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609188    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
609189    +   end;
MPRINT(EM_DIAGRAM):   end;
609190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609191    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
609192    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609193    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609194    +   end;
MPRINT(EM_DIAGRAM):   end;
609195    +end;
MPRINT(EM_DIAGRAM):   end;
609196    +
609197    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
609198    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
609199    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
609200    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
609201    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609202    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609203    +end;
MPRINT(EM_DIAGRAM):   end;
609204    +else do;
MPRINT(EM_DIAGRAM):   else do;
609205    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609206    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
609207    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609208    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
609209    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
609210    +   end;
MPRINT(EM_DIAGRAM):   end;
609211    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
609212    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
609213    +   end;
MPRINT(EM_DIAGRAM):   end;
609214    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609215    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
609216    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609217    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609218    +   end;
MPRINT(EM_DIAGRAM):   end;
609219    +end;
MPRINT(EM_DIAGRAM):   end;
609220    +
609221    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
609222    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
609223    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
609224    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
609225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609227    +end;
MPRINT(EM_DIAGRAM):   end;
609228    +else do;
MPRINT(EM_DIAGRAM):   else do;
609229    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
609230    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
609231    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609232    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
609233    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
609234    +   end;
MPRINT(EM_DIAGRAM):   end;
609235    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
609236    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
609237    +   end;
MPRINT(EM_DIAGRAM):   end;
609238    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609239    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
609240    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609241    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609242    +   end;
MPRINT(EM_DIAGRAM):   end;
609243    +end;
MPRINT(EM_DIAGRAM):   end;
609244    +
609245    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
609246    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
609247    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
609248    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
609249    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
609250    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
609251    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
609252    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
609253    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
609254    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
609255    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
609256    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
609257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609259    +end;
MPRINT(EM_DIAGRAM):   end;
609260    +else do;
MPRINT(EM_DIAGRAM):   else do;
609261    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
609262    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
609263    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609264    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
609265    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
609266    +   end;
MPRINT(EM_DIAGRAM):   end;
609267    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
609268    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
609269    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
609270    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
609271    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
609272    +   end;
MPRINT(EM_DIAGRAM):   end;
609273    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
609274    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
609275    +   end;
MPRINT(EM_DIAGRAM):   end;
609276    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
609277    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
609278    +   end;
MPRINT(EM_DIAGRAM):   end;
609279    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
609280    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
609281    +   end;
MPRINT(EM_DIAGRAM):   end;
609282    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609283    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
609284    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
609285    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
609286    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
609287    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609288    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609289    +   end;
MPRINT(EM_DIAGRAM):   end;
609290    +end;
MPRINT(EM_DIAGRAM):   end;
609291    +
609292    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
609293    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
609294    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
609295    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
609296    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
609297    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
609298    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
609299    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
609300    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
609301    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
609302    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
609303    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
609304    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
609305    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
609306    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609307    +end;
MPRINT(EM_DIAGRAM):   end;
609308    +else do;
MPRINT(EM_DIAGRAM):   else do;
609309    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
609310    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
609311    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
609312    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
609313    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
609314    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
609315    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
609316    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
609317    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609318    +         end;
MPRINT(EM_DIAGRAM):   end;
609319    +         else do;
MPRINT(EM_DIAGRAM):   else do;
609320    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
609321    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
609322    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609323    +            end;
MPRINT(EM_DIAGRAM):   end;
609324    +         end;
MPRINT(EM_DIAGRAM):   end;
609325    +      end;
MPRINT(EM_DIAGRAM):   end;
609326    +      else do;
MPRINT(EM_DIAGRAM):   else do;
609327    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
609328    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
609329    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609330    +         end;
MPRINT(EM_DIAGRAM):   end;
609331    +      end;
MPRINT(EM_DIAGRAM):   end;
609332    +   end;
MPRINT(EM_DIAGRAM):   end;
609333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
609334    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
609335    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
609336    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609337    +      end;
MPRINT(EM_DIAGRAM):   end;
609338    +      else do;
MPRINT(EM_DIAGRAM):   else do;
609339    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
609340    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
609341    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
609342    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
609343    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
609344    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
609345    +         end;
MPRINT(EM_DIAGRAM):   end;
609346    +      end;
MPRINT(EM_DIAGRAM):   end;
609347    +   end;
MPRINT(EM_DIAGRAM):   end;
609348    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
609349    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
609350    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
609351    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
609352    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
609353    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
609354    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609355    +   end;
MPRINT(EM_DIAGRAM):   end;
609356    +end;
MPRINT(EM_DIAGRAM):   end;
609357    +
609358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609359    +*** Checking missing input Interval
609360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
609361    +
609362    +IF NMISS(
609363    +   AcceptedCmpTotal ,
609364    +   Age ,
609365    +   Frq ,
609366    +   Income ,
609367    +   Kidhome ,
609368    +   Mnt ,
609369    +   MntFishProducts ,
609370    +   MntFruits ,
609371    +   MntGoldProds ,
609372    +   MntMeatProducts ,
609373    +   MntSweetProducts ,
609374    +   MntWines ,
609375    +   MonthsAsCustomer ,
609376    +   NumCatalogPurchases ,
609377    +   NumDealsPurchases ,
609378    +   NumDistPurchases ,
609379    +   NumStorePurchases ,
609380    +   NumWebPurchases ,
609381    +   NumWebVisitsMonth ,
609382    +   RFMstat ,
609383    +   RMntFrq ,
609384    +   Recency ,
609385    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
609386    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
609387    +
609388    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
609389    +END;
MPRINT(EM_DIAGRAM):   END;
609390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609391    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
609392    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609393    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609394    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
609395    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
609396    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
609397    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
609398    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
609399    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
609400    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
609401    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
609402    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
609403    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
609404    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
609405    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
609406    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
609407    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
609408    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
609409    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
609410    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
609411    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
609412    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
609413    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
609414    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
609415    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
609416    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
609417    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
609418    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
609419    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
609420    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
609421    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
609422    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
609423    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
609424    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
609425    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
609426    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
609427    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
609428    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
609429    +END;
MPRINT(EM_DIAGRAM):   END;
609430    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609431    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
609432    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
609433    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
609434    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
609435    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
609436    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
609437    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
609438    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
609439    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
609440    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
609441    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
609442    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
609443    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
609444    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
609445    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
609446    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
609447    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
609448    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
609449    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
609450    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
609451    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
609452    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
609453    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
609454    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
609455    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
609456    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
609457    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
609458    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
609459    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
609460    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
609461    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
609462    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
609463    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
609464    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
609465    +   ELSE S_NumCatalogPurchases
609466    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
609467    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
609468    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
609469    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
609470    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
609471    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
609472    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
609473    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
609474    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
609475    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
609476    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
609477    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
609478    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
609479    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
609480    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
609481    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
609482    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
609483    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
609484    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
609485    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
609486    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
609487    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
609488    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
609489    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
609490    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
609491    +END;
MPRINT(EM_DIAGRAM):   END;
609492    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609493    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
609494    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609495    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609496    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
609497    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609499    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
609500    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609501    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609502    +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
609503    +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
609504    +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
609505    +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
609506    +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
609507    +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
609508    +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
609509    +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
609510    +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
609511    +          +     3.45371614080196 * S_NumDealsPurchases
609512    +          +     0.19118374544537 * S_NumDistPurchases
609513    +          +    -2.45138001446793 * S_NumStorePurchases
609514    +          +    -0.11424280244155 * S_NumWebPurchases
609515    +          +    -2.31770357716565 * S_NumWebVisitsMonth
609516    +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
609517    +        S_RMntFrq  +     0.26870809438679 * S_Recency
609518    +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
609519    +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
609520    +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
609521    +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
609522    +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
609523    +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
609524    +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
609525    +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
609526    +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
609527    +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
609528    +          +    -1.28390925647659 * S_NumDealsPurchases
609529    +          +     0.82669177239926 * S_NumDistPurchases
609530    +          +     1.71678585204511 * S_NumStorePurchases
609531    +          +     1.49226295608046 * S_NumWebPurchases
609532    +          +     -4.0105103018388 * S_NumWebVisitsMonth
609533    +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
609534    +        S_RMntFrq  +     4.74241121363086 * S_Recency
609535    +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
609536    +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
609537    +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
609538    +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
609539    +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
609540    +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
609541    +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
609542    +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
609543    +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
609544    +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
609545    +          +     0.22958626391725 * S_NumDealsPurchases
609546    +          +    -0.02046515813996 * S_NumDistPurchases
609547    +          +      0.8618502050837 * S_NumStorePurchases
609548    +          +     1.45175370326009 * S_NumWebPurchases
609549    +          +    -0.86122442436156 * S_NumWebVisitsMonth
609550    +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
609551    +        S_RMntFrq  +    -0.08202178452839 * S_Recency
609552    +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
609553    +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
609554    +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
609555    +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
609556    +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
609557    +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
609558    +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
609559    +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
609560    +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
609561    +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
609562    +          +     1.25310034610344 * S_NumDealsPurchases
609563    +          +     0.92141098602176 * S_NumDistPurchases
609564    +          +    -0.08806509391473 * S_NumStorePurchases
609565    +          +     -1.0533787624668 * S_NumWebPurchases
609566    +          +     3.07050739830585 * S_NumWebVisitsMonth
609567    +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
609568    +        S_RMntFrq  +     -3.8741602707981 * S_Recency
609569    +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
609570    +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
609571    +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
609572    +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
609573    +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
609574    +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
609575    +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
609576    +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
609577    +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
609578    +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
609579    +          +    -1.68259553608287 * S_NumDealsPurchases
609580    +          +    -0.53835572290445 * S_NumDistPurchases
609581    +          +     1.25833922835446 * S_NumStorePurchases
609582    +          +     0.48300830623998 * S_NumWebPurchases
609583    +          +    -2.20119275236582 * S_NumWebVisitsMonth
609584    +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
609585    +        S_RMntFrq  +     0.35692712879409 * S_Recency
609586    +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
609587    +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
609588    +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
609589    +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
609590    +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
609591    +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
609592    +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
609593    +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
609594    +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
609595    +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
609596    +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
609597    +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
609598    +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
609599    +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
609600    +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
609601    +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
609602    +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
609603    +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
609604    +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
609605    +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
609606    +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
609607    +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
609608    +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
609609    +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
609610    +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
609611    +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
609612    +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
609613    +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
609614    +        EducationGraduation  +     1.25189584055994 * EducationMaster
609615    +          +     0.26230568150721 * Marital_StatusDivorced
609616    +          +     0.27563523967756 * Marital_StatusMarried
609617    +          +     0.54464481618478 * Marital_StatusSingle
609618    +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
609619    +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
609620    +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
609621    +        EducationGraduation  +     0.29772013614284 * EducationMaster
609622    +          +    -0.06750661313108 * Marital_StatusDivorced
609623    +          +     1.48628445854207 * Marital_StatusMarried
609624    +          +    -0.52197797291165 * Marital_StatusSingle
609625    +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
609626    +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
609627    +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
609628    +        EducationGraduation  +     0.45665087056809 * EducationMaster
609629    +          +     0.03219453957597 * Marital_StatusDivorced
609630    +          +    -0.73835008216677 * Marital_StatusMarried
609631    +          +     0.11212575818086 * Marital_StatusSingle
609632    +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
609633    +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
609634    +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
609635    +        EducationGraduation  +    -1.00228990059701 * EducationMaster
609636    +          +    -0.95055539413405 * Marital_StatusDivorced
609637    +          +    -1.65922419336067 * Marital_StatusMarried
609638    +          +     0.78727538125107 * Marital_StatusSingle
609639    +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
609640    +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
609641    +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
609642    +        EducationGraduation  +     0.46710355433642 * EducationMaster
609643    +          +     -4.1747415035634 * Marital_StatusDivorced
609644    +          +     3.61194282451968 * Marital_StatusMarried
609645    +          +     -3.2800495365546 * Marital_StatusSingle
609646    +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
609647    +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
609648    +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
609649    +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
609650    +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
609651    +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
609652    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
609653    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
609654    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
609655    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
609656    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
609657    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
609658    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
609659    +END;
MPRINT(EM_DIAGRAM):   END;
609660    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609661    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
609662    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
609663    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
609664    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
609665    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
609666    +END;
MPRINT(EM_DIAGRAM):   END;
609667    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609668    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
609669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609670    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609671    +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
609672    +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
609673    +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
609674    +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
609675    +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
609676    +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
609677    +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
609678    +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
609679    +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
609680    +          +     1.29727972396867 * S_NumDealsPurchases
609681    +          +     -0.4796144286007 * S_NumDistPurchases
609682    +          +     0.88365985808591 * S_NumStorePurchases
609683    +          +     0.68522096892804 * S_NumWebPurchases
609684    +          +     0.54931043107798 * S_NumWebVisitsMonth
609685    +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
609686    +        S_RMntFrq  +     2.35704770144328 * S_Recency
609687    +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
609688    +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
609689    +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
609690    +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
609691    +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
609692    +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
609693    +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
609694    +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
609695    +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
609696    +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
609697    +          +     0.26997834581422 * S_NumDealsPurchases
609698    +          +      1.4974894627406 * S_NumDistPurchases
609699    +          +     0.20577850505638 * S_NumStorePurchases
609700    +          +     0.67578530037026 * S_NumWebPurchases
609701    +          +     1.48893165613941 * S_NumWebVisitsMonth
609702    +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
609703    +        S_RMntFrq  +    -1.40718347701522 * S_Recency
609704    +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
609705    +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
609706    +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
609707    +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
609708    +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
609709    +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
609710    +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
609711    +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
609712    +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
609713    +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
609714    +          +    -0.75474919633886 * S_NumDealsPurchases
609715    +          +     2.21872386475638 * S_NumDistPurchases
609716    +          +    -0.36191460108989 * S_NumStorePurchases
609717    +          +     0.03160010932412 * S_NumWebPurchases
609718    +          +     0.00984650739909 * S_NumWebVisitsMonth
609719    +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
609720    +        S_RMntFrq  +     0.97890474913417 * S_Recency
609721    +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
609722    +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
609723    +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
609724    +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
609725    +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
609726    +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
609727    +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
609728    +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
609729    +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
609730    +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
609731    +          +    -1.12057357865269 * S_NumDealsPurchases
609732    +          +    -0.70841760614521 * S_NumDistPurchases
609733    +          +    -1.39174816270404 * S_NumStorePurchases
609734    +          +    -1.62343249380806 * S_NumWebPurchases
609735    +          +    -0.73097954508465 * S_NumWebVisitsMonth
609736    +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
609737    +        S_RMntFrq  +    -1.13585643618227 * S_Recency
609738    +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
609739    +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
609740    +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
609741    +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
609742    +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
609743    +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
609744    +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
609745    +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
609746    +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
609747    +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
609748    +          +     0.66880481485557 * S_NumDealsPurchases
609749    +          +     0.69540174544859 * S_NumDistPurchases
609750    +          +     1.68246546921736 * S_NumStorePurchases
609751    +          +     1.85958176898295 * S_NumWebPurchases
609752    +          +    -0.23815810306565 * S_NumWebVisitsMonth
609753    +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
609754    +        S_RMntFrq  +    -2.12360922264332 * S_Recency
609755    +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
609756    +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
609757    +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
609758    +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
609759    +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
609760    +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
609761    +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
609762    +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
609763    +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
609764    +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
609765    +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
609766    +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
609767    +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
609768    +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
609769    +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
609770    +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
609771    +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
609772    +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
609773    +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
609774    +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
609775    +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
609776    +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
609777    +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
609778    +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
609779    +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
609780    +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
609781    +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
609782    +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
609783    +        EducationGraduation  +     0.32623787352656 * EducationMaster
609784    +          +      0.2766977476799 * Marital_StatusDivorced
609785    +          +     0.99585126449473 * Marital_StatusMarried
609786    +          +    -0.71244490682808 * Marital_StatusSingle
609787    +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
609788    +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
609789    +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
609790    +        EducationGraduation  +     0.47239961039918 * EducationMaster
609791    +          +     0.04724779113048 * Marital_StatusDivorced
609792    +          +    -0.80186231440666 * Marital_StatusMarried
609793    +          +    -0.02226793584171 * Marital_StatusSingle
609794    +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
609795    +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
609796    +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
609797    +        EducationGraduation  +     0.41284540548646 * EducationMaster
609798    +          +     0.28206835683721 * Marital_StatusDivorced
609799    +          +     0.46500886756532 * Marital_StatusMarried
609800    +          +     0.35327545255503 * Marital_StatusSingle
609801    +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
609802    +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
609803    +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
609804    +        EducationGraduation  +    -0.29812527209479 * EducationMaster
609805    +          +     1.22291788006392 * Marital_StatusDivorced
609806    +          +    -2.27040720272432 * Marital_StatusMarried
609807    +          +     1.13606780043773 * Marital_StatusSingle
609808    +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
609809    +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
609810    +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
609811    +        EducationGraduation  +      0.4909097120378 * EducationMaster
609812    +          +     -0.3999800759199 * Marital_StatusDivorced
609813    +          +    -0.40978271635345 * Marital_StatusMarried
609814    +          +    -0.55524279444227 * Marital_StatusSingle
609815    +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
609816    +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
609817    +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
609818    +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
609819    +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
609820    +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
609821    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
609822    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
609823    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
609824    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
609825    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
609826    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
609827    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
609828    +END;
MPRINT(EM_DIAGRAM):   END;
609829    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609830    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
609831    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
609832    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
609833    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
609834    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
609835    +END;
MPRINT(EM_DIAGRAM):   END;
609836    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609837    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
609838    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
609839    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
609840    +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
609841    +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
609842    +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
609843    +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
609844    +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
609845    +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
609846    +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
609847    +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
609848    +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
609849    +          +     0.15783958682465 * S_NumDealsPurchases
609850    +          +     1.52124708558457 * S_NumDistPurchases
609851    +          +     -1.3804418313581 * S_NumStorePurchases
609852    +          +    -1.29570111649272 * S_NumWebPurchases
609853    +          +    -0.64280706056547 * S_NumWebVisitsMonth
609854    +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
609855    +        S_RMntFrq  +    -0.06726660535826 * S_Recency
609856    +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
609857    +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
609858    +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
609859    +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
609860    +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
609861    +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
609862    +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
609863    +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
609864    +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
609865    +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
609866    +          +     0.12337111358286 * S_NumDealsPurchases
609867    +          +     -2.3848926094027 * S_NumDistPurchases
609868    +          +    -1.20666646996433 * S_NumStorePurchases
609869    +          +     0.89549302881365 * S_NumWebPurchases
609870    +          +     0.95359042569947 * S_NumWebVisitsMonth
609871    +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
609872    +        S_RMntFrq  +     0.17682790616815 * S_Recency
609873    +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
609874    +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
609875    +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
609876    +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
609877    +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
609878    +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
609879    +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
609880    +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
609881    +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
609882    +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
609883    +          +    -1.05383642674948 * S_NumDealsPurchases
609884    +          +     1.71861984509369 * S_NumDistPurchases
609885    +          +     1.47595181536047 * S_NumStorePurchases
609886    +          +    -1.64165005491178 * S_NumWebPurchases
609887    +          +    -2.35130004742828 * S_NumWebVisitsMonth
609888    +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
609889    +        S_RMntFrq  +    -1.27356615687944 * S_Recency
609890    +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
609891    +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
609892    +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
609893    +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
609894    +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
609895    +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
609896    +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
609897    +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
609898    +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
609899    +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
609900    +          +     0.13347794794222 * S_NumDealsPurchases
609901    +          +     0.30533639886561 * S_NumDistPurchases
609902    +          +     1.63892955540526 * S_NumStorePurchases
609903    +          +     0.43734586516446 * S_NumWebPurchases
609904    +          +     1.79260779802864 * S_NumWebVisitsMonth
609905    +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
609906    +        S_RMntFrq  +    -0.32271271703746 * S_Recency
609907    +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
609908    +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
609909    +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
609910    +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
609911    +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
609912    +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
609913    +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
609914    +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
609915    +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
609916    +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
609917    +          +     1.64209094349557 * S_NumDealsPurchases
609918    +          +    -0.38876870460627 * S_NumDistPurchases
609919    +          +    -0.48559309584971 * S_NumStorePurchases
609920    +          +     0.21254626353218 * S_NumWebPurchases
609921    +          +    -0.71484448532542 * S_NumWebVisitsMonth
609922    +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
609923    +        S_RMntFrq  +     0.44893411588775 * S_Recency
609924    +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
609925    +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
609926    +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
609927    +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
609928    +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
609929    +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
609930    +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
609931    +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
609932    +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
609933    +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
609934    +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
609935    +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
609936    +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
609937    +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
609938    +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
609939    +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
609940    +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
609941    +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
609942    +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
609943    +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
609944    +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
609945    +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
609946    +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
609947    +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
609948    +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
609949    +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
609950    +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
609951    +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
609952    +        EducationGraduation  +     0.46887304015863 * EducationMaster
609953    +          +     1.33953173091973 * Marital_StatusDivorced
609954    +          +    -0.26253208073262 * Marital_StatusMarried
609955    +          +    -0.00960552682431 * Marital_StatusSingle
609956    +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
609957    +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
609958    +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
609959    +        EducationGraduation  +     1.05325310300372 * EducationMaster
609960    +          +     1.43150850334311 * Marital_StatusDivorced
609961    +          +    -0.69239127844934 * Marital_StatusMarried
609962    +          +     2.08477562471559 * Marital_StatusSingle
609963    +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
609964    +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
609965    +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
609966    +        EducationGraduation  +     1.80436924796338 * EducationMaster
609967    +          +     1.08387556786168 * Marital_StatusDivorced
609968    +          +      1.0283506000217 * Marital_StatusMarried
609969    +          +    -0.87069431107983 * Marital_StatusSingle
609970    +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
609971    +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
609972    +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
609973    +        EducationGraduation  +    -1.53859265107051 * EducationMaster
609974    +          +      -1.347780188307 * Marital_StatusDivorced
609975    +          +    -0.53911983240372 * Marital_StatusMarried
609976    +          +     0.22083074159185 * Marital_StatusSingle
609977    +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
609978    +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
609979    +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
609980    +        EducationGraduation  +      1.6087631135774 * EducationMaster
609981    +          +     1.46582538311384 * Marital_StatusDivorced
609982    +          +     0.05256161016002 * Marital_StatusMarried
609983    +          +    -1.21402967626877 * Marital_StatusSingle
609984    +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
609985    +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
609986    +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
609987    +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
609988    +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
609989    +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
609990    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
609991    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
609992    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
609993    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
609994    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
609995    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
609996    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
609997    +END;
MPRINT(EM_DIAGRAM):   END;
609998    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
609999    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
610000    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
610001    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
610002    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
610003    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
610004    +END;
MPRINT(EM_DIAGRAM):   END;
610005    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610006    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
610007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610008    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610009    +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
610010    +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
610011    +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
610012    +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
610013    +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
610014    +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
610015    +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
610016    +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
610017    +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
610018    +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
610019    +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
610020    +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
610021    +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
610022    +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
610023    +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
610024    +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
610025    +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
610026    +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
610027    +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
610028    +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
610029    +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
610030    +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
610031    +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
610032    +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
610033    +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
610034    +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
610035    +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
610036    +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
610037    +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
610038    +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
610039    +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
610040    +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
610041    +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
610042    +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
610043    +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
610044    +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
610045    +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
610046    +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
610047    +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
610048    +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
610049    +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
610050    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
610051    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
610052    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
610053    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
610054    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
610055    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
610056    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
610057    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
610058    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
610059    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
610060    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
610061    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
610062    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
610063    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
610064    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
610065    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
610066    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
610067    +END;
MPRINT(EM_DIAGRAM):   END;
610068    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610069    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
610070    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
610071    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
610072    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
610073    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
610074    +END;
MPRINT(EM_DIAGRAM):   END;
610075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610076    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
610077    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610078    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610079    +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
610080    +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
610081    +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
610082    +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
610083    +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
610084    +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
610085    +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
610086    +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
610087    +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
610088    +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
610089    +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
610090    +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
610091    +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
610092    +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
610093    +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
610094    +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
610095    +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
610096    +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
610097    +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
610098    +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
610099    +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
610100    +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
610101    +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
610102    +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
610103    +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
610104    +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
610105    +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
610106    +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
610107    +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
610108    +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
610109    +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
610110    +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
610111    +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
610112    +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
610113    +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
610114    +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
610115    +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
610116    +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
610117    +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
610118    +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
610119    +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
610120    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
610121    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
610122    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
610123    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
610124    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
610125    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
610126    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
610127    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
610128    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
610129    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
610130    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
610131    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
610132    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
610133    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
610134    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
610135    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
610136    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
610137    +END;
MPRINT(EM_DIAGRAM):   END;
610138    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610139    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
610140    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
610141    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
610142    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
610143    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
610144    +END;
MPRINT(EM_DIAGRAM):   END;
610145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610146    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
610147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610148    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610149    +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
610150    +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
610151    +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
610152    +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
610153    +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
610154    +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
610155    +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
610156    +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
610157    +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
610158    +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
610159    +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
610160    +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
610161    +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
610162    +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
610163    +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
610164    +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
610165    +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
610166    +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
610167    +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
610168    +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
610169    +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
610170    +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
610171    +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
610172    +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
610173    +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
610174    +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
610175    +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
610176    +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
610177    +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
610178    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
610179    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
610180    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
610181    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
610182    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
610183    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
610184    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
610185    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
610186    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
610187    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
610188    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
610189    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
610190    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
610191    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
610192    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
610193    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
610194    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
610195    +END;
MPRINT(EM_DIAGRAM):   END;
610196    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610197    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
610198    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
610199    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
610200    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
610201    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
610202    +END;
MPRINT(EM_DIAGRAM):   END;
610203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610204    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
610205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610206    +
610207    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
610208    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
610209    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
610210    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
610211    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
610212    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610213    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
610214    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
610215    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
610216    +end;
MPRINT(EM_DIAGRAM):   end;
610217    +else do;
MPRINT(EM_DIAGRAM):   else do;
610218    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
610219    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
610220    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
610221    +   end;
MPRINT(EM_DIAGRAM):   end;
610222    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
610223    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
610224    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
610225    +   end;
MPRINT(EM_DIAGRAM):   end;
610226    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610227    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
610228    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
610229    +   end;
MPRINT(EM_DIAGRAM):   end;
610230    +end;
MPRINT(EM_DIAGRAM):   end;
610231    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610232    +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
610233    +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
610234    +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
610235    +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
610236    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
610237    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
610238    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
610239    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
610240    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
610241    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
610242    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
610243    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
610244    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
610245    +END;
MPRINT(EM_DIAGRAM):   END;
610246    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610247    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
610248    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
610249    +END;
MPRINT(EM_DIAGRAM):   END;
610250    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
610251    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
610252    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
610253    +END;
MPRINT(EM_DIAGRAM):   END;
610254    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
610255    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
610256    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
610257    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
610258    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
610259    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
610260    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
610261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610262    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
610263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610264    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
610265    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
610266    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
610267    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
610268    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
610269    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
610270    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
610271    +END;
MPRINT(EM_DIAGRAM):   END;
610272    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
610273    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
610274    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
610275    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
610276     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
610277     quit;
610278     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
610279     filename emflow
610279   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
610280     *------------------------------------------------------------*;
610281     * AutoNeural10: Scoring VALIDATE data;
610282     *------------------------------------------------------------*;
610283     data EMWS8.AutoNeural10_VALIDATE
610284     / view=EMWS8.AutoNeural10_VALIDATE
610285     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_VALIDATE / view=EMWS8.AutoNeural10_VALIDATE ;
610286     set EMWS8.Meta_VALIDATE
610287     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
610288     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMFLOWSCORE.sas.
610289    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
610290    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
610291    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
610292    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
610293    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
610294    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
610295    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
610296    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
610297    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
610298    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
610299    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
610300    +LENGTH _WARN_ $4
610301    +      F_DepVar  $ 12
610302    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
610303    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
610304    +
610305    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
610306    +
610307    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
610308    +
610309    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
610310    +
610311    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
610312    +
610313    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
610314    +
610315    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
610316    +
610317    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
610318    +
610319    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
610320    +
610321    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
610322    +
610323    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
610324    +
610325    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
610326    +
610327    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
610328    +
610329    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
610330    +
610331    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
610332    +
610333    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
610334    +
610335    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
610336    +
610337    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
610338    +
610339    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
610340    +
610341    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
610342    +
610343    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
610344    +
610345    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
610346    +
610347    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
610348    +
610349    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
610350    +
610351    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
610352    +
610353    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
610354    +
610355    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
610356    +
610357    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
610358    +
610359    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
610360    +
610361    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
610362    +
610363    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
610364    +
610365    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
610366    +
610367    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
610368    +
610369    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
610370    +
610371    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
610372    +
610373    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
610374    +
610375    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
610376    +
610377    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
610378    +
610379    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
610380    +
610381    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
610382    +
610383    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
610384    +
610385    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
610386    +
610387    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
610388    +
610389    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
610390    +
610391    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
610392    +
610393    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
610394    +
610395    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
610396    +
610397    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
610398    +
610399    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
610400    +
610401    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
610402    +
610403    +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
610404    +
610405    +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
610406    +
610407    +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
610408    +
610409    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
610410    +
610411    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
610412    +
610413    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
610414    +
610415    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
610416    +
610417    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
610418    +
610419    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
610420    +
610421    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
610422    +
610423    +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
610424    +
610425    +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
610426    +
610427    +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
610428    +
610429    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
610430    +
610431    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
610432    +
610433    +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
610434    +
610435    +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
610436    +
610437    +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
610438    +
610439    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
610440    +
610441    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
610442    +
610443    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
610444    +
610445    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
610446    +
610447    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
610448    +
610449    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
610450    +
610451    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
610452    +
610453    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
610454    +
610455    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
610456    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
610457    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
610458    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
610459    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610460    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610461    +end;
MPRINT(EM_DIAGRAM):   end;
610462    +else do;
MPRINT(EM_DIAGRAM):   else do;
610463    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610464    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
610465    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610466    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610467    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
610468    +   end;
MPRINT(EM_DIAGRAM):   end;
610469    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610470    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
610471    +   end;
MPRINT(EM_DIAGRAM):   end;
610472    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610473    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
610474    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610475    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610476    +   end;
MPRINT(EM_DIAGRAM):   end;
610477    +end;
MPRINT(EM_DIAGRAM):   end;
610478    +
610479    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
610480    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
610481    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
610482    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
610483    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610484    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610485    +end;
MPRINT(EM_DIAGRAM):   end;
610486    +else do;
MPRINT(EM_DIAGRAM):   else do;
610487    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610488    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
610489    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610490    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610491    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
610492    +   end;
MPRINT(EM_DIAGRAM):   end;
610493    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610494    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
610495    +   end;
MPRINT(EM_DIAGRAM):   end;
610496    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610497    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
610498    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610499    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610500    +   end;
MPRINT(EM_DIAGRAM):   end;
610501    +end;
MPRINT(EM_DIAGRAM):   end;
610502    +
610503    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
610504    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
610505    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
610506    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
610507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610509    +end;
MPRINT(EM_DIAGRAM):   end;
610510    +else do;
MPRINT(EM_DIAGRAM):   else do;
610511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610512    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
610513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610514    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610515    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
610516    +   end;
MPRINT(EM_DIAGRAM):   end;
610517    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610518    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
610519    +   end;
MPRINT(EM_DIAGRAM):   end;
610520    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610521    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
610522    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610523    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610524    +   end;
MPRINT(EM_DIAGRAM):   end;
610525    +end;
MPRINT(EM_DIAGRAM):   end;
610526    +
610527    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
610528    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
610529    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
610530    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
610531    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610532    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610533    +end;
MPRINT(EM_DIAGRAM):   end;
610534    +else do;
MPRINT(EM_DIAGRAM):   else do;
610535    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610536    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
610537    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610538    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610539    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
610540    +   end;
MPRINT(EM_DIAGRAM):   end;
610541    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610542    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
610543    +   end;
MPRINT(EM_DIAGRAM):   end;
610544    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610545    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
610546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610548    +   end;
MPRINT(EM_DIAGRAM):   end;
610549    +end;
MPRINT(EM_DIAGRAM):   end;
610550    +
610551    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
610552    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
610553    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
610554    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
610555    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610556    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610557    +end;
MPRINT(EM_DIAGRAM):   end;
610558    +else do;
MPRINT(EM_DIAGRAM):   else do;
610559    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610560    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
610561    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610562    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610563    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
610564    +   end;
MPRINT(EM_DIAGRAM):   end;
610565    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610566    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
610567    +   end;
MPRINT(EM_DIAGRAM):   end;
610568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610569    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
610570    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610571    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610572    +   end;
MPRINT(EM_DIAGRAM):   end;
610573    +end;
MPRINT(EM_DIAGRAM):   end;
610574    +
610575    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
610576    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
610577    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
610578    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
610579    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610580    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610581    +end;
MPRINT(EM_DIAGRAM):   end;
610582    +else do;
MPRINT(EM_DIAGRAM):   else do;
610583    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610584    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
610585    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610586    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
610587    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
610588    +   end;
MPRINT(EM_DIAGRAM):   end;
610589    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
610590    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
610591    +   end;
MPRINT(EM_DIAGRAM):   end;
610592    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610593    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
610594    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610595    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610596    +   end;
MPRINT(EM_DIAGRAM):   end;
610597    +end;
MPRINT(EM_DIAGRAM):   end;
610598    +
610599    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
610600    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
610601    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
610602    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
610603    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610604    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610605    +end;
MPRINT(EM_DIAGRAM):   end;
610606    +else do;
MPRINT(EM_DIAGRAM):   else do;
610607    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
610608    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
610609    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610610    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
610611    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
610612    +   end;
MPRINT(EM_DIAGRAM):   end;
610613    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
610614    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
610615    +   end;
MPRINT(EM_DIAGRAM):   end;
610616    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610617    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
610618    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610619    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610620    +   end;
MPRINT(EM_DIAGRAM):   end;
610621    +end;
MPRINT(EM_DIAGRAM):   end;
610622    +
610623    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
610624    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
610625    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
610626    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
610627    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
610628    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
610629    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
610630    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
610631    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
610632    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
610633    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
610634    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
610635    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610637    +end;
MPRINT(EM_DIAGRAM):   end;
610638    +else do;
MPRINT(EM_DIAGRAM):   else do;
610639    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
610640    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
610641    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610642    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
610643    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
610644    +   end;
MPRINT(EM_DIAGRAM):   end;
610645    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
610646    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
610647    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
610648    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
610649    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
610650    +   end;
MPRINT(EM_DIAGRAM):   end;
610651    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
610652    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
610653    +   end;
MPRINT(EM_DIAGRAM):   end;
610654    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
610655    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
610656    +   end;
MPRINT(EM_DIAGRAM):   end;
610657    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
610658    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
610659    +   end;
MPRINT(EM_DIAGRAM):   end;
610660    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610661    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
610662    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
610663    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
610664    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
610665    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610666    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610667    +   end;
MPRINT(EM_DIAGRAM):   end;
610668    +end;
MPRINT(EM_DIAGRAM):   end;
610669    +
610670    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
610671    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
610672    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
610673    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
610674    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
610675    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
610676    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
610677    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
610678    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
610679    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
610680    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
610681    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
610682    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
610683    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
610684    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610685    +end;
MPRINT(EM_DIAGRAM):   end;
610686    +else do;
MPRINT(EM_DIAGRAM):   else do;
610687    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
610688    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
610689    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
610690    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
610691    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
610692    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
610693    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
610694    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
610695    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610696    +         end;
MPRINT(EM_DIAGRAM):   end;
610697    +         else do;
MPRINT(EM_DIAGRAM):   else do;
610698    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
610699    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
610700    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610701    +            end;
MPRINT(EM_DIAGRAM):   end;
610702    +         end;
MPRINT(EM_DIAGRAM):   end;
610703    +      end;
MPRINT(EM_DIAGRAM):   end;
610704    +      else do;
MPRINT(EM_DIAGRAM):   else do;
610705    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
610706    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
610707    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610708    +         end;
MPRINT(EM_DIAGRAM):   end;
610709    +      end;
MPRINT(EM_DIAGRAM):   end;
610710    +   end;
MPRINT(EM_DIAGRAM):   end;
610711    +   else do;
MPRINT(EM_DIAGRAM):   else do;
610712    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
610713    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
610714    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610715    +      end;
MPRINT(EM_DIAGRAM):   end;
610716    +      else do;
MPRINT(EM_DIAGRAM):   else do;
610717    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
610718    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
610719    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
610720    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
610721    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
610722    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
610723    +         end;
MPRINT(EM_DIAGRAM):   end;
610724    +      end;
MPRINT(EM_DIAGRAM):   end;
610725    +   end;
MPRINT(EM_DIAGRAM):   end;
610726    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
610727    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
610728    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
610729    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
610730    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
610731    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
610732    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610733    +   end;
MPRINT(EM_DIAGRAM):   end;
610734    +end;
MPRINT(EM_DIAGRAM):   end;
610735    +
610736    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610737    +*** Checking missing input Interval
610738    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
610739    +
610740    +IF NMISS(
610741    +   AcceptedCmpTotal ,
610742    +   Age ,
610743    +   Frq ,
610744    +   Income ,
610745    +   Kidhome ,
610746    +   Mnt ,
610747    +   MntFishProducts ,
610748    +   MntFruits ,
610749    +   MntGoldProds ,
610750    +   MntMeatProducts ,
610751    +   MntSweetProducts ,
610752    +   MntWines ,
610753    +   MonthsAsCustomer ,
610754    +   NumCatalogPurchases ,
610755    +   NumDealsPurchases ,
610756    +   NumDistPurchases ,
610757    +   NumStorePurchases ,
610758    +   NumWebPurchases ,
610759    +   NumWebVisitsMonth ,
610760    +   RFMstat ,
610761    +   RMntFrq ,
610762    +   Recency ,
610763    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
610764    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
610765    +
610766    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
610767    +END;
MPRINT(EM_DIAGRAM):   END;
610768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610769    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
610770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610771    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610772    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
610773    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
610774    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
610775    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
610776    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
610777    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
610778    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
610779    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
610780    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
610781    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
610782    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
610783    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
610784    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
610785    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
610786    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
610787    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
610788    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
610789    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
610790    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
610791    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
610792    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
610793    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
610794    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
610795    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
610796    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
610797    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
610798    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
610799    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
610800    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
610801    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
610802    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
610803    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
610804    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
610805    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
610806    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
610807    +END;
MPRINT(EM_DIAGRAM):   END;
610808    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
610809    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
610810    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
610811    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
610812    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
610813    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
610814    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
610815    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
610816    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
610817    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
610818    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
610819    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
610820    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
610821    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
610822    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
610823    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
610824    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
610825    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
610826    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
610827    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
610828    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
610829    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
610830    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
610831    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
610832    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
610833    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
610834    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
610835    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
610836    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
610837    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
610838    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
610839    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
610840    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
610841    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
610842    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
610843    +   ELSE S_NumCatalogPurchases
610844    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
610845    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
610846    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
610847    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
610848    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
610849    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
610850    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
610851    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
610852    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
610853    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
610854    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
610855    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
610856    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
610857    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
610858    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
610859    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
610860    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
610861    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
610862    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
610863    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
610864    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
610865    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
610866    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
610867    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
610868    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
610869    +END;
MPRINT(EM_DIAGRAM):   END;
610870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610871    +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
610872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610873    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610874    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
610875    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610876    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610877    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
610878    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
610879    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
610880    +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
610881    +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
610882    +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
610883    +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
610884    +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
610885    +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
610886    +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
610887    +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
610888    +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
610889    +          +     3.45371614080196 * S_NumDealsPurchases
610890    +          +     0.19118374544537 * S_NumDistPurchases
610891    +          +    -2.45138001446793 * S_NumStorePurchases
610892    +          +    -0.11424280244155 * S_NumWebPurchases
610893    +          +    -2.31770357716565 * S_NumWebVisitsMonth
610894    +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
610895    +        S_RMntFrq  +     0.26870809438679 * S_Recency
610896    +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
610897    +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
610898    +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
610899    +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
610900    +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
610901    +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
610902    +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
610903    +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
610904    +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
610905    +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
610906    +          +    -1.28390925647659 * S_NumDealsPurchases
610907    +          +     0.82669177239926 * S_NumDistPurchases
610908    +          +     1.71678585204511 * S_NumStorePurchases
610909    +          +     1.49226295608046 * S_NumWebPurchases
610910    +          +     -4.0105103018388 * S_NumWebVisitsMonth
610911    +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
610912    +        S_RMntFrq  +     4.74241121363086 * S_Recency
610913    +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
610914    +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
610915    +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
610916    +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
610917    +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
610918    +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
610919    +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
610920    +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
610921    +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
610922    +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
610923    +          +     0.22958626391725 * S_NumDealsPurchases
610924    +          +    -0.02046515813996 * S_NumDistPurchases
610925    +          +      0.8618502050837 * S_NumStorePurchases
610926    +          +     1.45175370326009 * S_NumWebPurchases
610927    +          +    -0.86122442436156 * S_NumWebVisitsMonth
610928    +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
610929    +        S_RMntFrq  +    -0.08202178452839 * S_Recency
610930    +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
610931    +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
610932    +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
610933    +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
610934    +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
610935    +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
610936    +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
610937    +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
610938    +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
610939    +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
610940    +          +     1.25310034610344 * S_NumDealsPurchases
610941    +          +     0.92141098602176 * S_NumDistPurchases
610942    +          +    -0.08806509391473 * S_NumStorePurchases
610943    +          +     -1.0533787624668 * S_NumWebPurchases
610944    +          +     3.07050739830585 * S_NumWebVisitsMonth
610945    +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
610946    +        S_RMntFrq  +     -3.8741602707981 * S_Recency
610947    +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
610948    +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
610949    +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
610950    +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
610951    +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
610952    +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
610953    +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
610954    +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
610955    +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
610956    +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
610957    +          +    -1.68259553608287 * S_NumDealsPurchases
610958    +          +    -0.53835572290445 * S_NumDistPurchases
610959    +          +     1.25833922835446 * S_NumStorePurchases
610960    +          +     0.48300830623998 * S_NumWebPurchases
610961    +          +    -2.20119275236582 * S_NumWebVisitsMonth
610962    +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
610963    +        S_RMntFrq  +     0.35692712879409 * S_Recency
610964    +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
610965    +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
610966    +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
610967    +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
610968    +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
610969    +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
610970    +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
610971    +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
610972    +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
610973    +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
610974    +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
610975    +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
610976    +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
610977    +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
610978    +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
610979    +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
610980    +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
610981    +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
610982    +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
610983    +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
610984    +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
610985    +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
610986    +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
610987    +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
610988    +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
610989    +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
610990    +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
610991    +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
610992    +        EducationGraduation  +     1.25189584055994 * EducationMaster
610993    +          +     0.26230568150721 * Marital_StatusDivorced
610994    +          +     0.27563523967756 * Marital_StatusMarried
610995    +          +     0.54464481618478 * Marital_StatusSingle
610996    +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
610997    +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
610998    +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
610999    +        EducationGraduation  +     0.29772013614284 * EducationMaster
611000    +          +    -0.06750661313108 * Marital_StatusDivorced
611001    +          +     1.48628445854207 * Marital_StatusMarried
611002    +          +    -0.52197797291165 * Marital_StatusSingle
611003    +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
611004    +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
611005    +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
611006    +        EducationGraduation  +     0.45665087056809 * EducationMaster
611007    +          +     0.03219453957597 * Marital_StatusDivorced
611008    +          +    -0.73835008216677 * Marital_StatusMarried
611009    +          +     0.11212575818086 * Marital_StatusSingle
611010    +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
611011    +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
611012    +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
611013    +        EducationGraduation  +    -1.00228990059701 * EducationMaster
611014    +          +    -0.95055539413405 * Marital_StatusDivorced
611015    +          +    -1.65922419336067 * Marital_StatusMarried
611016    +          +     0.78727538125107 * Marital_StatusSingle
611017    +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
611018    +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
611019    +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
611020    +        EducationGraduation  +     0.46710355433642 * EducationMaster
611021    +          +     -4.1747415035634 * Marital_StatusDivorced
611022    +          +     3.61194282451968 * Marital_StatusMarried
611023    +          +     -3.2800495365546 * Marital_StatusSingle
611024    +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
611025    +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
611026    +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
611027    +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
611028    +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
611029    +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
611030    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
611031    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
611032    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
611033    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
611034    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
611035    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
611036    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
611037    +END;
MPRINT(EM_DIAGRAM):   END;
611038    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611039    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
611040    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
611041    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
611042    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
611043    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
611044    +END;
MPRINT(EM_DIAGRAM):   END;
611045    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611046    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
611047    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611048    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611049    +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
611050    +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
611051    +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
611052    +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
611053    +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
611054    +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
611055    +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
611056    +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
611057    +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
611058    +          +     1.29727972396867 * S_NumDealsPurchases
611059    +          +     -0.4796144286007 * S_NumDistPurchases
611060    +          +     0.88365985808591 * S_NumStorePurchases
611061    +          +     0.68522096892804 * S_NumWebPurchases
611062    +          +     0.54931043107798 * S_NumWebVisitsMonth
611063    +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
611064    +        S_RMntFrq  +     2.35704770144328 * S_Recency
611065    +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
611066    +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
611067    +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
611068    +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
611069    +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
611070    +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
611071    +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
611072    +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
611073    +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
611074    +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
611075    +          +     0.26997834581422 * S_NumDealsPurchases
611076    +          +      1.4974894627406 * S_NumDistPurchases
611077    +          +     0.20577850505638 * S_NumStorePurchases
611078    +          +     0.67578530037026 * S_NumWebPurchases
611079    +          +     1.48893165613941 * S_NumWebVisitsMonth
611080    +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
611081    +        S_RMntFrq  +    -1.40718347701522 * S_Recency
611082    +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
611083    +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
611084    +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
611085    +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
611086    +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
611087    +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
611088    +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
611089    +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
611090    +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
611091    +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
611092    +          +    -0.75474919633886 * S_NumDealsPurchases
611093    +          +     2.21872386475638 * S_NumDistPurchases
611094    +          +    -0.36191460108989 * S_NumStorePurchases
611095    +          +     0.03160010932412 * S_NumWebPurchases
611096    +          +     0.00984650739909 * S_NumWebVisitsMonth
611097    +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
611098    +        S_RMntFrq  +     0.97890474913417 * S_Recency
611099    +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
611100    +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
611101    +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
611102    +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
611103    +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
611104    +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
611105    +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
611106    +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
611107    +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
611108    +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
611109    +          +    -1.12057357865269 * S_NumDealsPurchases
611110    +          +    -0.70841760614521 * S_NumDistPurchases
611111    +          +    -1.39174816270404 * S_NumStorePurchases
611112    +          +    -1.62343249380806 * S_NumWebPurchases
611113    +          +    -0.73097954508465 * S_NumWebVisitsMonth
611114    +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
611115    +        S_RMntFrq  +    -1.13585643618227 * S_Recency
611116    +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
611117    +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
611118    +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
611119    +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
611120    +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
611121    +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
611122    +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
611123    +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
611124    +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
611125    +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
611126    +          +     0.66880481485557 * S_NumDealsPurchases
611127    +          +     0.69540174544859 * S_NumDistPurchases
611128    +          +     1.68246546921736 * S_NumStorePurchases
611129    +          +     1.85958176898295 * S_NumWebPurchases
611130    +          +    -0.23815810306565 * S_NumWebVisitsMonth
611131    +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
611132    +        S_RMntFrq  +    -2.12360922264332 * S_Recency
611133    +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
611134    +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
611135    +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
611136    +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
611137    +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
611138    +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
611139    +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
611140    +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
611141    +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
611142    +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
611143    +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
611144    +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
611145    +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
611146    +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
611147    +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
611148    +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
611149    +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
611150    +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
611151    +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
611152    +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
611153    +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
611154    +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
611155    +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
611156    +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
611157    +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
611158    +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
611159    +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
611160    +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
611161    +        EducationGraduation  +     0.32623787352656 * EducationMaster
611162    +          +      0.2766977476799 * Marital_StatusDivorced
611163    +          +     0.99585126449473 * Marital_StatusMarried
611164    +          +    -0.71244490682808 * Marital_StatusSingle
611165    +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
611166    +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
611167    +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
611168    +        EducationGraduation  +     0.47239961039918 * EducationMaster
611169    +          +     0.04724779113048 * Marital_StatusDivorced
611170    +          +    -0.80186231440666 * Marital_StatusMarried
611171    +          +    -0.02226793584171 * Marital_StatusSingle
611172    +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
611173    +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
611174    +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
611175    +        EducationGraduation  +     0.41284540548646 * EducationMaster
611176    +          +     0.28206835683721 * Marital_StatusDivorced
611177    +          +     0.46500886756532 * Marital_StatusMarried
611178    +          +     0.35327545255503 * Marital_StatusSingle
611179    +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
611180    +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
611181    +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
611182    +        EducationGraduation  +    -0.29812527209479 * EducationMaster
611183    +          +     1.22291788006392 * Marital_StatusDivorced
611184    +          +    -2.27040720272432 * Marital_StatusMarried
611185    +          +     1.13606780043773 * Marital_StatusSingle
611186    +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
611187    +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
611188    +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
611189    +        EducationGraduation  +      0.4909097120378 * EducationMaster
611190    +          +     -0.3999800759199 * Marital_StatusDivorced
611191    +          +    -0.40978271635345 * Marital_StatusMarried
611192    +          +    -0.55524279444227 * Marital_StatusSingle
611193    +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
611194    +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
611195    +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
611196    +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
611197    +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
611198    +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
611199    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
611200    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
611201    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
611202    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
611203    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
611204    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
611205    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
611206    +END;
MPRINT(EM_DIAGRAM):   END;
611207    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611208    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
611209    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
611210    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
611211    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
611212    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
611213    +END;
MPRINT(EM_DIAGRAM):   END;
611214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611215    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
611216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611217    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611218    +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
611219    +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
611220    +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
611221    +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
611222    +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
611223    +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
611224    +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
611225    +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
611226    +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
611227    +          +     0.15783958682465 * S_NumDealsPurchases
611228    +          +     1.52124708558457 * S_NumDistPurchases
611229    +          +     -1.3804418313581 * S_NumStorePurchases
611230    +          +    -1.29570111649272 * S_NumWebPurchases
611231    +          +    -0.64280706056547 * S_NumWebVisitsMonth
611232    +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
611233    +        S_RMntFrq  +    -0.06726660535826 * S_Recency
611234    +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
611235    +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
611236    +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
611237    +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
611238    +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
611239    +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
611240    +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
611241    +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
611242    +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
611243    +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
611244    +          +     0.12337111358286 * S_NumDealsPurchases
611245    +          +     -2.3848926094027 * S_NumDistPurchases
611246    +          +    -1.20666646996433 * S_NumStorePurchases
611247    +          +     0.89549302881365 * S_NumWebPurchases
611248    +          +     0.95359042569947 * S_NumWebVisitsMonth
611249    +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
611250    +        S_RMntFrq  +     0.17682790616815 * S_Recency
611251    +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
611252    +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
611253    +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
611254    +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
611255    +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
611256    +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
611257    +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
611258    +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
611259    +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
611260    +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
611261    +          +    -1.05383642674948 * S_NumDealsPurchases
611262    +          +     1.71861984509369 * S_NumDistPurchases
611263    +          +     1.47595181536047 * S_NumStorePurchases
611264    +          +    -1.64165005491178 * S_NumWebPurchases
611265    +          +    -2.35130004742828 * S_NumWebVisitsMonth
611266    +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
611267    +        S_RMntFrq  +    -1.27356615687944 * S_Recency
611268    +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
611269    +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
611270    +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
611271    +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
611272    +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
611273    +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
611274    +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
611275    +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
611276    +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
611277    +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
611278    +          +     0.13347794794222 * S_NumDealsPurchases
611279    +          +     0.30533639886561 * S_NumDistPurchases
611280    +          +     1.63892955540526 * S_NumStorePurchases
611281    +          +     0.43734586516446 * S_NumWebPurchases
611282    +          +     1.79260779802864 * S_NumWebVisitsMonth
611283    +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
611284    +        S_RMntFrq  +    -0.32271271703746 * S_Recency
611285    +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
611286    +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
611287    +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
611288    +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
611289    +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
611290    +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
611291    +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
611292    +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
611293    +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
611294    +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
611295    +          +     1.64209094349557 * S_NumDealsPurchases
611296    +          +    -0.38876870460627 * S_NumDistPurchases
611297    +          +    -0.48559309584971 * S_NumStorePurchases
611298    +          +     0.21254626353218 * S_NumWebPurchases
611299    +          +    -0.71484448532542 * S_NumWebVisitsMonth
611300    +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
611301    +        S_RMntFrq  +     0.44893411588775 * S_Recency
611302    +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
611303    +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
611304    +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
611305    +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
611306    +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
611307    +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
611308    +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
611309    +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
611310    +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
611311    +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
611312    +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
611313    +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
611314    +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
611315    +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
611316    +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
611317    +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
611318    +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
611319    +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
611320    +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
611321    +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
611322    +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
611323    +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
611324    +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
611325    +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
611326    +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
611327    +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
611328    +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
611329    +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
611330    +        EducationGraduation  +     0.46887304015863 * EducationMaster
611331    +          +     1.33953173091973 * Marital_StatusDivorced
611332    +          +    -0.26253208073262 * Marital_StatusMarried
611333    +          +    -0.00960552682431 * Marital_StatusSingle
611334    +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
611335    +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
611336    +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
611337    +        EducationGraduation  +     1.05325310300372 * EducationMaster
611338    +          +     1.43150850334311 * Marital_StatusDivorced
611339    +          +    -0.69239127844934 * Marital_StatusMarried
611340    +          +     2.08477562471559 * Marital_StatusSingle
611341    +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
611342    +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
611343    +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
611344    +        EducationGraduation  +     1.80436924796338 * EducationMaster
611345    +          +     1.08387556786168 * Marital_StatusDivorced
611346    +          +      1.0283506000217 * Marital_StatusMarried
611347    +          +    -0.87069431107983 * Marital_StatusSingle
611348    +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
611349    +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
611350    +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
611351    +        EducationGraduation  +    -1.53859265107051 * EducationMaster
611352    +          +      -1.347780188307 * Marital_StatusDivorced
611353    +          +    -0.53911983240372 * Marital_StatusMarried
611354    +          +     0.22083074159185 * Marital_StatusSingle
611355    +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
611356    +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
611357    +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
611358    +        EducationGraduation  +      1.6087631135774 * EducationMaster
611359    +          +     1.46582538311384 * Marital_StatusDivorced
611360    +          +     0.05256161016002 * Marital_StatusMarried
611361    +          +    -1.21402967626877 * Marital_StatusSingle
611362    +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
611363    +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
611364    +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
611365    +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
611366    +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
611367    +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
611368    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
611369    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
611370    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
611371    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
611372    +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
611373    +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
611374    +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
611375    +END;
MPRINT(EM_DIAGRAM):   END;
611376    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611377    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
611378    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
611379    +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
611380    +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
611381    +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
611382    +END;
MPRINT(EM_DIAGRAM):   END;
611383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611384    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
611385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611386    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611387    +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
611388    +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
611389    +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
611390    +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
611391    +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
611392    +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
611393    +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
611394    +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
611395    +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
611396    +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
611397    +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
611398    +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
611399    +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
611400    +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
611401    +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
611402    +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
611403    +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
611404    +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
611405    +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
611406    +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
611407    +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
611408    +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
611409    +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
611410    +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
611411    +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
611412    +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
611413    +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
611414    +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
611415    +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
611416    +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
611417    +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
611418    +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
611419    +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
611420    +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
611421    +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
611422    +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
611423    +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
611424    +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
611425    +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
611426    +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
611427    +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
611428    +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
611429    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
611430    +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
611431    +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
611432    +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
611433    +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
611434    +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
611435    +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
611436    +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
611437    +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
611438    +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
611439    +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
611440    +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
611441    +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
611442    +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
611443    +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
611444    +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
611445    +END;
MPRINT(EM_DIAGRAM):   END;
611446    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611447    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
611448    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
611449    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
611450    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
611451    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
611452    +END;
MPRINT(EM_DIAGRAM):   END;
611453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611454    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
611455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611456    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611457    +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
611458    +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
611459    +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
611460    +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
611461    +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
611462    +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
611463    +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
611464    +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
611465    +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
611466    +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
611467    +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
611468    +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
611469    +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
611470    +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
611471    +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
611472    +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
611473    +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
611474    +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
611475    +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
611476    +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
611477    +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
611478    +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
611479    +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
611480    +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
611481    +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
611482    +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
611483    +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
611484    +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
611485    +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
611486    +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
611487    +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
611488    +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
611489    +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
611490    +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
611491    +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
611492    +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
611493    +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
611494    +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
611495    +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
611496    +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
611497    +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
611498    +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
611499    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
611500    +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
611501    +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
611502    +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
611503    +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
611504    +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
611505    +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
611506    +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
611507    +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
611508    +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
611509    +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
611510    +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
611511    +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
611512    +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
611513    +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
611514    +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
611515    +END;
MPRINT(EM_DIAGRAM):   END;
611516    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611517    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
611518    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
611519    +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
611520    +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
611521    +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
611522    +END;
MPRINT(EM_DIAGRAM):   END;
611523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611524    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
611525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611526    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611527    +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
611528    +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
611529    +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
611530    +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
611531    +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
611532    +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
611533    +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
611534    +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
611535    +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
611536    +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
611537    +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
611538    +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
611539    +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
611540    +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
611541    +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
611542    +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
611543    +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
611544    +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
611545    +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
611546    +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
611547    +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
611548    +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
611549    +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
611550    +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
611551    +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
611552    +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
611553    +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
611554    +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
611555    +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
611556    +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
611557    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
611558    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
611559    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
611560    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
611561    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
611562    +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
611563    +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
611564    +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
611565    +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
611566    +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
611567    +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
611568    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
611569    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
611570    +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
611571    +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
611572    +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
611573    +END;
MPRINT(EM_DIAGRAM):   END;
611574    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611575    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
611576    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
611577    +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
611578    +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
611579    +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
611580    +END;
MPRINT(EM_DIAGRAM):   END;
611581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611582    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
611583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611584    +
611585    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
611586    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
611587    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
611588    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
611589    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
611590    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
611591    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
611592    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
611593    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
611594    +end;
MPRINT(EM_DIAGRAM):   end;
611595    +else do;
MPRINT(EM_DIAGRAM):   else do;
611596    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
611597    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
611598    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
611599    +   end;
MPRINT(EM_DIAGRAM):   end;
611600    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
611601    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
611602    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
611603    +   end;
MPRINT(EM_DIAGRAM):   end;
611604    +   else do;
MPRINT(EM_DIAGRAM):   else do;
611605    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
611606    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
611607    +   end;
MPRINT(EM_DIAGRAM):   end;
611608    +end;
MPRINT(EM_DIAGRAM):   end;
611609    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
611610    +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
611611    +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
611612    +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
611613    +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
611614    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
611615    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
611616    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
611617    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
611618    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
611619    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
611620    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
611621    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
611622    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
611623    +END;
MPRINT(EM_DIAGRAM):   END;
611624    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
611625    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
611626    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
611627    +END;
MPRINT(EM_DIAGRAM):   END;
611628    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
611629    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
611630    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
611631    +END;
MPRINT(EM_DIAGRAM):   END;
611632    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
611633    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
611634    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
611635    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
611636    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
611637    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
611638    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
611639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611640    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
611641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
611642    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
611643    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
611644    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
611645    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
611646    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
611647    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
611648    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
611649    +END;
MPRINT(EM_DIAGRAM):   END;
611650    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
611651    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
611652    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
611653    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
611654     run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL10_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
611655     quit;
611656     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
611657     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
611658     * AutoNeural10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Computing metadata for TRAIN data;
611659     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural10_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural10_TRAIN out=WORK.M3BVXRWK
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BVXRWK;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BVXRWK(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3BVXRWK;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3BVXRWK;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2NE_U1X NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RWDLB7(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NE_U1X;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural10";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
611971     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
611972     set EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO;
611973     where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural10' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
611974     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
      WHERE (DATA='AutoNeural10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
611975     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMINFO;
611976     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
611977     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
611978     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
611982     run;
611983     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
611984     set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMINFO WORK.MODELTEMP_INFO;
611985     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
611986     proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural10_EMINFO NOTHREADS;
611987     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
611988     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
611989     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
611990     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
611991     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
611992     proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
611993     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
611994     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
611995     data EMWS8.AutoNeural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMINFO;
611996     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
611997     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
611998     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
611999     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
612000     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
612001     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
612002     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                08.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O36KKLLS
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O36KKLLS new;
MPRINT(EM_DIAGRAM):   run;
612026     proc sort data=EMWS8.AutoNeural10_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural10_OUTFIT nodupkey;
612027     by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
612028     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL10_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL10_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
612029     data EMWS8.AutoNeural10_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMOUTFIT(rename=(_NAME_=TARGET));
612030     set EMWS8.AutoNeural10_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_OUTFIT(where=(_NAME_ eq 'OVERALL'));
612031     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
612032     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
612033     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
612034     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL10_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
612035     data EMWS8.AutoNeural10_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMOUTFIT;
612036     set EMWS8.AutoNeural10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMOUTFIT;
612037     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
612038     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
612038   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
612039     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
612040     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
612041     proc sort data=EMWS8.AutoNeural10_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural10_EMREPORTFIT nothreads;
612042     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
612043     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL10_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL10_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
612044     %let _EMwarndup = 0;
612045     %let _EMtargetdup =;
612046     %let _EMASEtargetdup =;
612047     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
612048     set EMWS8.AutoNeural10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMOUTFIT;
612049     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
612050     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
612051     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
612052     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
612053     end;
MPRINT(EM_DIAGRAM):   end;
612054     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL10_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
612055     proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Meta_CMeta_TRAIN out=WORK.SUBSETINMETA;
612056     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
612057     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.META_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 36 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
612058     proc sort data=EMWS8.AutoNeural10_VariableSet out=WORK.SUBSETVARSET(keep=NAME
612058   ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
612059     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
612060     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
612061     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
612062     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
612063     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
612064     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 36 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
612065     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
612066     set EMWS8.AutoNeural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_CMeta_TRAIN;
612067     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
612067   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
612068     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL10_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
612069     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
612070     set EMWS8.AutoNeural10_TRAIN(keep=
612071     F_DepVar
612072     I_DepVar
612073     P_DepVar0
612074     P_DepVar1
612075     R_DepVar0
612076     R_DepVar1
612077     U_DepVar
612078     _WARN_
612079     DepVar
612080     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
612081     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL10_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural10_05D23ON nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural10_05D23ON;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_05D23ON(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_05D23ON;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_05D23ON;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0005604017 OVLMAX 0.9996448976 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
616347     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
616348     set EMWS8.AutoNeural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_CMeta_TRAIN;
616349     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
616349   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
616350     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL10_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
616351     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
616352     set EMWS8.AutoNeural10_VALIDATE(keep=
616353     F_DepVar
616354     I_DepVar
616355     P_DepVar0
616356     P_DepVar1
616357     R_DepVar0
616358     R_DepVar1
616359     U_DepVar
616360     _WARN_
616361     DepVar
616362     );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
616363     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL10_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural10_1FXPRDO nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
The SAS System
 
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural10_1FXPRDO;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_1FXPRDO(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMCLASSIFICATION WORK.AutoNeural10_1FXPRDO;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural10_1FXPRDO;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0005673263 OVLMAX 0.9996448881 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
620638     %let _cn = %sysfunc(getoption(CENTER));
620639     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
620640     proc print data=EMWS8.AutoNeural10_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMREPORTFIT noobs label;
620641     var STAT LABEL TRAIN
620642     VALIDATE
620643     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
620644     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
620645     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
620646     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
620647     run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL10_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 490.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
620648     title10;
MPRINT(EM_DIAGRAM):   title10;
620649     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
620650     proc sort data=EMWS8.AutoNeural10_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural10_EMCLASSIFICATION nothreads;
620651     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
620652     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL10_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL10_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
620653     %let _cn = %sysfunc(getoption(CENTER));
620654     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
620655     proc print data=EMWS8.AutoNeural10_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMCLASSIFICATION noobs label;
620656     var from into pct_row pct_col count percent
620657     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
620658     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
620659     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
620660     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
620661     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
620662     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
620663     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
620664     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
620665     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
620666     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
620667     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
620668     run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL10_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 491.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
620669     title9;
MPRINT(EM_DIAGRAM):   title9;
620670     title10;
MPRINT(EM_DIAGRAM):   title10;
620671     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
620672     %let _cn = %sysfunc(getoption(CENTER));
620673     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
620674     data EMWS8.AutoNeural10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural10_EMEVENTREPORT;
620675     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
620675   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
620676     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
620676   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
620676   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
620676   ! FALSEEVENT
620677     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
620677   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
620677   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
620678        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
620679     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
620680     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
620681     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
620682     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
620683     set EMWS8.AutoNeural10_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_EMEVENTREPORT;
620684     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL10_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL10_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
620685     proc print data=EMWS8.AutoNeural10_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMEVENTREPORT noobs label;
620686     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
620687     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
620688     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
620689     run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL10_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 492.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
620690     title10;
MPRINT(EM_DIAGRAM):   title10;
620691     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
620692     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
620693     modify AutoNeural10_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural10_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
620694     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
620695     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
620695   ! ;
MPRINT(EM_DIAGRAM):   run;
620696     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL10_EMRANK.DATA.
620697     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
 
 
620698     %let _cn = %sysfunc(getoption(CENTER));
620699     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
620700     proc print data=EMWS8.AutoNeural10_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMRANK label noobs;
620701     var
620702     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
620703     by
620704     notsorted DATAROLE
620705     notsorted TARGET
620706     notsorted TARGETLABEL
620707     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
620708     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
620709     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
620710     run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL10_EMRANK.
NOTE: The PROCEDURE PRINT printed page 493.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
620711     title10;
MPRINT(EM_DIAGRAM):   title10;
620712     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
620713     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
620714     modify AutoNeural10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural10_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
620715     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
620715   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
620716     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
620716   ! ;
MPRINT(EM_DIAGRAM):   run;
620717     run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL10_EMSCOREDIST.DATA.
620718     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural10_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
